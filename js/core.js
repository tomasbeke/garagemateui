/**
 * Created by Atul on 12/3/2014.
 */
;(function Promiseouter(scope,ns){
    var PENDING="pending",REJECTED="rejected",RESOLVED="resolved",TYPEFUNCTION="function"
    function _noop(){}
    function _invoke(f,args) {
        if(_isfn(f)){
            return f.apply(this,[].slice.call(args))
        }
    }
    function _fn(f){
        if(f==null){return _noop}
        if(_isfn(f)){return f}
        return (function(a){return function(){return a}})(f)
    }
    function _isfn(f){return typeof(f)===TYPEFUNCTION}

    if(!_isfn(scope[ns]) ) {
        self.Promise=function  (fn){
            var _callbacks=[], PromiseStatus=PENDING, PromiseValue=null;
            this._boundto=self
            function _dispatch (){var fns=arguments[0];
                if(fns && fns.length  && _isfn(fns[0]) ){
                     _callbacks.push (fns.slice());
                }
                if(PromiseStatus === PENDING) {  return  }
                var i=PromiseStatus === RESOLVED ? 0 : 1, v=PromiseValue
                while(_callbacks.length) {
                    try{ var f=_callbacks.shift()[i]
                        _invoke.call(this,f,[v])
                    } catch(e){$.handleEx(f,e)}
                }
            }
            function _updateStatus_priv (nu, v){
                PromiseStatus=nu;
                PromiseValue=v
                _dispatch.call (this)
            }
            function _updateStatus (nu, v){
                if(PromiseStatus !== PENDING) {
                    return
                }
                if(v && (v instanceof Promise||typeof(v.then)=="function")){
                    v.then(_updateStatus_priv.bind(this,nu))
                    return
                }
                _updateStatus_priv.call (this,nu, v)
            }

            this["catch"]=function(f){  return this.then (null, f)  }
            this.then=function(){
                var nu,onresolve=arguments[0], onreject=arguments[1]
                nu=Promise.deferred();
                //if(this._boundto){nu.promise=nu.promise.bind(this._boundto)}
                _dispatch.call (this, [function(a){
                    try{_invoke.call (this,onresolve,[a]);
                        nu.resolve(a);
                    } catch(e){$.handleEx(e,"_dispatch")}
                }, function(a){
                    _invoke.call (this,onreject,[a]);
                    nu.reject(a);
                }]);
                return nu.promise||nu
            }
            if(_isfn(fn) ) {
                fn(_updateStatus.bind (this, RESOLVED), _updateStatus.bind (this,REJECTED))
            }else if(fn&&(_isfn(fn.then) ||fn instanceof Promise)) {
                fn.then ( _updateStatus.bind (this, RESOLVED ), _updateStatus.bind (this, REJECTED))
            }else {
                _updateStatus.call (this, RESOLVED, fn)
            }
        };
    }
    var Promise=self.Promise

     Promise.prototype.spread||(Promise.prototype.spread=function(fn){return this.then(function(){fn.apply(this,arguments)});});
    if(!Promise.prototype["finally"]){
        Object.defineProperty(self.Promise.prototype,"finally",{value:function(fn){ return this.then(fn,fn);},enumerable:true,writable:false,configurable:false})
    }

    /* Promise.prototype.bind||(Promise.prototype.bind=function(thisarg){ if(thisarg==null){return this}
     var p=Promise.deferred(); p.promise._boundto=thisarg;
     this.then(p.resolve ,p.reject )
     return p.promise
     });
     Promise.bind=function(thisArg){return Promise.resolve(undefined).bind(thisArg)}
     */
    Promise.cast||(Promise.cast=function(a){
        var p;
        if(a instanceof Promise){p=a}
        else if(a&&a.promise && a.promise instanceof Promise){p=a.promise}
        else{p=_isfn(a) ?new Promise(a):Promise.resolve(a);}
        return p
    });
    Promise.race||(Promise.race=function(a){
        var nu=Promise.deferred(),l=[].concat(a||[]),done=0
        for(var i=0,ln=l.length;i<ln;i++){
            Promise.cast(l[i]).then(function(a){done++;ln=0;nu.resolve(a)},function(a){ })
        }
        return nu.promise;
    });
    Promise.chain=function(a){
        var  l=[].concat(a||[])
        var ret=Promise.deferred();
        function _next(val){
            if(l.length){
                Promise.cast(l.shift()).then(_next);
            }  else{
                ret.resolve(val)
            }
        }
        _next(null)
        return ret.promise
    }
    Promise.method||(Promise.method=function(a){ return function(){return Promise.cast(a.apply(this,arguments))} });
    //in case any rejection defererred is also rejected
    Promise.all||(Promise.all=function(a){
        var nu=Promise.deferred(),l=[].concat(a||[]),done=0,pending=[],res=[],err=0
        function _check(p,a){
            if(err){return}
            var idx=pending.indexOf(p);
            if(idx>=0){
                pending[idx]=null;
                res[idx]=a
            }

            if(!pending.filter(function(it){return it!=null}).length){
                nu.resolve(res)
            }
        }
        for(var i=0,ln=l.length;i<ln;i++){
            pending.push(1)
            res.push(null)
        }
        for(var i=0,ln=l.length;i<ln;i++){
            var p;

            if(l[i] instanceof Promise){p=l[i]}
            else if(l[i]&&l[i].promise && l[i].promise instanceof Promise){p=l[i].promise}
            else {p=Promise.cast(l[i]);}
            pending[i]=p
            p.then(
                function(a){ _check(this.p,a); }.bind({p:p}),
                function(a){
                    err= 1;
                    nu.reject(a)
                    //_check(this.p,a)
                }.bind({p:p})
            )
        }
        return nu.promise ;
    });
    Promise.resolve||(Promise.resolve=function(a){
        return new Promise(function(res){res(a)})
    });
    Promise.reject||(Promise.reject=function(a){
        return new Promise(function(res,rej){rej(a)})
    })
    Promise.defer||(Promise.defer=function(){
        var holder={ fn:null,done:null}//not ready
        var nu=new Promise(function(resolvefn,rejectfn){
            holder.fn=(function(fn1,fn2){
                return function(resolved,v){
                    if(resolved){
                        try{   fn1(v)} catch(e){$.handleEx("Promise.defer",e )}
                    }
                    else{
                        fn2(v)
                    }
                }
            })(resolvefn,rejectfn);
            if(holder.done){
                holder.fn(holder.done[0],holder.done[1])
            }
        })


        nu.resolve=function(v){
                // try {
                if (!holder.fn && !holder.done) {
                    holder.done = [true, v]
                } else {
                    holder.fn(true, v)
                }
            }
        nu.reject=function(v){
                if(!holder.fn&&!holder.done) {
                    holder.done=[false,v]}
                else{
                    holder.fn(false,v)
                }
            }


        nu.promise=nu;

        return nu
    });
    Promise.deferred=function(){
        var dfr=Promise.defer();
        if(!dfr.then){dfr.then=dfr.promise.then.bind(dfr.promise)}
        if(!dfr.finally){dfr.finally=function(fn){return this.promise.then(fn,fn)}}
        dfr.isPromise=true
        return dfr;
    }
    Promise.create=function(){
        if(!arguments.length){return Promise.deferred()}
        return Promise.cast(arguments[0])
    }
    scope[ns]=Promise

    Object.defineProperty(Promise.prototype,"isPromise",{value:true,enumerable:true,writable:false,configurable:false})
})(this,"Promise");;/**
 * Created by Atul on 12/3/2014.
 */
//---------------
if (!Object.observe) {
    (function (root) {

        var TIMER=0,INTERVAl=1500,_cache=[], getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
            defineProperty = Object.defineProperty, hasOwn = Object.prototype.hasOwnProperty, min = Math.min, i = setTimeout;

        function holder(object, onchange, fn) {
            var _notOwn = ["constructor", "prototype", "__proto__"];
            for (var k in object) {
                if (!hasOwn.call(object, k)) {
                    _notOwn.push(k)
                }
            }
            return {
                object: object,   keys: [], notown: _notOwn,  que: [],listeners:typeof(onchange)=="function"?[onchange]:[]
            }
        }

        function findNotifier(object) {
             for (var i = 0,C=_cache,   ln = C.length; i < ln; i++) {
                if (C[i] && C[i]._inner && C[i]._inner.object === object) {
                    return C[i];
                }
            }
            return null
        }
        function makeNotifier(object, onchange,options ) {
            var observer = new Notifier(object, onchange,options);
            _cache.push(observer);
            return observer
        }
        function _unobserve(obj, callback) {
            var idx,observer =  findNotifier(obj) ;
            if (observer) {var lidx=-1
                if(observer._inner && (lidx=observer._inner.listeners.indexOf(callback))>=0){
                    observer._inner.listeners.splice(lidx,1)
                }

                if(!observer._inner.listeners.length){
                    _cache.splice(_cache.indexOf(observer), 1)
                    observer._inner.object=null;
                    delete observer._inner.object;
                    delete observer._inner
                }

            }
        }

        function makeDescriptor(objnotifier ,propname) {

            var data=objnotifier._inner,object=data.object,propertyDescriptor = getOwnPropertyDescriptor( object, propname) || {};
            if(data.notown.indexOf(propname)>=0){return}
            if (Object.prototype.watch) {
                Object.prototype.watch.apply(object,[propname, function (propname, oldVal, newval) {
                    this.addQueue({type: "update" ,name: propname, newValue: newval, value: newval, oldValue: oldVal})
                    return newval;
                }.bind(objnotifier)])
            }
            else {
                var oldVal = object[propname],
                _setter=typeof(propertyDescriptor.set)=="function"?propertyDescriptor.set:null,
                _getter=typeof(propertyDescriptor.get)=="function"?propertyDescriptor.get:null
                if(propertyDescriptor.configurable!==false) {
                    try {
                        delete object[propname]
                    } catch (e) {
                    }
                }
                if(propname in object){
                    return
                };
                var descriptor={enumerable: propertyDescriptor.enumerable, configurable: propertyDescriptor.configurable};
                (function(name,D,notifier,G,S,val){
                    var currentVal = val, looper = 0
                    D.get = G||function () { return currentVal  }
                    D.set = function (newval) {
                            if (looper||currentVal === newval) {
                                return currentVal
                            }
                            looper = 1;
                            var oldVal = currentVal
                            try {
                                if(S){
                                    S(newval)
                                    if(!this || this===self){
                                        if(notifier._inner && notifier._inner.object) {
                                            newval = notifier._inner.object[name]
                                        }
                                    }
                                    else{
                                        newval=this[name]
                                    }
                                    if (currentVal === newval) {  return  }
                                }
                                currentVal=newval
                                if(!notifier.__blocked__){
                                    notifier.addQueue({type: "update" ,name: name, newValue: currentVal, value: currentVal, oldValue: oldVal})
                                 }
                            } finally {
                                looper = 0
                            }
                            return oldVal
                        };

                })(propname,descriptor,objnotifier,_getter,_setter,oldVal);

                 defineProperty(object, propname,descriptor)
            }
        }
        function _watcher(prop,noque ) {
            var data = this._inner;
            if(data.keys.indexOf(prop) == -1 && data.notown.indexOf(prop)==-1){
                var val = data.object[prop];
                data.keys.push(prop);
                makeDescriptor(this, prop );
                if(!noque){
                    this.addQueue({type: "add", name: prop, value: val, newValue: val });
                }
            }
            return this
        }
        function _scan(c,isinit){


        }
        function onInterval(){
            return setTimeout((function (cache) {
                    var C=cache
                return function _monitor() {
                    var ln = C.length;
                    if(!ln){
                        if(TIMER){clearTimeout(TIMER);TIMER=0}
                        return
                    }
                    for (var i = 0; i < ln; i++)  {
                        C[i].__onlyupdates || C[i].scan( )
                    }
                    TIMER=setTimeout(_monitor,INTERVAl)
                }
              })(_cache)
              , INTERVAl);
        }


          var Notifier = function (object, onchange ,options) {//t, n, r
                if(options && Array.isArray(options) && options.length==1 && options[0]=="update"){
                    this.__onlyupdates=true;options={}
                }
                else if(options && options.acceptList&& options.acceptList.length==1 && options.acceptList[0]=="update"){
                    this.__onlyupdates=true
                }

                var h = holder(object, onchange );
              options=options||{}
              if(options && Array.isArray(options.ignore)){
                  h.notown=h.notown||[];
                  [].push.apply(h.notown,options.ignore)
              }

                if(!(options.acceptList && options.acceptList.length)){this.acceptList=null}
                else {this.acceptList=options.acceptList.slice()}
              h.propvalidator=options.propvalidator
              if(typeof(h.propvalidator)!="function"){h.propvalidator=function(){}}
                h.watch = _watcher.bind(this);

                Object.defineProperty(this, "_inner", {value: h, writable: false, configurable: false, enumerable: false});
                this.scan(true)
                if(!TIMER && !this.__onlyupdates && this.acceptList && (this.acceptList.indexOf("delete")>=0||this.acceptList.indexOf("add")>=0)){
                        onInterval();
                }

        };
        Notifier.prototype.scan = function ( isinit) {
            var c=this,inner=c._inner, object = inner.object, keys = inner.keys,allkeys=Object.keys(object),ignore=inner.notown ||[] ;
            var propvalidator=inner.propvalidator

            if(!allkeys.length && !keys.length){return}
            for (var  i = allkeys.length - 1, k; k = allkeys[i], i >= 0; i--) {
                k && keys.indexOf(k) == -1 && ignore.indexOf(k) == -1 && propvalidator(k)!==false && inner.watch(k,isinit);
            }
            if(!this.acceptList || this.acceptList.indexOf("delete")>=0) {
                for (var j = keys.length - 1, k; k = keys[j], j >= 0; j--) {
                    k && allkeys.indexOf(k) == -1 && ignore.indexOf(k) == -1 && keys.splice(i, 1) && c.addQueue({type: "remove", name: k});
                }
            }
        }
        Notifier.prototype.performChange=function (type,fn ) {
            this.__blocked__=true;
            var res
            try{
                res= fn.call(this)
            } finally{
                this.__blocked__=false;
                if(res && typeof(res)=="object"){
                    var rec={}
                    for(var k in res){
                        rec[k]=res[k];
                    }
                    rec.type=type;
                    rec.object=this._inner.object;
                    this.notify(rec);
                }
            }


        }
        Notifier.prototype.addProperty = function (nm ) {
            _watcher(nm,true)
        }
        Notifier.prototype.deliverChangeRecords = function ( ) {
            this._timer=0;
            var que=this._inner.que
            que && que.length && this.notify(que.splice(0, que.length))
        };
        Notifier.prototype.addQueue = function (rec) {
            var _inner=this._inner
            _inner.que.push(rec);
            this._timer ||(this._timer=setTimeout(this.deliverChangeRecords.bind(this), 50));
        }
        Notifier.prototype.notify = function (records) {
            if(!(records&&typeof(records)=="object")){return}
            if(!Array.isArray(records)){records=[records]}
            if (!(records && records.length)) {
                return
            }

            var  recordsln=records.length,object=this._inner.object
            for (var i = 0; i < recordsln; i++) {
                records[i] && (records[i].object=object)
            }
                var l = this._inner.listeners, ln = l.length
                if (ln === 1) {
                    l[0](records)
                } else {
                    for (var i = 0; i < ln; i++) {
                        l[i](records)
                    }
                }

        };




        root.getNotifier   =function (object, onchange,options) {
            return findNotifier(object)||makeNotifier(object,onchange,options )
        };
        root.observe   =function (object, onchange ,options) {
            if(!$.isPlain(options)){options={}}
            if(Array.isArray(object.___toignoreforobserve)){
                options.ignore=object.___toignoreforobserve.slice();
                delete object.___toignoreforobserve;
            }
            if(object.___propvalidator){
                options.propvalidator=object.___propvalidator
                delete object.___propvalidator;
            }
            var Notifier = Object.getNotifier  (object, null,options  );
            if(Notifier && typeof(onchange)=='function'){
                Notifier._inner.listeners.indexOf(onchange)==-1 && Notifier._inner.listeners.push(onchange)
            }
            return Notifier
        };
        root.unobserve =_unobserve



    })(Object)
}
Object.observeProperties=function(object, onchange ,options){
    if(!$.isPlain(options)){options={}}
    if(options.toignoreforobserve){
        object.___toignoreforobserve=options.toignoreforobserve;
    }
    if(options.propvalidator){
        object.___propvalidator=options.propvalidator;
    }
    var acceptList=["update"]
    if(options.acceptList){
        if(Array.isArray(options.acceptList)){acceptList=options.acceptList.slice}
        if(options.acceptList=="update"){acceptList=["update"]}
     }
    var ret= root.observe(object, onchange ,acceptList)
    delete object.___propvalidator
    delete object.___toignoreforobserve
    return ret;
}
;;;
(function () {
    if (typeof WeakMap != "undefined"&&typeof Map != "undefined"&&typeof WeakSet != "undefined"&&typeof Set != "undefined") {return}

        function makeProto(asmap,primitivesallowedaskeys){
            var _proto = {};
            var directives={ LENGTH:"___length___",CLEAR:"___clear___", KEYS:"___keys___",VALUES:"___values___",ENTRIES:"___entries___"}
            _proto.init=function(initdata){
                  this.__store=(function(){
                     var _keys=[],_values=[]
                     return function(key){
                         if(key==null){return}
                         if(typeof(key)=="string" && (key.indexOf("___")==0||[key])){
                             directives[key]=directives[key]||key;
                             if(key==="___length___") {
                                 return _keys.length;
                             }else if(key==="___clear___") {
                                 for(var i= 0,ln=_keys.length;i<ln;i++){_keys[i]=null;  _values[i]=null}
                                 _keys.length=0;  _values.length=0;
                                 return;
                             }else if(key==="___keys___"){
                                 return arguments[1]===true?_keys:_keys.slice()
                             } else if(key==="___values___"){
                                 return arguments[1]===true?_keys:_values.slice()
                             } else if(key==="___entries___"){

                                 return _keys.reduce(function(m,val,idx){m.push([idx,val]);return m},[])
                             }
                         }
                         if(!primitivesallowedaskeys&&typeof(key)!="object"){
                             throw "primities are not allowed as keys"
                         }
                         var idx=_keys.indexOf(key),val=arguments[1],old=_values[idx]
                         if(arguments.length==2){
                             if(val===null) {
                                 if (idx >= 0) {
                                     _keys.splice(idx, 1)
                                     _values.splice(idx, 1)
                                 }
                             } else if(val==="__has__"){
                                 return !(idx >= 0)
                             } else {
                                 if (idx < 0) {
                                     idx = _keys.push(key) - 1
                                 }
                                 _values[idx] = arguments[1]
                             }

                         }
                         return old
                     }
                })();

                if (initdata && typeof(initdata)=="object" && initdata.length) {
                    var asmap=this.asmap,store=this.__store
                    for (var n = 0, r = initdata, i = initdata.length,entry;entry=initdata[n], n < i; n++) {
                        if (entry!=null && (!asmap ||entry.length === 2)) {
                            if(asmap){
                                store(entry[0], entry[1])
                            } else{
                                store(entry)
                            }
                        }
                    }
                }
            }
            Object.defineProperty(_proto, "asmap", {value:!!asmap,writable:false,enumerable:false })
            Object.defineProperty(_proto, "primitivesallowedaskeys", {value:!!primitivesallowedaskeys,writable:false,enumerable:false })

            if(asmap) {
                _proto.forEach = function (fn, ctx) {
                    if (typeof fn != "function") { return  }
                    var keys = this.data(directives.KEYS,true),vals = this.data(directives.VALUES,true)
                    for (var r = 0, ln = keys.length; r < ln; r++) {
                        fn.call(ctx, vals[r], keys[r], this)
                    }
                };
            } else{
                _proto.forEach = function (fn, ctx) {
                    if (typeof fn != "function") { return  }
                    var keys = this.data(directives.KEYS,true)
                    for (var r = 0, ln = keys.length; r < ln; r++) {
                        fn.call(ctx, keys[r], r, this)
                    }
                };
            }


            if(asmap){
                _proto.has = function (name) {  return this.__store(name,"__has__")  };
                _proto.set = function (name,val) { this.__store(name,val)  };
                _proto.get = function (name) { this.__store(name)  };
            }
            else{
                _proto.has = function (name) {  return this.data(directives.VALUES,true).indexOf(name)>=0  };
                _proto.add = function (name) { this.__store(name,1)  };
            }
            _proto.clear = function () {   this.__store(directives.CLEAR); return this };
            _proto["delete"] =  function (name) {  return this.__store(name,null) };
             _proto.keys =      function () {   return this.data(directives.KEYS) };
            _proto.values =     function () {   return this.data(directives.VALUES) };
            _proto.entries =    function () {   return this.data(directives.ENTRIES)   };
            Object.defineProperty(_proto, "length", {
                get: function () {
                   return  this.__store?this.__store(directives.LENGTH):-1
                }, set: function () {
                    throw "invalid operation. length can not be set"
                }, enumerable: true, configurable: true
            })
            return _proto


        }
    if (typeof WeakMap == "undefined") {
        self.WeakMap = function weakMap(initdata) {
            if (!(this instanceof weakMap)) {  return new weakMap(t)  }
            this.init(initdata);
         }
        self.WeakMap.prototype=makeProto(true,false);
        self.WeakMap.prototype.constructor=self.WeakMap
    }
    if (typeof WeakSet == "undefined") {
        self.WeakSet = function weakSet(e) {
            if (!(this instanceof weakSet)) { return new weakSet(e)  }
            this.init(e);
        }
        self.WeakSet.prototype=makeProto(false,false);
        self.WeakSet.prototype.constructor=self.WeakSet
    }
    if (typeof Map == "undefined") {
         self.Map =  function map(t) {
                if (!(this instanceof map)) { return new map(e)  }
                this.init(t);
            }
            self.Map.prototype=makeProto(true,true);
        self.Map.prototype.constructor=self.Map
     }
    if (typeof Set == "undefined") {
        self.Set = function set(initdata) {
            if (!(this instanceof set)) { return new set(e)  }
            this.init(initdata);
        }
        self.Set.prototype=makeProto(false,true);
        self.Set.prototype.constructor=self.Set
    }
})();
;;
(function(){
if (!Function.prototype.bind) {
    Function.prototype.bind = function(oThis) {
        if (typeof this !== 'function') {
            // closest thing possible to the ECMAScript 5
            // internal IsCallable function
            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
        }

        var aArgs   = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP    = function() {},
            fBound  = function() {
                return fToBind.apply(this instanceof fNOP && oThis ? this   : oThis,
                    aArgs.concat(Array.prototype.slice.call(arguments)));
            };
        fNOP.prototype = this.prototype;
        fBound.prototype = new fNOP();
        return fBound;
    };
};
(function(){
    function namecheck(){}
    if(namecheck.name !=="namecheck"){
        try {
            Object.defineProperty(Function.prototype, "name", {
                get: function () {
                    if (this.__name__ == null) {
                        this.__name__ = this.toString().split(/\(/).shift().replace(/function\s*/, "").trim();
                    }
                    return this.__name__;
                }, set: function () {
                }, enumerable: false
            })
        } catch(e){}
}

})();
//polyfills
self.polyFillNative=function (host,nm,value){
    if(host[nm]!=null){return}
    if(Object.defineProperty){
        var descript={value:value,enumerable:false,writable:false,configurable:true};
        if(value && typeof(value)=="object"&&typeof(value.get)=="function"&&typeof(value.set)=="function"){
            descript=value;
            if(descript.enumerable==null){descript.enumerable=false;}
            if(descript.configurable==null){descript.configurable=true;}
            if(descript.writable!=null){delete descript.writable ;}
        }
        Object.defineProperty(host,nm,descript)
    } else{host[nm] = value;}
}

;(function(global){"use strict";
    function t(e){try{new e;return true}catch(t){return false}}
    if(!("from" in Array) || !("of" in Array)){
        global.polyFillNative(Array,"from",function(e){
            'use strict';
            return e==null?[]:Array.prototype.slice.call(e);
            //       var n,r,i,s,o,u,a,f;n=Object(e);r=+n.length;i=this;if(t(i)){s=Object(new i(r))}else{s=new Array(r)}o=0;while(o<r){u=String(o);a=n.hasOwnProperty(u);if(a){f=n[u];s[o]=f}o++}return s}
        });
        global.polyFillNative(Array,"of"  ,
            function(){
                var p=Array.prototype,tmp=p.slice.call(arguments.length==1&&arguments[0]&&arguments[0].length?arguments[0]:arguments);
                return  p.concat.apply([],tmp)
                //function(){var e,n,r,i,s,o,u,a;e=Object(arguments);n=+e.length;r=this;if(t(r)){i=Object(new r(n))}else{i=new Array(n)}s=0;while(s<n){o=String(s);a=e[o];i[s]=a;s++}return i
            });
    }
})(self );


if(typeof(Date.now)=="undefined"){Date.now=function(){return +(new Date())}}

;(function(){var e=navigator.userAgent.match(/MSIE\s([\d][\d\.]+)/);if(document.documentMode||navigator.appName=="Microsoft Internet Explorer"){
    var t=1;try{var n={};Object.defineProperty(n,"_",{value:9});if(n._===9){t=0}}catch(r){}if(t){Object._defineProperty=Object.defineProperty;Object.defineProperty=function(e,t,n){n=n||{};if(typeof e.__defineGetter__=="function"){if(e.nodeType>0){Object._defineProperty(e,t,n);return}if(n.get){e.__defineGetter__(t,n.get)}if(n.set){e.__defineSetter__(t,n.set)}if(n.value){e[t]=n.value}}else{e[t]=n.value}};Object.defineProperties=function(e,t){for(var n in t){Object.defineProperty(e,n,t[n])}}}}
})();

;(function (M, o, f) {
    function _X(reqMethod, method, fun) { if (reqMethod in o && !(method in {})) o[f][method] = Element[f][method] = Window[f][method] = (typeof(HTMLDocument)=="undefined"?Document:HTMLDocument)[f][method] = fun;  };
    _X(M[0], M[2], function (prop, fun) { o[M[0]](this, prop, { get: fun });});
    _X(M[0], M[3], function (prop, fun) {o[M[0]](this, prop, { set: fun });});
    _X(M[1], M[4], function (prop) {return o[M[1]](this, prop).get|| o[M[1]](this.constructor.prototype, prop).get;});
    _X(M[1], M[5], function (prop) {return o[M[1]](this, prop).set|| o[M[1]](this.constructor.prototype, prop).set;});
})(["defineProperty", "getOwnPropertyDescriptor","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__"], Object, "prototype");
(function () {
    for(var i=0,l=["addEventListener","removeEventListener","dispatchEvent"],ln=3,k ;k=l[i],i<ln;i++){
        if (!window[k]&&document[k]) {window[k] = document[k].bind(document); }
    }
})();
if(!Object.isSealed){Object.isSealed=function(){return false}}
if(!Object.isExtensible){Object.isExtensible=function(){return true}}
if(!Object.freeze){Object.freeze=function(o){return o}};
if(typeof(Event)!="undefined" && Event.prototype ){
    if(!("stopPropagation" in Event.prototype)){
        Event.prototype.stopPropagation=function(){return false}
    }
    if(!("stopImmediatePropagation" in Event.prototype)){
        Event.prototype.stopImmediatePropagation=function(){return false}
    }
}
if(typeof(MouseEvent)!="undefined" && MouseEvent.prototype && !("x" in MouseEvent.prototype) ){
    Object.defineProperties(MouseEvent.prototype,{
        "__xy__":{value:function(){
                if(this.__xy ){return this.__xy||{}}
                 this.__xy=(typeof($d)!="undefined" && $d.util && $d.util._mousePos)?$d.util._mousePos(this):null
                 return this.__xy||{}
            },enumerable:false
        },
        "x": {
            get: function () {
                return this.__xy__().x;
            }, set: function () { },enumerable:true
        },
        "y": {
            get: function () {
                return this.__xy__().y;
            }, set: function () { },enumerable:true
        },
    })
}

if (!(document.documentElement||document.body).classList &&
        // FF is empty while IE gives empty object
    (!Object.getOwnPropertyDescriptor(Element.prototype, 'classList')  ||
    !Object.getOwnPropertyDescriptor(Element.prototype, 'classList').get)
) {
    Object.defineProperty(Element.prototype,"classList",(function(){
        var __cache={}
        function makeRegExp(s){var string=String(s).trim()
            if(string in __cache){return __cache[string]}
            return __cache[string]=new RegExp("(^| )"+string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1")+"( |$)","g");
        }
        var _inner={_el:null,
            toggle:function(s1){  (this._el&&s1)&&this[this.contains(s1)?"remove":"add"](s1,true) },
            contains:function(s){ return this._el&&s&&(" "+this._el.className+" ").indexOf(" "+s+" ")>=0  },
            add:function(s1,verified){
                if(verified!==true&&(!(this._el&&s1)||this.contains(s1))){return}
                this._el.className=this._el.className+" "+String(s1).trim();
            },
            remove:function(s1,verified){var curr
                if(verified!==true&&!( this._el&&s1&&this.contains(s1)&&(curr=this._el.className))){return}
                this._el.className=curr.replace(makeRegExp(s1),"").trim()
            }
        };
        return {get:function(){ _inner._el=this ;return _inner},set:function(){}}
    })())
};
(function () { //just put a place holder
    if (!(document.documentElement||document.body).dataset &&
        (!Object.getOwnPropertyDescriptor(Element.prototype, 'dataset')  ||
        !Object.getOwnPropertyDescriptor(Element.prototype, 'dataset').get)
    ) {
        try { // FF enumerates over element's dataset, but not   Element.prototype.dataset; IE9 iterates over both
            Object.defineProperty(Element.prototype, 'dataset', {value:{}});
        } catch (e) { }

    }
})();
!function _addShim( ){
    for(var j=0,args=arguments,ln0=args.length,a;a=args[j],j<ln0;j++) {if(!a){continue;}
        var host=a.shift();if(!(host&&(typeof(host)=="object"||typeof(host)=="function"))){continue}
        while(a.length>1) {
            var nm=a.shift(),mthd=a.shift()
            if(typeof(nm)=="string" && typeof(mthd)=="function"&&!(nm in host)){
                //console.log("shim",nm,mthd)

                self.polyFillNative(host,nm,mthd);
            }
        }
    }
}(
    [   Object,
        "is",function is(v1, v2) {
            if (v1 === 0 && v2 === 0) {return 1 / v1 === 1 / v2; }
            if (v1 !== v1) {return v2 !== v2;}
            return v1 === v2;
        },
        "assign", function(target ) {
            'use strict';
            if (target === undefined || target === null) {
                throw new TypeError('Cannot convert first argument to object');
            }

            var to = Object(target);
            for (var i = 1; i < arguments.length; i++) {
                var nextSource = arguments[i];
                if (nextSource === undefined || nextSource === null) {
                    continue;
                }
                nextSource = Object(nextSource);

                var keysArray = Object.keys(Object(nextSource));
                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
                    var nextKey = keysArray[nextIndex];
                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
                    if (desc !== undefined && desc.enumerable) {
                        to[nextKey] = nextSource[nextKey];
                    }
                }
            }
            return to;
        }

    ] ,

    [Object.prototype,
        "hasOwnProperty" ,
        function(i){   var o=this;
            return i!=null && o!=null &&typeof(o)==="object" && (i in o) && !(Object.getPrototypeOf(o) && Object.getPrototypeOf(o)[i]===o[i]);
        },
        "tap" , function(fn){
            try{fn.apply(this,Array.from(arguments,1))}catch(e){}
            return this;
        }
    ],
    [Object,
        "create" ,function(o1){
        var nu={},f=function(){};f.prototype=o1;
        for(var i= 0,l=Array.from(arguments,1),ln= l.length;i<ln;i++){
            for(var k in l[i]){f.prototype[k]=l[i][k] }
        }
        return new f
    },

    "getPrototypeOf" , function(o1){
        if(o1==null){return null}
        var ret,o=Object(o1);
         if(typeof(o1)=="function"){ret=o1.prototype}
        else if(o.__proto__!=null){ret=o.__proto__}
        else if(typeof(o.constructor)=="function"&&o.constructor.prototype){ret=o.constructor.prototype}
        return ret;
    },
    "keys" , function(o1){
        if (o1 !== Object(o1)) {
            throw new TypeError('Object.keys called on non-object');
        }
        var h=Object.prototype.hasOwnProperty,o=Object(o1),r=[];
        for(var k in o){
            h.call(o,k) && r.push(k)
        };
        return r;
    },
    "getOwnPropertyNames" , function getOwnPropertyNames(object) {
        if (!object || object !== Object(object)) {
            throw new TypeError('Object.getOwnPropertyNames called on non-object');
        }
         var buffer = [], key;
         for (key in object) {
             object.hasOwnProperty(key) && buffer.push(key);
        }
         return buffer;
    }
    ],
    [String.prototype,
        "startsWith" ,function(s){return s&&this.indexOf(s)===0} ,
        "endsWith" ,function(s){return s&&this.lastIndexOf(s)===this.length- s.length},
        "contains" ,function(s){return s&&this.indexOf(s)>=0} ,
        "trim" , function(){return this?this.replace(/^\s+|\s+$/g,""):""}

    ],
    [String ,
        "isNumber" , function(s){return Number.isNumber(+s)} ,
        "isString" ,function(s){return typeof(s)==="string"}
    ],
    [ Array,
        "isArray",function(a){return Object.prototype.toString.call(a) === '[object Array]';}
    ],
    [ Array.prototype,//Array shims
        "indexOf" ,function(v,st){var _is=Object.is,l=this;
        for(var i=Math.max(0,st|0), ln=l.length,k; i<ln;i++){
            if(_is(l[i],v)){return i}
        }
    } ,
        "lastIndexOf" ,function(l,v){var i=-1,r=-1,l=this,ln=l.length
        i=Math.max(r=l.indexOf(v,(ln/2)|0),0);
        while(i<ln-1&&(i=l.indexOf(v,++i))>=0){r=i}
        return r
    } ,
        "find" ,function(v,ctx){var fn=v,l=this;
        if(typeof(v)!="function"){fn=function(k){return k==v?v:null}}
        for(var i=0,l=this,ln=l.length,k;i<ln;i++){ k=l[i]
            if(fn.call(ctx,k,i,l)){return k}
        }
    },
        "findIndex",function(predicate,ths){
        if (this == null) {throw new TypeError('Array.prototype.find called on null or undefined');}
        if (typeof predicate !== 'function') {throw new TypeError('predicate must be a function');}
        for(var i=0,l=this,ln=l.length| 0;i<ln;i++){
            if(predicate.call(ths,l[i],i,l)){return i}
        }
        return -1
    },
        //if no init val then first item of arr the init val
        "reduce" ,function(f ){
        var fn=f,val=arguments[1],ctx=arguments[2],noval=(arguments.length==1||val==null);
        if (typeof f !== 'function') {throw new TypeError('predicate must be a function');}
        for(var i=0,l=this,ln=this.length,k;i<ln;i++){ var k=l[i]
            val=noval?k:fn.call(ctx,val,k,i,this);noval=false;
        }
        return val
    },"reduceRight" ,function(f ){
        var fn=f,val=arguments[1],ctx=arguments[2],noval=(arguments.length==1||val==null)?true:false;
        if(typeof(f)!="function"){throw "a callback function is required"}
        for(var l=this,ln=this.length,i=ln-1,k; i>=0;i--){  k=l[i]
            val=noval===true?k:fn.call(ctx,val,k,i,this);noval=false;
        }
        return val
    },"some" ,function(fn,ctx){
        if(typeof(fn)!="function"){throw "a callback function is required"}
        for(var i=0,l=this,ln=this.length,k;i<ln;i++){   k=l[i]
            if(fn.call(ctx,k,i,this)){return true}
        }
        return false
    },"every" ,function(fn,ctx){
        if(typeof(fn)!="function"){throw "a callback function is required"}
        for(var i=0,l=this,ln=this.length,k;i<ln;i++){   k=l[i]
            if(!fn.call(ctx,k,i,this)){return false}
        }
        return true
    },"contains" ,function(item){ return this.indexOf(item)>=0},
        //part of the Harmony (ECMAScript 6) proposal.
        "keys" ,function(){
        if (this == null) {  throw new TypeError("this is null or not defined");  }
        return Array.prototype.map.call(this,function(it,i){return  i } )

    },
        "entries",function(predicate,ths){   //part of the Harmony (ECMAScript 6) proposal.
        if (this == null) {throw new TypeError('Array.prototype.find called on null or undefined');}
        return Array.prototype.map.call(this,function(it,i){return [i,it]} )
    },
        "fill" ,function(value){
        if (this == null) {  throw new TypeError("this is null or not defined");  }
        var O=Object(this), ln=O.length|0,
            start=arguments.length>1?arguments[1]| 0:0,
            end=arguments.length>2?arguments[2]| 0:ln
        end= Math.max(end<0?ln+end:end,0)||this.length
        start= Math.max(start<0?ln+start:start,0) ;
        if(end<=start){return this}
        while (start < end) {
            O[start] = value;
            start++;
        }
        return O
    }
    ]  ,
    [Number,
        "toInteger", function toInteger (nVal,deflt) { return  Math.round(Number.toNumber(nVal,0)); }  ,
        "isInteger", function isInteger (nVal) { return Number.isNumber(nVal) && Math.floor(nVal) === nVal; }  ,
        "isNumber" , function isNumber (nVal)  {  return typeof nVal === "number" && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 ; },
        "toNumber" , function toNumber (nVal,deflt)   {  return Number.isNumber(+nVal)?+nVal:deflt} ,
        "to" ,function( b,step,inc,precs){  var n=this,st=Object(n).valueOf(),
        end=Object(b).valueOf(),ret=[],abs=Math.abs,signum=b-n;
        if(typeof(inc)!="boolean" && typeof(inc)=="number"){precs=inc;inc=null}
        if(inc==null && typeof(step)=="boolean"){inc=step;step=1}       ;
        step=(Number(step)||1)*(Number(precs)?1.0:1)
        if(b<n){st=b ;end=n; } else {}
        step= abs(step)
        while(st<=end){ ret.push(st);st+=step  }
        if(ret.length){
            if(b<n){ret.reverse()}
            var lst=ret[ret.length-1]
            if(!inc && ((lst>0 && lst>=b)||(lst<0 && lst<=b))){ret.pop()}
        }
        if(precs){ret=ret.map(function(it){return Number(Number(it).toFixed(precs))})}
        return ret
    }
    ] ,
    [RegExp,
        "escape" ,function( value ) {
        return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
    }
    ],
    [ Function.prototype,
        "getName" ,function(){return this.__name__||(this.__name__=this.toString().replace(/function\s+([^\(]+)\(.*$/,"$1").trim())}
    ],

    [ Date,
        "now" ,function(){return new Date()},
        "parse" ,function(s){
        try{
            if(typeof(s)=="number" || (typeof(s)=="string" && !isNaN(s))){
                Date.__minlong||(Date.__minlong=(+new Date(1950,1,1)))
                if((+s) > (Date.__minlong||(Date.__minlong=(+new Date(1950,1,1))))){
                    return new Date(+s)
                }
            }
             if(String.isString(s)){ return new Date(s)  }
        } catch(e){
            if(typeof($)!="undefined"&&$.date ) {
                return $.date(s)
            }
        }
        return null
    }
    ]
);

Number.MAX_VALUE||(Number.MAX_VALUE=9007199254740991);
Number.MIN_VALUE||(Number.MIN_VALUE=0-Number.MAX_VALUE);


//setImmediate

//settimeout support for args
setTimeout(function(a){
    if(!(a===99.999)){
        var g=window||self;
        (function(old ){
            var __timeout=old,_throwError=function(e){throw e};
            g.setTimeout=function(f,delay){
                var a=[].slice.call(arguments,2);
                __timeout(function(){
                    try{
                        a.length?f.apply(null,a):f()
                    } catch(e){
                        _throwError(e,f)
                    }
                },delay)
            }
        })(g.constructor&&g.constructor.prototype&&g.constructor.prototype["setTimeout"]?g.constructor.prototype["setTimeout"].bind(g):g.setTimeout.bind(g) );
    }},0,99.999) ;


if(typeof(setImmediate)=="undefined"){
    self.setImmediate=function(fn){return setTimeout(fn,0)}
}

})();
//essential shims end



;/**
 * Created by Atul on 11/28/2014.
 */



function _require(){
    if(typeof(arguments[0])=="string" && self[arguments[0]]){
        return self[arguments[0]]
    }
    if(typeof($)!="undefined" && $.require){
        if(_require.__que){
            var l=_require.__que.slice();
            _require.__que=null;
            while(l.length){
                $.require.apply($, l.shift())
            }
        }
        if(arguments.length){
            return $.require.apply($,arguments)
        }

    }

    _require.__que||(_require.__que=[]);
    _require.__que.push([].slice.call(arguments))
};

var dollar=function(a) {
    var b = [].slice.call(arguments);
    if ("function" == typeof a) {
        self.domready && self.domready(a);
    }
    else {
        if ("string" == typeof a) {
            var c;
            if(("view" == a || "win" == a|| "window" == a)){return $d(window)}
            if(("doc" == a || "document" == a)){return $$(document)}
            if(( "body" == a)){return $$(document.body)}
            if(( "root" == a)){return $$(document.documentElement || document.body)}

            return $d.qq(a)
        }
        if (a && "object" == typeof a) {
            if(a.nodeType||a===window){return a==window?$d(a):$$(a)}
            return ZModule.get.apply(ZModule, a)
        }
    }
};
Object.defineProperty(dollar,"supports",{value:Object.create(null),enumerable:false,writable:false,configurable:false})
dollar.supports.Object_observe=!!Object.observe


    Object.defineProperty ? Object.defineProperty(window, "$", {
        value: dollar,
        writable: !1,
        enumerable: !0,
        configurable: !0
    }) :  window.$ = dollar;

$.getBootstrapTemplate = function(a) {
    var b = $.getBootstrapData(a, "templates");
    return b && (b = b.replace(/\[NL\]/g, "\n").replace(/`/g, '"')), b
}
$.getBootstrapData= function(key,type){
    var data= $.__bootstrapdata;
    if(!data){
        data=$.__bootstrapdata=self.__bootstrap__;
    }
    if(data){
        if(typeof(key)=="string" ){
            if(!data[key] &&  key.indexOf("data/")==0){
                key="app/"+key
            }
            var data1=data
            if(!type && key.indexOf("app/data")==0){
                type="templates"
            }
            if(type && data[type]){
                data1=  data[type];
            }
            if(data1[key]){
                return data1[key];
            } else {
                if(type=="templates" ){
                    if(data1[key+".html"]){
                        return data1[key+".html"]
                    }
                }
                if(type=="modules" ){
                    if(data1[key+".js"]){
                        return data1[key+".js"]
                    }
                }
                if(key.indexOf(".")>0){
                    return key.split(".").reduce(function(m,k){
                        return m&&m[k]
                    },data1)
                }
            }
        }

    }

};
$.createClass= function createClass() {//ctor, proto, superClass, staticObject
    function classconstructor(){
        if(null === arguments[0] && arguments.length==1){return}
        if(!(this instanceof classconstructor)){
            return classconstructor.newInstance(arguments)
        }
        var init=this.init||this.initialize
        if(typeof(init)=="function"){
            init.apply(this,arguments);
        } else if(typeof(this.initModelInstance)=="function"){
            this.initModelInstance.call(this );
        }
    }
    var args=[].slice.call(arguments),proto, superClass, staticObject,ctor,needsinitclass
    if(!args[0] || typeof(args[0])=="function"||typeof(args[0])=="string"){
        ctor=args.shift()
    }
    proto=args.shift();

    superClass=args.shift();
    staticObject=args.shift();

    if(typeof(ctor)!=="function"){
        needsinitclass=true
        var ctorname=typeof(ctor)=="string"?ctor:("ctor_" + Math.random().toString(36).substr(2, 5))
        var defname=$.createClass.defaultClassconstructor.name||"classconstructor"
        ctor =  (1,eval).call(null,"("+ $.createClass.defaultClassconstructor.toString().replace(new RegExp("\\b"+defname+"\\b","g"),ctorname) +")")
    }
    if(!proto){proto={}}
    if(proto.statics){
        staticObject=proto.statics;
        delete proto.statics
    }
     var descriptors = {},superClassproto=null
    if (arguments.length >= 3 && typeof superClass === 'function') {
        ctor.__proto__ = superClass;
        var b = superClass.prototype;
        if (Object(b) === b || null === b) {superClassproto= b}

        for (var propnames = Object.keys(proto), i = 0; i < propnames.length; i++) {
            var name = propnames[i];if(name=="constructor"||name=="__proto__"){continue}
            descriptors[name] = Object.getOwnPropertyDescriptor(proto, name)
            descriptors[name].enumerable=true;
        }
        ctor.prototype = Object.create(superClassproto, descriptors);
    } else {
        ctor.prototype = proto;
    }
    ctor.prototype||(ctor.prototype={});
    ctor.prototype.statics||(ctor.prototype.statics={});
    if(staticObject){
        var staticdescript={}
        for (var propnames = (Object.getOwnPropertyNames||Object.keys)(staticObject), i = 0; i < propnames.length; i++) {
            var name = propnames[i];
            staticdescript[name] = Object.getOwnPropertyDescriptor(staticObject, name)
        }
        Object.defineProperties(ctor, staticdescript)
        Object.defineProperties(ctor.prototype.statics, staticdescript)
    } else {
        ctor.prototype.statics = {}
    }
     ctor.newInstance=function( ){
        var  nu, c =  this, args = []
        if (arguments.length == 1 && arguments[0] && ({}).toString.call(arguments[0]).indexOf("Arguments") > 0) {
            args = [].slice.call(arguments[0])
            if (args.length && args[0] && ({}).toString.call(args[0]).indexOf("Arguments") > 0) {
                args=[].slice.call(args[0])
            }
        }
        else {
            args = [].slice.call(arguments)
        }
        var ln = args.length;
             try {
                 if(!ln){nu=new c()}
                 else if(ln===1) {
                     nu=new c(args[0])
                 }
                 else {
                     nu=new (Function.prototype.bind.apply(c, [null].concat(args)))
                 }
            } catch (e) {console.error(e,"while new Instance")
            }
          return nu
    } ;
    ctor.extend=function(nuctor, proto, staticObject){
        var ctor=nuctor
        if(nuctor && !(typeof(nuctor)==="function"||typeof(nuctor)==="string")){
            ctor=null;staticObject=proto
            proto=typeof(nuctor)==="object"?nuctor:null;
        }
        return  createClass(ctor, proto, this,staticObject)
    }
    if(needsinitclass){
        ctor.prototype.__initClass=function __initClass(){
            //if(null === arguments[0] && arguments.length==1){return}
            var init=this.init||this.initialize
            if(typeof(init)=="function"){
                init.apply(this,arguments);
            } else if(typeof(this.initModelInstance)=="function"){
                this.initModelInstance.call(this );
            }
        }
    }

    ctor.prototype.constructor=ctor;
    return ctor;
}
$.createClass.defaultClassconstructor=function classconstructor(){
    if(null === arguments[0] && arguments.length==1){return}
    if(!(this instanceof classconstructor)){
        return classconstructor.newInstance(arguments)
    }
    var init=this.init||this.initialize
    if(typeof(init)=="function"){
        init.apply(this,arguments);
    } else if(typeof(this.initModelInstance)=="function"){
        this.initModelInstance.call(this );
    }
};

 $.handleEx= (function(){
    var checkloop,_alias={
        lineNumber:"line",linenumber:"line",column:"line","fn":"functionName","detail":"description"
    };
    var mouse_ellog=[],mousepos=[],lastel=null;

    function captureUser(ev){
        try {
            var t = ev.target, bdy = document.body, docEl = document.documentElement
            if (!t || lastel === t || t === bdy || t === docEl) {
                return
            }
            lastel = t;
            var hier = [ev.type, ev.ts || Date.now(), [ev.x || mousepos[0], " ", ev.y || mousepos[1]].join("")], zscope, title = document.querySelector('.page-title')
            if (title) {
                hier.push("Page:" + title.textContent)
            }
            hier.push(t.className)
            while (t && t.parentNode && t !== bdy) {
                if (t.getAttribute) {
                    zscope = t.getAttribute("zscope") || t.getAttribute("z-scope") || ""
                    zscope && hier.push(zscope)
                }
                t=t.parentNode;
            }
            mouse_ellog.push(hier.join(" | "))
        } catch (e){}
    }
    Date.now||(Date.now=function(){return (new Date()).getTime()});
   /*window.addEventListener("mousemove",function(ev){
        mousepos[0]=ev.x||ev.clientX + (ev.scrollLeft || 0 );
       mousepos[1]=ev.y||ev.clientY + (ev.scrollTop || 0)
       mousepos[2]=ev.target.id
    });
    window.addEventListener("focus",captureUser)
    window.addEventListener("mousedown",captureUser)
    window.addEventListener("keyup",captureUser)
    */

    var getPrototypeOf = Object.getPrototypeOf || function (a) {
            return a ? (a.constructor || {}).prototype : null
        }, objproto = Object.prototype
    var stackproperty="",stackParser=null;
    function StackFrame() {
         Object.defineProperty(this,"_",{value:{},enumerable:false,writable:false,configurable:false})

            var functionName, args, fileName, lineNumber, columnNumber
        if(arguments.length==1 && arguments[0] && typeof(arguments[0])=="object"){
            functionName=arguments[0].functionName;args=arguments[0].args;fileName=arguments[0].fileName; lineNumber=arguments[0].lineNumber;
            columnNumber=arguments[0].columnNumber
        } else{
            functionName=arguments[0];args=arguments[1];fileName=arguments[2]; lineNumber=arguments[3];columnNumber=arguments[4]
        }
        this.setFunctionName(functionName);
        this.setArgs(args);
        this.setFileName(fileName);
        this.setLineNumber(lineNumber);
        this.setColumnNumber(columnNumber);
    };
    var proto={}
    "functionName args fileName lineNumber columnNumber".split(/\s+/).forEach(
        function(k){
            var cap= k.charAt(0).toUpperCase()+ k.substr(1);
            proto["get"+cap]=Function("return this._."+k)
            proto["set"+cap]=Function("v","this._."+k+"=v");
            Object.defineProperty(proto,k,{get:Function("return this._ && this._."+k+";"),set:Function("v","return this._ && typeof(v)!='undefined' && (this._."+k+"=v);"),
                enumerable:true,configurable:true})
        }
    );
    proto.toString= function() {
        if(!this._){return ""}
        var functionName = this.getFunctionName() || '';
        var args = '(' + (this.getArgs() || []).join(',') + ')';
        var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';
        var lineNumber = (this.getLineNumber()) ? (':' + this.getLineNumber()) : '';
        var columnNumber = (this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';
        return "Error"+functionName + args + fileName + lineNumber + columnNumber;
    }
    proto.toMap=function(){
        return Object.assign({},this._||{})
    }
    StackFrame.prototype=proto;

    function ErrorStackParser( ) {

        var FIREFOX_SAFARI_STACK_REGEXP = /\S+\:\d+/;
        var CHROME_IE_STACK_REGEXP = /\s+at /;
        return {
            /**
             * Given an Error object, extract the most information from it.
             * @param error {Error}
             * @return Array[StackFrame]
             */
            parse: function  (error) {
                try {
                    if(error.stack && Array.isArray(error.stack)){return error.stack}
                    if (typeof(error.stacktrace)=="string" && (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined')) {
                        return this.parseOpera(error);
                    } else if (error.stack && typeof(error.stack)=="string" && error.stack.match(CHROME_IE_STACK_REGEXP)) {
                        return this.parseV8OrIE(error);
                    } else if (error.stack && typeof(error.stack)=="string" && error.stack.match(FIREFOX_SAFARI_STACK_REGEXP)) {
                        return this.parseFFOrSafari(error);
                    } else {
                        throw new Error('Cannot parse given Error object');
                    }
                } catch(e){
                    console.error("error while parsing error stack",e)
                }
            },

            /**
             * Separate line and column numbers from a URL-like string.
             * @param urlLike String
             * @return Array[String]
             */
            extractLocation: function (urlLike) {
                var locationParts = urlLike.split(':');
                var lastNumber = locationParts.pop();
                var possibleNumber = locationParts[locationParts.length - 1];
                if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {
                    var lineNumber = locationParts.pop();
                    return [locationParts.join(':'), lineNumber, lastNumber];
                } else {
                    return [locationParts.join(':'), lastNumber, undefined];
                }
            },

            parseV8OrIE: function  (error) {
                return error.stack.split('\n').slice(1).map(function (line) {
                    var tokens = line.replace(/^\s+/, '').split(/\s+/).slice(1);
                    var locationParts = this.extractLocation(tokens.pop().replace(/[\(\)\s]/g, ''));
                    var functionName = (!tokens[0] || tokens[0] === 'Anonymous') ? undefined : tokens[0];
                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);
                }, this);
            },

            parseFFOrSafari: function (error) {
                return error.stack.split('\n').filter(function (line) {
                    return !!line.match(FIREFOX_SAFARI_STACK_REGEXP);
                }, this).map(function (line) {
                    var tokens = line.split('@');
                    var locationParts = this.extractLocation(tokens.pop());
                    var functionName = tokens.shift() || undefined;
                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2]);
                }, this);
            },

            parseOpera: function  (e) {
                return this.parseOpera11(e);

            },
            // Opera 10.65+ Error.stack very similar to FF/Safari
            parseOpera11: function (error) {
                if(!error.stack){return []}
                return error.stack.split('\n').filter(function (line) {
                    return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&
                        !line.match(/^Error created at/);
                }, this).map(function (line) {
                    var tokens = line.split('@');
                    var locationParts = this.extractLocation(tokens.pop());
                    var functionCall = (tokens.shift() || '');
                    var functionName = functionCall
                            .replace(/<anonymous function(: (\w+))?>/, '$2')
                            .replace(/\([^\)]*\)/g, '') || undefined;
                    var argsRaw;
                    if (functionCall.match(/\(([^\)]*)\)/)) {
                        argsRaw = functionCall.replace(/^[^\(]+\(([^\)]*)\)$/, '$1');
                    }
                    var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');
                    return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2]);
                }, this);
            }
        };
    };
    function appException() {
        if (!(this instanceof appException)) {
            return new appException(arguments)
        }
        try {
            var args = []
            if (arguments.length == 1 && ({}).toString.call(arguments[0]).indexOf("Arguments") >= 0) {
                args = [].slice.call(arguments[0])
            } else {
                args = [].slice.call(arguments);
            }
            Object.defineProperty(this, "ts", {value:Date.now(),writable: false, enumerable: true})
            Object.defineProperty(this, "_", {
                value: {
                    message: "", description: "",  url: "", line: "",  col: "", stack: [],source:"",userlog:[],
                }, writable: false, configurable: true, enumerable: false
            })
            var sourceException = null;
            if (args[args.length - 1] === true) {
                args.pop();
            }
            if (args[args.length - 1] instanceof Error) {
                sourceException = args.pop();
            }
            this._.userlog=[].slice.call(document.querySelectorAll(":hover"),2).reverse().slice(0,3).map(function(a){
                return {id: a.id,name: a.name,zscope: a.getAttribute?(a.getAttribute("z-scope")||a.getAttribute("zscope")):null,klass: a.className,val: a.value}
            });
            if (args.length   && args.slice(0, args.length - 1).every(function (a) {
                    return typeof(a) !== "object"
                })) {
                this._.message = args.shift();
                this._.url = args.shift();
                this._.line = args.shift();
                this._.col = args.shift();
                if(this.line && !isNaN(this.line) && Number(this.line)>=0){
                    this.isglobal=true
                }
            }

            for (var i = 0, ln = args.length; i < ln; i++) {
                var val = args[i]
                if (val instanceof Error) {
                    sourceException = val;
                } else if (typeof(val) == "string") {
                    if (this._.message) {
                        this._.description = val
                    } else {
                        this._.message = val
                    }
                }
            }
            if (sourceException) {
                if(!this._.message){this._.message=sourceException.message}
                if(!this._.name){this._.name=sourceException.name}
                if(!this._.description && (sourceException.details||sourceException.description)){this._.description=sourceException.details||sourceException.description}
                this._.source=sourceException.toString()
                this.parseStack(sourceException);
            }
            this._.uuid=[this._.message, this._.url, this._.line].filter(function(a){return a}).join(",")
            this._.counter=1;
            this._.ts=Date.now();
            if (this._.url && this._.line) {
                this.parseStack({
                    fileName: this._.url||"",
                    lineNumber: this._.line||0,
                    columnNumber: this._.col||""
                })
            }
        } catch(e){
            console.log("Exception while appexception",e);
        }
    }
    appException.prototype=Object.create(Error.prototype);
    appException.prototype.parseStack=function(stack){
        if(!stackParser){
            stackParser=ErrorStackParser();
        }
        if(stack instanceof Error){
            this.stack=stackParser.parse(stack);
        } else if(stack){
            if(typeof(stack)=="object"){
                this.stack=new StackFrame(stack);
            }
        }



    }
    Object.defineProperties(
        appException.prototype,{
            type:{get:function(){return this._ && this._.name},set:function(v){this._ && (this._.name=v);}},
            name:{get:function(){return this._ && this._.name},set:function(v){this._ && (this._.name=v);}},
            message:{get:function(){return this._ && this._.message||""},set:function(v){this._ && (this._.message=v);}},
            description:{get:function(){return this._ && this._.description},set:function(v){
                if(!this._){return}
                if(this._.description){this._ && (this._.description=this._.description+"\n"+v)}
                else{this._.description=v;}
            }},

            url:{get:function(){return this._ && this._.url},set:function(v){this._ && (this._.url=v)}},
            line:{get:function(){return this._ && this._.line},set:function(v){this._ && (this._.line=v)}},
            col:{get:function(){return this._ && this._.col},set:function(v){this._ && (this._.col=v)}},
            functionName:{get:function(){return this._ && this._.functionName},set:function(v){this._ && (this._.functionName=v)}},
            userlog:{get:function(){return this._ && this._.userlog},set:function(v){this._ && Array.isArray(v) && (this._.userlog=v)}},

            stack:{get:function(){
                if(!this._){return []}
                return this._.stack||(this._.stack=[]);
            },set:function(v){if(!this._){return}
                this._.stack||(this._.stack=[]);
                if(Array.isArray(v)){
                    [].push.apply(this._.stack,v)
                } else{

                    this._.stack.push(v)
                }
            }}
        }
    );
    appException.prototype.toString=function(){
        var errorMessage =(this.name||"")

        if (this.message) errorMessage += ': ' + (this.message||"")
        if(this.isglobal){errorMessage += ': global handler' }
        if (this.description) errorMessage += ': ' + (this.description||"")
        errorMessage = errorMessage + this.stack.map(function(a){return a.toString()}).join("\n");
        return errorMessage
    }
    appException.prototype.toMap = function () {
        var map = Object.assign({},this._||{})
        map.stack=this.stack.map(function(a){return a.toMap()})
        return map
    }
    appException.prototype.toJSON = function () {
        return JSON.stringify(this.toMap())
    }
    //msg, url, line, col, error
    return function (a) {
        if(checkloop || (a && (a.rethrown||a.__processed))){return}
        var tothrow=null,rethrow
        checkloop=1
        try{
            if(!stackproperty){
                var err = new Error()
                stackproperty=err["stacktrace"]?"stacktrace":"stack"
                err=null
            }
            if (arguments[arguments.length - 1] === true) {
                rethrow = true;
            }
            tothrow = new appException(arguments);
            if(!tothrow.stack.length ){
                var err = new Error();
                tothrow.parseStack(err)
                if(tothrow.stack.length){
                    tothrow.stack.shift()
                    if(tothrow.isglobal ){
                        tothrow.stack.shift();
                    }
                }
            }
            tothrow.__processed=true;
            if (rethrow) {  tothrow.rethrown=true;
            } else {
                if (self.app && app.debug) {
                    app.notify && app.notify(tothrow.message )
                }
                if (typeof(console) == "undefined") {

                }
                else {
                    console.log("Error",  tothrow.toString())
                }
                if(typeof($bugzy)!="undefined"){
                    $bugzy.handleException(tothrow)
                } else {var storage=self.sessionStorage||self.localStorage
                    if(storage){
                        $.handleEx._cache.push(tothrow.toMap())
                        storage.setItem("appexceptions",JSON.stringify($.handleEx._cache))
                    }
                }
            }

        } catch(e) {
            console.log(">>>>>>> Error  while handling",e);
        } finally{
            checkloop=0
        }
        if(rethrow){
            //throw tothrow;
        }
        return tothrow;
    }
})();
$.handleEx._cache=[];
(function(){
    var storage=self.sessionStorage||self.localStorage
    if(storage){
        var lst=storage.getItem("appException")
        if(lst){
            try{
                lst=JSON.parse(lst)
                lst && lst.length && ($.handleEx._cache=lst);
            } catch(e){}
        }
    }
})();
window.onerror=function(errorMsg, url, lineNumber,col){
    var key=[errorMsg, url, lineNumber].filter(function(a){return a}).join(",")
    var curr=$.handleEx._cache.filter(function(a){return a.uuid==key})[0]
    if(curr){
        curr.lastts=Date.now();
        curr.count||(curr.count=1);
        curr.count++
        return;
    }

    try{
        $.handleEx(errorMsg, url, lineNumber,col)

    } catch(e){  }
}

$.notify = function(a) {
    var b, c = String(a);
    "Notification" in window && ("granted" === Notification.permission ? b = new Notification(c) : "denied" !== Notification.permission && Notification.requestPermission(function(a) {
        "granted" === a && (b = new Notification(c))
    }))
};


!function(nm, factory) {
    self[nm] = factory()
}("domready", function() {
    var LOADED=false,TIMER= 0,__readyhold=false;
    function _dispatch() {
        var fn;
             for (; fn = callbacks.shift();) {
                try {
                    fn()
                } catch (e) {}
            }

    }

    function _nowready() {
        _doc[removeEvent](onreadystatechange, _checkready)
         _dispatch()
    }

    function _checkready() {

        if (!LOADED) {
            if ("undefined" == typeof $d || __readyhold) {
                if(!TIMER){
                    TIMER=setInterval(_checkready, 50);
                }
                 return
            }
            LOADED = true
            if(TIMER){
                clearInterval(TIMER);TIMER=0;
            }
            setTimeout(_nowready, 20)
        }
    }
    var  callbacks = [],
        _doc=document,
         addEvent = _doc.addEventListener ? "addEventListener" : _doc.attachEvent ? "attachEvent" : null,
        removeEvent = _doc.removeEventListener ? "removeEventListener" : _doc.detachEvent ? "detachEvent" : null,
        onreadystatechange = "detachEvent" == removeEvent ? "onreadystatechange" : "DOMContentLoaded",
        onload = "detachEvent" == removeEvent ? "onload" : "load",
        doScroll = (_doc.documentElement || {}).doScroll;

        LOADED = (doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(_doc.readyState || "XX");
    if(!LOADED){
        _doc[addEvent](onreadystatechange, _checkready);
        window[addEvent](onload, function loadfn() {
            window[removeEvent](onload, loadfn)
            LOADED || _checkready()
        }, !1)
    }
    $.holdReady=function(flag){
         __readyhold=!!flag
        if(!__readyhold){
            _dispatch();
        }
    }
    return function(b) {
            if("function" == typeof b){
                callbacks.push(b)
            }
        LOADED && _dispatch()
     }
});;var CoreUtils = $;
$.makeDescriptor = function(a, b, c, d, e, f) {
    if (!b) return null;
    var g = {
            enumerable: !1,
            configurable: !1
        }, h = c ? typeof c : "",
        i = d ? typeof d : "",
        j = arguments.length;
    return b = String(b), 3 == j ? "object" == h ? (["enumerable", "configurable", "writable"].forEach(function(a) {
        g[a] = !! c[a], delete c[a]
    }), "value" in c ? g.value = c.value : "function" == typeof c.get || "function" == typeof c.set ? (g.get = c.get || function() {}, g.set = c.set || function() {}) : g.value = c) : "function" == h ? (g.get = c, g.set = function() {}) : g.value = c : ("function" == h ? (g.get = c, "function" == i ? g.set = d : null != d && (f = !! e, e = !! d)) : (g.value = c, f = !! e, e = !! d), g.enumerable = !e, g.configurable = !f), "function" != typeof g.get ? "value" in g || (g.value = null) : delete g.writable, g
}
$.definePropertyLazy = function(a, b) {
    var c = $.makeDescriptor.apply(null, arguments);
    $.defineProperty(a, b, {
        get: function() {
            var d = c.get ? c.get.apply(a) : c.value;
            return delete a[b], $.defineProperty(a, b, c), d
        },
        set: function() {},
        configurable: !0
    })
}
$.defineProperty = function(a, b) {
    var c = $.makeDescriptor.apply(null, arguments);
    if (c) {
        if ("value" in c) return $.defineValue(a, b, c);
        if (Object.defineProperty) b in a && delete a[b], Object.hasOwnProperty.call(a, b) || Object.defineProperty(a, b, c);
        else {
            var d = "get" + b.charAt(0).toUpperCase() + b.substr(1);
            d in a || (a[d] = c.get), d = "set" + b.charAt(0).toUpperCase() + b.substr(1), d in a || (a[d] = c.get)
        }
    }
}
$.defineProperties = function(a, b, c) {
    c = c || {}, $.each(b, function(b, d) {
        $.defineProperty(a, d, $.extend(b, c))
    })
}

    $.defineValue = function(a, b, c, d, e, f) {
    var g = null,
        h = [d, !e, !f];
    b = String(b), g = c && "object" == typeof c && "value" in c && (1 == Object.keys(c).lenght || null != c.writable || null != c.enumerable || null != c.configurable) ? c : {
        value: c
    };
    for (var i, j = ["writable", "enumerable", "configurable"], k = 0; i = j[k], 3 > k; k++) null == g[i] && (g[i] = !! h[k]), g[i] = !! g[i];
    Object.defineProperty ? (b in a && delete a[b], Object.hasOwnProperty.call(a, b) || Object.defineProperty(a, b, g)) : a[b] = g.value
}, $.defineValues = function(a, b) {
    var c = [].slice.call(arguments, 3);
    if (!b || "object" != typeof b) return a;
    for (var d in b) d && "string" == typeof d && Object.hasOwnProperty.call(b, d) && $.defineValue.apply($, [a, d, b[d]].concat(c));
    return a
}

    $.makeProxy2 = (function(){
    function makedescripts(props,interceptor,filter,makefields){
        var nuprops={},noop=function(){},filterarr=null,filterfn=null;
        if($.isArray(filter)){filterarr=filter}
        if(typeof(filter)=="function"){filterfn=filter;filter=null}
        $.each(props,function(descriptorwrp,k){
            if(!isNaN(k)||!descriptorwrp||String(k).indexOf("__")==0){return}
            if(filter&&filter.indexOf(k)>=0){return}
            if(filterfn&&filterfn(k)===false){return}
            var propdescriptor=descriptorwrp.descriptor
            if(!propdescriptor && (descriptorwrp.get||("value" in descriptorwrp))){
                descriptorwrp={descriptor:descriptorwrp}
                if(typeof(descriptorwrp.descriptor.value)=="function"){descriptorwrp.isMethod=true}
                propdescriptor=descriptorwrp.descriptor;
            }
            if(propdescriptor&&propdescriptor.value&&propdescriptor.value.descriptor){descriptorwrp=propdescriptor.value}
            var d={configurable: propdescriptor.configurable,enumerable: propdescriptor.enumerable}
            if(descriptorwrp.isMethod || "value" in descriptorwrp.descriptor){
                d.writable=propdescriptor.writable;
                if(descriptorwrp.isMethod){
                    if(makefields && (k.indexOf("get")==0||k.indexOf("set")==0)){
                        var info= $.fn.info(descriptorwrp.descriptor.value)
                        if(info && info.isAccessor=="get"&&!nuprops[info.fieldname]){
                            var d1={configurable: true,enumerable: true}
                            d1.get=(function( nm,fnnm){return function(){return interceptor("get" ,this.___delegate___,nm,  function(){return this[fnnm]?this[fnnm]():this[nm]});} })( info.fieldname,info.name)
                            d1.set =(function( nm,fnnm){return function(vl){return interceptor("set",this.___delegate___,nm, function(val){ return this[fnnm]&&this[fnnm](val)},vl );} })( info.fieldname,info.name.replace(/^g/,"s"))
                            nuprops[info.fieldname]=d1;
                        }

                    }
                    d.value=(function( nm,f){return function(){return interceptor("method",this.___delegate___,nm, f,[].slice.call(arguments));} })( k,propdescriptor.value ||Function("v","var k='"+k+"',curr=this[k];if(v!==undefined && v!==curr){this[k]=v;}; return curr;") ) }
                else{
                    d.get=(function( nm){return function(){return interceptor("get" ,this.___delegate___,nm,  function(){return this[nm]});} })( k )
                    d.set =(function( nm){return function(vl){return interceptor("set",this.___delegate___,nm, function(val){ this[nm]=val},vl );} })( k )
                }
            }
            else {
                d.get=(function( nm,f){return function(){return interceptor("get",this.___delegate___,nm, f );} })( k,propdescriptor.get||Function("return this['"+k+"']")  )
                d.set=(function( nm,f){return function(vl){return interceptor("set",this.___delegate___,nm,f,vl );} })( k,propdescriptor.set||Function("v","return this['"+k+"']=v") )
            }
            nuprops[k]=d;
        });
        return nuprops
    }
    var _cached={};
    var toret= function(o){
        var interceptor=arguments[1],filter=arguments[2],makefields=arguments[3]
        if(arguments.length==2 && arguments[1]===true){
            interceptor=null;filter=null;makefields=true;
        }
        if(arguments.length==3 && arguments[2]===true){
            filter=null;makefields=true;
        }

        var proxy= $.cleanObj()
        if(typeof(interceptor)!="function"){
            interceptor=function(typ,dlg,nm,f,a){
                if(typ=="get"){return f.call(dlg)}
                if(typ=="set"){return f.call(dlg,a)}

                return typeof(f)=="function"?f.apply(dlg,a):a
            }
        }
        var allprops=$.getAllProperties(o)
        var nuprops=makedescripts(allprops,interceptor,filter,makefields)
        $.defineProperties(proxy,nuprops);
        proxy.___delegate___=o
        /*if(o && typeof o =="object"){
         var ctor,proto=Object.getPrototypeOf(o)
         if(proto&&proto.constructor){
         ctor=proto.constructor
         } else {ctor=o.constructor}
         if(ctor!==Object) {
         proxy.___ctor___ = ctor
         }

         }
         proxy.___constructor__=*/
        proxy.___interceptor___=interceptor
        proxy.__setDelegate=function(o){
            this.___delegate___=o
            return this
        }
        proxy.__add=function( obj,optns){optns=optns||{}
            if(optns==true){optns={fromdescripts:true}}
            if( optns.fromdescripts==null&& $.values(obj).some(function(it){return it.descriptor})){optns.fromdescripts=true }
            var descripts=( optns.fromdescripts)?obj:$.getAllProperties(obj)
            var nuprops=makedescripts(descripts,this.___interceptor___ ,optns.filter)
            $.defineProperties(this,nuprops);
            return this
        }
        proxy.__destroy=function() {

            if (proxy.___delegate___ && proxy.___delegate___.constructor && proxy.___delegate___.constructor.name && proxy.___delegate___.constructor !== Object) {
                _cached[proxy.___delegate___.constructor.name] || (_cached[proxy.___delegate___.constructor.name] = []);
                _cached[proxy.___delegate___.constructor.name].push(proxy)
            }
            proxy.___delegate___ = null;
            delete proxy.___delegate___;
        }
        proxy.__clone=function(dlg,props){
            var nu=Object.create(this)
            if(dlg){nu.__setDelegate(dlg)}
            if(props){var nuprops=null
                if(props==true){
                    if(dlg) {
                        nuprops=$.getAllProperties(dlg)
                        $.keys(nuprops,true).forEach(function(k){
                            if(k in nu){delete nuprops[k]}
                        })
                    }
                }else if($.isPlain(props)){
                    nuprops=props
                }
                nuprops&&nu.__add(nuprops,{fromdescripts:true})
            }
            return nu
        }
        return proxy
    }

    return toret

})();
(function($) {
        function _functionize(a, b) {
            return $.parseExpr(a, b).toFn()
        }
        try {
            Object.keys || (Object.keys = function(a) {
                var b = [];
                for (var c in Object(a)) b.push(c);
                return b
            }), Object.getOwnPropertyNames || (Object.getOwnPropertyNames = function(a) {
                var b = [],
                    c = Object.getPrototypeOf ? Object.getPrototypeOf(a) : a.__proto__ || a.prototype || (a.constructor ? a.constructor.prototype : null);
                for (var d in a) "string" == typeof d && (c && d in c || b.push(d));
                return b
            });
            var getDescriptors = function(a) {
                    for (var b, c = {}, d = Object.getOwnPropertyNames(a), e = 0; e < d.length; e++) {
                        var b = d[e];
                        c[b] = Object.getOwnPropertyDescriptor(a, b)
                    }
                    return c
                }, getProtoParent = function(a) {
                    if ("function" == typeof a) {
                        var b = a.prototype;
                        if (Object(b) === b || null === b) return a.prototype
                    }
                    if (null === a) return null;
                    throw new TypeError
                }, emptyObject = {}, defineProperty = Object.defineProperty,
                ownProps = Object.getOwnPropertyNames,
                getDescript = function(a, b) {
                    for (; null !== a;) {
                        var c = Object.getOwnPropertyDescriptor(a, b);
                        if (c) return c;
                        a = Object.getPrototypeOf(a)
                    }
                    return void 0
                }, CANUSEDESCRIPTORS = ownProps && defineProperty,
                primitiveTypes = {
                    "boolean": Boolean,
                    number: Number,
                    string: String
                }, nativeTypes = ["Arguments", "Array", "Boolean", "Date", "Error", "Function", "JSON", "Math", "Number", "Object", "RegExp", "String"],
                isplain = function(a, b) {
                    return a ? function(c) {
                        return c && "object" == typeof c && (a(c) === b||a(c) === null)
                    } : function(a) {
                        return a && "object" == typeof a && a.constructor && a.constructor.prototype === b
                    }
                }(Object.getPrototypeOf, Object.prototype);

            var _deepCopy = function _deepCopy(src, usector) {
                    function _inner(src, key) {
                        var ret = {}, ctorname;
                        if (null == src || "object" != typeof src || "function" == typeof src) return src;
                        if (key && "string" == typeof key && ignore.indexOf(key) >= 0) return null;
                        src.constructor && (ctorname = src.constructor.name);
                        var idx = _loop.indexOf(src);
                        if (idx >= 0) return _vals[idx];
                        if (idx = _loop.push(src) - 1, _vals[idx] = null, Object.isSealed(src) || !Object.isExtensible(src)) ret = src;
                        else if ($.isArray(src) || src !== window && src.length >= 0 && src.length === $.makeArray(src).length) {
                            ret = [], _vals[idx] = ret, prevgrandobj = src;
                            for (var i = 0, l = $.makeArray(src), ln = l.length; ln > i; i++) ret.push(_inner(l[i], i))
                        } else if (src instanceof Node) ret = src.cloneNode(!0);
                        else if ("function" == typeof src.clone) ret = src.clone(!0);
                        else if ("Date" === ctorname) ret = new Date(src.getTime());
                        else if ("RegExp" === ctorname) ret = eval(src.toString());
                        else if (src.newInstance && src.toMap) ret = src.newInstance(src.toMap());
                        else {ret = null
                            if (  usector) {
                                var proto = Object.getPrototypeOf ? Object.getPrototypeOf(src) : src.__proto__;
                                if ("function" == typeof src.constructor) try {
                                    ret = new src.constructor
                                } catch (e) {}
                                ret || (!proto && src.constructor && (proto = src.constructor.prototype), ret = Object.create(proto))
                            }
                            ret || (ret = {});
                            _vals[idx] = ret;
                            var i = 0,
                                names = Object.getOwnPropertyNames(src);
                            for (prevgrandobj = src; names.length;) {
                                var key = names.shift();
                                if (key && "string" == typeof key && !(key in ret)) try {
                                    ret[key] = _inner(src[key], key)
                                } catch (e) {}
                            }
                        }
                        return null === _vals[idx] && (_vals[idx] = ret), ret
                    }
                    var _loop = [],
                        _vals = [],
                        prevkey = null,
                        prevobj = null,
                        prevgrandobj = null,
                        ignore = ["enabledPlugin", "ownerElement", "bbox", "parentStyleSheet"];
                    return usector !== !0 && (usector = !1), _inner(src)
                },
                _mixin = function(a) {
                    for (var b = Array.from(arguments).slice(1); b.length;) {
                        var c = b.shift();
                        c && "object" == typeof c && singleMixin(a, c, !0)
                    }
                    return a
                }, _extend = function() {
                    var a, b = Array.from(arguments),
                        c = !1;
                    return "boolean" == typeof b[0] && (c = b.shift()), a = b.shift() || {}, "function" != typeof a && (a = Object(a)), _mixin.apply(null, [a].concat(c ? b.map(_deepCopy) : b)), a
                }, _compact = function() {
                    function a(b) {
                        var c, d = [].slice.call(arguments, 1);
                        "boolean" == typeof b && (c = b, b = d.shift());
                        var e = d.shift();
                        if (!b || "object" != typeof b) return [e || b ? !! b : !0, b];
                        var f, g = [],
                            h = $.isArrayLike(b),
                            i = h ? b : $.keys(b);
                        h && (f = []);
                        for (var j, k = i, l = 0, m = k.length; j = h ? l : k[l], m > l; l++) {
                            var n = b[j];
                            if (e && null == n || !e && !n) g.push(j);
                            else if (c && n && "object" == typeof n) {
                                var o = a(!0, n, e);
                                o[0] && g.push(j)
                            }
                        }
                        if (h)
                            for (; g.length;) b.splice(g.pop(), 1);
                        else g.forEach(function(a) {
                            try {
                                delete b[a]
                            } catch (c) {}
                        });
                        return g.length == i.length && (b.__empty = !0), [g.length == i.length, b]
                    }
                    var b = a.apply(this, arguments);
                    return b[1] && b[1].__empty && delete b[1].__empty, b[1]
                }, _defaults = function a(b) {
                    var c, d = [].slice.call(arguments, 1);
                    "boolean" == typeof b && (c = b, b = d.shift());
                    var e = _extend.apply(null, [!0, {}].concat(d));
                    if (!b || "object" != typeof b) return e;
                    for (var f in e) null == b[f] ? b[f] = e[f] : c && "object" == typeof b[f] && e[f] && "object" == typeof e[f] && (b[f] = a(!0, b[f], e[f]));
                    return b
                }, _merge = function b(a) {
                    var c = _extend.apply(null, [!0, {}].concat([].slice.call(arguments, 1)));
                    if (!a || "object" != typeof a) return c;
                    for (var d in c) d in a && a[d] && "object" == typeof a[d] && c[d] && "object" == typeof c[d] ? a[d] = b(a[d], c[d]) : null != c[d] && (a[d] = c[d]);
                    return a
                }, singleMixin2 = function(a, b, c) {
                    var d = {};
                    "function" == typeof c ? d.wrapper = c : "boolean" == typeof c ? d.overwrite = c : $.isArray(c) ? d.filter = function(a) {
                        var b = a;
                        return function(a, c) {
                            return -1 == b.indexOf(c)
                        }
                    }($.makeArray(c)) : c && "object" == typeof c && Object.keys(c).forEach(function(a) {
                        d[a] = c[a]
                    });
                    var e = d.filter;
                    for (var f in b) {
                        var g = b.__lookupGetter__(f),
                            h = b.__lookupSetter__(f),
                            i = d.wrapper;
                        !d.overwrite && f in a || !e || e(b[f], f) || (g || h || i ? ((g || i) && a.__defineGetter__(f, i ? i(g) : g), (h || i) && a.__defineSetter__(f, i ? i(h) : h)) : a[f] = b[f])
                    }
                },
                singleMixin = function singleMixin(dst, src, replaceExisting) {
                    var _has = Object.prototype.hasOwnProperty
                    if (typeof replaceExisting == 'undefined') replaceExisting = false;
                    if (!(dst && (typeof(dst) == "object" || typeof(dst) == "function")) || Object.isSealed(dst) || !(Object.isExtensible(dst))) {
                        return dst
                    }

                    if (CANUSEDESCRIPTORS) {
                        ownProps(src).forEach(function (propName) {
                            var has = _has.call(dst, s)
                            if (typeof(propName) == "string" && (!has || (replaceExisting && !(dst[s] === propName[src])))) {
                                $.defineProperty(dst, propName, getDescript(src, propName));

                            }
                        });
                    }
                    else {
                        for (var s in src) {
                            if (typeof(s) == "string" && _has.call(src, s) && !(s in emptyObject)) {
                                if (replaceExisting || !_has.call(dst, s)) {
                                    dst[s] = src[s];
                                }
                            }
                        }
                    }
                    return dst;
            }, _print = function() {
                    console.log.apply(console, ["print", Date.now()].concat($.makeArray(arguments)))
                }, _log = function() {
                    console.log.apply(console, ["log", Date.now()].concat($.makeArray(arguments)))
                }, _eachWithInherited = function(a, b, c) {
                    for (var d, e = $.BREAKITERATOR, f = a, g = !! $.isArrayLike(a), h = 0, i = g ? f : $.keys(f, !0), j = i.length;
                         (d = g ? h : i[h], j > h) && b.call(c, f[d], d, f) !== e; h++);
                }, _each = function(a, b, c) {
                    if (a) {
                        var d = $.fnize ? $.fnize(b) : b;
                        "function" != typeof d && $.throwTypeError("A callback function is expected");
                        var e = a.__iterator__ || a._each || a.forEach;
                        return "function" != typeof e && (e = null), e = e || ($.isArrayLike(a) ? [].forEach : function(b, c) {
                                for (var d, e = $.BREAKITERATOR, f = a, g = 0, h = ownProps(f), i = h.length;
                                     (d = h[g], i > g) && b.call(c, f[d], d, f) !== e; g++);
                            }), e ? (e.call(a, d, c), a) : void 0
                    }
                }, _types = {
                    number: "number",
                    string: "string",
                    "boolean": "boolean",
                    object: "object",
                    undefined: "undefined"
                }, OProto = Object.prototype,
                ArrProto = Array.prototype,
                FN = "function",
                _istype = function(a, b) {
                    if (a = a || "undefined", null == a || "null" === a || "nill" === a || "undefined" === a) {
                        if (null == b) return !0;
                        a = "null"
                    }
                    var c, d = !b || b.toString ? {}.toString.call(b).substr(8).replace(/\]$/, "").trim() : (b.constructor || {}).name;
                    return d && (null == a || "string" == typeof a ? c = d == String(a).toLowerCase() : "function" == typeof a ? c = d == String(a.name).toLowerCase() || b instanceof a : "object" == typeof a && (c = Object.getPrototypeOf(b) === a)), !! c
                }, _unwrap = function(a) {
                    return a && "object" == typeof a ? a.unwrap ? a.unwrap() : a instanceof Date ? a : a.valueOf ? a.valueOf() : a : void 0
                }, abs = function(a) {
                    return (a ^ a >> 31) - (a >> 31)
                }, round = function(a) {
                    return a + .5 >> 0
                }, ceil = function(a) {
                    return a + 1 >> 0
                }, floor = function(a) {
                    return~~ a
                }, _walk = function(a, b, c) {
                    function d(a, b) {
                        j.fet;
                        var c = typeof a,
                            d = a && a.nodeType ? a.id || a : a;
                        if (g.indexOf(d) >= 0 || "string" == typeof b && (0 == b.indexOf("__") || h.indexOf(b) >= 0) || null == a) return !1;
                        if ("object" == c)
                            if (a.__loopidx) {
                                var e = ++a.__loopidx[2];
                                e > 5 && console.log("looped", b)
                            } else a.__loopidx = [g.push(d), b, 0]
                    }

                    function e(a, g, j, k, l, m, n) {
                        l = l || 0;
                        var o = b(a, g, j, k, l, c, m, n);
                        if (!(o === !1 || m || ++f > 1e3) && (o && null != o.value && (a = o.value), a && "object" == typeof a)) {
                            var p = j + "",
                                q = a;
                            if (a && "function" == typeof a.toMap) q = a.toMap();
                            else if ("length" in a && a.length >= 0) {
                                var r = $.makeArray(q);
                                r.length == q.length && (q = r)
                            }
                            if ($.isArray(q)) {
                                for (var s, t = 0, u = q, v = u.length; s = u[t], v > t; t++)
                                    if (!(h.indexOf(x) >= 0 || null == s || d(s, x) === !1)) {
                                        var w = p + (p ? "." : "") + t;
                                        e(s, t, w, q, l + 1, !s || i(s), p)
                                    }
                            } else
                                for (var s, x, t = 0, u = $.keys(q, !0), v = u.length; x = u[t], v > t; t++)
                                    if (!(h.indexOf(x) >= 0 || d(s = q[x], x) === !1 || null == s)) {
                                        var w = p + (p ? "." : "") + x;
                                        e(s, x, w, q, l + 1, i(s), p)
                                    }
                        }
                    }
                    var f, g = [],
                        h = $.keys(Object.prototype, !0).concat(["instanceCount", "selection", "selectionDirection", "selectionEnd", "selectionStart"]),
                        i = function(a) {
                            return !a || "object" != typeof a || 0 === a.length || 0 === Object.keys(a).length
                        }, j = $.objectMap;
                    e(a, "", "", null, 0);
                    for (var k, l = 0, m = g, n = m.length; k = m[l], n > l; l++) k && k.__loopidx && (delete k.__loopidx, g[l] = null);
                    g.length = 0, g = null
                }, _unflatten = function() {
                    var a = arguments[0],
                        b = $.each,
                        c = "function" == typeof arguments[1] ? arguments[1] : null,
                        d = {};
                    return b(a, function(a, b) {
                        var e = String(b).trim().replace(/\.$/, "").split(/\./),
                            f = e.pop(),
                            g = 0 == e.length ? d : e.reduce(function(a, b) {
                                return a[b] || (a[b] = {}), a[b]
                            }, d);
                        g && (g[f] = c ? c(f, a) : a)
                    }), d
                }, _flatten = function(a, b, c, d) {
                    var e = {}, f = "function" == typeof b ? b : $.isArray(b) ? function(a) {
                        return function(b, c, d) {
                            return -1 == a.indexOf(c) || d
                        }
                    }(b) : function() {
                        return !0
                    };
                    return $.walk(a, function(a, b, g, h, i, j, k, l) {
                        var m;
                        return (m = f(a, b, g, i, k)) === !1 ? !1 : (m && m.leaf && (k = !0), m && k && (null != m.value && (a = m.value), c && l ? (e[l] || (e[l] = d ? Object.create(null) : {}), e[l][b] = a) : e[g] = a), m)
                    }), e
                }, getProtoChain = function(a, b) {
                    if (null == a) return [];
                    var c = Object(a),
                        d = [],
                        e = 0;
                    for (null == b && (b = !0); c && "object" == typeof c && null !== (c = Object.getPrototypeOf(c)) && !(++e > 20) && !(!c || d.indexOf(c) >= 0 || b && c === Object.prototype);) d.push(c);
                    return d
                }, getOwnPropertyDescriptors = function getOwnPropertyDescriptors(obj) {
                    var ret = {}, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
                    if (obj && typeof(obj) == "object") {
                        Object.keys(obj).forEach(function (it) {
                            var v = getOwnPropertyDescriptor(obj, it);
                            if (v && (("value" in v) || (typeof(v.get) == "function"))) {
                                ret[it] = v;
                            }
                        });
                    }
                    return ret
                },
                getPropList = function getPropList(obj0, onlyOwn, option) {
                    if (!obj0) {
                        return {}
                    }
                    var obj = obj0,exclud,askeyvalues,astuple;
                    if (typeof(obj) != "object") {
                        obj = Object(obj)
                    }
                    if(option){
                        if(Array.isArray(option)){exclud=option}
                        else if(option==="askeyvalues"||option==="keyvalues"||option==="keyvalue"){askeyvalues=true}
                        else if(option==="astuple"||option==="tuple"){astuple=true}

                    }
                    var _own = true, r = astuple?[]:Object.create(null), object = obj, exclude = ["constructor", "prototype", "__proto__"].concat(exclud || []);

                    while (object !== null && object != Object.prototype) {
                        for (var i = 0, l = Object.getOwnPropertyNames(object), ln = l.length, k; k = l[i], i < ln; i++) {
                            if (!(k && typeof(k) == "string" && k.indexOf("__") != 0 && exclude.indexOf(k) < 0)) {
                                continue
                            }
                            if(astuple){
                                r.push([k,obj[k]])
                            }
                            else if(askeyvalues) {
                                r[k] =  obj[k]
                            } else{
                                var ds = Object.getOwnPropertyDescriptor(object, k)||{}
                                r[k] = {name: k, own: _own, isMethod: typeof(ds.value ) == "function", descriptor: ds}
                            }

                        }
                        if (onlyOwn) {
                            break;
                        }
                        _own = false
                        object = Object.getPrototypeOf(object)
                    }
                    ;
                    /*
                     try{var m={}
                     for(var i=0,ln=r.length,it;it=r[i],i<ln;i++){
                     if(!(it&&ds[it]&&(("value" in ds[it])||(typeof(ds[it].getEntity)=="function")))){continue}
                     m[it]={name:it,own:_own,isMethod:typeof(ds[it].value)=="function",descriptor:ds[it]}
                     }


                     } catch(e){ console.error(e)}*/
                    return r
                };
            $.define = function(a, b) {
                -1 == a.indexOf(".") && ($[a] = b)
            }
             _extend($, {
                support: {},
                hasSupport: function(a) {
                    return String(a) in this.support ? this.support[String(a)] : !0
                },
                BREAKITERATOR: {},
                print: _print,
                log: _log,
                each: _each,
                getPropertyDescriptor: getDescript,
                 newInstance: function _newoftype(obj) {
                    var o = obj || {}, nu, c = typeof(o) == "function" ? o : o.constructor, a = []
                    if (arguments.length == 2 && arguments[1] && ({}).toString.call(arguments[1]).indexOf("Arguments") > 0) {
                        a = [].slice.call(arguments[1])
                        if (a.length && a[0] && ({}).toString.call(a[0]).indexOf("Arguments") > 0) {
                            a=[].slice.call(a[0])
                        }
                    }
                    else {
                        a = [].slice.call(arguments, 1)
                    }
                    var ln = a.length;
                    if (typeof(c) == "function") {
                        try {
                            if (!ln) {
                                nu = new c
                            }
                            else if (ln == 1) {
                                nu = new c(a[0])
                            }
                            else {
                                nu = new (Function.prototype.bind.apply(c, [null].concat(a)))
                            }
                        } catch (e) {
                        }
                    }
                    if (!nu) {
                        nu = Object.create(Object(o))
                    }
                    return nu
                },
                val: function(a) {
                    var b = a;
                    return null != a && a.valueOf && (b = a.valueOf()), null == b || "object" != typeof b ? b : ("value" in b ? b = b.value : "function" == typeof b.getValue ? b = b.getValue() : b instanceof Node && "textContent" in b && (b = b.textContent), b)
                },
                 disjoint:function(src,target){
                     var res={};
                     if(!(src && typeof(src)=="object")|| !(target && typeof(target)=="object")){return}
                     if($.isArrayLike(src) ){
                         res=[]
                         if(!$.isArrayLike(target)){return}
                         $.each(src,function(v,i){if(target[i]!=v){res.push(v)}})
                         return res
                     }
                     $.each(src,function(v,i){if(target[i]!=v){res[i]=v}})
                     return res
                 },
                 intersect:function(src,target){
                     var res={};
                     if(!(src && typeof(src)=="object")|| !(target && typeof(target)=="object")){return}
                     if($.isArrayLike(src) ){
                         res=[]
                         if(!$.isArrayLike(target)){return}
                         $.each(src,function(v,i){if(target[i]==v){res.push(v)}})
                         return res
                     }
                     $.each(src,function(v,i){if(target[i]==v){res[i]=v}})
                     return res

                 },
                collect: function(a, b, c) {
                    var d = [],
                        e = $.fnize ? $.fnize(b) : b;
                    return _each(a, function(a, b, c) {
                        d.push(e.call(this, a, b, c))
                    }, c), d
                },
                augment: function(a) {
                    if (a) {
                        var b;
                        return "undefined" != typeof Data && Data.TypeInfo && (b = Data.TypeInfo.getInfoFromValue(a)._extender), b && b.augment ? b.augment(a) : "each collect keys values getAllProperties".split(/\s+/).forEach(function(b) {
                            b in a || $.defineValue(a, b, $[b].curry(a), 1, 0, 1)
                        }), a
                    }
                },
                groupBy: function(a, b) {
                    return $.reduce(a, function(a, c, d, e) {
                        var f = b(c, d, e);
                        return a[f] || (a[f] = []), a[f].push(c), a
                    }, {})
                },
                some: function(a, b, c) {
                    var d = !1,
                        e = $.BREAKITERATOR;
                    return $.isArrayLike(a) && [].some ? d = Array.from(a).some(function(a, d, e) {
                        return b.call(c, a, d, e)
                    }, c) : _each(a, function(a, c, f) {
                        return b.call(this, a, c, f) ? (d = !0, e) : void 0
                    }, c), d
                },
                every: function(a, b, c) {
                    var d = !0,
                        e = $.BREAKITERATOR;
                    return $.isArrayLike(a) && [].every ? d = Array.from(a).every(function(a, d, e) {
                        return b.call(c, a, d, e)
                    }, c) : _each(a, function(a, c, f) {
                        return b.call(this, a, c, f) ? void 0 : (d = !1, e)
                    }, c), d
                },
                isArray: function(a) {
                    return !(!a || !(a instanceof Array || a.toString && "[object Array]" == {}.toString.call(a)))
                },
                makeArray: function(a, b) {
                    if (null == a) return [];
                    if ("object" != typeof(a)) return [a];
                    var c = (b && "number" == typeof (b)) ? b : 0;
                    if(Array.isArray(a)){
                        return c?a: a.slice(c)
                    }
                    if(("undefined" != typeof (a.length)) && a.length>=0){
                        return [].slice.call(a,c)
                    }

                    return [a]
                },
                isArrayLike: function(a) {
                    return a && "object" == typeof a && ($.isArray(a) || isFinite(a.length) && a.length >= 0 && a.length === Math.floor(a.length) && a.length < 4294967296)
                },

                isFunction: function(a) {
                    return "function" == typeof a
                },
                isNumber: function(a) {
                    return !(0 !== a && "0" !== a && (!a || "number" != typeof a && "string" != typeof a && "[object Number]" != {}.toString.call(a) || !isFinite(Number(a))))
                },
                isDomElement: function(a) {
                    return a && "object" == typeof a && a === window || a === document || a.nodeType && "undefined" != typeof Node && a instanceof Node
                },
                isElement: function(a) {
                    return a && "object" == typeof a && a.nodeType && "undefined" != typeof Node && a instanceof Node
                },
                toNumber: function(a, b) {
                    return $.isNumber(a) ? +a : null == b ? 0 : +b
                },
                isPlain: isplain,
                 isPlainObject: isplain,
                isJsonString: function(a) {
                    if (!a) return !1;
                    if ("object" == typeof a && ($.isPlain(a) || Array.isArray(a))) return a;
                    if (a && "string" == typeof a && a.length > 3) {
                        var b = a.charAt(0),
                            c = a.charAt(a.length - 1);
                        if ("{" == b && "}" == c && a.indexOf(":") > 0 || "[" == b && "]" == c) try {
                            return JSON.parse(a)
                        } catch (d) {}
                    }
                    return !1
                },
                 toSafeJson: (function(object, options) {
                     function _toSafeJson(object,loopcheck,lvl,config){
                         if(!object || (typeof(object)!="object")){
                             return typeof(object)=="function"?null:String(object)
                         }
                         if(config.maxLevel && lvl>=config.maxLevel){return null}
                         if(loopcheck.indexOf(object)>=0){return null}
                         loopcheck.push(object)
                         var ret
                         if($.isArrayLike(object) && k!=="style"){
                             ret=[]
                             for(var k= 0,ln=object.length;k<ln;k++){
                                 ret.push(_toSafeJson(object[k],loopcheck,lvl+1,config))
                             }
                         } else{
                             ret={}
                             for(var k in object){
                                 if(!isNaN(k) || k==="selectionStart"){continue}
                                 ret[k]=_toSafeJson(object[k],loopcheck,lvl+1,config)
                             }
                         }

                         return ret;
                     }
                     return function(object, options){
                         var loopcheck=[]
                         options=options||{}
                         var data=_toSafeJson(object,loopcheck,0,options)
                         if(data){
                             if(typeof(options.resolver)!="function"){options.resolver=null}
                             if(typeof(options.indent)!="number"){options.indent=null}
                             loopcheck.length=0;
                             loopcheck=null;
                             return JSON.stringify(data,options.resolver||undefined,options.indent||undefined)
                         }
                     }
                 })(),
                toJson1: function(a, b) {
                    var c = a;
                    $.isPlain(b) || (b = b === !0 ? {
                        extended: !0
                    } : "function" == typeof b ? {
                        resolver: b
                    } : {});
                    var d, e = ($.isPlain, []),
                        f = 0,
                        g = {
                            spellcheck: !0,
                            tabIndex: -1,
                            translate: !0,
                            contentEditable: "inherit"
                        }, h = function() {
                            return function(a, c, d) {
                                if (a && isNaN(a)) {
                                    var h = String(a).toLowerCase();
                                    if (!f && c && c.nodeType > 0 && (f = 1), f && (h.indexOf("parent") >= 0 || "childNodes" == a || "cssRules" == a || "classList" == a || "nextElementSibling" == a || "lastChild" == a || "firstChild" == a || "lastElementChild" == a || "firstElementChild" == a || "previousElementSibling" == a || "nextSibling" == a || "previousSibling" == a || h.indexOf("html") >= 0 || h.indexOf("text") >= 0 || h.indexOf("owner") >= 0 || "namespaceuri" == h || "baseuri" == h || "nodename" == h || "localname" == h || g[a] && g[a] == c)) return void 0
                                }
                                if (!c || "object" != typeof c) return c || void 0;
                                var i, j = e.indexOf(c);
                                if (j >= 0) return c.id || c.nodeName || c.nodeType || void 0;
                                if (d !== !0 && e.push(c), "function" == typeof c.toMap) i = c.toMap();
                                else if (c.properties && "function" == typeof c.properties.toMap) i = c.properties.toMap();
                                else if (b.resolver) i = b.resolver(a, c);
                                else if (b.serializefunctions) {
                                    for (var k, l = Array.isArray(c), m = l ? [] : {}, n = 0, o = Object.keys(c), p = o.length; k = o[n], n < o.length; n++) m[k] = "function" == typeof c[k] ? c[k].toString() : c[k];
                                    i = m
                                } else if (c.nodeType && 3 == c.nodeType) i = String(c.textContent || "").trim() ? {
                                    nodeType: 3,
                                    nodeValue: c.textContent
                                } : void 0;
                                else if (f && "style" == a && 1 == c.nodeType) {
                                    i = {};
                                    for (var n = 0, o = c.style || [], p = o.length; p > n; n++) i[o[n]] = o[o[n]]
                                } else if (f && "attributes" == a) {
                                    i = {};
                                    for (var q = 0, n = 0, p = c.length || 0; p > n; n++) {
                                        var a = c[n].name;
                                        "className" != a && "class" != a && "style" != a && 0 != a.indexOf("data-") && (i[a] = c[n].value, q++)
                                    }
                                    q || (i = void 0)
                                } else {
                                    if ((Array.isArray(c) || "number" == typeof c.length) && 0 === c.length) return void 0;
                                    if (c.length > 0 && "0" in c)
                                        if (f && "style" == a && 1 == c.nodeType) {
                                            i = {};
                                            for (var n = 0, o = c.style || [], p = o.length; p > n; n++) i[o[n]] = o[o[n]]
                                        } else {
                                            var r = [].slice.call(c);
                                            i = r && r.length === c.length && r[0] === c[0] ? r : c
                                        } else {
                                        if (f && "dataset" == a && !Object.keys(c).length) return void 0;
                                        i = c
                                    }
                                }
                                return null == i ? void 0 : i
                            }
                        };
                    d = h();
                    var i = d("", c, !0);
                    if (!i || "object" != typeof i) try {
                        return String(c)
                    } catch (j) {
                        return void 0
                    }
                    e[0] === c && e.shift();
                    var k;
                    try {
                        k = JSON.stringify(c, d, b.indent)
                    } catch (j) {
                        return void console.error(j)
                    }
                    for (; e.length;) e[0] = null, e.shift();
                    return k
                },
                ToString: function(a) {
                    if (hasOwn(a, "toString")) return a.toString();
                    var b = $.getValue(a);
                    return "object" == typeof a ? $.toJson(a) : Object(b).toString()
                },
                throwError: function(a) {
                    throw new Error(a)
                },
                throwTypeError: function(a) {
                    throw new TypeError(a)
                },
                eachWithInherited: _eachWithInherited,
                extend: _extend,
                merge: _merge,
                pluck: function(a) {
                    if (!a || "object" != typeof a) return null;
                    var b, c = [].slice.call(arguments, 1),
                        d = {}, e = $.isArrayLike(a);
                    return c.length && "boolean" == typeof c[c.length - 1] && (b = c.pop()), 1 == c.length && c[0] && Array.isArray(c[0]) && (c = c[0]), e && (d = []), c.filter(function(b) {
                        return ("string" == typeof b || "number" == typeof b) && b in a
                    }).forEach(function(b) {
                        !isNaN(b) && e ? d.push(a[b]) : d[b] = a[b]
                    }), d
                },
                omit: function(a) {
                    if (!a || "object" != typeof a) return null;
                    var b, c, d = [].slice.call(arguments, 1),
                        e = a,
                        f = $.isArrayLike(a);
                    if (d.length && "boolean" == typeof d[d.length - 1] && (c = d.pop()), b = 1 == d.length ? [].concat(d[0] || []) : d, f && !$.isArray(a) && (e = $.toArray(a)), c) {
                        for (var g, h = 0, i = b.length; g = i[h], i > h; h++)
                            if (f) {
                                var j = e.indexOf(g);
                                j >= 0 && e.splice(j, 1)
                            } else "string" == typeof g && g in e && c && delete e[g];
                        return a
                    }
                    return e = f ? [] : {}, $.each(a, function(a, c) {
                        -1 == b.indexOf(c) && (f ? e.push(c) : e[c] = a)
                    }), e
                },
                defaults: _defaults,
                compact: _compact,
                equals: function(a, b, c, d) {
                    var e = this;
                    if (a === b || c && a == b) return !0;
                    if (null == a && null != b || null == b && null != a) return !1;
                    var f = a && a.valueOf ? a.valueOf() : a,
                        g = b && b.valueOf ? b.valueOf() : b;
                    if (f === g || c && f == g) return !0;
                    if (typeof f != typeof g) return !1;
                    if (e.is.primitive(f) || e.is.primitive(g)) return f === g;
                    if ($.isArrayLike(a)) return $.isArrayLike(b) ? $.every(a, function(a, d) {
                        return $.equals(a, b[d], c)
                    }) : !1;
                    if (a.constructor && a.constructor !== b.constructor || Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return !1;
                    var h = d ? null : function(a, b) {
                        var c = typeof b;
                        return !("function" == c || "object" == c)
                    }, i = $.flatten(b, h);
                    return $.every($.flatten(a, h), function(a, b) {
                        return $.equals(a, i[b], c)
                    })
                },
                hashCode: function(a) {
                    if (!a) return 0;
                    if (!isNaN(+a)) return +a;
                    var b, c, d, e = 0;
                    if ("object" != typeof a || a.hasOwnProperty("toString")) d = a.toString();
                    else if ($.isPlain(a)) d = JSON.stringify(a);
                    else {
                        if ("object" != typeof a && "function" != typeof a.toMap) return e;
                        d = JSON.stringify(a.toMap())
                    } if (0 == d.length) return e;
                    for (b = 0, c = d.length; c > b; b++) e = (e << 5) - e + d.charCodeAt(b), e |= 0;
                    return Math.abs(e)
                },
                format: function(a, b) {
                    return null == a ? "" : "function" == typeof b ? b(a) : $.isNumber(a) ? $.numberFormat(a, b) : "object" == typeof a && (a instanceof Date || a.__isdate__) ? $.date.format(a, b||a._defaultFormat) : b && $.typeInfo && $.typeInfo.typeMap && $.typeInfo.typeMap[b] ? $.typeInfo.typeMap[b](a) : a
                },
                memoize: function(a, b) {
                    return function(a, b) {
                        var c = [],
                            d = 0,
                            e = {}, f = [self],
                            g = 0,
                            h = 1,
                            i = 2,
                            j = 3,
                            k = 4,
                            l = function() {
                                var l = arguments.length,
                                    m = this,
                                    n = [],
                                    o = e,
                                    p = f.indexOf(m);
                                if (l && p >= 0) {
                                    for (var q, n = arguments, r = [], s = 0; l > s; s++) r.push(n[s] && n[s].valueOf ? n[s].valueOf() : n[s]);
                                    for (var s = d - 1; s >= 0; s--) {
                                        if (q = c[s] || [], o = e, q && q[g] === l && p === q[h]) {
                                            o = q[j];
                                            for (var t = q[i], u = 0; l > u; u++)
                                                if (t[u] !== r[u]) {
                                                    o = e;
                                                    break
                                                }
                                        }
                                        if (o !== e) return q[k]++, o
                                    }
                                }
                                var v = a.apply(m, n);
                                if (l) {
                                    if (d >= b) {
                                        for (var w = [], x = Math.ceil(Math.max(.1 * d, 1)), s = 0; d > s && (1 == c[s][k] && w.push(s), !(w.length >= x)); s++);
                                        for (; w.length;) c.splice(w.pop(), 1)
                                    }
                                    b > d && (0 > p && (p = f.push(m) - 1), d = c.push([n.length, p, r, v, 0]))
                                }
                                return v
                            };
                        return l.__inner = a, l.toString = a.toString.bind(a), l.unmemoize = function() {
                            return c.length = 0, c = null, f.length = 0, f = null, a
                        }, l
                    }(a, Number(b) || 100)
                },
                 clone: function (v, deep,usector) {
                     var r = {},typ=typeof(v);
                      if(!(v && (typ==="object"||typ==="function"))){
                          return v
                      }
                     if(deep === true){
                         return _deepCopy(v,usector)
                     }
                     var nu,isarr=$.isArrayLike(v)
                     if(isarr){
                         nu=[]
                          for(var i= 0,ln= v.length;i<ln;i++){
                              nu[i]=v[i];
                         }
                     } else{nu={}}
                     for(var key in v) {
                         if (typeof(key)!="number") {
                             if(key=="__proto__" ||key=="constructor" ||key=="prototype" ||(key=="length" && (typ=="function"||isarr))){continue}
                             nu[key] = v[key];
                         }
                     }
                     return nu
                 } ,
                cleanObj: function() {
                    var a = Object.create(null);
                    return a
                },
                wrapAndextend: function() {},
                mixin2: function(a) {
                    for (var b = $.makeArray(arguments, 1); b.length;) {
                        var c = b.shift();
                        c && "object" == typeof c && singleMixin2(a, c, !0)
                    }
                    return a
                },
                mixin: _mixin,
                deepCopy: _deepCopy,
                reduce: function(a, b, c, d) {
                    var e = !! d,
                        f = {
                            running: c
                        };
                    return _each(a, function(c, d) {
                        e === !0 ? b(f.running, c, d, a) : f.running = b(f.running, c, d, a)
                    }), f.running
                },
                walk: _walk,
                uniq: function(a) {
                    var b = $.makeArray(a).reduce(function(a, b) {
                        return b in a || (a[b] = 1), a
                    }, {});
                    return Object.keys(b)
                },
                flattenDom: function(a, b) {
                    return _flatten(a, b || function(a, b) {
                            return a && a.nodeType && /(child|sibling|parent|document|stylesheets|node|element)$/i.test(b) ? {
                                leaf: !0,
                                value: "domelement:" + a.id
                            } : /html$/i.test(b) ? !1 : a
                        })
                },
                flatten: _flatten,
                unflatten: _unflatten,
                size: function(a) {
                    return $.isArrayLike(a) ? a.length : $.keys(a).length
                },
                values: function(a, b) {
                    return $.keys(a, b).map(function(b) {
                        return a[b]
                    })
                },
                keys: function(a, b) {
                    return Object.keys(b === !0 ? $.getAllProperties(a) : Object(a))
                },
                hasOwn: function(a, b) {
                    return Object.hasOwnProperty.call(a, b)
                },
                find: function(a, b, c, d) {
                    var e = $.fnize(b, {
                            args: ["value", "key"]
                        }),
                        f = $.isArrayLike(a),
                        g = f ? [] : {}, h = (d ? 0 : $.isArrayLike(a), function(a, b, c) {
                            return e.call(this, a, b, c) ? (f ? g = a : d ? (g = {}, g[b] = a) : g = a, $.BREAKITERATOR) : void 0
                        });
                    return _each(a, h, c), g
                },
                findAll: function(a, b, c, d) {
                    var e = $.fnize(b, {
                            args: ["value", "key"]
                        }),
                        f = $.isArrayLike(a),
                        g = f ? [] : {}, h = function(a, b, c) {
                            e.call(this, a, b, c) && (f ? g.push(a) : g[b] = a)
                        };
                    return f && (d = !1), null == d && (d = !f), _each(a, h, c), d ? g : $.values(g)
                },
                slice: function(a, b) {
                    return $.isArrayLike(a) ? $.makeArray(a, isNaN(b) ? 0 : Number(a)) : null
                },
                getValue: function(a) {
                    if (null == a) return "";
                    var b = "function" == typeof a.valueOf ? a.valueOf() : a,
                        c = b;
                    if ("object" != typeof b) c = b;
                    else {
                        var d = Object.getPrototypeOf(b);
                        if (Object.hasOwnProperty.call(b, "valueOf") || d !== Object.prototype && Object.hasOwnProperty.call(d, "valueOf")) c = b.valueOf();
                        else if ("value" in b) c = b.value;
                        else {
                            var e = Object.keys(b),
                                f = e.length;
                            f || (c = ""), 1 === f && (c = this.getValue(b[e[0]]))
                        }
                    }
                    return c
                },
                inspect: function(a, b) {
                    var c = $.typeInfo(a);
                    return c.properties = getAllProperties(a), b ? $.toJson(c, {
                        serializefunctions: !0
                    }) : c
                },
                is: function() {
                    function a(a, b) {
                        if (Object.is(a, b)) return !0;
                        if (null == b) return !(null != a);
                        if (null == a) return !1;
                        var c = typeof b,
                            d = !1,
                            e = a.constructor,
                            f = e ? e.name : "--unknown--";
                        if ("function" == c && (e === b || f === b.name)) return !0;
                        if ("string" === c)
                            if ("nill" == b) b = "null";
                            else if ("undef" == b) b = "undefined";
                            else if ("fn" == b) b = "function";
                            else if (/^[a-z][\.\/][a-z]/.test(b)) {
                                var g = b.split(/[\.\/]/).reduce(function(a, b) {
                                    return a ? a[b] : a
                                }, self);
                                g && (b = g, c = typeof b)
                            }
                        if ("string" !== c || String(a) != b && typeof a != b && (null != a || "null" != b && "undefined" != b))
                            if ("number" === c) d = +a === b;
                            else if ("boolean" === c) d = !! a === b;
                            else if ("array" === b) d = $.isArrayLike(a);
                            else if ("indexed" === b) d = $.isArrayLike(a) || $.isPlain(a);
                            else {
                                var h = !a || a.toString ? {}.toString.call(a).substr(8).replace(/\]$/, "").trim() : f;
                                "string" == typeof b ? d = h == String(a).toLowerCase() || String((a.constructor || {}).name).toLowerCase() : "function" == typeof b ? d = h == String(a.name) || h == String(a.name).toLowerCase() || a instanceof b : "object" == typeof b && (d = Object.getPrototypeOf(a) === b)
                            } else d = !0;
                        return !!d
                    }
                    return a.instOf = function(b, c) {
                        return null != b && "function" == typeof c && a(b, c)
                    }, a.arrayLike = function(a) {
                        return $.isArrayLike(a)
                    }, a.empty = function b(a, c) {
                        var d;
                        if (!a || !(d = $.val(a)) || 0 === a.length) return !0;
                        var e = !1,
                            f = typeof d;
                        if ("string" == f) return !d.trim();
                        if ("object" != f) return !1;
                        if (!c && (Array.isArray(d) && d.length || Object.keys(d).length)) return !1;
                        e = !0;
                        for (k in d)
                            if ("function" != typeof d[k] && !b(d[k], !0)) {
                                e = !1;
                                break
                            }
                        return e
                    }, a.emptyOrPrimitive = function(b) {
                        return null == b ? !0 : a.empty(b) || "function" != typeof b && "object" != typeof b && [Number, String, Boolean].indexOf(b.constructor) >= 0
                    }, a.obj = function(a) {
                        return a && "object" == typeof a
                    }, a.object = function(a) {
                        return a && "object" == typeof a
                    }, a.element = function(a) {
                        return a && a.nodeType > 0
                    }, a.el = function(a) {
                        return a && a.nodeType > 0
                    }, a.arr = function(a) {
                        return $.isArray("array", a)
                    }, a.reg = function(a) {
                        return a && a.test && a.exec && "ignoreCase" in a
                    }, a.nan = function(a) {
                        return isNaN(a)
                    }, a.bool = function(b) {
                        return a(b, Boolean)
                    }, a.regexp = function(b) {
                        return b && a(b, RegExp)
                    }, a.nullOrUndef = function(a) {
                        return null == a
                    }, a.nill = function(a) {
                        return null === a
                    }, a.primitive = function(a) {
                        return "function" != typeof a && "object" != typeof a && [Number, String, Boolean].indexOf(a.constructor) >= 0
                    }, a.undef = function(a) {
                        return "undefined" == typeof a
                    }, a.instance = function(a) {
                        return a && "object" == typeof a && a.constructor !== Object
                    }, a["native"] = function(a) {
                        if (null == a) return null;
                        if (primitiveTypes[typeof a]) return !0;
                        var b = "object" == typeof a ? a.constructor : a;
                        return b && b.name && nativeTypes.indexOf(b.name) >= 0 ? !0 : /[native\s*code\s*]/.test(String(b))
                    }, a.fromNative = function(a) {
                        return a && a.constructor && nativeTypes.indexOf(a.constructor.name) >= 0
                    }, a.plain = function(a) {
                        return $.isPlain(a)
                    }, a.date = function(a) {
                        return a && (a instanceof Date || (a.constructor && String(a.constructor.name||"").toLowerCase() == "date"))
                    }, ["number", "fn", "string", "boolean", "array", "object", "nill", "undef"].forEach(function(b) {
                        a[b] = function(a) {
                            return function(b) {
                                return $.is(b, a)
                            }
                        }(b)
                    }), Object.freeze && Object.freeze(a), a
                }(),
                propertyWatcher: function() {
                    delete this.propertyWatcher;
                    var a = Object.create(null);
                    return $.emitter(a, !0), $.defineProperty(this, "propertyWatcher", {
                        value: a,
                        configurable: !1,
                        writable: !1
                    }), a
                },
                asType: function(a, b) {
                    return $.typeinfo(a).coerce(b)
                },
                toDomWrap: function(a) {
                    return E(a)
                },
                toDomEl: function(a) {
                    return E.toEl(a)
                },
                parse: function(a, b) {
                    return $.parseExpr(a, b)
                },
                isFn: function(a) {
                    return $.isFunction(a)
                },
                asPredicate: function(a, b) {
                    return b = b || {}, b.as = "boolean", _functionize(a, b)
                },
                asIter: function(a, b) {
                    return b = b || {}, b.as = "iterator", _functionize(a, b)
                },
                fnize: (function () {
                    var __cache={}
                    function createScopedfn(obj,fnnm,args){
                        if (obj && typeof(obj[fnnm]) == "function") {
                            if (args && args.length) {
                                return function (nm, a) {
                                    this[nm].apply(this, a.concat([].slice.call(arguments,3)))
                                }.bind(obj, fnnm, args)
                            }
                            return obj[fnnm].bind(obj)
                        }
                    }
                    function cacheAndReturn(str,fn,optns){
                        if(!(optns && (optns.context||optns.nocache))){
                            __cache[str]=fn
                        }
                        return fn;
                    }
                    return function fnize(fn0, opns0) {
                        var res = null, optns = {}, fn = fn0
                        if (opns0) {
                            if (opns0.context || opns0.ctx) {
                                optns.scope = opns0.context || opns0.ctx;
                                delete optns.ctx;
                                delete optns.context
                            }
                            if (typeof(opns0) == "object") {
                                if (Object.getPrototypeOf(opns0) === Object.prototype) {
                                    optns = opns0
                                }
                                else {
                                    optns.scope = opns0
                                }

                            }
                        }
                        if (typeof(fn0) == "function") {
                            return fn0
                        }
                        if (fn instanceof RegExp) {
                            return RegExp.prototype.test.bind(fn)
                        }
                        if (typeof(fn) == "string") {
                            if (  __cache[fn] && !optns.scope) {
                                return __cache[fn]
                            }
                            var fnnm = fn.trim(), args = []
                            if (fnnm.indexOf("function") == 0) {
                                return (1, eval)("(" + fnnm + ")");
                            }
                            var arr = fnnm.match(/^([\w\.\_]+)\(([^\)]*)\)/)
                            if (arr && arr.length>1) {
                                fnnm = arr[1]
                                args = String(arr[2] || "").split(",").map(function (a) {
                                    return a.trim()
                                })
                            }
                            if (fnnm == "dump" || fnnm == "print") {
                                fnnm = "log"
                            }
                            var fntn=createScopedfn(console,fnnm,args)||createScopedfn(optns.scope,fnnm,args)||createScopedfn(self,fnnm,args);
                            if(fntn){
                                return cacheAndReturn(fn0,fntn,optns);
                            }


                            var strarr = ["Math", "String", "Number", "window", "Object", "document"];
                            [Math, String, Number, window, Object, document].forEach(
                                function (obj, i) {
                                    if (fnnm in obj && typeof(obj[fnnm]) == "function") {
                                        if (fnnm != fn) {
                                            var ex = Util.inspectExpr(fn) || {}, vars = ex.vars || [];
                                            if (!vars.length) {
                                                //vars.push ("it")
                                                res = Function(vars.join(","), "return " + (strarr[i] + "." + fn))
                                            } else {
                                                // res=obj[fn].bind (obj)
                                            }
                                        }
                                    }
                                }
                            );
                            if (!res && this && this !== Function && this !== self && fn in this && typeof(this[fn]) == "function") {
                                res = this[fn].bind(this)
                            }
                            optns.context = optns.context || optns.scope
                            if (!res && optns.context && optns.context.nodeType && fn in Element.prototype) {
                                res = Element.prototype[fn].bind(optns.context)
                            }
                            if (!res) {
                                try {
                                    /*if((1,eval)(fn) ){
                                     res=Function("it",fn.replace(/\@\.?/g,"this."))
                                     } */
                                } catch (e) {
                                }
                            }
                            if (res) {
                                return cacheAndReturn(fn0,res,optns);
                             }
                        }


                        if (arguments.length > 2) {
                            optns = {args: [].slice.call(arguments, 1)}
                        }
                        else if (typeof(opns0) == "boolean") {
                            optns = {force: true}
                        }
                        else if (Array.isArray(opns0)) {
                            optns = {args: opns0}
                        }
                        else if (opns0 && typeof(opns0) != "object") {
                            optns = {args: [opns0]}
                        }
                         if (optns.asIterator) {
                            optns.args = optns.args || []
                            if (!optns.args.length) {
                                optns.args.push("it", "i", "ctx")
                            }
                            if (!optns.args.length < 2) {
                                optns.args.push("i")
                            }
                        }
                        optns = optns || {}
                        var ctx = optns.context || self, fnbdy
                        if (typeof(fn) == "string") {
                            var str = fn.replace(/^\s*FN\|/, "").trim()
                            if (  __cache[str] && !optns.context) {
                                return __cache[str]
                            }
                            if (optns.args && !Array.isArray(optns.args)) {
                                optns.args = String(optns.args).split(/\s*,\s*/)
                            } else if (!Array.isArray(optns.args)) {
                                optns.args = []
                            }
                            if (/^\(?function/.test(str)) {
                                str = str.trim()
                                str = str.replace(/^\(|\)$/g, "").trim()
                                res = (1, eval)("(" + str + ")")
                            } else if (!/[^\w_]/.test(str)) {
                                if (str.indexOf(".") > 0) {
                                    res = str.split(/\./).reduce(function (m, it) {
                                        return m ? m[it] : null
                                    }, self);
                                }
                            }
                            if (!((typeof(res) == "function") || fnbdy)) {
                                if (str == "it" || str == "@") {
                                    fnbdy = "it"
                                }
                                else if (optns.asboolean && !/\D/.test(str)) {
                                    fnbdy = "it == " + str;
                                }
                                else if (str.charAt(0) == ".") {
                                    fnbdy = "it" + str
                                }
                                else if (/^([><!][=]?|[\+\*\%\/]|(\- )|=|(\-\d))/.test(str)) {
                                    fnbdy = "it " + str
                                }
                                else if (/^[\w_]+$/.test(str)) {
                                    if (!optns.asboolean && /^[a-z]/i.test(str)) {
                                        if(optns.args.indexOf(str)>=0){
                                            res=Function(optns.args.join(","),"return "+str)
                                            res.vars=optns.args.slice();
                                        }
                                        else{fnbdy = "it." + str;}
                                    } else if (optns.asboolean) {
                                        fnbdy = "it =='" + str + "'";
                                    }
                                } else if (optns.force) {
                                    //fnbdy = str
                                }
                            }

                            if (!(res || fnbdy)) {
                                if (/^\s*(\([^\)]*\))?\s*\-\>/.test(str)) {
                                    var arr = str.split(/\-\>/), args = "", bdy = arr.pop().trim();
                                    if (arr.length) {
                                        args = arr[0].replace(/[\(\)\s]+/g, "")
                                    }
                                    if (args) {
                                        if (!optns.args) {
                                            optns.args = args.split(/\s*,\s*/)
                                        } else {
                                            optns.args.push(args)
                                        }
                                    }
                                    res = Function(args, bdy.indexOf("return") >= 0 ? bdy : "return " + bdy)

                                } else if (/^[jc]s:]/.test(str)) {
                                    var data = str.substr(4)
                                    if (str.charAt(0) == "j") {
                                        res = Function(data)
                                    }
                                    else {
                                        if (typeof(CoffeeScript) != "undefined") {
                                            var cx = CoffeeScript;
                                            var code = cx.compile(data, {bare: "on"});
                                            code = code.replace(/\n\s*([\w]+);\s*$/, "\nreturn $1;").replace(/return\s+return/, "return ");
                                            res = Function(code)
                                        }
                                        else if (typeof(ZModule) != "undefined") {
                                            var pr = Promise.deferred()
                                            ZModule.resource("CoffeeScript").then(function (cx) {
                                                var code = cx.compile(data, {bare: "on"});
                                                code = code.replace(/\n\s*([\w]+);\s*$/, "\nreturn $1;").replace(/return\s+return/, "return ");
                                                res = Function(code)
                                                pr.resolve(res)
                                            })
                                            if (!res) {
                                                return pr
                                            }
                                        }
                                    }
                                } else {
                                    if(/\$([a-z][\w_]*)/.test(str) && typeof($.template) != "undefined"){
                                             optns = optns || {}
                                            optns.scope = ctx
                                            res = $.template(str, optns).fn
                                     }
                                    else if (typeof($.parseExpr) != "undefined") {
                                        optns = optns || {}
                                        optns.scope = ctx
                                        res = $.parseExpr(str, optns).fn
                                    }
                                }
                            }
                            if (!res && fnbdy) {

                                fnbdy = fnbdy.replace(/^@\.?/g, "it.")
                                    .replace(/([^=])=([^=])/g, "$1 == $2")
                                    .replace(/\sand\s/g, " && ")
                                    .replace(/\sor\s/g, " || ")
                                    .replace(/``/g, '"').replace(/`/g, "'").replace(/([><!~\^\$])\s+\=/g, "$1=").replace(/([><~\^\$])\s*==/g, "$1=")
                                fnbdy = ((optns.addreturn || !/\sreturn/.test(fnbdy)) ? "return " : "") + fnbdy
                                var a = optns.args || []
                                if (a.indexOf("it") == -1 && (/\bit\b/.test(fnbdy))) {
                                    if (!a.length) {
                                        a.push("it")
                                    }
                                    else {
                                        fnbdy = "var it=this;" + fnbdy
                                    }
                                }
                                try {
                                    res = Function(a.join(","), fnbdy)
                                } catch (e) {
                                }
                            }

                        }
                        if (typeof(res) != "function" && optns.force) {
                            res = optns.boolean ?
                                (function (a) {
                                    return function (it) {
                                        return a == it
                                    }
                                }) :
                                (function (a) {
                                    return function () {
                                        return a
                                    }
                                })(fn)

                        }
                        //if(!res){ var t;try{t=eval("("+fn+")")} catch(e){};if(typeof(t)=="function"){res=t}}
                        return cacheAndReturn(fn0,res,optns);

                     }
                })(),
                toFn: function(a, b) {
                    return "string" == typeof b && (b = {
                        as: b
                    }), b = b || {}, _functionize(a, b)
                },
                async: function(a, b) {
                    var c = $.makeArray(arguments, 2),
                        d = this == self || this == self.$ ? null : this;
                    return b = Number(b) || 0,
                        function() {
                            var e = this == self || this == self.$ ? d : this,
                                f = c.concat($.makeArray(arguments)),
                                g = function(b) {
                                    a.apply(this, b)
                                }.bind(e, f);
                            return 0 === b && self.setImmediate ? self.setImmediate(g) : setTimeout(g, b)
                        }
                },
                throttle:function(callback, cnfg) {
                    return (function (callable, config) {

                        var _ = {};
                        if ($.isPlain(config)) { _ = $.clone(config) }
                        else if ($.isNumber(config)) {    _.delay = config;  }
                        else if (typeof(config) == "boolean") { _.topend = config;  }

                        if (!_.topend && (_.topEnd ||_.immediate || _.immidiate || _.immi)) {
                            _.topend =  true
                        }
                        if(!_.topend&&!_.tailend){_.tailend=true}
                        var fn=callable,
                            delay = Math.max($.isNumber(_.delay) ? _.delay : 200, 0),
                            topend = !!_.topend,
                            tailend=!!(_.tailend||_.tailEnd||_.tail),tailendPending=null,
                            val = _.defaultValue,timer= 0,preargs=[].slice.call(arguments,2);
                        function _runner() {
                            timer = null;
                            if(tailendPending ){
                                var data=tailendPending ;tailendPending=null;
                                val = fn.apply(data[0], data[1])
                                //timer = setTimeout(_runner, delay)
                            }
                        }
                        function throttled() {
                            var args=preargs.concat([].slice.call(arguments))

                            if(tailend){
                                tailendPending=[this, args.slice()]
                                //tailend=null;
                             }
                            if (!timer) {
                                if ( topend === true) {
                                    val = fn.apply(this, args)
                                    //topend = null;
                                }
                                timer = setTimeout(_runner, delay)

                            }
                            return val
                        };
                        return throttled
                    })(callback, cnfg)
                } ,
                Quebk: function() {
                    var a, b = null,
                        c = [].concat.apply([], $.makeArray(arguments)),
                        d = c[c.length - 1];
                    d && "object" == typeof d ? (b = d, c.pop()) : b = {}, a = b.context || null;
                    var e = function(b, c) {
                        return new Promise(function(c) {
                            return function(d, e) {
                                try {
                                    var f = c.call(a, b);
                                    Promise.cast(f).then(d)
                                } catch (g) {
                                    e(g)
                                }
                            }
                        }(c))
                    }, f = function g(a) {
                        c.length ? (b.progress && b.progress({
                            remaining: c.length
                        }), e(a, c.shift()).then(g)) : b.callback && b.callback.call(b.context, a)
                    };
                    return {
                        add: function(a) {
                            "function" == typeof a && c.push(a)
                        },
                        start: function(a) {
                            f(a)
                        }
                    }
                },
                Que: function() {

                    return (function (list) {
                        var optns = {}, ctx
                        if ($.isPlain(list[list.length - 1])) {
                            optns = $.clone(list.pop());
                        }
                        list = list.filter(function (a) {
                            return typeof(a) == "function"
                        })
                        var delay = Math.max($.isNumber(optns.delay) ? optns.delay : 0, 0)
                        ctx = optns.context || null

                        var lastResult, _state = -1, includeLastResult = optns.includeLastResult == null || includeLastResult === true

                        function queued() {
                            if (_state < 0) {
                                return
                            }
                            _state = 1;
                            if (arguments.length === 1) {
                                lastResult = arguments[0]
                            }
                            if (list.length) {
                                var data = list.shift(),fn,a=[]
                                if(Array.isArray(data)){fn= data[0];a=data[1]||[]}
                                else {fn= data}
                                a = includeLastResult ? [lastResult].concat(a) : a

                                var result = fn.apply(ctx, a)
                                _state = 0
                                if (result && typeof(result.then) == "function") {
                                    result.then(queued, queued)
                                } else {
                                    lastResult = result;
                                    setTimeout(queued, delay)
                                }
                            }
                        }

                        return {
                            add: function (fn, args) {
                                if (typeof(fn) == "function") {
                                    list.push([fn, (typeof(args) == "object" && args.length != null) ? [].slice.call(args) : [args]])
                                }
                                if (_state > 0) {
                                    queued()
                                }
                            },
                            start: function (a) {
                                _state = 1;
                                if (a != null) {
                                    queued(a)
                                }
                                queued();
                            },
                            stop: function (a) {
                                list.length = 0;
                            }
                        }
                    })([].slice.call(arguments))
                }
                ,
                debounce: function() {
                    function a(a) {
                        return [].slice.call(a)
                    }
                    var b = "function" == typeof setImmediate ? setImmediate : null;
                    return function(c, d) {
                        function e() {
                            i = null, l = Date.now() + h;
                            var a = k.shift();
                            a && (m.apply(a[0], g.concat(a[1])), k.length && (i = setTimeout(e, h)))
                        }
                        var f = {};
                        $.isPlain(d) ? f = $.clone(d) : $.isNumber(d) ? f.delay = d : "boolean" == typeof d && (f.topend = d), (f.topend || f.immediate || f.immidiate || f.immi) && (f.topend = f.tailend === !1);
                        var g = [].slice.call(arguments, 2),
                            h = Math.max($.isNumber(f.delay) ? f.delay : 200, 0),
                            i = ( !! f.topend, null),
                            j = f.defaultValue,
                            k = [],
                            l = 0,
                            m = c,
                            n = function() {
                                k.push([this, a(arguments)]);
                                var c = Math.max(l - Date.now(), 0);
                                return i || (i = !c && b ? b(e) : setTimeout(e, c)), j
                            };
                        return n
                    }
                }(),
                debounce2: function(a, b) {
                    var c = {};
                    "number" == typeof b ? c.delay = b : b && "object" == typeof b && Object.keys(b).forEach(function(a) {
                        c[a] = b[a]
                    }), (b === !0 || c.topend || c.immediate || c.immidiate || c.immi) && (c.topend = !(c.tailend === !0)), c.delay = isNaN(c.delay) || 1 / 0 === c.delay || c.delay === -1 / 0 ? 500 : Number(c.delay || "0") || 0;
                    var d = $.makeArray(arguments, 2),
                        e = c.topend ? 1 : 0,
                        f = Math.max(0, c.delay) || 500,
                        g = a,
                        h = null,
                        i = [],
                        j = c.ctx || (this == self || this == self.$ ? null : this),
                        k = Date.now() + (e ? 0 : f);
                    return function() {
                        i.push({
                            a: d.concat($.makeArray(arguments)),
                            c: this == self || this == self.$ ? j : this
                        }), h || (h = setTimeout(function a() {
                            var b, c = Date.now();
                            return k - c > 50 ? void(h = setTimeout(a, k - c)) : (b = i.shift(), b && b.a && g.apply(b.c, b.a), k = c + f, h = null, e ? (e = 0, h = setTimeout(a, f)) : i.length && setTimeout(a, f), void(e = 0))
                        }, 1 === e ? 0 : f))
                    }
                },
                asCallable: function(a, b) {
                    var c = [].concat.apply([], [b || ""]);
                    if ("function" == typeof a) return a;
                    if ("string" == typeof a) {
                        var d = c.indexOf("it") ? "it" : "this",
                            e = /\sreturn/m.test(a) ? "" : "return ";
                        return Function(b.join(","), e + a.replace(/@/g, d + "."))
                    }
                    return function() {
                        return this.val
                    }.bind({
                            val: a
                        })
                },
                 proxy:function(fn,scope){return fn.bind(scope)},
                makeProxy: function(a) {
                    var b = a,
                        c = {}, d = [],
                        e = arguments[1],
                        f = arguments[2] === !0,
                        g = arguments[4],
                        h = arguments[3] === !0 ? !0 : !1;
                    for (g = "function" != typeof g ? function(a) {
                        return a
                    } : g, null == e && (e = Object.create(null)), e.___proto || ($.defineProperty(e, "___proto", {
                        value: a,
                        writable: !1,
                        enumerable: !1,
                        configurable: !1
                    }), $.defineProperty(e, "valueof", {
                        value: function() {
                            return this.___baseel
                        },
                        writable: !1,
                        enumerable: !1,
                        configurable: !0
                    })); b && ("object" == typeof b || "function" == typeof b) && b != Object.prototype;) {
                        for (var i, j = 0, k = Object.keys(b), l = k.length; i = k[j], l > j; j++)~ d.indexOf(i) || i in e || d.push(i);
                        b = Object.getPrototypeOf(b)
                    }
                    for (var i, j = 0, k = d, l = k.length; i = k[j], l > j; j++)
                        if ("string" == typeof i && "el" != i && 0 != i.indexOf("__")) {
                            var m, n = Object.getOwnPropertyDescriptor(a, i) || {}, o = function() {};
                            "function" == typeof a[i] || "value" in n && "function" == typeof n.value ? ! function(a, b, c) {
                                var d = Function.prototype.apply.bind(b);
                                m = f ? h ? function() {
                                    for (var a, b = [], c = [].map.call(arguments, o), e = 0, f = this, g = f.length; g > e; e++)(a = f[e]) && "object" == typeof a && b.push(d(a.___proto, [a].concat(c)));
                                    return b
                                } : function() {
                                    return d(this.___proto, [this].concat([].map.call(arguments, o)))
                                } : h ? function() {
                                    for (var a, b = [], c = [].map.call(arguments, o), e = 0, f = this, g = f.length; g > e; e++)(a = f[e]) && "object" == typeof a && b.push(d(o(a), c));
                                    return b
                                } : function() {
                                    return d(o(this), [].map.call(arguments, o))
                                }, m._name = a;
                                for (var e, g = 0, i = Object.keys(b), j = i.length; e = i[g], j > g; g++) e && (m[e] = b[e]);
                                c[a] = {
                                    value: m,
                                    enumerable: !! n.enumerable
                                }
                            }(i, "function" == typeof a[i] ? a[i] : n.value, c) : ! function(a, b) {
                                var c = a,
                                    d = h ? function(a) {
                                        [].forEach.call(this, function(b) {
                                            b && (b[c] = a)
                                        })
                                    } : function(a) {
                                        (this.___baseel || this.___proto || {})[c] = a
                                    }, e = h ? function() {
                                        return [].map.call(this, function(a) {
                                            return (a || {})[c]
                                        })
                                    } : function() {
                                        return (this.___baseel || this.___proto || {})[c]
                                    };
                                b[c] = {
                                    get: e,
                                    set: d,
                                    enumerable: !0
                                }
                            }(i, c)
                        }
                    return Object.defineProperties(e, c), e
                },
                mutationRecord: function(name, value, oldValue, object) {
                    return {
                        name: name,
                        value: value,
                        newValue: value,
                        oldValue: oldValue,
                        object: object,
                     }
                },
                mutationRecordGen: function(object, qname) {
                    return function(name, value, oldValue) {
                        return {
                            name: name,
                            value: value,
                            newValue: value,
                            oldValue: oldValue,
                            object: object,
                            qname: qname
                        }
                    }
                },
                mutationRecordGenWithName: function(object, name, qname) {
                    qname = qname || name
                    var cachedOldvalue=null
                    return    function(value, oldValue) {
                             var toret= {
                                name: name,
                                value:  value,
                                newValue: value,
                                oldValue: cachedOldvalue,
                                object: object,
                                qname: qname
                            }
                        if(arguments.length>1){
                            toret.oldValue=cachedOldvalue = arguments[1];
                        } else{cachedOldvalue=value}
                        return toret;
                        }
                },
                resolveProperty: function(a, b, c) {
                    if (1 == arguments.length && "string" == typeof a && (b = a, a = self), !a || "object" != typeof a || !b || "string" != typeof b) return null;
                    if ($.isElement(a) || a.isDomWrap) return "value" === b ? $d.val(a) : $d.prop(a, b);
                    var d = a,
                        e = b;
                    if ("string" == typeof b && b.indexOf(".") > 0) {
                        var f = b.split(".");
                        e = f.pop(), d = f.reduce(function(a, b) {
                            return a && "object" == typeof a ? $.resolveProperty(a, b) : null
                        }, a)
                    }
                    if (d && "object" == typeof d) {
                        if (!c) {
                            if ("function" == typeof d.get) return d.get(e);
                            if ("function" == typeof d.getItem) return d.getItem(e)
                        }
                        return d[e]
                    }
                    return null
                },


                updateProperty: function(a, b, c, d) {
                    if (a) {
                        if ($.isElement(a) || a.isDomWrap) return "value" === b ? $d.val(a, c) : $d.prop(a, b, c);
                        var e = a,
                            f = b;
                        if ("string" == typeof b && b.indexOf(".") > 0) {
                            var g = b.split(".");
                            f = g.pop(), e = g.reduce(function(a, b) {
                                return a && "object" == typeof a ? (null == a[b] && (a[b] = {}), a[b]) : null
                            }, a)
                        }
                        if (e && "object" == typeof e) {
                            if (!d) {
                                if ("function" == typeof e.set) return e.set(f, c);
                                if ("function" == typeof e.setItem) return e.setItem(f, c)
                            }
                            e[f] = c
                        }
                        return a
                    }
                },
                destroyObject:function(obj){
                    if(!obj){return}
                    var data=$.objectMap.get(obj,"_watcher_")
                     if (data  && data.props ) {
                       for(var name in data.props){
                           if(data.props[name] && data.props[name].length){
                               for(var i= 0,l=data.props[name],ln= l.length;i<ln;i++) {
                                   if(l[i] && l[i].off) {
                                       l[i].off()
                                   }
                               }
                           }
                       }


                     }
                    $.objectMap.remove(obj);
                  },
                watchProperty0: (function ( ) {
                    var fncache={},counter= 1,isplain= $.isPlain
                    defHandlone=function(rec,ctx){
                        this[0] && this[0].fn && this[0].fn.call(ctx,rec)
                    },
                        defHandle=function( rec){

                            var l=this, ln= l.length,val=(isplain(rec) && ("name" in rec && ("newValue" in rec||"oldValue" in rec)))?(rec.value==null?rec.newValue:rec.value):rec
                            if(ln==1){
                                return this[0].fn && this[0].fn ( val)
                            }
                            for(var i= 0;i<ln;i++){
                                if(l[i] && l[i].fn){
                                    l[i].fn ( val)
                                }
                            }
                        }
                    function _onchange( obj, prop, optns) {
                        isplain||(isplain= $.isPlain);
                        var fn=typeof(optns)=="function"?optns:optns.validator,off=null
                        if(!(obj && ( typeof(obj)=="function" || typeof(obj)=="object"))){return}
                        optns=optns||{}
                        var data=$.objectMap.getOrCreate(obj,"_watcher_"),handle
                        if(!data.props){data.props={}}
                        var handles=data.props[prop]||(data.props[prop]=[]);
                        var curr=handles.find(function(it){return  (it.id && it.id===optns.id )})
                        if(curr  ){
                            //if(typeof(fn)=="function"){curr.fn=fn;}

                        } else{
                            handles.push(curr= $.extend({fn:fn},optns))
                            curr.prop=prop
                            curr.off=function(){
                                var idx=handles.indexOf(curr)
                                if(idx>=0){handles.splice(idx,1)}
                                if(!handles.length){handles.off()}
                            }
                        }
                        if(!handles.handle) {
                            handles.handle = defHandle.bind(handles )
                            handle = handles.handle
                            var ret, args = optns.args
                            if (obj.nodeType) {
                                $d.onAttach(obj, function (dom) {

                                    if (prop == "value" && obj.type) {
                                        ret = $d.on(obj, "change", function () {
                                            handle(  $d.val(this) )
                                        })
                                        handles.off = $d.off.bind($d, obj, handle)
                                    }
                                    else {
                                        ret = $d.watchMutation(dom, prop, handle)
                                        handles.off = $d.watchMutation.bind($d, obj, false)
                                    }
                                })

                            }
                            else if (typeof(obj.getController) == "function" && obj.getController().hasMethod(prop)) {
                                var res = obj.getController().invoke(prop, $.isArray(args) ? args : (args ? [args] : []))
                                if (res) {
                                    if (res.isPromise) {
                                        res.then(handle)
                                    } else {
                                        handle(res)
                                    }
                                }
                                else {
                                    ret = handle(res)
                                }
                            }
                            else if (typeof(obj.onchange) == "function") {
                                ret = obj.onchange(prop, handle, optns)
                                handles.off = obj.onchange.bind(obj, prop, false, handle)
                            }
                            else if (obj.properties) {
                                ret = obj.properties.onchange(prop, handle)
                                handles.off = obj.properties.onchange.bind(obj.properties, prop, false, handle)
                            } else if (typeof(obj.onpropertychange) == "function") {
                                ret = obj.onpropertychange(prop, handle, optns)
                                handles.off = obj.onpropertychange.bind(obj, prop, false, optns)
                            } else if (typeof(obj.on) == "function") {
                                ret = obj.on(prop, handle, optns)
                                handles.off = obj.off.bind(obj, prop, false, optns)
                            } else {
                                ret = $.defineAccessors(obj, prop, optns)
                            }
                        }
                        if(prop in obj && obj[prop]!=null ){
                            var val=obj[prop]
                            fn( val )
                        }
                        return handles
                    }
                    function watchProperty(object, name, onchange, optns0) {
                        var optns = {enumerable: true, configurable: true}
                        if (optns0 === true) {
                            optns.enumerable = true
                        }
                        else if (optns0 && typeof(optns0) == "object") {
                            $.extend(optns, optns0)
                        }

                        if (arguments[4] === true) { optns.configurable = true }
                        if(onchange===false) {
                            var data = $.objectMap.get (object, "watcher")
                            if (data  && data.props && data.props[name]) {
                                if(data.props[name].length){
                                    if(optns.id){
                                        var found=data.props[name].find(function(it){return it.id===optns.id&&it.prop===name})
                                        if(found){
                                            found.off(optns.id)
                                        }
                                    }
                                }
                            }
                            return;
                        }
                        if (arguments[5] === true) {  optns.noAsync = true  }
                        if(!optns.id){optns.id= $.UUID()}
                        if (!(object && ( typeof(name) == "string"))) {  return }
                        if (typeof(object) != "object" && typeof(object) != "function") {  object = Object(object) }
                        //if(!(name in object)){
                        var sti = self.setImmediate || (self.setImmediate = function (fn) { return setTimeout(fn, 0) })
                        if (optns.overwrite && name in object) {
                            try {
                                delete object[name]
                            } catch(e){
                                if(name in object){
                                    console.log("this property is not configurable",name )
                                    return
                                }
                            }
                        }
                        var ch = optns.noAsync === true ? onchange  : sti.bind(self, onchange.bind(object )), memo = optns.memo
                        var mrec=optns.recordGenerator||$.mutationRecordGenWithName(object,name)

                        function _valdispatcher(val) {
                            var mod=mrec( val )
                            if( mod.oldValue != mod.newValue) {
                                mod.memo=memo
                                ch(mod);
                                //if(typeof(nu)!="undefined" && val!=nu){val=mod.newValue=mod.value=nu}
                            }
                            return val;
                        }
                        var parsed;
                        if(/[^\w_\$\.]/.test(name)){
                            (function(obj,nm,optns,throttled){
                                parsed=/\$[a-z]+/.test(nm)?$.template(nm):$.parseExpr(nm)
                                if(parsed.vars){
                                    parsed.vars.forEach(function(k){
                                        _onchange(obj,k,{validator:function(){
                                            throttled( parsed(obj) )},id:optns.id })
                                    })
                                }
                            })(object,name,optns,$.throttle(_valdispatcher,{topEnd:true}));
                        }
                        else if(name.indexOf(".")>0){
                            var idseed=Date.now(),arr=name.split(".").map(function(a,i){return {name:a,handle:null,index:i,id:i+idseed,base:object,qname:name}});
                            arr.push({name:"__val__",term:true})
                            var _next=function _next(index,base){
                                var k, old, val,rec,argslength=arguments.length
                                if(argslength>1){
                                    val=arguments[1]
                                }

                                if(!arr[index]||arr[index].term){
                                    if(arr[index].base){
                                        var v1=$.resolveProperty(arr[index].base,arr[index].qname)
                                       //  _valdispatcher( val)
                                    }
                                     _valdispatcher( val)
                                } else {
                                    if (typeof(val) == "function") {
                                        val = val.call(this)
                                    }
                                    if (val && typeof(val) == "object") {
                                        arr[index].handle=_onchange(val, arr[index].name, {id:String(index + idseed),validator:_next.bind(val, index + 1) })
                                    }
                                }
                                return val
                            }
                            _next(0,  object )

                        } else{
                            _onchange(object, name, $.extend({validator:_valdispatcher},optns))
                        }
                        if(parsed){
                            try {
                                parsed(object)
                            } catch(e){}
                        }
                        return  object
                    }
                    return watchProperty
                })(),
                watchProperty : function() {
                    function a(a, b, d) {
                        c || (c = $.isPlain);
                        var e = "function" == typeof d ? d : d.validator;
                        if (a && ("function" == typeof a || "object" == typeof a)) {
                            d = d || {};
                            var f, g = $.objectMap.getOrCreate(a, "_watcher_");
                            g.props || (g.props = {});
                            var h = g.props[b] || (g.props[b] = []),
                                i = h.find(function(a) {
                                    return a.id && a.id === d.id
                                });
                            if (i || (h.push(i = $.extend({
                                    fn: e
                                }, d)), i.prop = b, i.off = function() {
                                    var a = h.indexOf(i);
                                    a >= 0 && h.splice(a, 1), h.length || h.off()
                                }), !h.handle) {
                                h.handle = defHandle.bind(h), f = h.handle;
                                var j, k = d.args;
                                if (a.nodeType) $d.onAttach(a, function(c) {
                                    "value" == b && a.type ? (j = $d.on(a, "change", function() {
                                        f($d.val(this))
                                    }), h.off = $d.off.bind($d, a, f)) : (j = $d.watchMutation(c, b, f), h.off = $d.watchMutation.bind($d, a, !1))
                                });
                                else if ("function" == typeof a.getController && a.getController().hasMethod(b)) {
                                    var l = a.getController().invoke(b, $.isArray(k) ? k : k ? [k] : []);
                                    l ? l.isPromise ? l.then(f) : f(l) : j = f(l)
                                } else "function" == typeof a.onchange ? (j = a.onchange(b, f, d), h.off = a.onchange.bind(a, b, !1, f)) : a.properties ? (j = a.properties.onchange(b, f), h.off = a.properties.onchange.bind(a.properties, b, !1, f)) : "function" == typeof a.onpropertychange ? (j = a.onpropertychange(b, f, d), h.off = a.onpropertychange.bind(a, b, !1, d)) : "function" == typeof a.on ? (j = a.on(b, f, d), h.off = a.off.bind(a, b, !1, d)) : j = $.defineAccessors(a, b, d)
                            }
                            if (b in a && null != a[b]) {
                                var m = a[b];
                                e(m)
                            }
                            return h
                        }
                    }

                    function b(b, c, d, e) {
                        function f(a) {
                            var b = m(a);
                            return b.oldValue != b.newValue && (b.memo = l, k(b)), a
                        }
                        var g = {
                            enumerable: !0,
                            configurable: !0
                        };
                        if (e === !0 ? g.enumerable = !0 : e && "object" == typeof e && $.extend(g, e), arguments[4] === !0 && (g.configurable = !0), d !== !1) {
                            if (arguments[5] === !0 && (g.noAsync = !0), g.id || (g.id = $.UUID()), b && "string" == typeof c) {
                                "object" != typeof b && "function" != typeof b && (b = Object(b));
                                var h = self.setImmediate || (self.setImmediate = function(a) {
                                        return setTimeout(a, 0)
                                    });
                                if (g.overwrite && c in b) try {
                                    delete b[c]
                                } catch (i) {
                                    if (c in b) return void console.log("this property is not configurable", c )
                                }
                                var j, k = g.noAsync === !0 ? d : h.bind(self, d.bind(b)),
                                    l = g.memo,
                                    m = g.recordGenerator || $.mutationRecordGenWithName(b, c);
                                if (/[^\w_\$\.]/.test(c))! function(b, c, d, e) {
                                    j = /\$[a-z]+/.test(c) ? $.template(c) : $.parseExpr(c), j.vars && j.vars.forEach(function(c) {
                                        a(b, c, {
                                            validator: function() {
                                                var res=e(j(b))
                                                 return res
                                            },
                                            id: d.id
                                        })
                                    })
                                }(b, c, g, f,$.throttle(f, {  topend: !0,  delay: 10 }));
                                else if (c.indexOf(".") > 0) {
                                    var n = Date.now(),
                                        o = c.split(".").map(function(a, b) {
                                            return {
                                                name: a,
                                                handle: null,
                                                index: b,
                                                id: b + n
                                            }
                                        });
                                    o.push({
                                        name: "__val__",
                                        term: !0
                                    });
                                    var p = function s(b) {
                                        var c, d = arguments.length;
                                        return d > 1 && (c = arguments[1]), !o[b] || o[b].term ? f(c) : ("function" == typeof c && (c = c.call(this)), c && "object" == typeof c && (o[b].handle = a(c, o[b].name, {
                                            id: String(b + n),
                                            validator: s.bind(c, b + 1)
                                        }))), c
                                    };
                                    p(0, b)
                                } else a(b, c, $.extend({
                                    validator: f
                                }, g)); if (j) try {
                                    j(b)
                                } catch (i) {}
                                return b
                            }
                        } else {
                            var q = $.objectMap.get(b, "watcher");
                            if (q && q.props && q.props[c] && q.props[c].length && g.id) {
                                var r = q.props[c].find(function(a) {
                                    return a.id === g.id && a.prop === c
                                });
                                r && r.off(g.id)
                            }
                        }
                    }
                    var c = $.isPlain;
                    return defHandlone = function(a, b) {
                        this[0] && this[0].fn && this[0].fn.call(b, a)
                    }, defHandle = function(a) {
                        var b = this,
                            d = b.length,
                            e = c(a) && "name" in a && ("newValue" in a || "oldValue" in a) ? null == a.value ? a.newValue : a.value : a;
                        if (1 == d) return this[0].fn && this[0].fn(e);
                        for (var f = 0; d > f; f++) b[f] && b[f].fn && b[f].fn(e)
                    }, b
                }(),
                defineAccessors: function() {
                    function a(a, b, c, d) {
                        var e = 0,
                            f = a,
                            g = c,
                            h = "function" == typeof b ? b : function(a, b, c) {
                                return c
                            }, i = d.set,
                            j = d.get,
                            k = Object.is;
                        return {
                            get: null === j ? function() {
                                return g
                            } : function() {
                                if (1 === e) return g;
                                e = 1;
                                try {
                                    g = j()
                                } catch (a) {
                                    console.log("error getter:")
                                } finally {
                                    e = 0
                                }
                                return g
                            },
                            set: function(a) {
                                if (1 !== e && !k(g, a)) {
                                    e = 1;
                                    try {
                                        g = h(f, g, a), null !== i && i(g)
                                    } catch (b) {
                                        console.error("error setter:"   )
                                    } finally {
                                        e = 0
                                    }
                                }
                            }
                        }
                    }
                    return function(b, c, d) {
                        d = d || {}, "function" == typeof d && (d.validator = d);
                        var e = $.getPropertyDescriptor(b, c) || {};
                        if (e && e.configurable === !1) {
                            if (d.quiet || null == d.quiet) return;
                            throw "property " + c + " is not configurable"
                        }
                        var f;
                        e.get = "function" != typeof e.get ? null : e.get.bind(b), e.set = "function" != typeof e.set ? null : e.set.bind(b), f = "value" in e ? e.value : b[c], delete b[c];
                        var g = a(c, d.validator, f, e, b);
                        return g.configurable = null == d.configurable ? e.configurable : !! d.configurable, g.enumerable = null == d.enumerable ? !0 : !! d.enumerable, delete g.writable, $.defineProperty(b, c, g), g
                    }
                }(),
                 defineLazyProperty: function (holder, nm, propconfig) {
                     var slf = this
                     if ($.isArray(nm)) {
                         nm.forEach(function (it) {
                             this.defineLazyProperty(holder, it, propconfig)
                         }, slf);
                         return
                     }
                     if(nm in holder){  delete holder[nm]  }
                     if(nm in holder){  return }

                     (function(config,object,name){
                         var cnfig={name:name,descriptor:{configurable:config.configurable,enumerable:!!config.enumerable,writable:!!config.writable}};
                         cnfig.provider = typeof(config) == "function" ? config : config.provider ? (config.provider || config.provider.get) : null

                         if (typeof(cnfig.provider) != "function") {
                             cnfig.provider = null;
                         }
                         function redefine(v){
                             var v=arguments.length?arguments[0]:cnfig.provider?cnfig.provider.call(this,cnfig.name):null
                             if(v==null){return}
                             delete this[cnfig.name];
                             cnfig.descriptor.value=v
                             $.defineProperty(this,cnfig.name,cnfig.descriptor)
                             return v
                         };
                         $.defineProperty(object,name,{
                             get:redefine, set:redefine,configurable:true,enumerable:!!config.enumerable
                         })
                     })(propconfig||{},holder,nm);
                     return holder;
                 },
                trompoline: function() {
                    return function() {}
                },
                throttleOnce: function() {
                    function a(a, b) {
                        function c() {
                            var d = j();
                            e = null, f && f > d ? e = setTimeout(c, f - d + b) : a.apply(i, h)
                        }

                        function d() {
                            i = this, h = g.concat([].slice.call(arguments)), f = j() + b, e = e || setTimeout(c, 2 * b)
                        }
                        var e = null,
                            f = 0,
                            g = [].slice.call(arguments, 2),
                            h = [],
                            i = null,
                            j = Date.now || function() {
                                    return +new Date
                                };
                        return d
                    }
                    return a.apply(this, arguments)
                },
                throttleq: function(a, b) {
                    var c = {};
                    "number" == typeof b ? c.delay = b : b && "object" == typeof b && Object.keys(b).forEach(function(a) {
                        c[a] = b[a]
                    });
                    var d, e = !1,
                        f = [],
                        g = c.tailend;
                    return (b === !0 || c.topend || c.immediate || c.immidiate || c.immi) && (e = c.tailend === !1), d = isNaN(c.delay) || 1 / 0 === c.delay || c.delay === -1 / 0 ? 500 : Number(c.delay || "0") || 0, d = Math.max(0, d) || 50, f = [].slice.call(arguments, 2),
                        function(a, b) {
                            function c() {
                                if (h.a) {
                                    var c = h.a.slice();
                                    h.a = null, e = a.apply(h.c, c), d(b.tailend)
                                }
                            }

                            function d(a) {
                                g = setTimeout(function() {
                                    g = null, a && c()
                                }, b.delay)
                            }
                            var e = null,
                                f = 0,
                                g = null,
                                h = {
                                    a: null
                                };
                            return function() {
                                return h.__id = ++f, (b.tailend || !g) && (h.a = b.initargs.concat([].slice.call(arguments)), h.c = this == self || this == self.$ ? b.ctx : this), g || (1 == f && b.topend ? c() : d(!0)), e
                            }
                        }(a, {
                            delay: d,
                            initargs: f,
                            tailend: g,
                            topend: e,
                            ctx: c.ctx || (this == self || this == self.$ ? null : this)
                        })
                },
                getMethods: function(a, b) {
                    var c = {};
                    return Object.keys(c = getPropList(a, !b)).reduce(function(a, b) {
                        return c[b].isMethod && (a[b] = c[b]), a
                    }, {})
                },
                getProperties: function(a, b) {
                    var c = {};
                    return Object.keys(c = getPropList(a, !b)).reduce(function(a, b) {
                        return !c[b].isMethod && (a[b] = c[b]), a
                    }, {})
                },
                getAllProperties: function(a, b, c) {
                    return getPropList(a, b, c)
                },
                 capitalize: function(a) {
                     if(!(a && typeof(a)=="string")){return ""}
                     return a.charAt(0).toUpperCase()+ a.substr(1)
                 },
                titleize: function(a) {
                    if(!(a && typeof(a)=="string")){return ""}
                    return String(a).replace(/([a-z])([A-Z])/g, "$1 $2").replace(/[_\-]/g, " ").split(/\s+/).map(function(a) {
                        return a ? a.charAt(0).toUpperCase() + a.substr(1) : ""
                    }).join(" ").trim()
                },
                cursorPosition: function(a, b) {
                    b = b || {};
                    var c = document,
                        d = c.documentElement,
                        e = c.body;
                    return b.x = null != a.pageX ? a.pageX : a.clientX + (d.scrollLeft ? d.scrollLeft : e.scrollLeft), b.y = null != a.pageY ? a.pageY : a.clientY + (d.scrollTop ? d.scrollTop : e.scrollTop), b
                },
                LZW: {
                    encode: function(a) {
                        for (var b, b, c = {}, d = (a + "").split(""), e = [], f = d[0], g = 256, h = 1, i = d.length; b = d[h], i > h; h++) f + b in c ? f += b : (e.push(f.length > 1 ? c[f] : f.charCodeAt(0)), c[f + b] = g, g++, f = b);
                        e.push(f.length > 1 ? c[f] : f.charCodeAt(0));
                        for (var h = 0, j = e.length; j > h; h++) e[h] = String.fromCharCode(e[h]);
                        return e.join("")
                    },
                    decode: function(a) {
                        for (var b, c = {}, d = (a + "").split(""), e = d[0], f = e, g = [e], h = 256, i = 1, j = d.length; j > i; i++) {
                            var k = d[i].charCodeAt(0);
                            b = 256 > k ? d[i] : c[k] ? c[k] : f + e, g.push(b), c[h] = f + (e = b.charAt(0)), h++, f = b
                        }
                        return g.join("")
                    }
                },
            observe : function observe(obj1, optns, callback1) {
                if (!(obj1 && (typeof(obj1) == "object" || typeof(obj1) == "function"))) {
                    return
                }
                var options={}
                var remove=optns===false||callback1===false;
                if (typeof(optns) == "function") {
                    var tmp=callback1
                    callback1 = optns;
                    if(tmp!=null){optns=tmp}
                }

                if(optns===true){options.acceptList=["update"]}
                 else if ($.isPlain(optns)) {
                    Object.assign(options,optns)
                }
                if(!callback1 && options.callback){
                    callback1=options.callback;
                }
                if(options.onlyupdates){
                    options.acceptList=["update"]
                }
                var map=$.objectMap.getOrCreate(obj1,"_objobserver")

                if(!map.ondestroy){
                    map.ondestroy=function(obj){
                        Object.unobserve(obj,this.callback);
                        this.callback=null;
                    }
                }
                if(remove && typeof(callback1)=="function"){
                    if(map.listeners && map.listeners.indexOf(callback1)>=0){
                        map.listeners.splice(map.listeners.indexOf(callback1),1);
                        if(!map.listeners.length && map.callback){
                            Object.unobserve(obj1,map.callback);
                            map.callback=null;
                        }
                    }
                    return
                }

                optns=optns||{}


                if(!map.listeners){map.listeners=[]}
                if(!map.callback){
                    map.callback=function(recs){
                        var objmap=null
                        if(!Array.isArray(recs)){recs=[recs]}
                        var data=[]
                        if(recs && recs.length){
                            recs.forEach(function(a){
                                if(!(a && a.name)){return}
                                if(!objmap && a.object){
                                    objmap=$.objectMap.getOrCreate(a.object,"_objobserver")
                                }
                                var ret={type: a.type,name: a.name,object: a.object,oldValue: a.oldValue,newValue: a.newValue,value: a.newValue||a.value}
                                if(!(ret.type=="remove" || ret.type=="delete")){
                                    var val=ret.newValue||ret.value
                                    if(typeof(val) === "undefined" && ret.object){
                                        val= ret.object[ret.name];
                                    }
                                    ret.value=ret.newValue=val;
                                }
                                data.push(ret)
                            });
                            if(objmap  && objmap && objmap.listeners && map.listeners.length){
                                objmap.listeners.forEach(function(fn){
                                    typeof(fn)=="function" && fn(data);
                                })
                            }
                        }

                    }
                    if ($.is.element(obj1)) {
                        if($d.isFormInput(obj1) && optns=="change"){
                            return $d.on(obj1, "change",map.callback)
                        }
                        return $d.watchMutation(obj1, options, map.callback)
                    }
                    else {
                        Object.observe(obj1, map.callback,options.acceptList||undefined)
                        var noti=Object.getNotifier(obj1)||{}
                        if(typeof(noti.scan)!="function"){
                            noti.scan=function(){}
                        }
                    }
                }
                typeof(callback1)=="function" && map.listeners.indexOf(callback1)==-1 && map.listeners.push(callback1)
                return obj1
            },
            lazyInit:function(klass,initPars){
                return function(){
                    return new klass(initPars)
                }
            }

            })


            $.defineLazyProperty($, "typeInfo", {
                provider: function() {
                    return "undefined" != typeof Data && Data.TypeInfo ? Data.TypeInfo : null
                }
            })
        } catch (e) {
            $.handleEx(e)
        }
    })($);

//---Module linkedmap-----
$.iterable = function (iterator,config) {
    var _iterator=iterator
    config=config||{}
    var proto = {
        each:function(data,f, ctx){
            var fn= $.fnize(f)
            _iterator(data,fn, ctx||this)
        },
        keys:function(data ){
            var ret=[]
            _iterator(data,function(v,k){
                ret.push(k)
            });
            return ret
        },
        values:function(data ){
            var ret=[]
            _iterator(data,function(v,k){
                ret.push(v)
            });
            return ret
        },
        map:function(data,f ){
            var ret=[],fn= $.fnize(f,{args:["value","key"]})
            _iterator(data,function(v,k){
                ret.push(fn.call(this,v,k))
            },this);
            return ret
        },
        toJSON:function(data ){

            return JSON.stringify(this.toMap())
        },
        toMap:function(data){
            var ret={}
            _iterator(data,function(v,k){
                ret[k]=v
            });
            return ret
        },
        has:function(data,val ){
            var ret=false,tochk=config.keyAsValue
            _iterator(data,function(v,k){
                if(ret){return false}
                ret=(tochk?k:val) === k
            });
            return ret
        },
        size:function(data  ){
            var ret=0
            _iterator(data,function( ){ ret++ });
            return ret
        },
        entries: function (data) {
            var r = []
            _iterator(function (v, k) {
                var A=[k, v];
                A.key=k;A.value=v
                r.push(A)
            })
            return r
        },
        find : function (data,f ,returnaskeyval) {
            var ret=null,fn= $.fnize(f,{args:["value","key"]})
            _iterator(data,function(v,k){
                if(ret!==null){return}
                if(fn.call(this, v,k, data)){ret= returnaskeyval===true?{key:k,value:v}:v ; return config.returnToExit}
            }, this);
            return ret
        },
        some : function (data,f , ctx) {
            var ret=null,fn= $.fnize(f,{args:["value","key"]})
            _iterator(data,function(v,k){if(ret){return}
                if((ret= fn.call(this, v,k, data))){return config.returnToExit}
            }, ctx||this);
            return ret
        },
        overlay: function (data,nuentries) {
            var map={}
            if(Array.isArray(nuentries)){
                nuentries.forEach(function(a){
                    if(Array.isArray(a)){map[a[0]]=a[1]}
                    else if(a && a.key !=null){map[a.key]= a.value}

                })
            } else{map=nuentries}
            $.each(map,function(v,k){
                this.set(k,map[k])
            },data)
            return this

        },
        clear: function (data,nodestroy) {var I=this.__inner()
            _iterator(data,function(v,k){
                this.remove(k )
            },this);
            return this
        },
        every : function (data,f , ctx) {
            var ret=true,fn= $.fnize(f,{args:["value","key"]})
            _iterator(data,function(v,k){
                if(!ret){return}
                if(!(ret= fn.call(this, v,k, data))){return config.returnToExit}
            }, ctx||this);
            return ret
        },
        reduce : function (data ,f ) {
            var ths = data, Nill = {}, val = arguments.length == 2 ? Nill : arguments[2], ctx=arguments[3]||null
                ,fn= $.fnize(f,{args:["holder","value","key"]})
            _iterator(data,function(v,k){
                if (val === Nill) {
                    val = v
                } else {
                    val = fn.call(this, val, v, k, data)
                }
            }, ctx||this)
            return val
        } ,
        sortBy  : function (data ,f, ctx) {
            var tuples=[],mutate,fn= $.fnize(f,{args:["a","b"]})
            if(ctx===true){mutate=true;ctx=null}
            _iterator(data,function(v,k){
                tuples.push({key:k,value:v})
            }, ctx||this);
            tuples.sort(fn)
            if(mutate){
                 tuples.forEach(function(T,i){
                     T.index=i
                    this.set(T)
                },data)
                //this.overlay?this.overlay(tuples):(this.update?this.update(tuples):null);
                return data
            } else {
                return this.newInstance?this.newInstance(tuples):this
            }
        },
        findAll  : function (data ,f, ctx) {
            var ret=[] ,res,mutate,fn= $.fnize(f,{args:["value","key"]})
            if(ctx===true){mutate=true;ctx=null}
            _iterator(data,function(v,k){
                if(res = fn.call(this, v,k, data)){ret.push([k,v])}
            }, ctx||this);
            if(mutate){
                this.clear && this.clear();
                this.overlay?this.overlay(ret):(this.update?this.update(ret):null);
                return this
            } else {
                return this.newInstance?this.newInstance(ret):this
            }
         }


    }

    proto.filter=proto.findAll
    return proto
}
$.iterable.augment=function( proto,propname,dataprop){
    var _iterable=$.iterable()
    var P=propname||"___iterable";
    var D=dataprop||"this"
    for(var i=0,l=Object.keys(_iterable),ln=l.length;i<ln;i++){
        var k=l[i]
        if(typeof(_iterable[k])=="function" && !proto[k]){
            proto[k]=Function("var iter=this."+P+";return iter && iter['"+k+"'].apply(this,["+D+"].concat([].slice.call(arguments)))")
        }
    }
}
$.LinkedMap = (function () {
    var _setup = null, LinkedMap = null,returnToExit={}
    var _iterable=$.iterable(
        function(data,fn,ctx){
            var I = data.__inner();
            var v = I.V, l = I.K;
            for (var i = 0, ln = l.length; i < ln; i++) {
                if(fn.call(ctx, v[i], l[i], data )===returnToExit){break}
            }
        },
        {returnToExit:returnToExit}
    );
    function _getctor() {
        if (!LinkedMap) {

            _setup = true
            var proto = {
                _init: function (iterable) {
                    var __innerdata = {K: [], V: []};
                    this.__inner = function () {
                        return __innerdata
                    };
                    if (iterable && iterable.length) {
                        for (var i = 0, l = iterable, ln = l.length; i < ln; i++) {
                            if (l[i] && l[i].length === 2) {
                                this.set(l[i][0], l[i][1])
                            }
                        }
                    }
                },
                get: function (o) { var I=this.__inner()
                    return I.V[I.K.indexOf(o)]
                },

                set: function (o, val,idx) {var I=this.__inner()
                    var i, curr = null;
                    if(arguments.length==1 && o && typeof(o)=="object"){
                        if(Array.isArray(o)){
                            val=o[1]
                            idx=o[2]
                            o=o[0]
                        } else{
                            val= o.value
                            idx= o.index
                            o= o.key

                        }
                    }
                    if(typeof(idx)=="number" && isFinite(idx)){
                        i=idx;
                        if(i<0){i= Math.max(I.K.length+i,0)}
                        I.K[i] = o;
                    } else{
                        i = I.K.indexOf(o)
                    }

                    if (i < 0) {
                        i = I.K.push(o) - 1
                    } else {
                        curr = I.V[i]
                    }
                    I.V[i] = val;
                    return curr
                },
                remove: function (o) {var I=this.__inner()
                    var l = I.K, i = I.K.indexOf(o) , curr = null;
                    if (i >= 0) {
                        l.splice(i, 1);
                        curr = (I.V.splice(i, 1) || [])[0];
                    }
                    return curr;
                },
                "delete": function (o) {
                    return this.remove(o);
                }
            }
            $.iterable.augment(proto)

            LinkedMap = $.createClass(function LinkedMap(iterable) {
                if (!(this instanceof LinkedMap)) {
                    return new LinkedMap(iterable)
                }
                this.___iterable=_iterable;
                var obj = null;
                if (iterable && typeof(iterable) == "object") {
                    obj = iterable;
                    if (iterable instanceof LinkedMap) {
                        obj = iterable.entries()
                    } else if (!iterable.length) {
                        obj = [];
                        $.each(iterable, function (v, k) {
                            obj.push([k, v])
                        })
                    }
                }
                this._init(obj)
            },proto)

        }
        return LinkedMap
    }

    return function (data) {
        if (!_setup) {
            _getctor()
        }
        return new LinkedMap(data)
    }


})();

try {
    $.objectMap = new WeakMap();
} catch(e){$.handleEx(e);
    $.objectMap=(function() {
        var __data = [], ln = 0
        function _find(k, createifnot) {
            var ret = null
            if (k == null) { return }
            for (var i = 0; i < ln; i++) {
                if (__data[i].k === k) {
                    ret = __data[i];
                    ret.idx = i;
                    break;
                }
            }
            if (ret === null && createifnot === true) {
                ln = __data.push(ret = {k: k, v: null,idx:__data.length})
            } else if (ret && createifnot === false) {
                __data.splice(ret.idx, 1)
                ln = __data.length
                for (var i = 0; i < ln; i++) {__data[i].idx = i;}
                var old = ret.v

                delete ret.v;delete ret.o;  delete ret.k
                ret = null
                return old
            }
            return ret;
        }

        return {
            get: function (k) {
                return (_find(k) || {}).v
            },
            set: function (k, v) {
                if (v === null) { return _find(k, false) }
                var curr = _find(k, true);
                if(curr.v===v){return v}
                curr.o=curr.v; curr.v = v;
                return curr.o
            },
            has: function (k) {
                return _find(k);
            },
            "delete": function (k) {
                return _find(k, false);
            }
        }
     })()
 }
$.objectMap.getOrCreate = (function () {
    var memkey = null, memval = null,meminitkey=null
    return function (ctx, initkey) {
        if (ctx == null || !(typeof(ctx) == "object"|| typeof(ctx) == "function")) {
            throw new TypeError("Only objects for Weakmnap")
        }
        if (memval && memkey === ctx ) {
            if(initkey && memval[initkey]==null){memval[initkey]=Object.create(null)}
            return initkey ? memval[initkey] : memval
        }

        var nu = this.get(ctx);
        nu || (this.set(ctx, nu = Object.create(null)));
        if (initkey && !(initkey in nu)) {
            nu[initkey] = Object.create(null)
        }
        memkey = ctx;
        memval = nu;
        meminitkey=initkey;
        return initkey ? nu[initkey] : nu;
    }
})();


$.browser=(function sniff() {
        var userAgent=navigator.userAgent;
        var data={},alias={Edge:"IE",MSIE:"IE",Trident:"IE",IEMobile:"Mobile","Mac OS":"Mac",Firefox:"Mozilla"},Safarialts=["bb10","playbook","chrome","fire","opera"] ;
        (userAgent.match(/\b(Linux|PhantomJS|Macintosh|Mac OS|Edge|Chrome|Opera|Firefox|WebKit|iPad|iPhone|Trident|Fire|iPod|Android|BB10|PlayBook|MSIE|Android|Mobile|IEMobile|Touch|Windows)/g)||[]).forEach(function(k){
            data[k ]=data[k.toLowerCase()]=true;
            if(alias[k]){data[alias[k].toLowerCase()]=data[alias[k]]=true;}
        });
        data.firefox && (data.gecko=true);
        if(userAgent.indexOf("Safari")>0 && !Safarialts.some(function(a){return data[a]})){
            data.safari=true
        }
        if(data.msie){
            data.version=Number((userAgent.match(/MSIE\s+([\d\.]+)/)||["",""])[1].split(".").slice(0,2).join("."))||(userAgent.match(/rv:([\d\.]+)/)||["",""])[1].split(".").slice(0,2).join(".")

        } else if(data.chrome){
            data.version=Number((userAgent.match(/Chrome\/([\d\.]+)/)||["",""])[1].split(".").slice(0,2).join("."))
        }
        data.version ||(data.version=Number((userAgent.match(/Version\/([\d\.]+)/)||["",""])[1].split(".").slice(0,2).join(".")))
        data.touch ||(data.touch=navigator.maxTouchPoints >0 ||   (navigator.MaxTouchPoints > 0) ||  (navigator.msMaxTouchPoints > 0))
        var fidx=(location.href||"").toLowerCase().indexOf("file");
        if(fidx>=0 && fidx<2){
            data.hostedApp=true
        }
        window.isTouchDevice=data.isTouchDevice=data.touch;
        if(document && (document.documentElement||document.body) && document.defaultView && document.defaultView.getComputedStyle){
            data.prefix=(document.defaultView.getComputedStyle(document.documentElement||document.body).cssText.match(/;\s*\-([\w]+)\-[\w\-]+\s*:/) || [""]).pop()
            data.css3pr = "-" + data.prefix + "-";
            data[data.prefix]=true
        }
        return data
    })();




self.UI = self.UI || {}

$.expando = (function (ctx) {
    var map = null;
    function link(object, key, data) {
        var s = Symbol.for('@@link:' + key);
        return arguments.length === 2 ?
            object[s] : (object[s] = data);
    }
    function _getMap(ctx,preprocessor ) {
        var nu = $.objectMap.getOrCreate(ctx, "expando");

        if (!nu.handle) {
            nu.preprocessor=typeof(preprocessor)=="function"?preprocessor:function(nm,val){return false};
            Object.defineProperty(nu,"data",{value:Object.create(null),writable:false});
            nu.getValue=function getValue(nm) {
                var v= this.preprocessor(nm) ;
                return v===false?this.data[nm]:v
            };

            nu.setValue=function setValue(nm, val) {
                if(val===null){
                    delete this.data[nm];
                    return
                }
                var v= this.preprocessor(nm,val) ;
                if(v===false) {
                    this.data[nm] = val
                }
            };



           var handle = function () {
                    var holder=($.objectMap.get(this)||{}).expando;
                    if(!holder){return}

                    var args = [] ;
                    if (arguments.length == 1 && ({}).toString.call(arguments[0]) == "[object Arguments]") {
                        args = [].slice.call(arguments[0])
                    }
                    else {
                        args = [].slice.call(arguments)
                    }

                    var argln = args.length, first;
                    if (!argln) {
                        return holder.data
                    }
                    first = args[0];
                    if (argln == 1) {
                        if (typeof(first) == "string") {
                            return holder.getValue(first)
                        }
                        if (Array.isArray(first)) {
                            return first.reduce(data, function (m, k) {
                                    if (typeof(k) == "string") {
                                        m[k] = holder.getValue(k);
                                    }
                                    return m
                                },
                                {}
                            );
                        }
                        if ($.isPlain(first)) {
                            for (var i = 0,l=Object.keys(first),ln=l.length; i < ln; i++) {
                                var nm1 = l[i], val1 = first[l[i]]
                                if (typeof(nm1) == "string") {
                                    holder.setValue(nm1,val1)
                                }
                            }

                        }
                    } else if (argln == 2 && typeof(first) == "string") {
                        holder.setValue(first,args[1])
                    } else if (argln > 2) {
                        for (var i = 0; i < argln; i++) {
                            var nm = args[i], val = args[++i]
                            if (typeof(nm) == "string") {
                                holder.setValue(nm,val)
                            }
                        }
                    }
                    return this;
                };
            nu.handle=handle
             /*$.observe(nu.handle,{onlyonchange:true},function(fn,recs){
             var r=recs.value||[]
             for(var i= 0,ln=r.length;i<ln;i++){
             fn.call(this,r[i].name,r[i].value)
             }
             }.bind(ctx,nu.handle))*/
        }
        return  nu.handle;
    }

    var ret= function Expando(ctx) {
        return _getMap(ctx)
    }
    ret.augment=function(ctx,mthdname,preprocessor){
        var fn=_getMap(ctx,preprocessor);
        if(mthdname!==null) {
            mthdname = mthdname || "data"
            ctx[mthdname] = fn;
        }
        return  fn
    }
    return ret;

})();
$.delegateTo=function delegateTo(object,target){
    var targetkey,isuuid
    if(typeof(target)=="string"){
        targetkey=target;
        target=object[target]
    }
    if(!(target && typeof(target)=="object")){
        return object
    }
    function buildDescriptorFn(p,t,f,typ){
        var propName=p,target=t,fn= f,type=typ
        return function( ){
            var T=target
            if (typeof(target)=="string"){T=this[target]}
            if(!(T && typeof(T)=="object")){
                return null
            }
            if(typeof(fn)=="function"){
                return fn.apply(T,arguments )
            } else{var curr=T[propName];
                if(type=="set" || (type=="value" && arguments.length)){
                    T[propName]=arguments[0]
                }
                return curr ;
            }
        }
    }
    function noop(){}

    $.each($.getAllProperties(target),function(descript,propName){
        if (typeof(propName) == "string" && !(propName in object ))  {
            var D=descript.descriptor,T=targetkey||target;
            if(D){
                if(descript.isMethod){
                    $.defineProperty(object, propName, {value: buildDescriptorFn (propName,T,D.value,"value"),
                        enumerable:descript.descriptor.enumerable, writable:descript.descriptor.writable,
                        configurable:descript.descriptor.configurable
                    });
                } else{
                    $.defineProperty(object, propName, {
                        get:descript.descriptor.get?  buildDescriptorFn (propName,T,D.get,"get"):noop
                         ,
                        set:descript.descriptor.set?buildDescriptorFn (propName,T,D.set,"set"):noop,
                        enumerable:descript.descriptor.enumerable,
                        configurable:descript.descriptor.configurable
                    });
                }
            }
        }
    });

    return object
}

$.valueHolder = $.modRecord = function(name,delegate) {
    var onchange=null,_value,_valuelabel="",_name=name,_delegate=delegate||null;
    var toret= {
        on:function(fn){typeof(fn)=="function" && (onchange=fn)},
        getValue:function(){return _value},
        setValue:function(v,lbl){ var old=_value;
            if(old!==v){
                 onchange && onchange({oldValue:old,value: v,newValue:v,name:_name,valueLabel:_valuelabel=lbl,object:_delegate||this})
            }
            return old;
        } ,
        reset:function(){_value=null;_valuelabel="";}
    }
    Object.defineProperty(toret,"record",{set:function(arr){ return this.setValue(arr[0],arr[1])},get:function(){return [_value,_valuelabel]}})
    Object.defineProperty(toret,"value",{set:function(v){ return this.setValue(v)},get:function(){return this.getValue}})
    return toret;
}





$.getVersion = function(a) {
    var b = $.objectMap.getOrCreate(a);
    return b ? (null == b.__version && (b.__version = 1), b.__version) : void 0
}
$.updateVersion = function(a, b) {
    var c = $.objectMap.getOrCreate(a);
    return c ? (null == c.__version && (c.__version = 0), c.__version = null == b ? c.__version + 1 : b, b) : void 0
}

$.UUID = (function() {
    var counter = 1;
    function a() {
        return "UUID_" + (++counter) + Math.random().toString(36).substr(2, 5)
    }

    return function() {
        if (arguments.length) {
            var object = arguments[0];
            if (!(object && ("object" == typeof(object) || "function" == typeof(object)))){
                return object;
            }
            var c = $.objectMap.getOrCreate(b);
            c._uuid || (c._uuid = a())
            return c._uuid
        }
        return a()
    }
})() ;

$.decode = function(a) {
    for (var b = $.makeArray(arguments, 1), c = $.fnize(a, {
        asBoolean: !0
    }), d = (b.length, null); b.length >= 2;) {
        if (c(b.shift())) {
            d = b.shift();
            break
        }
        b.shift()
    }
}






$.inspectArgs=(function( ){
    var infocache={},resusecache=[]
    var toStr=Object.prototype.toString,argStr="[object Arguments]",primitives=["number","string","boolean"]
    function _done(){
        var obj=this;
        for(var j= 0,l1=obj.types,l1n=l1.length;j<l1n;j++){
            var k=l1[j]
            if(obj[k]){
                obj[k].length=0
            };
        }
        obj.args.length=0;  obj.types.length=0;  obj.count=0;
        obj.first=obj.last=null;
        resusecache.push(obj)
    };
    var toRet= function parse( ) {
        var toret =resusecache.shift(),curr={},l= arguments,ln= l.length
        if(!toret ){
            toret ={args:[],types:[],count:0,first:null,last:null};
            toret.cache=_done.bind(toret);
            toret.each=function(typ,fn){
                if(!fn && typeof(typ)=="function"){fn=typ;typ=null}
                var obj=this,a=obj.args.slice();
                if(typ){
                    var UC=String(typ).toUpperCase(),isfn=typeof(typ)
                    a= a.filter(function(it){
                        if(isfn){
                            return it.info.typeInfo.ctorfn==typ
                        }
                        return it.info.type==typ || it.info.klass==typ || it.info[typ]===true || it.info[UC]===true})
                }
                if(a.length){
                    a.forEach(fn)
                }

            }
        }
        if(arguments.length===1 && toStr.call(arguments[0])===argStr){ return parse.apply(null,arguments[0])}
        for(var i= 0;i<ln;i++){
            var val=l[i],kls=toStr.call(val),klsname=kls.substr().substr(8,kls.length-9),typ=typeof(val),k=typ.substr(0,3),info=infocache["_"+klsname]

            if(kls===argStr){
                var part=parse.apply(null,val)
                if(ln==1){toret=part}
                else if(part.count){
                    toret.count+=part.count
                    for(var j= 0,l1=part.types,l1n=l1.length;j<l1n;j++){
                        var k=l1[j]
                        if(!toret[k]){
                            toret.types.push(k)
                            toret[k]=[]
                        };
                        [].push.apply(toret[k],part[k]||[]);
                    }
                    toret.first=toret.first||part.first;
                    [].push.apply(toret.args,part.args||[]);
                    part.cache();
                }
            }  else{
                if(!toret[k]){
                    toret.types.push(k)
                    toret[k]=[]
                }
                if(!info){
                    info={klass:klsname,type:typ,primitive:primitives.indexOf(klsname.toLowerCase())>=0}
                    if(l[i]!=null&&l[i].constructor!==Object&&l[i].constructor!==Function){
                        info.ctor=l[i].constructor;
                    }
                    if($.typeInfo){
                        info.typeInfo=$.typeInfo(info.ctor||info.klass||info.type)
                    }

                    info[k]=info[typ.toUpperCase()]= info[klsname.toUpperCase()]=true;
                    if(!$.isPlain(val)){
                        info=infocache["_"+klsname]=Object.freeze(info)
                    }

                }
                var curr={index:toret.args.length,info:info,val:val}
                toret[k].push(curr)
                toret.args.push(curr)
                if(i===0){toret.first=curr}
                //if(primitives.indexOf(kls.toLowerCase())>=0){curr.primitive=true}

            }
        }
        toret.count=toret.args.length
        return toret;
    }

    return toRet;
})() ;
$.perf=function(fns,a,tmes,cb){
    function go(fnarr,args,times,callback){

        var c=Math.max(1,times||0),cnt=fnarr.length,a=args.length?args:null,tms=[],now=typeof(performance)!="undefined" && performance.now?performance.now.bind(performance):Date.now
        function _then(){
            if(!callback || callback==="log"){console.log(tms.join("\n"))}
            else if(typeof(callback)=="function"){callback(tms)}
        }
        var rnng=-1
        function _do(){
            rnng++
            var i= c,fn=fnarr[rnng],t=now()
            if(a){
                while(--i)  fn.apply(null, a.concat(i))
            } else{
                while(i--)fn(i)
            }
            tms.push(((fn.name||"")+" " +((now() - t))).trim())
            if(rnng<cnt-1){setTimeout(_do,0)}
            else{_then()}
        }
        _do()
    }
    if(typeof(tmes)=="function"){
        if(typeof(cb)=="number"){
            var n=cb;
            cb=tmes
            tmes=n;
        } else{cb=tmes;tmes=100}
    }
    return{
        fns:fns,
        args:a,times:tmes,callback:cb,
        runWithArgs:function(a,times,callback){
            if(typeof(times)=="function"){
                if(typeof(callback)=="number"){
                    var n=callback;
                    callback=times
                    times=n;
                }
            }
            var args=[]
            if(!(!isNaN(times) && Number(times)>1)){times=this.times}
            if(typeof(callback)!=="function"){callback=this.callback}
            if(a!=null){args=[].concat(a)}
            else {args=[].concat(this.args||[])}
            go(this.fns,args,times,callback)
        },
        run:function(times,callback){
            this.runWithArgs(null,times,callback)
        }
    }
}
$.makeVisitor = function() {
    var a = function(a, b) {
        this.delegate = a || this, this.router = b, $.isPlain(b) && $.each(b, function(a, b) {
            this[b] = a
        }, this)
    };
    return a.prototype.visit = function(a) {
        if ("function" == typeof this.router) {
            var b = this.router.call(this.delegate, a);
            "string" == typeof b && this.delegate && (b = this.delegate[b]), b && "function" == typeof b && b.call(this.delegate, a)
        }
    },
        function(b, c) {
            var d = new a(b, c);
            return d
        }
}()

$.persistentPromise = function(a) {
    function b(a, b) {
        for (; g.length;) g.shift()[a](b)
    }

    function c(a) {
        h = 1, b(0, a)
    }

    function d(a) {
        h = -1, b(1, a)
    }
    var e, f = Promise.deferred(),
        g = [],
        h = null,
        i = 0,
        j = a || {}, k = null,
        l = null;
    if (e = function(a, c, d) {
            a(d), b(c, d)
        }, null != j.delay) {
        if ("animationframe" == j.delay) {
            var m = $d.util.animframe;
            e = function(a, c, d) {
                m(function() {
                    a(d), b(c, d)
                })
            }
        }
        if ("number" == typeof j.delay) {
            var n = j.delay;
            e = function(a, c, d) {
                setTimeout(function() {
                    a(d), b(c, d)
                }, n)
            }
        }
    }
    return {
        then: function(a, b) {
            return i ? void 0 : ("function" != typeof a && (a = function() {}), "function" != typeof b && (b = function() {}), g.push([a, b]), f.then(c, d), this)
        },
        stop: function() {
            return g.length = 0, i = 1, this
        },
        reject: function(a) {
            f.reject(a)
            return  this
        },
        isFailure: function() {
            return -1 == h
        },
        isSucess: function() {
            return 1 == h
        },
        isInit: function() {
            return null === h
        },
        isPending: function() {
            return 0 == h
        },
        resolve: function(a) {
            f.resolve(a)
            return this
        },
        onreset: function(a) {
            return "function" == typeof a && (k = a), this
        },
        onmessage: function(a) {
            return "function" == typeof a && (l = a), this
        },
        updateStatus: function(a) {
            return l && l(a), this
        },
        reset: function(a) {
            if (i) return this;
            var b = this.isInit();
            return h = 0, b || (f = Promise.deferred()), null != a && l && l(a), k && k(a), this
        }
    }
}
$.services=(function(){
    var registery={};
    var Services= {
        register:function(name,service){
            registery[String(name).toLowerCase()]=service
        },
        unregister:function(name,api){
            delete registery[name]
        },
        findApi:function(name){
            var S=this.findService(name)
            return S && S.getApi()
        }
        ,
        findService:function(name){
            return registery[String(name).toLowerCase()]
        } ,

        define:function(name,api,impl){
            var ServiceImpl=$.require("js/libs/ServiceImpl.js",function(ServiceImpl){
                var service=new ServiceImpl(name,impl,api)

                return registery[String(name).toLowerCase()]=service
            });
            return registery[String(name).toLowerCase()]
        },
        defineModule:function(moduleurl,asWorker){
            if(asWorker===true){
                return ServiceImpl.asWorker(moduleurl)
            }
            return ServiceImpl.asModule(moduleurl)
        }
    }
    var ServiceImpl=function(name,impl,methods) {
        var _impl = impl, _name = name, _api = {}
        function invoke(fn,arg){
            if( _impl &&  _impl[fn]){
                return  _impl[fn].apply( _impl,[].slice.call(arguments,1))
            }
        }
        if(!methods && impl){
            methods=Object.keys(impl).filter(function(a){return typeof(impl[a])=="function"})
        }
        if (methods && Array.isArray(methods)) {
            for (var i = 0, ln = methods.length; i < ln; i++) {
                _api[methods[i]] = invoke.bind(this, methods[i])
            }
        }
        this.setImpl=function(impl){
            if(impl){
                _impl=impl;
            }
        }
        this.getApi=function(){ return _api; }
        this.register=function(){
            var ths=this
            Services.register(_name,ths)
        }
    }
    ServiceImpl.asModule=function(moduleurl){
        var service,pr=Promise.deferred()
        $.xhr.get(ResURL.from(moduleurl),function(data){
                if(typeof(data)=="string") {
                    try {var __={}
                        eval("__.x=" + data);
                        data = __.x
                    } catch (e) {}
                }
                if (data && data.name && data.api) {
                    service=new ServiceImpl(data.name,data.api, Object.keys(data.api))
                    service.register();
                    pr.resolve(service)
                } else{
                    pr.reject()
                }
            }
        );
        return pr
    }
    ServiceImpl.asWorkerScript=function(url,api){
        var w= $.worker.fromScript(url );
        api=api||{}
        var methods=Array.isArray(api)?api:api.methods,API={}
        if(methods){
            methods.forEach(function(ky){
                API[ky]=(function(nm,wrkr){var k=nm
                    return function() {
                        var args=[].slice.call(arguments),callback
                        if(typeof(args[args.length-1])=="function"){
                            callback=args.pop()
                        }
                        if(args.length==1){args=args[0]}
                        wrkr.sendMessage({cmd: k,args:args},callback)
                    }
                    })(ky,w)
            })
        }
        w.sendMessage({cmd:"config",config:{servicepath:app.servicePath}})
        return API;
    }
    ServiceImpl.asWorker=function(moduleurl){
        var wrkr=$.worker.build()
        var service,pr=Promise.deferred()
        wrkr.define("module",ResURL.from(moduleurl).build(),function(a) {
            if (a.name && a.api) {
                wrkr.addToApi(a.name, a.api)
                service=new ServiceImpl(a.name, wrkr.api[a.name],a.api)
                service.register();
                pr.resolve(service)
            } else{
                pr.reject()
            }
        });
        return pr
    }
    Services.ServiceImpl=ServiceImpl
    return Services;
})();;$.observable = function() {

}
$.observable.prototype={
    _ensureInner:function(){
        if(!this.__inner__){
            Object.defineProperty(this,"__inner__",{value:{data:Object.create(null),modcount:0,config:{} },enumerable:false,writable:false,configurable:true})
         }
        this.__inner__.config||(this.__inner__.config={});
        return this.__inner__
    },
    scanProps:function(){
        var C=this._ensureInner().config
        if(C.observing && C.observing.scan){
            C.observing.scan();
        }
        return this
    },
    observeSelf:function(){
        var C=this._ensureInner().config
        if(C.observing){return}
        var ths=this,ignore=[],data=this.__inner__.data
        ignore=Object.getOwnPropertyNames(this).filter(function(k){return  (typeof(ths[k])=="function" || k.indexOf("_")==0)})
        ignore.push("__inner__", "constructor","prototype","__proto__","___toignoreforobserve","set","get")
        C.ignoreprops=ignore.slice()
        if(data && Object.keys(data).length){
            Object.keys(data).forEach(function(k){
                if(ignore.indexOf(k)==-1 && typeof(this[k])=="undefined"){this[k]=data[k]}
            },this);
        }
        this.__inner__.data=this;
        this.___toignoreforobserve=ignore
        Object.observe(this,function(recsarg){
            if(recsarg && recsarg.length){
                var recs=recsarg.slice(),names=recs.map(function(a){return a.name});
                var torem=[]//remove dups and pick latest
                for(var i= 0,ln=names.length;i<ln;i++){
                    var prev=names.indexOf(names[i])
                    if(prev<i){
                        torem.push(recs[prev])
                    }
                }
                while(torem.length){
                    var idx=recs.indexOf(torem.shift()); idx>=0 && recs.splice(idx,1);
                }
                for(var i= 0,ln=recs.length;i<ln;i++){
                    var rec=recs[i],O=(rec||{}).object
                    if(!rec || !rec.name || rec.type=="delete" || !O || !O.__inner__ || !O.__inner__.config || (O.__inner__.config.ignore||[]).indexOf(rec.name)>=0 || !O.__inner__.config.observing ){return}
                    var V=O[rec.name];
                    O._dispatch({name:rec.name,value:V,newValue:V,oldValue:rec.oldValue,object:O})
                }
            }
         });
        delete this.___toignoreforobserve;
        C.observing=Object.getNotifier(this)
        C.observing && C.observing.scan && C.observing.scan()
    },
    setConfig:function(nm,val){this._ensureInner().config[nm]=val},
    getConfig:function(nm){return this._ensureInner().config[nm]},
    preprocess:function(nm,val){
        return val
    },
    toMap:function(){
        var C=this._ensureInner().config
        var d={}
        if(C.observing) {
            this.scanProps()
            var ignore=C.ignore
            Object.keys(this._ensureInner().data).forEach(function (k) {
                if (ignore.indexOf(k) == -1) {
                    d[k] = this[k]
                }
            }, this)
        } else{
            d=Object.assign({},this._ensureInner().data);
        }
        return d
    },
    get:function(nm){nm=this._fixname(nm)
        var D=this._ensureInner().data;
        return D[nm]
    },
    _fixname:function(nm){
        if(this._ensureInner().config.caseinsentive){
            var lc=String(nm||"").toLowerCase()
            if(lc!==nm){
                nm=lc;
            }
        }
        return nm
    },
    _dispatch:function(R,inner){
        inner=inner||this._ensureInner()
        if(!R || !R,name || !inner || !inner.listeners ){
            return
        }
        var  nm= R.name,listeners=inner.listeners,L=listeners[nm],ln2
        inner.modcount++;
        if(L && (ln2=L.length)) {
            if (ln2 === 1) {  L[0].call(this, R)  }
            else {
                for (var i = 0; i < ln2; i++)   L[i].call(this, R)
            }
        }
        if((L=listeners["*"]) && (ln2=L.length)) {
            if (ln2 === 1) {  L[0].call(this, R) }
            else {
                for (var j = 0; j < ln2; j++)    L[j].call(this, R)
            }
        }
    },
    set:function(nm,val){
        nm=this._fixname(nm)

        if(typeof(val)==="undefined" && nm && typeof(nm)=="object"){
            $.each(nm,function(v,k){this.set(k,v)},this);
            return this
        }
        var inner=this._ensureInner(),D=inner.data ;
        var C=inner.config
        if(C && C.ignoreprops && C.ignoreprops.indexOf(nm)>=0){
            return
        }
        var curr=D[nm]
        val=this.preprocess(nm,val,curr)
        if(!(nm in D)){D[nm]=undefined;}//add a value first
        if(curr!=val){
            D[nm]=val;
            if(D===this||(C&&C.observing)){
                return curr
            }
           this._dispatch({name:nm,value:val,newValue:val,oldValue:curr,object:this},inner)
        }

        return curr
    },

    onchange:function(nm,fn){
        if(typeof(nm)=="function"){fn=nm;nm="*"}
        nm=this._fixname(nm)
        var inn=this._ensureInner()
        if(!inn.listeners){inn.listeners={}}
        if(!inn.listeners[nm]){    inn.listeners[nm]=[]}
        inn.listeners[nm].indexOf(fn)==-1 && inn.listeners[nm].push(fn)
     }
}
$.baseModel = function() {
    var UUIDCOUNTER=0
    function update1(a) {
        if (2 == arguments.length && "string" == typeof a) this.setItem(a, arguments[1]);
        else if ($.isPlain(a)){
            var onlyupdate=arguments[1]===true, keys=this.keys(),isplain= $.isPlain(a)
            for (var b in a) {
                if(onlyupdate && keys.indexOf(b)==-1){continue}
                if(!a.hasOwnProperty(b)){continue}
                var val=a[b];
                if(curr && curr.__model){
                    var curr=this.getItem(b, a[b])
                    var mapval=val
                    if(val && val.__isModel){this.setItem(b, val)}
                    else if($.isPlain(val)){
                        curr.update(mapval,onlyupdate)
                    }else if(val && val.toMap){
                        curr.update(val.toMap(),onlyupdate)
                    }

                } else {
                    this.setItem(b, val)
                }
            }

        }
        return this
    }
    function isDescriptor(obj){
        if(obj && $.isPlain(obj) && Object.keys(obj).length){
            if(obj.descriptor||obj.expr){return true}
            if(obj.name ||obj.type ||obj.typeInfo ||obj.defaultValue||obj.renderer||obj.reader ||obj.format||typeof(obj.get)=="function"){
                return true
            }
        }
    }
     function resolveExpr(a) {
        var b = this.toMap();
        if ("function" == typeof a) return a.call(this, b);
        var c = b,
            d = a;
        if ("string" == typeof a) {
            if (this.hasProperty(d)) return this.getItem(d);
            if (d in this && "function" == typeof this[d]) return this[d].call(this);
            if (!/[\s\+\-\*\\\(]/.test(a))
                if (a.indexOf(".") > 0) {
                    var e = a.split(".");
                    d = e.pop(), c = e.reduce(function(a, b) {
                        return a && "object" == typeof a ? (null == a[b] && (a[b] = {}), a[b]) : null
                    }, b)
                } else {
                    var a = $.parseExpr(a);
                    if (a) return a.call(this, map)
                }
            if (c && "object" == typeof c) return d in c && "function" == typeof c[d] ? c[d].call(c) : c[d]
        }
    }
    function toMap(model,compact,deep,loopchk){
        if(!model){return null}
        if(!(loopchk && loopchk.items)){loopchk={lvl:0,items:[]}}
        var res={}
        model && model.keys().forEach(function(name){
            var val =model.getItem(name)
            if(deep && val && typeof(val)=="object"){
                if(loopchk.items.indexOf(val)>=0 ){return null}
                loopchk.items.push(val)
                loopchk.lvl++
                val=isModel(val)?toMap(val,compact,deep,loopchk):val
                loopchk.lvl--
            }
            if(compact && val==null){return}
            res[name]=val
        })
        return res
    }
     function addexpr(nm,expr,optns) {
        var vars=[],haspath={},unres=[],fn
        if(typeof(expr)=="function"){
            fn=expr;
            if(!(optns && optns.vars) ){

                if(bdy.indexOf("[native code]")==-1){

                } else{
                    bdy=null
                }
            } else {
                vars=optns.vars||[]
            }

        } else if(typeof(expr)=="string"){
            bdy=expr


        }
        if(!fn && !bdy){return}
        var keys=this.keys();
        if(!vars.length && bdy){
            var reserved=$.parseUtil.reservedWords,bdy=$.fn.getBody(expr);
            vars=(bdy.match(/[\w\._]+/g)||[]).filter(function(a){return a.indexOf(".")!=0 && reserved.indexOf(a)<0}).map(function(a){var arr= a.split("."),nm= arr.shift();
                if(arr.length){haspath[nm]=a}
                return nm
            });
            unres=vars.filter(function(k){return keys.indexOf(k)<0 && !self[k]})
            vars=vars.filter(function(k){return keys.indexOf(k)>-1})
        }
        var ctx={name:nm,vars:vars||[],haspath:haspath,unres:unres||[],fn:fn,bdy:bdy,lastval:null}
        if(!fn && bdy){
            try{
                ctx.args=ctx.vars
                ctx.fn=Function(vars.join(","), "return "+bdy)
            } catch(e){

            }
        } else if(fn){
            ctx.recordAsArg=true
            ctx.args=["it"]
        }
        if(!ctx.fn){return}
        var toret=(function(cx){
            if(cx.recordAsArg){
                return function(rec){
                    var record=(rec!=null && typeof(rec)=="object")?rec:this
                    var r=cx.fn.call(record,record),old=cx.lastval;
                    if(r!=cx.lastval){cx.lastval=r;
                        record.firePropertyChangeEv({name:cx.name,value: r,newValue: r,oldValue: old})
                    }
                    return r;
                }
            }
            return function(rec){var _=[],C=cx,record=(rec!=null && typeof(rec)=="object")?rec:this
                for(var i= 0,ln=C.args.length;i<ln;i++){
                    var nm=C.args[i],v=record.getItem(nm);
                    if(v==null && C.haspath[nm]){v={}}
                    _.push(v)
                }
                var r=C.fn.apply(this,_),old=C.lastval;
                if(r!=C.lastval){C.lastval=r;
                    record.firePropertyChangeEv({name:C.name,value: r,newValue: r,oldValue: old})
                }
                return r;
            }
        })(ctx);

        toret.data=ctx;
        ctx.exprFn=toret;
        this.addProperty(nm,{descriptor:true,get:toret,set:function(){}})
        this.onchange(ctx.vars.join(" "),function(){
            ctx.exprFn(this)
        })
        return toret;
    }
    function onchangeHandle(M, rec ) {

                var  nm=rec.name,T=rec.type
                if (nm == M.name || T=="remove"|| T=="delete") {
                    return
                }
                var V = rec.newValue || rec.value
                if(V==null && T=="add"){return}
                if (V === undefined && rec.object) {
                    V = rec.newValue = rec.value = rec.object[nm]
                }

                if (M.proxyfields.indexOf(nm) >= 0 && M.valCache[nm] !== V) {
                    M.valCache[nm] = V
                    this.firePropertyChangeEv(rec)
                }
      }

    function linkProps_onchange(meta,nu) {
        if(meta.delegate && meta.changehandle) {
            if (isModel(meta.delegate)) {
                meta.delegate.onchange("*", meta.changehandle, false)
                //meta.delegate.onchange("**", meta.changehandleall, false)
            } else if(Object.unobserve){
                Object.unobserve(meta.delegate,meta.changehandle)
            }
            meta.changehandle=null
            //meta.changehandleall=null
        }
        if(!nu){return}
        if(isModel(nu)){
            //nu.onchange("*",meta.onchangeHandle=function(M,recs) {
            //     recs && recs.length && this.firePropertyChangeEv({name:"**",value:recs,newValue:recs,oldValue:null,object:recs[0].object,type:"list"})
            // }.bind(this,meta))
            nu.onchange("*",meta.changehandle=onchangeHandle.bind(this,meta));
        } else{
             Object.observe(nu,
                meta.changehandle=function(M,recs) {
                    recs && recs.length && this.firePropertyChangeEv({name:"**",value:recs,newValue:recs,oldValue:null,object:recs[0].object,type:"list"})
                    for(var i= 0,ln=recs.length;i<ln;i++){
                        onchangeHandle.call(this,M,recs[i])
                    }
                }.bind(this,meta)
            ,["update"])
        }
    }
    function isModel(obj) {
        return obj && (obj.__model ||obj.__record__ ||obj.__isModel ||obj.isModel) && typeof(obj.get)=="function";
    }
    var modelDelegates=(function modelDelegates() {
        function _setupDelegate(propname,optns){
            var delegate = this.get(propname) , meta;
            var C=this.getConfig();
            if(!C){return}

            C.__proxydelegates || (C.__proxydelegates = {});
            if(!C.__proxydelegates[propname]){
                C.__proxydelegates[propname] = {name: propname, proxyfields: [], valCache: {}} ;
                C.__proxydelegates[propname].refresh=_refresh
            }
            meta=C.__proxydelegates[propname]
            _linkProps.call(this, meta, delegate, optns )
            if(meta.propchangehandle){
                this.onchange(propname,meta.propchangehandle,false);
            }
            this.onchange(propname,meta.propchangehandle=function(a) {
                _linkProps.call(this,meta,a.value || a.newValue,optns)
            });
        }
        function _linkProps(meta,delegate,optns){
            if (! delegate || (meta.delegate && delegate === meta.delegate && meta.processed)) {
                return
            }
            linkProps_onchange.call(this,meta)
            meta.delegate = delegate;

            var propname=meta.name,ths=this,fields=isModel(delegate)?delegate.keys():Object.getOwnPropertyNames(delegate)
            var mthd=delegate.get?"get":(delegate.getItem?"getItem":null)
            var setmthd=delegate.set?"set":(delegate.setItem?"setItem":null)
            var writable=optns && optns.writable
            for(var i= 0,ln=fields.length;i<ln;i++){
                var a=fields[i]
                if(a==propname){
                    continue
                }
                var D=this.getDescriptor(a)
                if(D && D.proxied && D.get){
                    continue
                };
                meta.proxyfields.indexOf(a)==-1 &&  meta.proxyfields.push(a);


                this.addProperty(a, {
                    descriptor: !0,
                    proxied:true,
                    get: (function(fld,prop){
                        return function(){
                            var dlg=this.getItem(prop) ;
                            if(dlg ){
                                return mthd && dlg[mthd]?dlg[mthd].call(dlg,fld):dlg[fld]
                             }
                        }
                    })(a,propname),
                    set: writable?(function(fld,prop){
                        return function(val){
                            var dlg=this.getItem(prop) ;
                            if(dlg ){
                                var D=this.getDescriptor(prop),curr=mthd && dlg[mthd]?dlg[mthd].call(dlg,fld):dlg[fld]
                                if(D.___raw==val||curr==val){
                                    return
                                }
                                D.___raw=val
                                return setmthd && dlg[setmthd]?dlg[setmthd].call(dlg,fld,val):(dlg[fld]=val);
                            }
                        }
                    })(a,propname):function(){}
                })
            }

            if(meta.proxyfields.length) {
                meta.processed = true
            }
            meta.refresh.call(this,meta)
            linkProps_onchange.call(this,meta,delegate)
        }
        function _refresh(M){
            if(M.proxyfields && M.proxyfields.length&& M.delegate){
                var delegate=  this.getItem(M.name),recs=[];
                if(!(delegate || typeof(delegate)=="object")){return}
                var mthd=delegate.get?"get":(delegate.getItem?"getItem":null)
                for(var i= 0,ln= M.proxyfields.length;i<ln;i++){
                    var nm=M.proxyfields[i],
                        v =mthd?delegate[mthd].call(delegate,nm):delegate[nm],
                        old=M.valCache[nm]
                    if(v === old){continue}
                    M.valCache[nm]=v;
                    var rec={name:nm,value:v,newValue:v,oldValue:old}
                    recs.push(rec)
                    this.firePropertyChangeEv(rec)
                }
                //this.firePropertyChangeEv({name:"**",value:recs,newValue:recs,oldValue:null})
            }
        }

        return function(propname, delegatemodel,optns){
            null != delegatemodel && this.setItem(propname, delegatemodel);
            _setupDelegate.call(this,propname,optns)
        }
    })();
    function removeComplex(map){
        if(!(map && typeof(map)=="object")){
            return map;
        }
        if(!($.isPlainObject(map)|| $.isArray(map))){
            return null
        }
        if($.isArray(map)){
            return map.map(removeComplex)
        }
        var jsonmap={}
        for(var k in map){
            var v=map[k];
            if(typeof(v)=="function"){continue}
            if(v && typeof(v)=="object"){
                if($.isPlainObject(v)|| $.isArray(v)){
                    v=removeComplex(v)
                } else {
                    continue
                }
            }
            jsonmap[k]=v
        }
    }
    var proto = {
        init: function(a, b,config) {
            this.initModel(a, b,config);
            this.initModelInstance(a, b,config);
        },
        UUID: function() {
            return this.__uuid ||(this.__uuid=("UUID_"+(++UUIDCOUNTER))+(Math.random().toString(36).substr(2, 5)));
        },
        initModel: function(a, b,config) {
            this.__isModel = !0
            if ( a) {
                if ("function" == typeof a.get || "function" == typeof a.set) {
                    this.__get = a.get;
                        this.__set = a.set;
                    return;
                }
                this.addProperties(a, b)
            }
        },
        dataAvailable:function(){
            if(!this.__onavailablePromise){
                this.__onavailablePromise=Promise.deferred()
            }
            this.__onavailablePromise.resolve(this)
        },
        whenDataAvailable:function(callback){
          if(!this.__onavailablePromise){
              this.__onavailablePromise=Promise.deferred()
          }
            typeof(callback)=="function" && this.__onavailablePromise.then(callback);
          return this.__onavailablePromise;
        },
        initModelInstance: function() {},


        update: function(a) {
            if (2 == arguments.length && "string" == typeof a) {
                this.setItem(a, arguments[1]);
            }
            else if ($.isPlain(a) ){
                for (var b in a) {
                    a.hasOwnProperty(b) && this.setItem(b, a[b]);
                }
            }

            return this
        },
        bindTo:function(myprop,targetObj,targetObjprop){
            if(typeof(targetObj)=="function"){
                this.onPathChange(myprop,targetObj.bind(this))
                return
            };
            if(!this.contains(myprop)){
                this.addProperty(myprop);
            };
            (function(ths,prop,target,targetprop){
                var setTargetVal=function(val){}
                if(typeof(targetprop)=="function"){
                    ths.onPathChange(prop,targetprop.bind(target,ths))
                    return
                }
                if(isModel(target)){
                    target.onPathChange(targetprop,function(prop,rec){
                        this.setItem(prop,rec.value)
                    }.bind(ths,prop))
                    setTargetVal=target.setItem.bind(target,targetprop)
                } else if($.isElement(target)||target.nodeType){
                    if(targetprop==null){targetprop="value"}
                    if($d.isFormInput(target)){
                        $d.on(target,targetprop=="text"||targetprop=="input"?"input":"change",function(prop,ev){
                            this.setItem(prop,$d(ev.target).val())
                        }.bind(ths,prop))
                    } else {
                        targetprop=targetprop||"textContent"
                        if (targetprop) {
                            $d.onMutation(target, [targetprop], function () {

                            })
                        }
                    }
                    setTargetVal=$d(target).val.bind($d(target))
                } else if($.isPlain(target) && typeof(targetprop)=="string"){
                    $.watchProperty(target,targetprop,function(prop,rec){
                        this.setItem(prop,rec.value)
                    }.bind(ths,prop))
                    setTargetVal=$.updateProperty.bind($,target,targetprop)
                }

                ths.onPathChange(prop,function(rec){
                    setTargetVal(rec.value)
                })
            })(this,myprop,targetObj,targetObjprop);
            return this
        },

        watch:function(nm,fn,optns){
            return this.onchange(nm,fn,optns)
        },
        onchange:function(nm,fn,optns){
            if(optns===false){
                if(this.off){
                    this.off(nm,fn)
                } else if(this._onchange){
                    this._onchange(nm,fn,false)
                } else{
                    this.onpropertychange && this.onpropertychange(nm, fn, false)
                }
                return
            }
            if(typeof(nm)=="function"){optns=fn;fn=nm;nm="*"}
            if(Array.isArray(nm)){
                nm.forEach(function(a){this.onchange(a,fn,optns)},this)
                return this
             }
            if(typeof(nm)=="string" && nm.trim().indexOf(" ")>0){
                nm.split(/\s+/).forEach(function(a){this.onchange(a,fn,optns)},this)
                return this
            }
            nm = nm||"*";
            var config={}
            if(optns===true){
                config.once=optns
            } else if(typeof (optns)=="string"){
                config.id=optns
            } else if($.isPlain(optns)){
                $.extend(config,optns)
            }
            var f=$.fnize(fn);

            if(this._onchange){
                this._onchange(nm,f,config)
             } else {
                return this._addListener(nm,f,config)

            }
            //this.onpropertychange(nm, f, config)
            return this
        },
        logic: function() {
            return {}
        },
        applyTemplate: function(a, b) {
            var templateFn = a||this._latsttemplateFn;
            if(this.prepTemplate){
                templateFn=this.prepTemplate(templateFn,b)
            } else if ("function" !== typeof (a)){
                  templateFn=$.template(a)
             }
            var data = $.extend({}, this.toMap(), this.logic() || {}, $.isPlain(b)?b :{});
            var res
            if(this.beforeApplyTemplate){
                var r=this.beforeApplyTemplate(templateFn, b)
                if(r && typeof(r)=="function"){templateFn=r}
            }
            if(!templateFn){return}
            this._latsttemplateFn=templateFn;
            if(typeof(templateFn)=="function"){
                res=templateFn.call(this, data)
            } else{
                res=templateFn.fn?templateFn.fn.call(this, data):null
            }
            if(this.afterApplyTemplate){
                var r=this.afterApplyTemplate(res, b)
                if(r && r!=this){res=r}
            }
            return res
        },
         collectFields: function(a) {
             var fn=$.fnize(a), res=[]
             if(!fn){return}
             this.eachField(function(name,val){res.push(fn.call(this, name,val))})
            return res
        },
        eachField: function(a) {
            var fn=$.fnize(a),keys = this.keys()
            if(!fn || !(keys && keys.length)){return}
            for (var b, c = [],  e = 0 || [], g = keys.length; b = keys[e], g > e; e++) {
                b &&  fn.call(this, b, this.getItem(b)) ;
            }
             return this
        },
        toMap: function(compact,deep) {
            if(compact!==true){compact=false}
            if(deep!==true){deep=false}
            if(this.__busytomap){return null}
            var res={}
            if(deep==true){
                this.__busytomap=true;
                try{
                    res=toMap(this,compact,deep);
                }
                catch(e){console.error(e,"toMap")}
                finally{
                    delete this.__busytomap;
                }
            } else{
                res=toMap(this,compact);
            }
            return res
        },

        toJson: function() {
            var map=removeComplex(this.toMap(true,true));

            return JSON.stringify(map)
        },

        getItem: function(a,nopath) {
            if("string" !== typeof a){return}
            var container = this, name = a,C=this.getConfig();

            if(C &&  C.caseinsensitive && !this.contains(name)) {
                if (this.contains(name.toLowerCase())){
                    name=name.toLowerCase();
                }
            }
            if(!this.contains(name) && C && !C.nopath && nopath !== true && name.indexOf(".") > 0) {
                    var d = name.split(".");
                    name = d.pop()
                    container = d.reduce(function (a, b) {
                        return a && "object" == typeof a ? (null == a[b] && (a[b] = {}), a[b]) : null
                    }, this)

            }
            if(container===this){
                return  container.get( name )
            }
            if(container && "object" == typeof container ){
                if("function" == typeof container.__get){
                    return container.__get.call(container, name )
                } else if("function" == typeof container.get){
                    return  container.get( name )
                } else {
                    return container[name]
                }
            }
        },
        setItem: function(a, b,nopath) {
            var container = this,
                name = a,
                saved = this.getSaved(a,nopath);
            if (this.contains(a) && saved === b) {
                return saved;
            }
            if (nopath!==true && "string" == typeof a && a.indexOf(".") > 0 && !this.hasProperty(a)) {
                var f = a.split(".");
                name = f.pop()
                container = f.reduce(function(a, b) {
                    if(a && "object" == typeof a){return a[b]}
                    return null
                }, this)
            }
            if(container && "object" == typeof container){
                if("function" == typeof container.__set){
                    container.__set.call(container, name, b)
                } else if("function" == typeof container.set){
                    container.set( name, b)
                } else {
                    container[name] = b
                }
            }
            return saved
        },
        linkFields: function(src, fields,writable) {
            if (!(src && "object" == typeof src)) {return}
            var model = this;

            if (isModel(src)) {
                if(fields===null){
                    fields = src.keys();
                }
                var nufields = [],
                    targetfields = Array.isArray(fields) ? fields : String(fields).trim().split(/\s+/);
                targetfields.forEach(function(fld) {
                    model.hasProperty(fld) || model.addProperty(fld);
                    nufields.indexOf(fld)==-1 && nufields.push(fld)
                    model.set(fld,src.getItem(fld))
                });


                src.onchange(function(rec) {
                    nufields.indexOf(rec.name) >= 0 &&  model.set(rec.name, rec.value)
                })
            }

        },
        delegateTo: modelDelegates,

        addProperties: function(a, b) {
            if("string" == typeof a || $.isArray(a)){
                for (var i = 0, arr= $.isArray(a)?a:a.split(/[\s,]+/),ln = arr.length; ln > i; i++) {
                    this.addProperty(arr[i]);
                }
            } else if ($.isPlain(a)) {
                for (var name in a) {
                    if (!Object.hasOwnProperty.call(a,name)) {
                        continue
                    }
                    if (this.hasProperty(name)) {
                        this.setItem(name, a[name])
                    } else {
                        this.addProperty(name, b === true ? {
                            descriptor: true,
                            defaultValue: a[name]
                        } : a[name])
                    }
                }
            }
            return this
        },

        clearValues: function(toignore) {
             for (var a, b = 0, c = this.keys() || [], d = c.length; a = c[b], d > b; b++) {
                 var D=this.getDescriptor(c[b])
                 if(D && D.proxied){
                     continue
                 }
                 if(Array.isArray(toignore) && toignore.indexOf(c[b])>=0){continue}
                 var curr=this.getItem(c[b])

                 if(isModel(curr) && curr.clearValues){
                    !curr.__record__ && curr.clearValues(toignore)
                 }
                 else {
                     this.setItem(c[b], Array.isArray(curr)?[]:null);
                 }
             }
            return this
        },
        contains: function(a) {
            return this.hasProperty(a)
        },
        ifnull: function(name ,val) {
            if(!this.get(name)){
                this.set(name,val)
            }
        },
        firePropertyChangeEv: function(data) {
            var  L=this.__listeners;
            if(typeof(this.defaultListener)=="function"){
                this.defaultListener.call(this,data);
            }
            if(!L ){return}
            if(Array.isArray(data)){
                if(!data.length){return}
                for(var i=0;i<data.length;i++){
                    var  rec=this.getMutationRecord(data[i])
                    if(rec && rec.name && rec.name!="**" && rec.name!="*"){
                        L.dispatch(rec.name,rec)
                        L.dispatch("*",rec)
                    }
                }
                L.dispatch("**",data)
                return this
            }

            var  rec= data && data.name=="**"?data:this.getMutationRecord(data)
            if(!(rec && rec.name )){return}
            L.dispatch(rec.name,rec)
            rec.name !=="**" && rec.name !=="*" && L.dispatch("*",rec) && L.dispatch("**",rec)
            return this;
        },
        getMutationRecord: function(name,old,nulifempty) {
            if(!name || name==="*"){return null}
            if(name && typeof(name)=="object" && name.name){
                return name
            }

            var val=this.getSaved(name)
            if(nulifempty===true && val==null){return null}
            return {  name: name, oldValue: null,  newValue: val,   value: val, object: this   }
        },
        firePropertyChangeEv1: function(a) {
            var impl= this.properties && this.properties.fire ? this.properties.fire(a) :
                this.fire ? this.fire(a) :
                    this.dispatch ? this.dispatch(a)
                        : alert("firePropertyChangeEv must be implemented")
            return this
        },
        _addListener:function(nm,fn,optns) {
            if (!this.__listeners) {
                this.__listeners = $.emitter.simpleObserver(this, {defEv: "*",ignoreDotInName:true})
            }
            if(optns && optns.nonnull){
                optns.filter=function(a){return !(a && a.value !=null)}
            }
            var H=this.__listeners.add(nm,fn,optns)
            if(!H || (optns && optns.nodefault)){return}
            if(H.type !="*" && H.type !="**"){
                if(this.getSaved(nm)!=null){
                    var rec=this.getMutationRecord(nm,null,true)
                    rec &&  H.fn.call( this ,rec)
                }

            } else if(H.type =="*"){
                for (var i = 0, c = this.keys(), d = c.length; d > i; i++) {
                    if(this.getSaved(c[i])!=null){
                        var rec=this.getMutationRecord(c[i],null,true)
                        rec &&  H.fn.call( this ,rec)
                    }

                }
            }
        },
        addExpr:function(nm,expr){
            var D=(expr && expr.expr)?expr:{expr:expr}
            return this.addProperty(nm,D)
        },
        on:function(nm,fn,optns) {
          this._addListener(nm,fn,optns)
            return this
        },
        off:function(nm,fn){
            this.__listeners && this.__listeners.remove(nm,fn)
        },

        copyData:function(src){
            var ths=this
            src.keys().forEach(
                function(k){
                    var D=ths.getDescriptor(k),v=src.getItem(k)
                    if(D && (D.isExpr)){return}
                    if(isModel(v)){
                        var t=ths.getItem(k)
                        if(isModel(t)){
                            t.copyData(v)
                        }
                    } else{
                        ths.setItem(k,v)
                    }
                }
            );
            this.recalcAll();
        },
         makeDescriptor:function(){
             var C=this.getConfig(),args=[];
             if(!C){
                 alert("no Config")
                 return
             }
             if(arguments.length==1 && arguments[0] && typeof(arguments[0])=="object" && arguments[0].length){
                 args=arguments[0]
             } else{args=arguments}
             var name=args[0],isexpr, valdescriptor=args[1],val=args[2]
             if(args.length==1 ){
                 if($.isPlain(args[0]) && args[0].name){
                     name=args[0].name;
                     valdescriptor=args[0];
                     valdescriptor.descriptor=true;
                 } else if(typeof(name)=="string"){
                     valdescriptor={name:name,descriptor:true}
                 }
             }
             if(!(name && typeof(name)=="string")){
                 return
             }
             if(isDescriptor(valdescriptor) ){
                 var ths=this,expr=valdescriptor.expr
                 if(expr){
                         if(typeof(expr)=="function" && !(valdescriptor.vars)){
                             var info=$.fn.info(expr);
                             var str=$.fn.getBody( expr).replace(/[\r\n]/g,";").replace(/'[^']*'/g,"").replace(/"[^"]*"/g,"");
                             var vars1=[],argname=info.args?info.args[0]:null;
                              (" "+str).replace(/([a-z_][\w_]*)\.([a-z_][\w_]*)/ig,function(a,b,c){
                                 if(b!=argname){ return}
                                 if(isNaN(c) && !$.parseUtil.isReservedWord(c,true)){
                                     vars1.push(c)
                                 }
                             });
                             valdescriptor.vars=vars1;
                         }
                       var fn=$.fnize( expr);
                     valdescriptor.fn=fn
                     valdescriptor.isExpr=true
                     if(!valdescriptor.vars){
                         valdescriptor.vars=fn.vars||[]
                     }
                     var vars=valdescriptor.vars
                     if(vars){C.depends||(C.depends={});
                         for(var i= 0,l=vars,ln= l.length;i<ln;i++){
                             C.depends[l[i]]||(C.depends[l[i]]=[]);
                             C.depends[l[i]].push(name)
                         }
                     }
                     valdescriptor.calc=function(model,noset,curr){
                         if(noset!==true && typeof(curr)==="undefined"){
                             curr=model.getSaved?model.getSaved(this.name):model.get(this.name)
                         }
                         var fn=this.fn
                         if(!fn){return}
                         var val=fn.call(model,model)
                         if(noset!==true && val !==curr && model.setItem){
                             model.setItem(this.name,val )
                         }
                         return val
                     }.bind(valdescriptor)
                     isexpr=fn;
                 } else { }
                 valdescriptor.name=name
             } else{
                 val=valdescriptor
                 valdescriptor={name:name};
             }
             if(val==null && (valdescriptor.initValue||valdescriptor.defaultValue)){
                 val=valdescriptor.initValue||valdescriptor.defaultValue;
             }
             //if(val!=null && !(typeof(val)=="number" && isNaN(val))){
             //}


             if(!valdescriptor.typeInfo){
                 if(valdescriptor.type){
                     valdescriptor.typeInfo=$.typeInfo(valdescriptor.type)
                 }
                 if(valdescriptor.initValue||valdescriptor.defaultValue){
                     valdescriptor.typeInfo=$.typeInfo(valdescriptor.initValue||valdescriptor.defaultValue)
                     valdescriptor.type=valdescriptor.typeInfo.type
                 }
             }
            if($.baseModel && $.baseModel._readers && valdescriptor.reader ){
                if(typeof(valdescriptor.reader)=="string" && $.baseModel._readers[valdescriptor.reader]){
                    valdescriptor.reader=$.baseModel._readers[valdescriptor.reader](valdescriptor.readerOptions);
                } else if(typeof(valdescriptor.reader)=="object" && valdescriptor.reader.name && $.baseModel._readers[valdescriptor.reader.name]){
                    valdescriptor.reader=$.baseModel._readers[valdescriptor.reader.name](valdescriptor.reader);
                }
                if(typeof(valdescriptor.reader)!="function"){
                    valdescriptor.reader=null;
                }
            }


             return {descriptor:valdescriptor,value:val}
         },
        isComputed: function(a) {
            return (this.getDescriptor(a)||{}).isExpr
        },
        getSaved:function(){
          return null
        },
        readRecord:function(record){
            return this.readDataRecord(record)
        },
        readDataRecord:function(record,ignorelist){
            if(!(record && typeof(record)=="object")){return  this}
            ignorelist=ignorelist||[]
            if(typeof(ignorelist)=="string"){ignorelist=ignorelist.split(/\s+/)}
            if(!Array.isArray(ignorelist)){ignorelist=[]}
            var kys=this.keys();
            var ths=this
            if(typeof(record.keys)=="function"){
                record.keys().forEach(
                    function(k){
                        var nm=kys.indexOf(k)>=0?k:
                            kys.indexOf(k.replace(/_/g,""))>=0?k.replace(/_/g,""):
                                (kys.indexOf(k.replace(/_(\w)/g,function(a,b){return b.toUpperCase()}))>=0?k.replace(/_(\w)/g,function(a,b){return b.toUpperCase()}):
                                    (kys.indexOf(k.replace(/([A-Z])/g,function(a,b){return "_"+b.toLowerCase()}))>=0?k.replace(/([A-Z])/g,function(a,b){return "_"+b.toLowerCase()}):null)
                                )
                        if(nm){
                            ignorelist.indexOf(nm)==-1 && ths.setItem(nm,this.getItem(k))
                        }
                    },record
                )
            } else  {
                $.each(record,
                    function(val,k){
                        if(typeof k !="string"){return}
                        var nm=kys.indexOf(k)>=0?k:
                            kys.indexOf(k.replace(/_/g,""))>=0?k.replace(/_/g,""):
                                (kys.indexOf(k.replace(/_(\w)/g,function(a,b){return b.toUpperCase()}))>=0?k.replace(/_(\w)/g,function(a,b){return b.toUpperCase()}):
                                    (kys.indexOf(k.replace(/([A-Z])/g,function(a,b){return "_"+b.toLowerCase()}))>=0?k.replace(/([A-Z])/g,function(a,b){return "_"+b.toLowerCase()}):null)
                                )
                        if(nm){
                            ignorelist.indexOf(nm)==-1 && ths.setItem(nm,val)
                        }

                    }
                )
            }
            this.dataAvailable();
            return this

     },
    onPathChange:function onPathChange(propname,callback,optns) {
        var prop=this.resolveName(propname)
        this.onchange(prop,callback,optns)
        if(prop.indexOf(".")==-1){
            return this
        }
        var qname=prop//.replace(/\./g,"__");
        if(!this.contains(qname)){
            var resolvePath= $.resolveProperty;
            (function(base,prop){
                var lastval,
                checkValchange=$.throttle(function checkValchange(){
                    var val=resolvePath(base,prop),
                        old=lastval
                    if(old==val){return}
                    lastval=val
                    base.firePropertyChangeEv({
                        name:prop,  value:val, oldValue:old,   newValue:val, object:base
                    })
                },{tailEnd:true,delay:200})

                var qname=prop//.replace(/\./g,"__");
                var arr=prop.split(".").map(function(n,i){
                        return {name:n,idx:i,object:null,handle:null}
                    }),last
                    arr[arr.length-1]._isLast=true
                    //last=arr[arr.length-1].name;
                function onchange (idx,rec) {

                    var nu=rec.value,nxt,mdl=arr[idx]

                    if(mdl._isLast  ){
                        checkValchange();
                    }
                    else if( nu!=null && (nxt=arr[idx+1]) && nxt.object !== nu ){
                        checkValchange();

                        nxt.object = nu
                        if(isModel(nu)||(typeof(nu.onchange)=="function" && typeof(nu.get)=="function") ){
                            nu.onchange(nxt.name, onchange.bind(this, idx+1),{nodefault:true})
                        }


                        //rec.value.onchange(arr[idx+1], onchange.bind(this, idx+1))
                    }

                }
                arr.reduce(
                    function (cntnr, O,i) {
                        if (cntnr && cntnr.onchange) {
                            O.object=cntnr[O.name];
                            cntnr.onchange(O.name, onchange.bind(base, i),{nodefault:true})
                        }
                        return cntnr?cntnr[O.name]:null;
                    }, base
                );
                checkValchange();
            })(this,prop,callback );


        }

        //this.onchange(qname,function(rec){callback.call(this,{name:rec.name.replace(/__/g,"."),value:rec.value,oldValue:rec.oldValue,newValue:rec.newValue,object:rec.object})})

        return this
    },
        clone:function(deep){
            var ctor=this.constructor
            return this.constructor.newInstance(this.toMap(false,deep))
        },
        recalc:function c(nm) {
            var D=this.getDescriptor(nm)
            if(D && D.calc){
                D.calc(this)
            }
        },
        recalcAll:function recalcAll() {
            for(var i= 0,l=this.keys(),ln= l.length;i<ln;i++){
                var D=this.getDescriptor(l[i])
                if(D && D.calc){
                    D.calc(this)
                }
            }
        },
        createProxy:function createProxy(delegatename) {
            delegatename=delegatename||"propdelegate"
            var props=this.keys().reduce(function(m,k){
                m[k]={descriptor:true,name:k,delegatedTo:delegatename}
                return m
            },{})
            props[delegatename]={descriptor:true}
            return this.constructor.newInstance(props)
        },
        getConfig:function(){ return this.__config},
        resolveName:function(a,config) {
          return a
        },
        getDescriptor: function(a) {
            var C=this.getConfig()
            return ((C||{}).descriptors||{})[this.resolveName(a,C)]
        },
        hasProperty: function(nm) {
            return this.getDescriptor(this.resolveName(nm))
        },

        keys: function() {
            return alert("implement has"), []
        },
        addProperty: function() {
            alert("implement add")
        },
        removeProperty: function() {
            alert("implement removeProperty")
        },
        __isModel:true
     }
    var baseModel= $.createClass(
        function baseModel() {
                alert("Abstract class not be intantiated")
        },
        proto
    );
    //function baseModel() {
     //   self.Klass && arguments[0] === self.Klass || null === arguments[0] || (this.__instance__ = !0, arguments[0] && this.initModel(arguments[0], arguments[0]))
    //}
    //proto.constructor = baseModel
    //baseModel.prototype=proto;
    //baseModel.prototype.shared = {}
    baseModel.isModel = !0;


/*
    var ctorTemplate = function __id__(b) {
        return this instanceof __id__ ? (this.init.apply(this, arguments), void this.initModelInstance()) : new __id__(b, arguments[1])
    }.toString();
    baseModel.extend=function(id,proto){
        var ctor,nu=new baseModel();
        if(id && typeof(id)=="object"){proto=id;id=null}
        if(typeof(id)!="string"){id="ctor_"+Math.random().toString(36).substr(2,5)}
         ctor=eval("(function "+id+"(props){if(!(this instanceof "+id+")){return new "+id+"(props);}  this.init.apply(this,arguments)})")

        if(proto && typeof(proto)=="object") {
            Object.keys(proto).forEach(
                function (k) {
                    if(isNaN(k)){nu[k] = proto[k]}

                }
            )
        }

        if(typeof(nu.init)!="function"){nu.init=function(props){this.initModel(props)}}
        ctor.prototype=nu;
        nu.constructor=ctor;
        ctor.newInstance=function(){return new ctor(arguments[0])}
        return ctor;
    }
    baseModel.extend = function(id, proto) {
        var ctor, nu = new baseModel;
        return id && "object" == typeof id && (proto = id, id = null), "string" != typeof id && (id = "model_" + Math.random().toString(36).substr(2, 5)),
            ctor = eval("(" + ctorTemplate.replace(/__id__/g, id.replace(/\.\-/g, "_")) + ")"), proto && "object" == typeof proto && Object.getOwnPropertyNames(proto).forEach(function(a) {
            isNaN(a) && (nu[a] = proto[a])
        }), "function" != typeof nu.init && (nu.init = function(a, b) {
            this.initModel(a, b)
        }), ctor.prototype = nu, nu.constructor = ctor, ctor.newInstance = function() {
            return new ctor(arguments[0])
        }, ctor
    }*/
    baseModel._readers = {
        array: function  (a) {
            var config = a || {};
            return function(val, current) {
                if (null == val) return [];
                var d = [];
                if(current && $.isArray(current)){
                    d = current
                }
                var nu = val,
                    f = 0;
                if ("string" == typeof val && config.delim ) {
                    nu = val.split(config.delim)
                }
                if (val) {
                    var g = nu._add || val._plus,
                        h = val._remove || val._minus;
                    if (g || h) {
                        if (h && $.isArrayLike(h))
                            for (var i, j, k = 0, l = val.length; j = val[k], l > k; k++)(i = d.indexOf(j)) > -1 && (d.splice(i, 1), f = 1);
                        if (g && $.isArrayLike(g))
                            for (var i, j, k = 0, l = val.length; j = val[k], l > k; k++) config.uniq && d.indexOf(j) >= 0 || (d.push(j), f = 1)
                    }
                }
                if ($.isArrayLike(nu))
                    for (var j, k = 0, l = nu.length; j = nu[k], l > k; k++) {
                        - 1 == d.indexOf(j) && (d.push(j), f = 1);
                    }
                else {
                    f = 1
                    d.push(nu);
                }
                f && $.updateVersion(d)
                return  d
            }
        },
        set: function(b) {
            var c = $.isPlain(b) ? b : {};
            return c.uniq = !0, a(c)
        },
        model: function(a) {
            var config = $.isPlain(a) ? a : {};
            return function(val, old) {
                if (isModel(val) ) {
                    return val;
                }
                if(isModel(old)) {
                    old.update(val)
                    return old;
                }
                if($.isPlain(val)){
                    return $.simpleModel(val)
                }
                return null;
            }
        },
        map: function(a) {
            var config = $.isPlain(a) ? a : {};
            return function(val, current, d) {
                var e = 0;
                if (null === val) return config.noresetOnNull ? current : {};
                var f = val;
                if ("string" == typeof val) {
                    var stringParser = config.stringParser || (d?d.__stringParser:null);
                    if(typeof(stringParser)=="function"){
                        f = stringParser(val)
                    } else{
                        f={}
                        f[val]=null;
                    }

                } else if($.isArrayLike(val)){
                    f = {}
                    $.each(val, function(b, i) {
                        if(!b){return}
                        if(typeof(b)=="object"){
                            if(b.name && "value" in b){
                                f[b.name]= b.value;
                            }
                        }
                        else{
                            f[b]=val[b]==null?null:val[b];
                        }
                    })
                }
                if(!$.isPlain(f)){return config.noresetOnNull ? current : {};}
                if($.isPlain(current)){
                    $.extend(current, f)
                    $.updateVersion(current)
                    return current
                }
                return f
            }
        }
    }

    baseModel._readers.list = baseModel._readers.array
    baseModel.prepareDescriptor = function(name,data,type){
        var descript={descriptor:true}
        if(typeof(name)!="string"){
            type=data;
            data=name;
        }
        if(name){descript.name=name}
        if(typeof(data)=="function"){
            descript.defaultValue=data
        } else if(typeof(data)=="string") {
            descript.name=data;
            if($.isPlain(type)){
                Object.assign(descript,type)
                type=null;
            }
        } else if($.isPlain(data)){
                Object.assign(descript,data)

        }
        if(type) {
            descript.type=type;
        }
        return descript;
    }

    baseModel.registerReader = function(a, b) {
        "function" == typeof b && (baseModel._readers[a] = b)
    }
    return baseModel
}();$.fn = function() {
    function fn() {
        return $.fn.resolve.apply(null, arguments)
    }

    function _fninfo(a, b) {
        var c = {
            name: "",
            args: [],
            arity: 0
        };
        if ("string" == typeof a && b && (c.name = a, a = b[a]), "function" != typeof a) return null;
        c.name = a.name || c.name || a.__name__, c.arity = a.length;
        var d = a.toString();
        return (!c.name || c.arity) && d.replace(/function([^\(]*)\(([^\)]+)\)/g, function(a, b, d) {
            c.name = c.name || b.trim(), c.args = d.trim().split(/\s*,\s*/)
        }), d.indexOf("[native code]") > 0 && (c.native = !0), !c.name && b && "object" == typeof b && (c.name = Object.keys(b).filter(function(c) {
                return b[c] === a
            })[0] || ""), c.name && 0 == c.name.indexOf("get") && c.name.length > 3 && c.name.charAt(3).toUpperCase() === c.name.charAt(3) && !c.args.length ? (c.fieldname = c.name.charAt(3).toLowerCase() + c.name.substr(4), c.isAccessor = "get") : c.name && 0 == c.name.indexOf("set") && c.name.length > 3 && c.name.charAt(3).toUpperCase() === c.name.charAt(3) && 1 == c.args.length && (c.fieldname = c.name.charAt(3).toLowerCase() + c.name.substr(4), c.isAccessor = "set"), c
    }

    function _wrap(orig, nu, options) {
        var optns = options || {}
        var preargs = [].slice.call(arguments, 3),fn
        if(optns===true){optns={argsaslist:true}}
        if(!preargs.length && optns.args){preargs=[].concat(optns.args)}
        else {optns.argsaslist=optns.argsaslist||optns.argsasarray||optns.asarray||optns.asalist}
        if (optns.argsaslist) {
            if(!preargs.length){preargs=false;}
            if (optns.thisasarg) {
                var ctx=optns.context||null
                fn= function () {
                    var args=preargs?preargs.concat([].slice.call(arguments)):[].slice.call(arguments);
                    return nu.call(ctx===null?this:ctx, orig,this,args);
                }
            } else {var ctx=optns.context||null
                fn=function () {
                    var args=preargs?preargs.concat([].slice.call(arguments)):[].slice.call(arguments)
                    return nu.call(this, orig,args);
                }
            }
        } else{
            preargs.unshift(orig)
            var ctx=optns.context||null
            if (optns.thisasarg) {
                fn=function () {
                    var args=preargs.concat([].slice.call(arguments));
                    args.unshift(this)
                    return nu.apply(ctx===null?this:ctx, args);
                }
            } else {
                fn=function () {
                    var args=preargs.concat([].slice.call(arguments));
                    return nu.apply(ctx===null?this:ctx, args);
                }
            }
        }
        if(fn){
            fn.___inner=orig
        }
        return fn;
    }

    function _ispartialArg(a) {
        return "string" == typeof a && ("_" === a || "?" === a|| "*" === a)
    }

    function _partialArgs(fn, optns) {
        var info = _fninfo(fn) || {}, args = [].slice.call(arguments, 2),align
        if(typeof(optns)=="string"){align=optns;optns=null}
        if(!$.isPlain(optns)){optns={}}
        info.partials = {args:[],align:align,indexes:[],optns:optns}
        if (info && (align || info.arity || args.length)) {
            if (args.length && args.some(_ispartialArg)) {

                var partialidx = []
                args.forEach(function (k, i) {
                    if (_ispartialArg(k)) {
                        partialidx.push([i, k])
                    }
                })
                if (partialidx.length) {
                    var ln = partialidx.length - 1;
                    info.partials.indexes= partialidx
                     if (partialidx.length> 1 && partialidx[0][1] == "*") {
                        align = "left";
                    }
                    else if (partialidx.length > 1 && partialidx[ln][1] == "*") {
                        align = "right";
                    }
                    info.partials.args = args;
                }
                info.partials.align = align;
                info.partials.curryargs = align ? args.filter(function (a) {
                    return !_ispartialArg(a)
                }) : args
            }
            info.origfn=fn

        }

        function pendingresolve(memo) {
            var args=[].slice.call(arguments[1])
            var splatIdx=-1
             while(args.length && memo.indexes.length){
                 var I=memo.indexes.shift()
                 if(I && I[0]>=0){
                     if(I[1]=="*"){splatIdx=I[0]}
                     else{memo.args[I[0]]=memo.align=="left"?args.pop():args.shift()}
                 }

            }
            if(memo.indexes.length) {
                if (memo.chain) {
                    return function () {
                        pendingresolve(memo, arguments)
                    }
                } else {
                    while(memo.indexes.length){
                        memo.args[memo.indexes.shift()[0]]=null
                    }
                }
            }
            if(splatIdx>=0 && args.length){
                memo.args.splice.apply(memo.args,[splatIdx,1].concat(args))
            }
            return memo.fn.apply(memo.ctx,memo.args)
        }
        return function(){
            var args=[].slice.call(arguments)
            if(info.partials && info.partials.args){
                 return pendingresolve({indexes:info.partials.indexes.slice(),args:info.partials.args.slice(),fn:info.origfn,ctx:this,chain:info.partials.optns.chain},args)
            }
            return info.origfn.apply(this, arguments)
        }


    }
    fn.wrap2 = function(a, b, c) {
        c = c || null;
        var d = $.fn.resolve(a, c);
        return d ? function() {
            var a = [d].concat([].slice.call(arguments));
            return b.apply(null === c ? this : c, a)
        } : null
    }
    var _fnCache={}
    fn.getCached = function(nm) {
        if(typeof(nm)=="function"){nm=nm.name}
        return _fnCache[nm];
    }
    fn.cache = function(nm,fn) {
        if(typeof(nm)=="function"){fn=nm;nm=fn.name}
        if(nm){_fnCache[nm]=fn;}
    }
    fn.getBody = function(a) {
        return (a || {}).toString().replace(/^([^\{]+\{)|}$/g, "").trim()
    }
    fn.getBody = function(a) {
        return (a || {}).toString().replace(/^([^\{]+\{)|}$/g, "").trim()
    }
    fn.curry = function(fn) {
        var initargs = arguments[1] && {}.toString.call(arguments[1]).indexOf("Arguments") >= 0 ? [].slice.call(arguments[1]) : [].slice.call(arguments, 1)
        return (function(fn, args) {
                return function() {
                    return fn.apply(this, args.concat([].slice.call(arguments)))
                }
            })(fn, initargs)
    }
    fn.rcurry = function(fn) {
        var initargs =  arguments[1] && {}.toString.call(arguments[1]).indexOf("Arguments") >= 0 ? [].slice.call(arguments[1]) : [].slice.call(arguments, 1)
        return (function(fn,  args) {
                return function() {
                    return fn.apply(this, [].slice.call(arguments).concat(args))
                }
            })(fn, initargs)
    }
    fn.partial = function(a) {
        return _partialArgs.apply(this, [a, ""].concat([].slice.call(arguments, 1)))
    }
    fn.partialChain = function(a) {
        return _partialArgs.apply(this, [a, {chain:true}].concat([].slice.call(arguments, 1)))
    }
    fn.serialize = function(a) {
        return "FN|(" + a.toString() + ")"
    }
    fn.deserialize = function(str) {
        return str && "string" == typeof str && "FN|" == str.substr(0, 3) ? eval(str.substr(3)) : null
    }
    fn.wrap = _wrap
    fn.unwrap = function(a) {
        return a.__inner
    }
    fn.info = _fninfo
    fn.block = function() {}
    fn.getCached = function() {
        var a = {};
        return function(b, c) {
            return c = c || b.name, c ? a[c] || (a[c] = b) : b
        }
    }()
    fn.defer = function(a, b) {
        var c = [].slice.call(arguments, 2),
            d = $.fnize(a);
        return b && Number(b) > 0 || (b = 0), c.unshift(d, b), Function.apply.bind(setTimeout, self, [d, b, 4, 3])
    }
    fn.delay = function(a, b) {
        var c = [].slice.call(arguments),
            d = c[0] = $.fnize(a);
        return $.isNumber(b) || (b = 0), c[1] = Math.max(b, 0), c.length > 2 ? setTimeout.apply(self, c) : setTimeout(d, b)
    }
    fn.resolve = function(fn, ctx) {
        (!ctx || "object" != typeof ctx && "function" != typeof ctx) && (ctx = null);
        var f = fn;
        if ("string" == typeof fn) {
            if (fn.indexOf(".") > 0) {
                var arr = fn.split("."),
                    nm = arr.pop();
                try {
                    var ctx1 = null;
                    f = eval("ctx1 = " + arr.join(".")), ctx1 && (ctx = ctx1, f = ctx[nm])
                } catch (e) {}
            } else console && console[fn] ? ctx = console : Math[fn] && (ctx = Math), ctx || (ctx = self), f = ctx[fn];
            "function" != typeof f && (f = $.fnize(f, {
                context: ctx
            }))
        }
        return "function" != typeof f ? null : f
    }
    fn.spyOn = function(a, b) {
        var c, d = function() {};
        return b && "function" == typeof a[b] ? c = a[b] : "function" == typeof a && (c = a), d.returnValue = function(a) {
            return function() {}
        }, d

    }

    fn.traceCall = function() {
        var nu = new Error("for tracing");
        if(nu.stackTrace){

        }
    }
    fn.Eval=function(a,ctx,onerror){
        var res
        try {
            if (ctx && typeof(ctx) == "object") {
                with(ctx){res=eval(a)}
            } else{
                res = (1, eval)(a)
            }
        } catch(e){
            if(typeof(onerror)=="function"){onerror(e,a)}
            else{
                throw e;
            }
        }
        return res
    }

    fn.generators = function() {
        function a(a) {
            return {}.toString.call(a).indexOf("Arguments") >= 0
        }

        function b(a, b) {
            return [].slice.call(a, b || 0)
        }
        return {
            getObjectProperty: function(a) {},
            getPropertyValue: function(a) {
                return function(b) {
                    return b ? Array.isArray(b) ? b.reduce(function(b, c) {
                        return b[a] = c[a], b
                    }, {}) : b[a] : void 0
                }
            },
            setObjectProperty: function(a) {
                return null == a ? function() {} : function(b, c) {
                    return a[b] = c
                }
            },
            setPropertyValue: function(a) {
                return function(b, c) {
                    return b && (b[a] = c)
                }
            },
            invokeProperty: function(c) {
                var d = a(arguments[1]) ? b(arguments[1]) : b(arguments, 1),
                    e = null;
                return function(f) {
                    return f && "function" == typeof f[c] ? f[c].apply(null === e ? this : f, d.concat(a(arguments[1]) ? b(arguments[1]) : b(arguments, 1))) : null
                }
            },
            wrap: fn.wrap
        }
    }();
    Function.prototype.curry || (Function.prototype.curry = function() {
        return $.fn.curry(this, arguments)
    });
    Function.prototype.curry || (Function.prototype.rcurry = function() {
        return $.fn.rcurry(this, arguments)
    });
    return fn
}();/**
 * Created by Atul on 12/3/2014.
 */
$.callbacks=function(type,delegate,config ) {
    var config= $.isPlain(config)?config:{}, innerlist = [];
    config.type=type;
    config.state=1;
    config.delegate=delegate
    function _resetIndex() {
        for (var i = 0, ln = innerlist.length; i < ln; i++) {
            if(!innerlist[i].shared){innerlist[i].index = i}
        }
    }
    function _invoke(fn,ctx,fnargs,o,i,torem,typecheck) {
        //try {
        if(o){
            if( (typecheck && o.typecheck && typecheck!== o.typecheck)||
                o._remove||
                (o.filter&&!o.filter.call( ctx  ,fnargs,o))||
                (config.defaultFilter&&!config.defaultFilter( ctx  ,fnargs,o))
            ){
                if(o._remove && torem&& i>=0){torem.push(i)}
                return false
            }  else {
                if(o.ctx){ctx=o.ctx}

            }
        }

        if(config.prepareArgs){fnargs=config.prepareArgs(fnargs)}
        var ln=fnargs.length,
            res=(!ln && !ctx)?fn():(ln===1?fn.call(ctx, fnargs[0]):fn.apply(ctx, fnargs))
        if( o && i>=0 && o.once && torem){torem.push(i)}
        return res
        //} catch(e){

        //}
    }
    function _getHandle(fn,id,shared) {
        if(fn&&typeof(fn)==="string"){id=fn;fn=null}

        for (var ln = innerlist.length, i = ln-1, h; i >=0; i--) {
            h = innerlist[i];
            if(!h || !h.fn ||h._remove){innerlist.splice(i,1);continue}
            if ((id&&h.optns.id===id)||(fn&&h.fn === fn)) {
                return h
            }
        }
        if(id && shared && shared.ids&& shared.ids[id] ){
            return shared.ids[id]
        }
    }

    var dispatcher = {
        dispatch: function _dispatch(evt) {//onlu
            var res
            if(config.state==1){
                var args=evt||{},torem=[],ln=innerlist.length
                config.lastargs=[args];
                var typecheck = args.typecheck || args.type || null,typecheck2=null
                if(!typecheck && typeof(config.typecheck)=="function"){
                    typecheck =config.typecheck(args,config)
                }
                for(var i = 0, h;h=innerlist[i],i<ln;i++){
                    var o=h.optns,fnargs=[args]
                    if(o && o.args&&o.args.length){fnargs=o.args.concat(fnargs)}
                    try {
                        res=_invoke(h.fn,config.delegate||o.ctx || null, fnargs,o,i ,torem,typecheck )
                    } catch(e){
                        $.handleEx(e);
                        console.log(e,"error while dispatch")
                    }
                }
                while(torem.length){
                    innerlist.splice(torem.pop(),1)
                }

            }
            return res
        }
    }

    if(config.type&&config.delegate&&(config.delegate.el||config.delegate).addEventListener){
        config.eventSourcehandle= dispatcher.dispatch ;
        if(!config.noattach) {
            (delegate.el || delegate).addEventListener(config.type, config.eventSourcehandle)
        }
    }
    return {
        setConfig:function(nm,val){if(!nm){return}
            if(typeof(nm)=="string"){config[nm]=val}
            else{$.extend(config,nm);}
            return this;
        },
        getConfig:function(nm){return typeof(nm)=="string"?config[nm]:config},
        dispatch:function(ev){
            if(!config.state){return}
            var args=null
            if(ev&&({}).toString.call(ev)=="[object Arguments]"){args=ev[0]}
            else{args=ev }
            if(config.stickyPromise){
                config.stickyPromise.resolve(ev)
            }
            return dispatcher.dispatch(args)
        },
        setFilter:function(fn){config.defaultFilter=fn;},
        isPaused:function(){return config.state==-1},
        isStopped:function(){return !config.state},
        stop:function(memory){if(!config.state){return}
            innerlist.length=0;
            config.state=0;
            if(memory!=null){if(memory===true){memory=config.lastargs}
                if(!Array.isArray(memory)){memory=[memory]}
            }
        },
        destroy:function(){
            this.stop();
            innerlist=config.lastargs= config.delegate=config.memory=null
        },
        pause:function(){if(config.state==1){config.state=-1}},
        resume:function(){if(config.state==-1){config.state=1}},
        isEmpty:function(){return!(innerlist&&innerlist.length)},
        add:function(fn,opts){if(!config.state){return}
            if(fn===null && opts) {
                this.remove(  opts.id||opts  );
                return
            }
            if(typeof(fn)=="string"){
                if(config.delegate && typeof(config.delegate[fn])=="function"){fn=config.delegate[fn] }
                else if(typeof(console[fn])=="function"){fn=console[fn].bind(console)}
                else if(typeof(self[fn])=="function"){fn=self[fn].bind(self) }
            }
            if(typeof(fn)!="function"){return}
            if(this.isStopped()){
                if(config.memory){
                    _invoke(fn,null,config.memory)
                }
                return;
            }
            var o={}
            if(opts&&typeof(opts)=="object"){o=opts}
            else if(typeof(opts)=="string"){o.id=opts}
            else if(typeof(opts)=="boolean"){o.once=opts}
            if(this._sticky){   o.once=true; }
            if(config.stickyPromise){
                config.stickyPromise.then(fn.bind(config.delegate))
                return
            }
            var h
            h=_getHandle(fn,o.id,this.__shared);
            if(!h){var id=o.id
                h={fn:fn,optns:o}
                if(id && this.__shared){
                    this.__shared.ids||(this.__shared.ids={})
                    if(!this.__shared.ids[id]){
                        h.count=0
                        h.shared=id;
                        this.__shared.ids[id]=h
                    }
                    h.count++
                }
                innerlist.push(h)
            } else {
                //h.fn=fn;
                if(!h.shared) {
                    $.extend(h.optns, o)
                } else{
                    if(innerlist.indexOf(h)==-1){
                        innerlist.push(h)
                        h.count++;
                    }

                }
            }

            if(this._sticky){
                if(config.lastargs){
                    this.dispatch(config.lastargs )
                }
            }
        },
        remove:function(fn,id) {if(!config.state){return}
            var h ;

            if (h= _getHandle(fn,id,this.__shared)) {
                var idx=innerlist.indexOf(h)
                idx>=0 && innerlist.splice(idx, 1);
                if(h.shared) {
                    h.count--;
                    if (h.count<=0 || (typeof(fn) == "string" && h.shared == fn)) {
                        h._remove = true;
                        if (this.__shared && this.__shared.ids && this.__shared.ids[h.shared]) {
                            delete this.__shared.ids[h.shared]
                        }
                    }
                }
                _resetIndex()
            }
            if(!innerlist.length&&config.eventSourcehandle&&config.delegate&&config.delegate.removeEventListener){
                config.delegate.removeEventListener(config.type,config.eventSourcehandle);config.eventSourcehandle=null;
            }
        }
    }
};
$.emitter=(function(){
    var HIGHESTPRIORITY=1000,PROPEVENTNAME="propertychange"
    function _cleanObj(){return Object.create(null)}

    function _getCallbacks(ev0,createifnot,options){
        var ev=_fixname.call(this,ev0);
        this._listenrs||(this._listenrs=_cleanObj());
        if(!this._listenrs[ev]&&createifnot){
            this._listenrs[ev]= $.callbacks(ev,this.delegate,options)

        }
        if(this._listenrs[ev] && options && options.sticky){
            options.stickyPromise=options.stickyPromise||Promise.deferred()
        }
        return this._listenrs[ev]
    }
    function _dispatch(ev0,firstarg){
        var ev=_fixname.call(this,ev0)
        if(this._listenrs&&this._listenrs[ev]){
            return this._listenrs[ev].dispatch(arguments)
        }
    }

    function _fixname(ev){
        if(!ev){ev=this.config.defaultEv}
        return !ev?this.config.defaultEv:String(ev).replace(/^(on)|[\s]+/g,"").toLowerCase()
    }

    function Observer(ctx){
        this.init(ctx)
    }
    var proto={}
    proto.init=function(ctx){
        this._listenrs=_cleanObj();
        this.config={cancelEventOnFalse:false,defaultEv:null,ctx:ctx};
        if(ctx!=null){this.delegate=ctx}
        this.__shared={}
    }
    proto.hasListener=function(ev0,verified){ var ev=verified===true?ev0:_fixname.call(this,ev0)
        var hndl=_getCallbacks.call(this,ev);
        return  (hndl&&!hndl.isEmpty())
    }
    proto.pause=function(){
        this.__paused=true
        return  this
    }
    proto.resume=function(){
        delete this.__paused
        return  this
    }
    proto.delegate=null;
    proto.on=function on(ev0,fn,optns){  var ths=this
        optns=optns||{}

        if(typeof(ev0)=="string"){
            if(ev0.indexOf(" ")>0){
                ev0.split(/\s+/).forEach(function(k){ths.on(k,fn,optns)},ths);
                return
            } else if(/\$once$/.test(ev0)){
                ev0=ev0.replace(/\$once$/,"")
                optns.once=true
            }
        }

        var lhandle,ev=String(ev0),id=optns.id;

        if(!optns.id && ev.indexOf(".")>0) {var arr=ev.split(/\./);
            ev=arr.shift();
            if(arr.length){id=arr.pop()}
        }
        if(id=="fn"||id=="@"){id=fn.name||fn._name}
        optns.priority||(optns.priority=0);
        if(optns.priority<0){optns.priority=HIGHESTPRIORITY+optns.priority} ;

        if(id){optns.id=id}
        lhandle=_getCallbacks.call(this,ev,true)
        if(ths.sp_events&&ths.sp_events[ev]&&ths.sp_events[ev].setup){
            ths.sp_events[ev].setup.call(ths,ev,optns)
        }
        lhandle.add(fn,optns)

        lhandle.__shared=this.__shared
        return lhandle
    }
    proto.off=function(ev0,fn,id){

        var ev=_fixname.call(this,ev0)
        var lhandle=_getCallbacks.call(this,ev)
        if(!lhandle ){
            if(!id ){

            }
        }
        if(lhandle){
            lhandle.remove(fn,id)
            if(lhandle.isEmpty()){
                if( this.sp_events&&this.sp_events[ev]&&this.sp_events[ev].clear){this.sp_events[ev].clear.call(this,ev)}
            }
        }
        return this
    }
    proto._handlePropchangeEvent=function(rec){
        if(rec && rec.name){
            this.fire(PROPEVENTNAME+"-"+rec.name.replace(/\./g,"___"),rec)
            if(rec.name!="*"&&this.hasListener(PROPEVENTNAME+"-*")){
                this.fire(PROPEVENTNAME+"-*",rec)
            }
        }
    }
    proto.onpropertychange=function(propname,fn,opts){
        var ths=this
        if(typeof(propname)=="function"){opts=fn;fn=propname; propname="*"  }


        var props = String(propname).split(/[\s,]+/);
        var ctx = this.delegate||this,properties="properties"in ctx?ctx.properties:ctx;
        if(this.__paused){return}
        if(fn===false||fn===null||opts===false){
            if(!ths.hasListener(PROPEVENTNAME)){return}
            for (var idx = 0, ln = props.length; idx < ln; idx++) {
                var prop = props[idx].replace(/\./g,"___");
                ths.off("propertychange-"+prop,fn,opts&&opts.id?opts.id:opts )
                ths.off("propertychange-"+props[idx],fn,opts&&opts.id?opts.id:opts )

            }
            return;
        }
        if(!ths.hasListener(PROPEVENTNAME)){
            ths.register(PROPEVENTNAME,{})
            ths.on(PROPEVENTNAME,ths._handlePropchangeEvent.bind(ths))
        }
        if(properties&&typeof(properties.getItem)=="function") {
            for (var idx = 0, ln = props.length; idx < ln; idx++) {
                var prop = props[idx];
                //this.observer.onpropertychange(prop, callback , opts);
                if (prop != "*" && properties.getItem(prop) != null) {
                    var val = properties.getItem(prop);
                    fn.call(ctx, {name: prop, value: val, newValue: val, oldValue: null})
                }
            }
        }
        for (var idx = 0, ln = props.length; idx < ln; idx++) {
            var prop = props[idx].replace(/\./g,"___");
            ths.on("propertychange-"+prop ,   fn )
        }
        return ths
    }
    proto.setConfig=function(k,v){this.config[k]=v; }
    proto.register=function(ev,lhandle){
        if(lhandle===true){lhandle={sticky:true}}
        var nu= _getCallbacks.call(this,ev,true,lhandle)
        //if(lhandle && lhandle.sticky){nu._sticky=true}
        return nu
    }
    proto.registerSpecial=function(ev0,setup,clr){
        var ths=this ,ev=String(ev0).toLowerCase()
        var sp=ths.sp_events||(ths.sp_events=Object.create(null));
        if(sp[ev]){return}

        sp[ev]=(function(s,c){var _setup=typeof(s)=="function"?s:function(){},
            _clear=typeof(c)=="function"?c:function(){};
            return {
                setup:_setup ,
                clear:_clear
            }
        })(setup,clr)
        return ths;
    }

    proto.trigger=function(ev){this.fire.apply(this,arguments)}
    proto.fireAsync=function(){var a=$.makeArray(arguments);
        setTimeout(function(){this.fire.apply(this,a)}.bind(this),0)}
    proto.once=function(ev0,fn,optns){
        optns=optns||{};optns.once=true
        return this.on(ev0,fn,optns)
    }
    proto.stop=function(immediate,a){
        if(arguments.length==1&&immediate&&typeof(immediate)=="object"){a=immediate;immediate=false}
        if(a &&a.stopPropagation){
            a.stopPropagation()
            if(immediate&&a.stopImmediatePropagation){
                a.stopImmediatePropagation()
            }
        }
    }
    proto.fire=function(ev0){
        if(this.__paused){return}
        var lhandle=_getCallbacks.call(this,ev0 )
        return lhandle?lhandle.dispatch.apply(lhandle,[].slice.call(arguments,1)) :null
    }
    Observer.prototype=proto;
    Observer.prototype.constructor=Observer;
    Observer.prototype.augment=function(ctx,triggerfn){
        var nu=this;
        nu.delegate=ctx
        if(!("on" in ctx)){ctx.on=function(){this.on.apply(this,arguments);return this.delegate}.bind(nu)}
        if(!("off" in ctx)){ctx.off=function(){this.off.apply(this,arguments);return this.delegate}.bind(nu)}
        if(!("onpropertychange" in ctx)){ctx.onpropertychange=function(){this.onpropertychange.apply(this,arguments);return this.delegate}.bind(nu)}
        if(!("fire" in ctx)){ctx.fire=function(){this.fire.apply(this,arguments);return this.delegate}.bind(nu)}
        if(triggerfn){nu.trigger=triggerfn.bind(nu)}
        ctx.emitter=nu

    };

    var ret= function(ctx,augment,triggerfn){
        var nu= new Observer(ctx)
        if(ctx&&augment){
            nu.augment(ctx,triggerfn)
        }
        return nu;
    }
    ret.augment= function(ctx){return ret(ctx,true);}
    function simpleMutationObsetver(delegate,config){
        this._owner=delegate||{};  this.wc=0;
        this._config= $.isPlain(config)?config:{}
    }


    simpleMutationObsetver.prototype={
        wc:null,_owner:null, _handles:null ,que:null,_config:null,
        isObserving:function(nm){
            return this._handles&&this._handles[nm]&&this._handles[nm].length
        },
        forProperty:function(nm){
            var ths=this;
            return {
                on:(function(emitter,name){
                    return function(fn){
                        var a=[].slice.call(arguments)
                        if(a.length>1 && typeof(a[0])!="function" && typeof(a[1])=="function"){a.shift();}
                        a.unshift(name)
                         return emitter.on.apply(emitter,a)
                    }
                })(this,nm),
                trigger:function(name,rec){
                    if(!rec){return}
                     if(rec && typeof(rec)=="object" && ("value" in rec || "newValue" in rec )){ rec.name=name; }
                    else{
                         return
                     }
                      return this.fire(rec)
                }.bind(this,nm)
            }
        },
        addToQueue:function(rec){
            if(this.que && rec && rec.name){
                for(var l=this.que,i=l.length-1,q;q=l[i],i>=0;i--){
                    if(q && q.name===rec.name){l.splice(i,1)}
                }
                this.que.push(rec)
                return true
            }
        },
        clearQueue:function(){
            if(this.que===null){return}
            var  que=this.que.slice();
            this.que=null;
            if(! que.length ){return}
            var  all=(this._owner.catchallcallback||this.catchallcallback||this.catchall )||this.wc
                 if(this._handles||all) {
                    var h=this._handles
                    while (que.length) {
                        var r=que.shift();
                        if((h && h[r.name])||all){
                            this.fire(r)
                        }
                    }
                }

            return;
        },
        queue:function(flag){
            if(flag===false){
                this.clearQueue( )
            } else{
                if(!this.que){this.que=[]}
                return false
            }
            return this
        },
        _fire:function(lst,rec,torem){
            var res
            for (var i = 0, ln = lst.length,fn; fn = lst[i], i < ln; i++) {
                if(!fn){continue}
                var ret,opts=fn[1]||{},fun=fn[0];
                if(typeof(fun) !== "function"){continue;}
                if(opts.filter){
                    if(!opts.filter.call(this._owner,rec,opts)){
                        continue;
                    }
                }
                try {
                    ret = fun.call(this._owner, rec)
                } catch(e){
                    $.handleEx(e,"simpleMutationObsetver: while firing "+rec.name +"+"+rec.value+" "+fun);
                }
                 if((this._config.removeonfalse || opts.removeonfalse) && ret===false){
                    torem.push(i)
                }
                else if(opts.once){
                    torem.push(i)
                }
                res=ret
                //fn.call(this._owner, rec);
            }
            return res;
        },

        fire:function(){
            var rec,ls=[],ob=this,propchange=!(nm=="clear"||nm=="reset"),c_all=(this._owner.catchallcallback||this.catchallcallback||this.catchall );
            var mrec=this._mrec||(this._mrec=$.mutationRecordGen(this._owner)),first=arguments[0];

            if(first===true ){ alert("clearQueue");
                return this.clearQueue( )
            }
            if(arguments.length==1&&first&&typeof(first)=="object"){
                rec=first
            }
            else{
                rec=mrec(first,arguments[1],arguments[2])
            }
            if (typeof(arguments[3]) == "string") {
                rec.valueLabel = arguments[3];
            }
            var nm=rec.name;
            if(!nm||typeof(nm)!="string"){return}

            if(this.addToQueue(rec)){
                return this
            }

            if(ob._handles&&ob._handles[nm]){
                ls=ob._handles[nm]
            }
            var torem=[]

            if(ls.length){
                torem=[]
                this._fire(ls,rec,torem);
                while(torem.length){
                    ls.splice(torem.pop(),1)
                }

            }
            if(propchange && ob.wc){
                torem=[]
                var wclst=ob._handles["*"];
                this._fire(wclst,rec,torem);
                if(torem.length){
                    while(torem.length){
                        wclst.splice(torem.pop(),1)
                    }
                    ob.wc=wclst.length
                }
            }
            if(c_all && typeof(c_all) === "function"){
                c_all.call(this._owner, rec);
            }

             return this._owner
        } ,
        on:function(nm,fn,opts){
            if(Array.isArray(nm)){
                for(var i=0;i<nm.length;i++){
                    this.on(nm[i],fn)
                }
                return this._owner
            }
            var ob=this, f1,h=ob._handles||(ob._handles={});

            if(typeof(nm)=="function"){fn=nm;nm="*"}
            f1= $.fnize(fn)
            if(typeof(f1 )!="function"){
                return
            }

            if(!nm || nm==="*"){nm="*";ob.wc++;}
            h[nm]||(h[nm]=[]);
            if(typeof(opts)=="boolean"){
                opts.once=opts
            }
            opts=opts||{}

            for(var l=h[nm],i= l.length-1;i>=0;i--){
                if(f1==l[i][0]){
                    return this._owner
                }
            }

            h[nm].push([f1,opts])
            return this._owner
        } ,
        off:function(nm,fn){var ob=this,h=ob._handles;
            if(!h||!h[nm]){return}
            for(var l=h[nm],i= l.length-1;i>=0;i--){
                if(fn==null||fn==l[i][0]){
                    l.splice(i,1);
                }
            }
            if(!h[nm].length){
                delete ob._handles[nm]
            }
            return this._owner
        }
    }
    ret.simpleMutationObsetver=function(delegate){
        return new simpleMutationObsetver(delegate)

    }
    ret.simpleObserver=function(delegate,config){
        return (function(dlg,cnfg){
            var LISTENERS,_config=cnfg||{},_delegate=dlg||null
            if(!$.isPlain(_config)){_config={}}
            _config.count=0
            function removeList(nm,torem){
                var L=LISTENERS[nm];if(!L){return}
                while(torem.length){
                    L.splice(torem.pop(),1);
                    _config.count--
                }
                if(!L.length){delete LISTENERS[nm]}
            }
            var api= {
                add:function(nm,fn,optns,batched){
                    var options,toret
                    if(batched===true) {
                        options= optns;
                    } else{
                        if(typeof(nm)=="function"){optns=fn;fn=nm;nm=_config.defEv;optns=null}
                        if(typeof(fn)=="string"){fn= $.fnize(fn,{scope:_delegate})}
                        if(!nm || typeof(fn)!="function"){return}

                        if($.isPlain(optns)){options= $.clone(optns)}

                        else{options={}
                            if(typeof(optns)=="string"){options.id=optns}
                            if(optns==true){ options.once=true}
                        }
                        if($.isPlain(batched)){//additional/pverride config
                            $.extend(config,batched);
                        }
                        options.fn=fn
                         LISTENERS||(LISTENERS={});
                        var arr=nm.trim().indexOf(" ")>0?nm.split(/\s+/):(Array.isArray(nm)?nm:null)
                        if(arr){
                            if(!options.id){options.id= $.UUID()}
                            arr.forEach(function(a){
                                    this.add(a,fn,options,true)
                                }.bind(this)
                            );
                             return options
                        }

                    }
                    LISTENERS[nm]||(LISTENERS[nm]=[]);
                    var id=options.id||{},handle=LISTENERS[nm].find(function(a){return a.fn===fn || a.id===id})
                    if(!handle){
                         LISTENERS[nm].push(options);
                         _config.count++
                    }
                    if(batched!==true && !options.remove){
                        options.remove=function (opts,type) {
                            if (opts.id) {
                                return this.removeById(opts.id)
                            }
                            this.remove(type, opts.fn)
                        }.bind(this, options,nm)

                    }
                    return options
                },
                removeById:function(nm){
                    if(!LISTENERS){return}
                    for(var i= 0,l=Object.keys(LISTENERS),ln= l.length;i<ln;i++){
                        var torem=[]
                        LISTENERS[l[i]].forEach(function(a,i){a.id===nm && torem.push(i)});
                        torem.length && removeList(l[i],torem)
                    }
                },
                destroy:function(nm,fn){
                    if(!LISTENERS){return}
                    for(var i= 0,l=Object.keys(LISTENERS),ln= l.length;i<ln;i++){
                        LISTENERS[l[i]].forEach(function(a,i){ a=null;});
                        LISTENERS[l[i]].length=0;
                        delete LISTENERS[l[i]]
                    }
                    _config.count=0;
                    LISTENERS=null;
                },
                hasListeners:function(nm){
                    if(!nm || !_config.count){return !!_config.count}
                    return  LISTENERS && (LISTENERS[nm] || LISTENERS["*"]|| LISTENERS["**"])
                },
                remove:function(nm,fn){
                    if(!nm || !LISTENERS){return}
                    if(!LISTENERS[nm]){
                        return this.removeById(nm)
                    }
                    var torem=[],L=LISTENERS[nm]
                    L.forEach(function(a,i){a.fn===fn  && torem.push(i)})
                    removeList(nm,torem)
                },
                dispatch:function(nm,data){
                    if(nm && typeof(nm)=="object" && nm.type){data=nm;nm=data.type}
                    if(!(LISTENERS && LISTENERS[nm]&& LISTENERS[nm].length)){return}
                    var torem=[],L=LISTENERS[nm],C=_config,stopon=("stopon" in C)?{v:C.stopon}:null
                    for(var i= 0,ln= L.length|| 0,H;H=L[i],i<ln;i++){
                        if(!H){continue}
                        try{
                            if((C.filter && C.filter(_delegate,data)===false)||(typeof(H.filter)=="function" && H.filter(_delegate,data)===false)){continue}
                            var res=H.fn.call(_delegate,data)
                            if(stopon !==null && stopon.v===res){break;}
                        }  catch(e){
                            console.log(e,"Error while dispatching "+nm  )
                        }
                        H && H.once && torem.push(i)
                    }
                    removeList(nm,torem)
                }
            }
            api.hasListener=api.hasListeners
            api.on=api.add
            api.off=api.remove
            api.once=function(ev,fn,optns){
                return this.add(ev,fn,optns,{once:true})
            }
            api.fire=api.dispatch
            return api;
        })(delegate,config)
    }

    return ret
})();

;;(function(scope){
    /*
     new ItemList({
     reader        :function(d){return d},
     keyprovider   :function(rec){return rec.id},//name or fn
     validator     :function(){return true},
     labelprovider :function(rec){return rec.name},
     comparator    :function(a,b){},
     uniq          :false})

     */
    var defs={
            reader        :{read:function(d){return d} },
            keyprovider   :function(rec){
                if(!(rec && typeof(rec)=="object")){return rec}
                return rec&&typeof(rec)=="object"?(rec.id||(typeof rec.key !="function"?rec.key:null)):rec
            },//name or fn
            validator     :function(){return true},
            labelprovider :function(rec){
                if(!(rec && typeof(rec)=="object")){return String(rec)}
                if(!this.__labelprvdr){this.__labelprvdr=["name","label","title","value"].filter(function(it){return it in rec})[0]};
                return this.__labelprvdr?(rec.get?rec.get(this.__labelprvdr):rec[this.__labelprvdr]):""
            },
            comparator    :function(a,b){return a==b?0:a>b?1:-1},
            uniq          :false},
        abs=Math.abs,min=Math.min.apply.bind(Math.min,Math),max=Math.max.apply.bind(Math.max,Math),
        _at=function(l,v){return l.indexOf(v)}
    function _makeKeyProvider(k){
        if(typeof(k)=="function" ){return k}
        return typeof(k)=="string"?Function("rec","var k='"+k+"';return rec.getEntity?rec.getEntity(k):rec[k]"):null
    }
    function _makeLabelProvider(k){var fn
        if(typeof(k)=="function" ){return k}
        if(typeof(k)=="string" ){
            fn=(k+" ").replace(/([\w]+)(.)/g,function(a,b,c){return (!(c && c=="(")?"_rec":"")+b+c}).trim()
            fn="var m=rec.toMap||rec.toObject;_rec=m?m.call(rec):rec;return "+fn
        }
        return fn?Function("rec",fn):null;
    }
    function _setter(list){
        var arrproto=Array.prototype,c=list.config;
        return function(){
            var read= c.reader.read,uniq= c.uniq
            var i=-1,val,asnew,ln=arguments.length;if(ln===3  ){asnew=arguments[1]}
            if(ln>=2&&typeof(arguments[0])=="number"){
                i=arguments[0];val=read(ln===3?arguments[2]:arguments[1])
            } else{val=read( arguments[0] )}
            if(!uniq||list.indexOf(val)===-1) {i=i>=this.length||i<0?-1:i
                i===-1?arrproto.push.call(list,val):(asnew?arrproto.splice.call(list,i,0,val):(this[i]=val));
            }
            return val
        }
    }
    function _arrtype(a){ return $.isArray(a)}
    function _flattenArgs(all,firstisopts){ if(!(all&&all.length)){return []}
        var vals=[],a=$.isArray(all)?all: $.makeArray(all),optns={}
        if(a.length==1&&$.isArray(a[0])){return a[0]}
        if(a.length==1&&$.isArrayLike(a[0])){
            var ln=a[0].length
            vals=$.makeArray(a.shift())
            if(vals.length==1&&$.isArrayLike(vals[0])){
                vals=$.makeArray(vals.shift())
            }
        }
        if(a.length){
            for(var i= 0,ln= a.length,it;it=a[i],i<ln;i++){
                if($.isArrayLike(it)){
                    [].push.apply(vals,Array.isArray(it)?it:[].slice.call(it))
                } else {vals.push(it)}
            }
        }
        return vals
    }
    function _makeComparator(k){
        var fn,nm=typeof(k)=="string"?k:typeof(k)=="function"? k.name:"" ;
        if(nm){
            if(/^String|Number|Boolean|Date$/i.test(nm)){
                var ctor= nm.charAt(0).toUpperCase()+ nm.substr(1);
                var cnvrtr= ctor ;  if(ctor!="String"){cnvrtr= "+"+ctor}
                fn=Function( "a","b" ,"var aa= "+cnvrtr+"(a),bb= "+cnvrtr+"(b);return aa==bb?0:aa>bb?1:-1")
            }
        }
        if(!fn ){
            if(typeof(k)=="function"){
                return k;
            } else if(typeof(k)=="string"){var cnvrtr=/id|num$/i.test(k)?"Number":/date|time$/i.test(k)?"+Date":"String"
                fn=Function( "a","b" ,"var kynm='"+k+"',aa= "+cnvrtr+"(Object(a)[kynm]),bb= "+cnvrtr+"(Object(b)[kynm]);return aa==bb?0:aa>bb?1:-1")
            } else if(k && k.type && k.name){ var cnvrtr=  k.type
                fn=Function( "a","b" ,"var kynm='"+k.name+"',aa= "+cnvrtr+"(Object(a)[kynm]),bb= "+cnvrtr+"(Object(b)[kynm]);return aa==bb?0:aa>bb?1:-1")
            }
        }
        return typeof(fn)=="function"?fn:null
    }
    function List(){
        if(this === self||!(this instanceof List)){return new List(_flattenArgs(arguments ))}
      this._init.apply(this,arguments)
    }

    List.prototype=Object.create(Array.prototype);
    var Listproto=List.prototype
    Listproto._init=function(){
        this.__initing=true
        try{
        var args=arguments.length==1&&$.isArrayLike(arguments[0])?arguments[0]:_flattenArgs(arguments ),
            optns={},vals=args;

        $.defineProperty(this,"config",{value:{}},false)
        for(var k in defs){
            if(!(k in this.config)){this.config[k]=defs[k]}
            if(k=="reader"){
                for(var k1 in defs[k]){
                    if(!this.config[k][k1]){this.config[k][k1]=defs[k][k1]}
                }
            }
        }


        //his._set=_setter(this  );

        if(vals && vals.length){
            if( this.config.reader.read===defs.reader.read){
               [].push.apply(this,vals)
            }
            else{this.addAll(vals); }
        }
        } finally{delete this.__initing}
    }
    Listproto.getObserver=function(){
        this.config=this.config||{}
        if(!this.config._observer){
            this.config._observer=$.emitter.simpleObserver(this);
        }
        return this.config._observer;

    }
    Listproto._dispatch=function(ev,data){
        var C=this.config=this.config||{}
        var o=C._observer;
        if(!o||C.paused){return}
        var map={"unshift":"add","push":"add","shift":"remove","pop":"remove","splice":"remove"}
                                   var nm=map[ev]||ev;
        if( o.hasListener(nm)) {
            o.fire (nm, {type: nm, action: ev, value: data, collection: this})
        }
        if(nm!="change"&&o.hasListener("change")){
            o.fire("change",{type:"change",action:ev,value:data,collection:this})
        }
    }
    Listproto._set=function(){
        var i=-1,val,asnew,ln=arguments.length;
        if(ln===1&&Array.isArray(arguments[0]) ){
            for(var i=0,l=arguments[0],ln1=l.length;i<ln1;i++){this._set(l[i])}
            return this;
        }
        var list=this,c=this.config,read= c.reader.read,uniq= c.uniq
        if(ln===3  ){asnew=arguments[1]}
        if(ln>=2&&typeof(arguments[0])=="number"){
            i=arguments[0];
            val=read(ln===3?arguments[2]:arguments[1])
        } else{
            val=read( arguments[0] )
        }
        var ln=this.length,mod=0;
        if(!uniq||list.indexOf(val)===-1) {
            if(i<0){
              i=(ln+1)+i
            }
             if(i>=ln){
                [].push.call(list,val)
            } else if(asnew){
                [].splice.call(list,i,0,val)
            } else{
                this[i]=val
            }
            mod=1
        }
        if(mod){
            this._dispatch&&this._dispatch(ln<this.length?"add":"update",val)
        }

        return val
    }
    Listproto.setKeyProvider=function(v){this.config.keyprovider=_makeKeyProvider(v);return this;}
    Listproto.setLabelProvider=function(v){this.config.labelProvider=_makeLabelProvider(v);return this;}
    Listproto.setComparator=function(v){this.config.comparator=_makeComparator(v);return this;}
    Listproto.setReader=function(v){this.config.comparator=_makeComparator(v);return this;}
    Listproto.setConfig=function(c){
        $.extend(this.config,c);
        return this;
    }
    Listproto.prep=function(nu,mutate){
        if( nu===this||nu instanceof List){return nu||this}
        if($.isArrayLike(nu)){
            var nu1= List.from(nu)
            if(this.config && this.config.observable){
                nu1=List.Observable(nu1);
                nu1.config||(nu1.config={})
                nu1.config.observable=true;
            }
return nu1;
        }
        return nu;
    }
    Listproto._invokeNative=function(nm,args){
        var res=Array.prototype[nm].apply(this,[].slice.call(args||[]))
        return this.prep(res)
    }
    Listproto.filter=function(fn0,ctx){
        var fn=List._makefn(fn0,this,true),res=[],l=this;  if(!fn){return}
        this.each(
            function(it,i){  fn.call(ctx,it,i,l)&&res.push(it);  }
        )
        return this.prep(res)
    }
    Listproto.map=function(fn0,ctx){
        var fn=List._makefn(fn0,this),res=[],l=this;  if(!fn){return}
        this.each(
            function(it,i){  res.push(fn.call(ctx==null?it:ctx,it,i,l))}
        )
        return this.prep(res)
    }
    var $BREAK={}
    Listproto.each=Listproto.forEach=function(fn0,ctx){
        var fn=List._makefn(fn0,this );  if(!fn){return this}
        for(var i=0,l=this,ln=l.length;i<ln;i++){
            if(fn.call(ctx,l[i],i)===$BREAK){break;}
        }
        return this
    }
    Listproto.push=function(){var nm="push"
        var res= this._invokeNative(nm,arguments);this._dispatch&&this._dispatch(nm,res);
        return res
    }
    Listproto.pop=function(){var nm="pop"
        var res= this._invokeNative(nm,arguments);this._dispatch&&this._dispatch(nm,res);
        return res
    }
    Listproto.shift=function(){var nm="shift"
        var res= this._invokeNative(nm,arguments);this._dispatch&&this._dispatch(nm,res);
        return res
    }
    Listproto.unshift=function(){var nm="unshift"
        var res= this._invokeNative(nm,arguments);this._dispatch&&this._dispatch(nm,res);
        return res
     }
    Listproto.splice=function(){var nm="splice"
        var res= this._invokeNative(nm,arguments);
        this._dispatch&&this._dispatch(nm,res);
        return res
    }
    Listproto.fill=function(v,start,end){

        var size=this.length;
        if(end==null && start==null){
            start=0;
            end=this.length;
        }
        start=start||0 ;
        if(end==null){
            end=start;
            start=size
        }

        if(!end||end<0){
            end=size
        }
        if(start<0){
            start=size-start
        }
        start= Math.max(0,Number(start)||0) ||0
        if(end<start){
            return this
        }
        var fn=List._makefn(v,this )
        while(this.push(null) < end ){ }

        for(var i=start;i<end ;i++){
            this._set(i,fn.call(this,i))
        }
        return this
    }
    Listproto.slice=function(){
        var res,a=arguments,mutate;
        if(typeof(a[a.length-1])=="boolean"){a=[].slice.call(arguments);mutate=a.pop()}
        res=this.prep([].slice.apply(this,a))

        return res

    }
    Listproto.setUniq=function(flg,tx){if(flg==null){flg=true}
        var clctn=this
        if(this.config.uniq!=flg){

            if(!clctn.empty()){
                clctn= new  List()
            }
            if(flg){
                clctn.push=function(){for(var i= 0,l=arguments,ln=l.length,it;it=l[i],i<ln;i++){this._set(-1,true,it);}}.bind(clctn)
                clctn.unshift=function(){for(var l=arguments,ln=l.length,i= ln-1,it;it=l[i],i>=0;i--){this._set(0,true,it);}}.bind(clctn)
                clctn.splice=function(idx,todel){Array.prototype.splice.call(this,idx,todel||0);
                    for(var l=[].slice.call(arguments,2),ln=l.length,i= ln-1,it;it=l[i],i>=0;i--){this._set(idx,true,it);}}.bind(clctn)
            }
            if(clctn!==this){
                clctn.addAll(this.toArray())
            }
            clctn.config.uniq=flg;
        }
        if(tx){return clctn.collect(tx)}
        return clctn;
    }
    if(!Listproto.reduce){
        Listproto.reduce=function(fn,init){
            var val=init,l=this,skipfirst=arguments.length===1;
             this.each(
                function(it,i){
                    if(skipfirst===true){
                        skipfirst=false;val=it;
                        return
                    }
                    val=fn(val,it,i,l)
                }
            )
            return val;
        }
    }
    if(!Listproto.reduceRight){
        Listproto.reduceRight=function(fn,init){
            var val=init;
            var val=init,l=this,skipfirst=arguments.length===1;
            for(var l=this,ln= l.length,i= ln-1;i>=0;i--){
                val=fn(val,l[i],i,l)
            }
            return val;
        }
    }
    Listproto.every=function(fn0){var l=this,ret=true,fn=List._makefn(fn0,this,true);if(!fn){return}
         this.each(
            function(it,i){
                if(!fn (it, i, l)) { ret=false; return $BREAK  }
            });
                return ret;
    }
    Listproto.some=function(fn0){var ret=false,l=this,fn=List._makefn(fn0,this,true);  if(!fn){return}
        this.each(
            function(it,i){
                if(fn(it,i,l)){ret=true;return $BREAK}
            }
        )
         return ret;
    }
    Listproto.eq=function(val){
        if(this[0]==val ||this===val){return true}
        if(Array.isArray(val)){
             for(var i= 0,l=val,ln= l.length;i<ln;i++){
                 if(l[i]!=this[i]){return false}
             }
        return true;
    }

        return false;
    }
    Listproto.sort=function( cmp){
        if(typeof(cmp)=="string"){
            var arr=cmp.split(/\s+/)
            cmp=List._makefn(cmp,this,true)
        }
        if(typeof(cmp)!="function"){
            var info;
            if(this.config&&this.config.typeInfo){
                info=this.config.typeInfo
            } else{
                var t=this.typeOf();
                this.config.typeInfo=info=$.typeInfo($.isArray(t)?t[0]:t);
            }
            if(info&&info.compareTo){cmp=info.compareTo.bind(info)}
        }
        this._dispatch&&this._dispatch("sort")
        this._invokeNative("sort",cmp?[cmp]:[])
        return this;
    }
    var ignoredMethods=[],chainableProto=null;
    List._getchainableProto=function(){
        if(!chainableProto) {chainableProto=Object.create(null);
            var mutators = "push pop shift unshift splice".split(/\s+/), listMethods = $.getMethods(List.prototype)
            if (!ignoredMethods.length) {
                ignoredMethods = ["findResult", "find", "first", "last", "toArray", "add", "addAll", "getAt", "setAt", "remove", "remove", "clear"];
                $.each(listMethods, function (v, k) {
                    if (ignoredMethods.indexOf(k) >= 0) {
                        return
                    }
                    if (k.charAt(0) == "_" || k == "mixin" || k == "chainable" || k.indexOf("get") == 0 ||
                        /return\s+this\s*;?\s*\}/mg.test(List.prototype[k].toString())) {
                        ignoredMethods.push(k)
                    }
                });
            }
            $.each(listMethods, function (v, k) {

                if (k.charAt(0) == "_" || k == "mixin" || k == "chainable" || k == "prep" || k == "clone") {
                    return
                }
                var d = v.descriptor;
                if (/return\s+this\s*;?\s*\}/mg.test(List.prototype[k].toString())) {
                    chainableProto[k] = Function("List.prototype['" + k + "'].apply(this,arguments);return this;")
                }
                else if (ignoredMethods.indexOf(k) >= 0) {
                    chainableProto[k] = Function("return List.prototype['" + k + "'].apply(this,arguments)")
                } else if (mutators.indexOf(k) >= 0) {
                    chainableProto[k] = Function("return Array.prototype['" + k + "'].apply(this,arguments);")
                } else if (typeof(Array.prototype[k]) == "function") {
                    chainableProto[k] = Function(" return this.__make(Array.prototype['" + k + "'].apply(this,arguments))")
                }

                else {
                    chainableProto["__" + k]=d.value
                    chainableProto[k] = Function("return this.__make(this['__" + k + "'].apply(this,arguments))")
                }
            });
            chainableProto["__make"]= function (l) {
                    if (this.__initing) {
                        return this
                    }
                    var ret
                    if (l && l instanceof List) {
                        ret = l
                    } else {
                        var type = (l && l.length) ? List._getComponentTypeDelegate($.A.findResult(l)) : (this.config._delegate || {}).__type
                        if (type && type.type && this.config._delegate && this.config._delegate.__type.info == type.info) {
                            ret = this.clone().addAll([].slice.call(l || []))
                            //ret=this
                        }
                        else if (type && type.type && l && typeof(l) == "object" && l.length >= 0) {
                            var ll = List.create().addAll(l).chainable()
                            ret = ll
                        } else {
                            ret = l
                        }
                    }
                    if ((ret instanceof List)) {
                        ret.config._shared = this.config._shared || {}
                        if (ret.config._shared.uniq) {
                            ret.flatten(false, true, true)
                        }
                        if (ret !== this) {

                            if (ret.config._shared._methods) {
                                $.each(ret.config._shared._methods, function (v, k) {
                                    if (!ret[k]) {
                                        ret[k] = v
                                    }
                                })
                            }
                        }
                    }
                    return ret
                }
        }
        return chainableProto;
        }
    List._getComponentTypeDelegate=function(obj0){

        var obj=(obj0&&typeof(obj0)=="object"&&obj0.length) ? $.A.findResult(obj0):obj0
        if(!obj ){return}
        if(typeof(obj)=="function"&&Object.keys(obj.prototype).length){obj=obj.prototype}
        var ths,dfn=$.defineValue,delegate={},
            type={};

        if(obj=="element"|| (typeof(Node)!="undefined" && (obj.el||obj) instanceof Node)){
            type.info=$.typeInfo.get("element")
            if(!type.info.category){
                type.info.category=$d
            }
        } else{
            type.info=obj?$.typeInfo.get( obj ):{}
        }

        //if(type && type.collectionDelegate){ return type.collectionDelegate.newInstance(list)         }
        if(type && type.newInstance&&type.info.category){
            return type
        }

         ths=List.create()
        var p=List._getchainableProto();
        for(var fn in p){
            ths[fn]=p[fn];
        }
        obj0.copyConfig&&obj0.copyConfig(ths)
        delegate.__type=type
        ths.config=ths.config||{}
        ths.config._delegate=delegate;
        var allmethods={}
        if(!type.info.category){
            if( type.type=="string"){
                $.require("$.S")
                type.info.category=$.S
            }
        }
        if(type.info.category){
            allmethods=$.getMethods(type.info.category)
        }
        $.each($.getMethods(obj,true),function(v,k){
            if(k &&!(k in allmethods )){
                allmethods[k]=v;
            }
        })





        $.each(allmethods,function(v,k){
            if(v.descriptor && typeof(v.descriptor.value)=="function" ){
                var ds=v.descriptor
                if(type.info.category&&(k in type.info.category)){
                    delegate[k]={ctx:type.info.category,elementAsArg:true,mthd:type.info.category[k]}
                }
                else{delegate[k]={ctx:null,mthd:ds.value}}
                delegate[k].name=k;
                Object.defineProperty(ths,k, {value:(function( del ){ delg=del;
                    return function(){
                        var r=[],C=this.config,
                            args=[].slice.call(arguments)  ,
                            dl=C._delegate[k],
                            data=C.__data,hasdata=false,
                            fn=dl.mthd,
                            elAsArg=dl.elementAsArg ,issame=true
                        if(!(data && data.length)){data=null} else{hasdata=true}
                        for(var i= 0,l=this,ln=l.size(),it;it=l[i],i<ln;i++){
                            if(!it){continue}
                            var ths=dl.ctx||it;
                            if(hasdata===true){ths.collectiondata=data[i]}
                            var res=fn.apply(ths,(elAsArg?[it]:[]).concat(args))
                            if(hasdata===true){delete ths.collectiondata}
                            res!=null && r.push(res);
                            if(res!==it){issame=false}
                        }

                        if(issame){return this}
                        else if(r.length){
                            return List.from(r).chainable()
                        }
                        return this
                    }
                })(delegate[k]),
                    enumerable:true,writable:true,configurable:true})
            }});
        type.newInstance=function(l){
            var c=this.ctor
            var nu=new c();
            $.defineProperty(nu,"__mixedin",{value:true,enumerable:false,configurable:false})
            nu.config._delegate=c._delegate
            nu.config._shared||(nu.config._shared={});
            if(l){
                nu.addAll([].slice.call(l))
            }
            return nu
        }
        type.ctor=function(){
            if(arguments.length){this._init.apply(this,arguments)}
            else{this._init()}

         }

        type.fn=ths;
        type.ctor.prototype=ths;
        type.ctor._delegate=delegate
        return type;
    }
    Listproto.mixin=function(obj0 ){
        return this.chainable(obj0 )
    }
    Listproto.listdata=function(data){
        if($.isArray(data)){this.config.__data=data}
       return this
    }
    Listproto.exit=function(){
        delete this.config.__data
    }
    Listproto.enter=function(data){
        var d=this.config.__data||(this.config.__data=[]);
        if(data){
            [].concat(data).forEach(
                function(k){d.push(k)}
            )
        }
        return this
    }
    Listproto.chainable=function(obj0 ){
        var obj=obj0||this.findResult()
        var type=List._getComponentTypeDelegate(obj)
        return type?type.newInstance(this.toArray()):this

            /*type.collectionDelegate=ths;
            type.collectionDelegate._log={list:new List()}
            type.collectionDelegate.config._delegate=delegate;
            type.collectionDelegate.newInstance=function(list){

                var nu=this.clone().addAll(list);
                return nu
        }
        return type.collectionDelegate.newInstance(list);
             */
    }
    Listproto.mixinProto=function(obj){

    }
    Listproto.copyConfig=function(l){l&&l.setConfig && l.setConfig(this.config);return l}
    Listproto.unique=Listproto.uniq=function(tx ){  return this.setUniq(true,tx)}
    Listproto.value=function( ){  return this.length==1?this[0]:this}
    Listproto.pluck=function(nm ){  return this.collect("@"+nm)}
    Listproto.invoke=function(nm ){  return this.invokeWith.apply(this,[nm,null].concat([].slice.call(arguments,1)))}
    Listproto.invokeWith=function(nm,ctx ){
        var r=[],args=[].slice.call(arguments,2),fn="function";
        this.each(function(it,i){
            it && typeof(it[nm])===fn&&
            r.push(it[nm].apply(ctx==null?it:ctx,args.concat(it,i,this)))
        })

        return this.prep(r)
        //return this.collect(function(it){return (it && typeof(it[nm])===fn)?it[nm].apply(ctx||it,args):null})
    }
    Listproto.split=function( nm){
        var res=[[]],fn=List._makefn(nm,this);
        return this.reduce(
            function(m,it){
                if(fn(it)){m.push([])}else{m[m.length-1].push(it)}
                return m
            }
            ,[[]]
        )
      }

    Listproto.groupsOf=function( num){  var l=this,rnng=0,n=Math.max(1,~~num) ,res=[[]];
        this.each(function(it,i){
            var k=~~(i/n);k>rnng&&(rnng=res.push([])-1);
            res[rnng].push(it)
        });

        return res
    }
    Listproto.groupBy=function( fn){  var ret={},g=this.collect(fn).map(String);
         this.each(function(it,i){
            (ret[g[i]]||(ret[g[i]]=List.from([]))).push(it)
        });
        return $.LinkedMap(ret);
    }
    Listproto.typeOf=function(extended ){
        var res
        if(extended===true){res=this.collect(function(it){return $.typeInfo(it)}).uniq()}
        else{
            res= this.compact(true,true).collect(function(it){return ({}).toString.call(it).replace(/[\[\]\s]|object/g,"")}).uniq()
        }
        return res?res.value():null
    }
    Listproto.sortBy=function( nm,mutate){  var revrse=0
        if(typeof(nm)=="string" && nm.charAt(0)=="-"){revrse=1;nm=nm.substr(1).trim()}
        var res,fn=List._makefn(nm,this);
        if(mutate===false){res=this.clone(true).sort(function(a,b){var aa=fn(a),bb=fn(b);return aa==bb?0:aa>bb?1:-1})}
        res=this.sort(function(a,b){var aa=fn(a),bb=fn(b);return aa==bb?0:aa>bb?1:-1})
        if(revrse){res.reverse()}
        return res

    }



    Listproto.toArray=function(fn){
        var f=fn?List._makefn(fn,this,false):null;
        var nu=Array.prototype.slice.call(this)
        if(f){
            return [].map.call(this,f)
        }
        return nu
    }
    Listproto.clone=function(withdata){
        var nu,ctor=this.config._delegate&&this.config._delegate.__type&&this.config._delegate.__type.ctor
        if(ctor){nu=new ctor()}
        else{nu= Object.create(this);
            nu.splice(0,this.length+1)
        }
        if(withdata===true){nu.addAll(this.toArray().slice())}
        return nu
    }
    Listproto.getAt=function(i){
        var idx= typeof(i)=="number"?(i<0?this.size()+i:i):this.indexOf(i);
        return idx>=0&& idx<this.length?this[idx]:null
    }

    Listproto.addAt=function(i,a){ this._set(Number(i)||0,true,a );return this}
    Listproto.add=function(a){ this._set(-1,true,a); return this}
    Listproto.reset=function(nu){
         this.clear().addAll(nu);
        return this
    }
    Listproto.addAll=function(a){
        if(!(a&&$.isArray(a))){
            if(arguments.length){
                   a=[].slice.call(arguments)
            }
            else{return this}
        }
        var o=this.config ;
        o.paused=true
        try {
            for(var i=0, ln=a.length, it; it=a[i], i<ln; i++) {
                this._set (-1, true, it)
            }
         }  finally{o.paused=null}
        this._dispatch&&this._dispatch("add",a)

        return this
    }
    Listproto.removeAt=function(i0){
        var i=+i0;
        if(isNaN(i)){return}
        i=i<0?this.length+i:i;
        return i==0?this.shift():this.splice(i,1)[0]}
    Listproto.remove=function(a){var curr
        if(typeof(a)=="number"&&!this.contains(a)){return this.removeAt(a)}
        var i=this.indexOf(a);
        if(i<0){
            var f=this.find(a)
            if(f){i=this.indexOf(f)}
        }
        if(i>=0){curr=this.splice(i,1)[0]} else{return null;}
        return curr
    }
    Listproto.removeAll=function(a) {
        var idx
        for(var i= 0,l=this.findAll.apply(this,arguments),ln = l.length;i<ln;i++) {
            (idx=this.indexOf(l[i]))>=0 && this.splice(idx,1);
        }
        return this
    }
    Listproto.toggle=function(a){var el=this.contains(a);el?this.remove(el):this.add(a);return this;}
    Listproto.empty=function(){
        return this.size()==0
    }
    Listproto.size=function(){
        var cnt=this.length;
        if(typeof(cnt)=="undefined"){
            cnt=0;
             for(var i in this){
                if(this.hasOwnProperty(i)&&!isNaN(i)){cnt=Math.max(cnt,Number(i)+1) }
            }
             try{
                delete this.length
                Object.defineProperty(this,"length",{get:function(){
                    var c=0;
                    for(var i in this){
                        if(this.hasOwnProperty(i)&&!isNaN(i)){c=Math.max(c,Number(i)+1) }
                    }
                    return c;
                },set:function(num){
                    if(num>=0){
                        Array.prototype.splice.call(this,num,1000)
                     }
                },configurable:true})
            } catch(e){}

        }
        return cnt
    }
     Listproto.clear=function( ){var i=-1;
        //while(this[++i]!=null){ this[i]=null}
        this.splice(0,10000);
        this._dispatch&&this._dispatch("clear")
        //this.length=0;

        return this;
    }

    Listproto.contains=function(a){
        return this.indexOf(a)>=0?a:((typeof(a)=="number"&&a>=0&&a<this.length)?this[a]:  this.find (a))
    }
    List._finders={id:function(tofind,config){var prv=config.keyprovider,v=tofind;
        return function(rec){return prv(rec)==v}},
        prop:function(prop,tofind,config){var prv=String(prop),v=tofind;
            return function(rec){return (rec.get?rec.get(prv):rec[prv])==v}
        }
    }
    Listproto.combinations =function combinations () {
         var  args = [].slice.call(arguments),trgt = this  , nounwrap = false
        if (!args.length) { return trgt    }
        var res=List.from();
        while(args.length){
            [].concat(args.shift()||[]).forEach(
                function(a){
                    trgt.each(function (v2,ii) {
                        res.add([v2,a])
                    })

                }
            )

        }

        return   res
    }
    Listproto.permute =function permute() {
        /*
         var res=[],l=[1,3,4,5],cc=[].concat(l);while(cc.length){ cc.forEach(function(y,i){var ll=[].concat(cc);var a=ll.splice(i,1);
         var xxx=[].concat(l);xxx.splice(i,1); xxx.each(function(x,j){xxc=[].concat(xxx);xxc.splice(j,1);res.push([y,x].concat(xxc )) })} ); cc.shift();};res=res.map(String);res.pop();res.sort();res.join("\n")
         */
        var  args = [].slice.call(arguments),trgt = this  , nounwrap = false
        if (!args.length) { return trgt    }
        var res=List.from();

        args.forEach(function (arro,i) {
            trgt.each(function (v2,ii) {
                List.from(arro).each(function (v3,iii) {
                    res.add([v2,v3])
                })
            });
        })
        return   res
    }
    Listproto.getFinderfn=function(propname,predi){
        var fn;
        this.config.finders=this.config.finders||{};
        if(predi&&typeof(predi)=="object"){
             if(predi instanceof RegExp){fn= function(v){return this.re.test((v&&this.p)?v[this.p]:v)}.bind({re:predi,p:propname})}
             if(Array.isArray(predi)){fn= function(v){return this.a.indexOf((v&&this.p)?v[this.p]:v)>=0}.bind({a:predi,p:propname})}
         }
        else {
            if(propname&&predi!=null&&typeof(predi)!="object"){
                    if(propname == "id") {
                        fn=List._finders.id (predi, this.config)
                    }else if(fn=this.config.finders[propname]) {
                        fn=fn (predi);
                    }else if(fn=this.config.finders.prop) {
                        fn=fn (propname, predi);
                    }else {
                        fn=List._finders.prop (propname, predi, this.config);
                    }

            }  else {
                if(!propname && !predi){fn =function(a){return a == predi}}
                else{
                    fn =List._makefn((propname?(propname+" == "):"")+String(predi),this,true)
                }
            }
         }
        return fn;
    }

    Listproto.finder=function(propname,predi,mx,strict){
        var primitiveCheck,byId=propname=="id"  ,fn=null , r=[], ln=this.size ();

        //if(!fn) {
        if(propname==null&&(typeof(predi)=="number"||(typeof(predi)=="string"&&!/[^\w_]/.test(predi)))){
                 propname="id"; byId=true
        }
        if(byId){primitiveCheck=predi}

         fn=(propname == null&&typeof(predi) == "function") ? predi :
                    this.getFinderfn (propname, predi)

        if(typeof(fn)!="function"){
            fn=function(v){return v==predi}
                }
        var lim=Math.max(0,mx|0)||ln+ 1,l=this
         this.each(function(val,i){
             if(byId&&typeof(val)!="object"){if(val!=primitiveCheck){return}}
            else if(!fn(val,i,l)){return}

            if(r.push(val)>=lim){
                return $BREAK
        }
        })

        var res= mx===1? r[0]:this.prep(r)
        return res
    }
    Listproto.first=function(){  return this.getAt(0)}
    Listproto.last=function(){  return this.getAt(-1)}
    Listproto.top=function(howmany){if(!~~howmany){return this.first()}
        return  this.sublist(~~howmany||1) }
    Listproto.bottom=function(howmany){if(!~~howmany){return this.last()}
        return this.sublist(0-(~~howmany||1)) }
    Listproto.rest=function(howmany){return  this.sublist(1) }
    Listproto.sublist=function(nu,end){var res ,ln=this.size()
        if(!nu){nu=0}
        if(nu&&typeof(nu)!="object" && ~~nu !=0){
            if(nu<0){nu=ln +nu}
            end=~~end;if(end<0){end=ln+end}
            if(!(end && end>nu)){end=undefined}
            res=this.slice(nu,end)
        } else if(typeof(nu)=="object" && "length" in nu && nu.length>0){
            res=List.from(nu).setConfig(Object.create(this.config))
        }

        return res
    }
    Listproto.findResults=function(fn1,strict){
        if(typeof(fn1)=="boolean"){strict=fn1;fn1=null}
        var res=[],fn=fn1?List._makefn(fn1,this):null;
        this.each(function(v){
            var it=fn?fn(v):v
            if((!strict&&it)||it!=null){res.push(it)}
        })

        return    this.prep(res)
    };
    Listproto.findResult=function(fn1,strict){
        if(typeof(fn1)=="boolean"){strict=fn1;fn1=null}
        var fn=fn1?List._makefn(fn1,this):null,r=null;
        this.each(function(v){
            var it=fn?fn(v):v
            if((!strict&&it)||it!==null){r= it;return $BREAK}
        })

        return    r
    };
    Listproto.compact=function(strict){
        return  this.removeAll(strict?null:function(it){return !it})
    };

    Listproto.sortIndex=function sortIndex(val,comparat){
        var comparator=comparat||function(a,b){return a-b}
        var idx=this.indexOf(val)
        if(idx>=0){return idx}
        var found=this.sort(comparator).find(function(a){return comparator(a,val)>0})
        if(found!=null){
            idx=this.indexOf(found)
        }
        return idx

     }
    Listproto.avg=function(nm){
        return this.sum(nm)/this.size() }
    Listproto.sum=function(nm){
        var fn=nm?List._makefn(nm,this):function(a){return a};
        return this.reduce(function(m,it){return m+fn(it)},0) }
    Listproto.max=function(nm){
        var fn=nm?List._makefn(nm,this):function(a){return a};
        return this.size()?this.collect(function(it){return {k:it,v:fn(it)}})
            .sort(function(a,b){return a.v-b.v})
            .pop().k:null
    }
    Listproto.min=function(nm){
        var fn=nm?List._makefn(nm,this):function(a){return a};
        var ret=this.size()?this.collect(function(it){return {k:it,v:fn(it)}})
            .sort(function(a,b){return a.v-b.v})[0].k:null
        return ret;
    }
    Listproto.match=(function( ){
        function chk(data ){var d=data,mthchs=true,st=d.rnng,w=0;
            for(var i=0;i<d.fln;i++){var f=d.fns[i];
                if(!(f&&f[1] (d.l.slice(i+d.rnng,i+d.rnng+f[0])))){ mthchs=false;break;}
                w=w+f[0]
            }
             if(mthchs ){
                if(d.res.push(d.l.slice(d.rnng,d.rnng+w))>=d.howmany){return;}
            }
            d.rnng++
            if( d.rnng<=d.max){ chk(data)}
        };
        return function  match(howmany,fnarr){var totln=0,ths=this

            if(typeof(howmany)!="number"){throw new Error("Invalid arguments. 'hownany' must be a number")}
            if(fnarr.length==2&&typeof(fnarr[1])=="function"&&typeof(fnarr[0])=="number"){fnarr=[fnarr]}
            if(typeof(fnarr)=="function"){fnarr=[[1,fnarr]]}
            var  fns=fnarr.map(function(it){var a=Array.isArray(it)?it:[1,it];
                if(a.length==1){a.unshift(1)}
                if(typeof(a[1])!="function") {
                    a[1]=typeof(a[1])=="string"?List._makefn(a[1],ths,true):(function(cnt, val){
                        return function(v){
                            for(var j=0; j<cnt; j++) {
                                if(v[j] != val[j]) {
                                    return false
                                }
                            }
                            return true
                        }
                    }) (a[0], [].concat(a[1]==null?[]:a[1]));


                };
                totln=totln+a[0]
                return a;
            })

            var data={l:this,fns:fns,ln:this.length,res:[],max:this.length-totln,fln:fns.length,rnng:0,howmany:howmany||Number.MAX_SAFE_INTEGER||Number.MAX_VALUE||999999 }
            if(data.fln==1&&data.fns[0][0]==1){data.res=this.filter(data.fns[0][1])}
            else{chk(data);}
            if(data.howmany===1){return data.res[0]}
            return data.res
        }
    })();
    Listproto.matchAll=function(fnarr){
        return this.match(0,fnarr)
    }
    Listproto.matchOne=function(fnarr){
        return this.match(1,fnarr)
    }
    Listproto.asKeyValueSet=function(keyname,valuename){
        keyname=keyname||"key"
        valuename=valuename||"value"
        return this.collect(function(it,i){var m={}
            m[keyname]=i;m[valuename]=it;
            return m
        });
    }
    Listproto.grep=function(fn1,noesc){var ex=fn1
        if(typeof(fn1)=="string"){try{ex=new RegExp(!noesc?RegExp.escape(fn1):fn1)} catch(e){ex=fn1}}
        return this.findAll( ex)
    }
    Listproto.findAll=function(fn1){return  this.finder(null,fn1,0) }
    Listproto.findAllBy=function(prop,val,max){return  this.finder(prop,val,max) }
    Listproto.findBy=function(prop,val){return  this.finder(prop,val,1) }
    Listproto.findById=function(v ,strict){return  this.finder("id",v,1,strict) }
    Listproto.find=function(fn1,nill){if(this.indexOf(fn1)>=0){return fn1}
        if(typeof(fn1)=="string"&&fn1.indexOf("UUID")==0) {
            var map=$.objectMap, r,brek=$BREAK
            this.each (function(val, i){
                if(val&&typeof(val) == "object") {
                    var m=map.get (val)
                    if(m&&m._uuid == fn1) {
                        r=val
                        return brek
                    }
                }
            });
            return r

        }
        return  this.finder(null,fn1,1)
    }
    Listproto.findIndex=function(fn1) {
        var val=this.find(fn1)
        if(val!=null){
            return this.indexOf(val)
        }
        return -1
    }

    List._makefn=function (fn1,_list,asboolean){var fn=fn1 ,wrapidx=0;
        if(fn1&&typeof(fn1)=="object") {
            if(fn1 instanceof RegExp) {   return RegExp.prototype.test.bind (fn1) }
            if(Array.isArray (fn1)) {
                return function(v){  return this.indexOf (v)>=0  }.bind (fn1)
            }
        }
         if(fn1&&typeof(fn1)=="string"&&_list&&_list.length&&_list[0]!=null&&(typeof(Object(_list[0])[fn1])=="function")){
            fn=_list[0][fn1]
        } else if(fn1&&typeof(fn1)=="string"){
          if(/\bi\b/.test(fn1)){
              try{
                  return Function("it,i,arr","return "+fn1.replace(/@\.?/g,"it."))
              } catch(e){}
              wrapidx=1
          } else {
                if(!/\s/.test(fn1) && /^[a-z]/i.test(fn1)){
                    var arr=fn1.split(/\./)
                    if(arr[0]&& arr[0]!=="it"){var prop=arr[0]
                        if(prop.indexOf("(")>=0){prop=prop.substr(0,prop.indexOf("("))}
                        if(prop && _list && _list.length && _list[0]!=null&& prop in Object(_list[0])){
                             fn="it."+fn1
                        }
                    }
                }

          }
        }

        fn=$.fnize( fn, {context:_list,asboolean:asboolean,force:true,args:["it","i","arr"]})
        if(typeof(fn)!="function"){
             fn=Function("return "+((typeof(fn1)=="number"||typeof(fn1)=="boolean")?fn1:("'"+fn1+"'")))
        }

        return fn;
    }
    Listproto.collect=function(fn1){
        var fn = List._makefn(fn1,this,false);
        if(!fn){return}
        var nu
        if(fn.length===1){
            nu=this.map(function(a){return fn(a)});
        }
        else {nu=this.map(fn);}
        return this.prep(nu);
    }
    Listproto.intersect=function(){
         var a=[].slice.call(arguments),all=[]
        if( a.every(function(it){return Array.isArray(it)})){
            all=a;
        } else{all=[a]}
        var res=this.toArray(),torem=[]
        this.each(function(it,idx){
            for(var i=0,ln=all.length;i<ln;i++){var ar=all[i]
                if(ar.indexOf(it)==-1){torem.push(idx);break;}
            }
        });
         while(torem.length){ res.splice(torem.pop(),1) }
        return List.create(res)


    }
    Listproto.flatten=function(incnulls,uniq,mutate ){
        var res=[]
        function _inner(l){
            if(l&&typeof(l)=="object"&&l.length>0){
                for(var i=0,ln=l.length,it;it=l[i],i<ln;i++){
                    _inner(it)
                }
            } else if(incnulls  || (l!=null)){
                if(!uniq||res.indexOf(l)===-1){res.push(l)}
            }
        }
        _inner(this)
        if(mutate){
            this.clear().addAll(res)
            return this

        }
        return List.from(res)
    }
    List.create=function(){
        var docompact,a=arguments;
        if(a[0]===true){
            docompact=true;
            a=[].slice.call(arguments,1)
        }
        if(typeof (a[0])=="number" && a.length==2 && typeof(a[1])=="function" ){
            var nu= new List()
            nu.fill( a[1],0,  a[0])
            return nu
        }
        if(a.length==1&& List.isList(a[0])){
            return a[0]
        }
        var vals=(!a.length||(a.length==1&&a[0]==null))?[]:_flattenArgs(a)
        return docompact?(new List(vals)).compact():new List(vals)
    }
    List.isList=function(a){
        return a && typeof(a)=="object" && a instanceof List
    }
    List.from=List.create
    List.range=function(){
        var start=arguments[0]|0,end=arguments[1]| 0,inc,nu=[]
        if(arguments.length==1){start=0;end=arguments[0]|0}
        inc=(end-start)/Math.abs(end-start);
        var i=-1,c=Math.abs(end-start)
        while(++i<=c){
            nu.push(start+i)
        }
        return List.from(nu)

    }
    List.$BREAK=$BREAK
   
    /*
     Object.keys(Listproto).forEach(function(k){if(k in Object||k=="_init"){return}
     $.A[k]=(function(mthd){
     var m=mthd;
     return function(list){
     return m.apply(List.from(list),[].slice.call(arguments,1))
     }
     })(Listproto[k]);
     })
     */
    $.A=(function(){
        var PROTO=Array.prototype
        function  fnize(val) {
            return $.fnize(val)
        }
       var A=function(arr){return  toArray(arr)}
        function augment(arr){
            arr=arr||[]
            if( arr.__augmented){return arr}
            if(!A.__protofns){
                A.__protofns=Object.keys(A).filter(function(k){return k.indexOf("_")!=0 && k!="augment"  &&   typeof(A[k])=="function"})
            }
            A.__protofns.forEach(
                function(k){arr[k]=A[k].curry(arr)}
            );
            Object.defineProperty(arr,"__augmented",{value:true,enumerable:false,writable:false,configurable:false})
            return arr
        }
          function toArray(arr,noaugment){
             if(noaugment && noaugment.__augmented){return noaugment}
            if(arr==null){return  augment([])}
            if(typeof(arr)=="string"){return  augment(arr.split(/\s+/))}
            if(typeof(arr)!="object"){return  augment([arr])}
            if(!(arr instanceof Array)){
                return noaugment===true?[].slice.call(arr): augment([].slice.call(arr))
            }
            return noaugment===true?arr: augment(arr);
        }
         function toggle(arrarg,val){
            var arr=toArray(arrarg,this)
            if(!arr.contains(val)){
                arr.add(val)
            } else {arr.remove(val)}
            return arr
        }
        function contains(arrarg,val){
            var arr=toArray(arrarg,this)
            return arr.indexOf(val)>=0
        }
        function each(arrarg,val,ctx){
            var arr=toArray(arrarg,this),BREAK=List.$BREAK
            var fn=val? fnize(val):function(a){return a}
            for(var i= 0,ln=arr.length;i<ln;i++){
                if(fn.call(ctx||arr,arr[i],i,arrarg)===BREAK){
                    break;
                }
            }
        }
        function findResults(arrarg,fn1,strict){var arr=toArray(arrarg,this)
            if(typeof(fn1)=="boolean"){strict=fn1;fn1=null}
            var res=[],fn=fn1?fnize(fn1,this):null;
            arr.each(function(v){
                var it=fn?fn(v):v
                if((!strict&&it)||it!==null){res.push(it)}
            })

            return    augment( res)
        };
        function findResult(arrarg,fn1,strict){var arr=toArray(arrarg,this)
            if(typeof(fn1)=="boolean"){strict=fn1;fn1=null}
            var fn=fn1?fnize(fn1,this):null,r=null;
            arr.each(function(v){
                var it=fn?fn(v):v
                if((!strict&&it)||it!==null){r= it;return $BREAK}
            })

            return    r
        };
        function take(arrarg,howmany){
            var arr=toArray(arrarg,this)
            return arr.splice(0,Number(howmany)||1)
        }
        function last(arrarg,res){
            var arr=toArray(arrarg,this)
            return arr[arr.length-1]
        }
        function first(arrarg,res){
            var arr=toArray(arrarg,this)
            return arr[0]
        }
        function onchange(arrarg,callback){
            var arr=toArray(arrarg,this)
            if(!arr.__observer){
                var C=callback
                Object.observe(arr,arr.__observer=function(recs){
                    var res={len:0}
                    for(var i= 0,ln=recs;i<ln;i++){
                        var R=recs[i]
                        if(R.name=="length" || isNaN(R.name)){continue}
                        var t=R.type=="add"?"added":(R.type+"d")
                        res[t]||(res[t]=[])
                        res[t].push(R.name)
                    }
                    res[t].len=recs[0].object.length
                    C(res);
                })
            }
            arr.push(res)
            return arr
        }
        function add(arrarg,res){
            var arr=toArray(arrarg,this)
            arr.push(res)
            return arr
        }
        function addAll(arrarg,res){
            var arr=toArray(arrarg,this)
            if(res==null){
                return arr
            }
            if((res instanceof Array) || (res && typeof(res)=="object" && typeof(res.length)=="number")){
                PROTO.push.apply(arr,res)

            }
            return arr
        }
        function flatten(arrarg,incnulls,uniq,mutate ){
            var arr=toArray(arrarg,this)
            var res=[]
            function _inner(l){
                if(l&&typeof(l)=="object"&&l.length>0){
                    for(var i=0,ln=l.length,it;it=l[i],i<ln;i++){
                        _inner(it)
                    }
                } else if(incnulls  || (l!=null)){
                    if(uniq&&res.indexOf(l)>-1){return}
                    res.push(l)
                }
            }
            _inner(arr)
            if(mutate!==false){
                arr.clear().addAll(res)
                return arr

            }
            return  augment( res)
        }
        function unique(arrarg ){
            var arr=toArray(arrarg,this)
            var torem=[]
            for(var i= 0,ln=arr.length;i<ln;i++){
                var idx=arr.lastIndexOf(arr[i])
                if(idx>i){torem.push(i)}
            }
            while(torem.length){
                var idx=torem.pop()
                arr.splice(idx,1);
            }
            return arr
        }
        function clear(arrarg){
            var arr=toArray(arrarg,this);
            arr.splice ( 0,arr.length)
            return arr
        }
        function clone(arrarg){
            var arr=toArray(arrarg,this);
            var nu=[],dsecript
            PROTO.push.apply(nu,arr)

            return augment(nu)
        }
        function compact(arrarg,notstrict){
            var arr=toArray(arrarg,this)
            var torem=[]
            for(var i= 0,ln=arr.length;i<ln;i++){
                if(arr[i]==null || (!notstrict && !arr[i])){torem.push(i)}
            }
            while(torem.length){
                var idx=torem.pop()
                arr.splice(idx,1);
            }
            return arr
        }
        function groupBy(arrarg,fnorfield){
            var arr=toArray(arrarg,this)
            var gpmap={}
            for(var i= 0,ln=arr.length;i<ln;i++){
                var val=typeof(fnorfield)=="function"?fnorfield(arr[i],i,arrarg):((arr[i]||{})[fnorfield])
                var k=""
                if(val!=null && (typeof(val)!="object"||typeof(val)!="function")){
                    k=String(val)
                } else{
                    continue
                }
                if(k){
                    if(!gpmap[k]){
                        gpmap[k]=augment([])
                    }
                    gpmap[k].push(arr[i])
                }
            }
            //passes list, key,  to callback
            gpmap.each=function(fn){
                for(var i= 0,l=Object.keys(this),ln=l.length;i<ln;i++){
                    if(typeof(l[i])!="string" || !(this[l[i]] instanceof Array)){continue}
                    fn(this[l[i]],l[i],this)
                }
                return this
            }
            return gpmap
        }
        function groupsOf(arrarg, num){
            var arr=toArray(arrarg,this)
            var rnng=0,n=Math.max(1,~~num) ,res=[[]];
            for(var i= 0,ln=arr.length;i<ln;i++){
                var k=~~(i/n);
                k>rnng&&(rnng=res.push([])-1);
                res[rnng].push(arr[i])
            }
            return res
        }
        function removeAt(arrarg,val){
            var arr=toArray(arrarg,this)
            if(typeof(val)=="number"){
                arr.splice(+val,1)
            }
            return arr
        }
        function avg(arrarg,nm){
            var ln=arrarg.length
            if(!ln){return 0}
            return sum(arrarg,nm)/ln
        }
        function sum(arrarg,nm){
            var arr=toArray(arrarg,this)||[]
            var fn=val? fnize(val):function(a){return a}
            return arr.reduce(function(m,it){
                return m+fn(it)
            },0)
        }
        function max(arrarg,val){
            var arr=arrarg||[]
            var fn=val? fnize(val):function(a){return a}
            var ln=arr.length||0,res=-1,cmprtr=null
            for(var i= 0 ;i<ln;i++){
                var V=fn(arr[i])
                if(cmprtr===null || V>cmprtr){cmprtr=V;res=i}
            }
            return arr[res]
        }
        function min(arrarg,val){
            var arr=arrarg||[]
            var fn=val? fnize(val):function(a){return a}
            var ln=arr.length||0,res=null,cmprtr=null
            for(var i= 0 ;i<ln;i++){
                var V=fn(arr[i])
                if(cmprtr===null || V<cmprtr){cmprtr=V;res=i}
            }
            return arr[res]
        }
        function removeAll(arrarg,val){
            var arr=toArray(arrarg,this)||[]
            if(Array.isArray(val)){var ln=arr.length;
                if(val.every(function(a){return typeof(a)=="number" && a>=0 && a<ln})){
                    val.sort(function(a,b){return b-a})
                    while(val.length){
                        arr.splice(val.pop(), 1)
                    }
                } else {
                    while(val.length){
                        remove(arr,val.pop())
                    }
                }
            }
            if(typeof(val)=="function") {
                var target;
                while (target = arr.find(val)){
                    var idx = arr.indexOf(target)
                    if (idx >= 0) {
                        arr.splice(idx, 1)
                    }

                }
            } else{

            }
            return arr
        }
        function remove(arrarg,val){
            var arr=toArray(arrarg,this)
            var idx=arr.indexOf(arrarg)
            if(idx>=0){
                arr.splice(idx,1)
            } else if(typeof(val)=="number"){
                arr.splice(+val,1)
            } else if(typeof(val)=="function"){
                var target=arr.find(val)
                if(target){
                    idx=arr.indexOf(target)
                    if(idx>=0){
                        arr.splice(idx,1)
                    }
                }
            }
            return arr
        }
        function   collect(arrarg,val,ctx){
            var arr=arrarg
            var fn= fnize(val);
            if(!fn){
                return
            }
            var res=[]
            for(var i= 0,ln=arr.length||0;i<ln;i++){
                res.push(fn.call(ctx||arr,arr[i],i,arr))
            }
            return augment(res);
        }
        function   findAll(arrarg,val){
            var arr=arrarg
            var fn=null
            if(typeof(val)=="function"){fn=val}
            if(typeof(val)=="string" && (val.indexOf("$")>=0 || val.trim().indexOf("->")==0|| val.trim().indexOf("=>")==0) ){
                fn=  fnize(val)
            }
            var res=[],ln=arr.length||0
            if(fn){
                for(var i= 0,ln=arr.length||0;i<ln;i++){
                    fn(arr[i]) &&res.push(arr[i])
                }
            } else{
                for(var i= 0;i<ln;i++){
                    arr[i]==val && res.push(arr[i])
                }
            }

            return augment(res);
        }
        function fill(arrarg,val,start,end){
            if(typeof(arrarg)=="function"){
                end=start
                start=val
                val=arrarg;
                arrarg=[];
            }
            var arr=toArray(arrarg,this)
            var size=arr.length;
            if(end==null && start>0){
                end= start;
                start=0;
            }
            if(end==null && start==null && size){
                start=0;
                end=size;
            }
            start=start||0 ;
            if(start<0){
                start=size+start;
                end=size;
            }
            if(!end||end<0){
                end=size
            }
            start= Math.max(0,Number(start)||0) ||0
            if(end<start){
                return arr
            }

            var fn=null
            if(typeof(val)=="function"){fn=val}
            if(typeof(val)=="string" && (val.indexOf("$")>=0 || val.trim().indexOf("->")==0|| val.trim().indexOf("=>")==0) ){
                fn=  fnize(val)
            }
            for(var i=start;i<end ;i++){
                arr[i]=fn?fn(i):val
            }
            return arr
        }
        function sortBy( arrarg,nm,mutate){
            var arr=toArray(arrarg,this)
            var revrse=0
            if(typeof(nm)=="string" && nm.charAt(0)=="-"){
                revrse=1;
                nm=nm.substr(1).trim()
            }
            var res=mutate===false?  clone(arr):arr,fn=fnize(nm,res);
            res.sort(function(a,b){
                var aa=fn(a),bb=fn(b);
                return aa==bb?0:aa>bb?1:-1
            })
            if(revrse){res.reverse()}
            return res

        }

        Object.assign(A,{
            augment:augment,
            toArray:toArray,
            toggle : toggle ,
            contains : contains ,
            each : each ,
            findResults : findResults ,
            findResult : findResult ,
            take : take ,
            last : last ,
            first : first ,
            add : add ,
            addAll : addAll ,
            flatten : flatten ,
             unique : unique ,
            clear : clear ,
            clone : clone ,
            compact : compact ,
            groupBy : groupBy ,
            groupsOf : groupsOf ,
            removeAt : removeAt ,
            avg : avg ,
            sum : sum ,
            max : max ,
            min : min ,
            removeAll : removeAll ,
            remove : remove ,
            collect : collect ,
            findAll : findAll ,
            fill : fill ,
            sortBy:  sortBy,
            onchange:onchange
        })
        return A;
    })();
    
   
    List.plugin={
        emitter:function(l){var list=List.create(l)
            list.config=list.config||{}
            if(!(list.config&&list.config._observer)){
                list.config=list.config||{};
                var emt=list.config._observer=$.emitter.simpleObserver(list)
                list.fire=emt.fire.bind(emt)
                list.on=emt.on.bind(emt)
                list.off=emt.off.bind(emt)

                list.emitter=emt
            }
            return list
        }   ,

        selectionModel:function(list,config){
            function $SelectionModel(list,config){
                if(typeof(list.unselect)=="function"){return list}
                config=config||{}
                if(typeof(config)=="function"){config.onselect=config}
                var listconfig=config ,l= List.plugin.emitter(list)
                if(l.config._hasSelectionModel) {return list}
                l.config._hasSelectionModel=true

                 if(config.onselect){this.getObserver().on("select",config.onselect)}
                l.toggle=function(el){
                    var multi= listconfig.multi,
                        sl= listconfig.selList||( listconfig.selList=[]);
                    var sel=this.find.apply(this,arguments)
                    if(sel){
                        if(this.isSelected(sel)){
                            this.unselect(sel)
                        } else{
                            this.select(sel)
                        }
                    } else{
                        if(multi){
                            this.each(
                                function(it){
                                    var idx=sl.indexOf(it)
                                    if(idx>=0){
                                        sl.splice(idx,1)
                                    } else{
                                        sl.push(it)
                                    }
                                }
                            );
                            this.getObserver().fire("select",this.getSelection(),this)
                        }
                    }


                }
                l.select=function(){
                    var multi= listconfig.multi,
                        sl= listconfig.selList||( listconfig.selList=[]);
                    var sel=this.find.apply(this,arguments)
                    var i=sel==null?-1:sl.indexOf(sel)
                    if(typeof(multi)=="number" && multi>1){
                        if(sl.length>=multi){return}
                    }
                    if(sel&&i<0){
                        if(!multi){
                            sl[0]&&this.getObserver().fire("unselect",sl[0],this)
                            sl[0]=sel
                        }
                        else{
                            sl.push(sel) }
                        if( listconfig.toggleClass){
                            var c= listconfig.toggleClass;
                            this.each(
                                function(it){
                                    if(!it){return}
                                    if(sl.indexOf(it)==-1){it.removeClass&&it.removeClass(c)}
                                    else{it.addClass&&it.addClass(c)}
                            }
                            )
                        }
                        this.getObserver().fire("select",this.getSelection(),this)
                    }
                    return this
                }
                l.unselect=function(){
                    var sl=this.getSelection();
                    var sel=this.find.apply(this,arguments)
                    var i=sel==null?-1:sl.indexOf(sel)
                    if(i>=0){
                        sl.splice(i,1)
                        var c= listconfig.toggleClass;
                        c&&sel.removeClass&&sel.removeClass(c)
                        this.getObserver().fire("unselect",sl,this)
                    }
                    return this
                }
                l.isSelected=function(el){
                    var sel=this.find.apply(this,arguments)
                    if(sel!=null){
                        return this.getSelection().indexOf(sel)>0
                    }
                }
                l.clearSelection=function(){
                    if( listconfig.selList){
                        listconfig.selList.length=0
                    }
                    return this
                }
                l.getSelection=function(){
                    var  sl= listconfig.selList||( listconfig.selList=[]);
                    return  listconfig.multi?sl:sl[0]
                }
                l.bindToAnchor=function(anchor){

                }
                l.show=function(opts){

                }
                return l
            }
            return $SelectionModel(list,config)
        }
    }
    scope.ItemList=scope.List=List
    scope.UniqList=function(){
        var nu=new  List().setUniq(true).addAll(_flattenArgs(arguments))
        return nu;
    }
    $.collection=List;


    //maplist

})(window);
List.parseList=(function( ){
    var _ItemCtor=null
    function getItemCtor(optns,addtnl){
        if(!_ItemCtor) {
            _ItemCtor=   function (record) {
                if (record === null) {
                    return
                }
                this.init(record)
            };
           var _prototype = {
                init:function(record){
                    if (!record || typeof(record) != "object") {
                        this.record = {id: record == null ? "" : record, label: record == null ? "" : record}
                    }
                    else {
                        this.record = record;
                    }
                }
            };
            Object.defineProperties(_prototype, {
                options: {value: {options: {}}, writable: false, configurable: true, enumerable: false},
                label: {
                    get: function () {
                        return this.record && this.record[this.options.labelname]
                    }, set: function () {
                    }, enumerable: true
                },
                id: {
                    get: function () {
                        return this.record && this.record[this.options.keyname]
                    }, set: function () {
                    }, enumerable: true
                },
                dom: {
                    get: function () {
                        return this.record && this.record._dom
                    }, set: function (el) {
                        this.record && (this.record._dom = $d(el))
                    }, enumerable: true
                }

            });
           _prototype.matchRe = function (val) {
                return val && val.test(this.label || "")
            }
           _prototype.match = function (val) {
                if (val == null) {
                    return
                }
                if (val.test) {
                    return this.matchRe(val)
                }
                return this.record == val || this.matchId(val) || this.matchLabel(val)
            }
           _prototype.matchId = function (id) {
                return this.id == id
            }
           _prototype.matchLabel = function (lbl) {
                return this.label == lbl
            }

            _prototype.constructor = _ItemCtor
            _ItemCtor.prototype=_prototype
            _ItemCtor.makeCtor=function(optns,addtnl){
                var options= addtnl?$.extend({},optns,addtnl):optns
                var ctor=function (record) {
                    this.init(record)
                }
                ctor.prototype=new _ItemCtor(null)
                Object.defineProperty(ctor.prototype, "options",
                    {value: $.isPlain(options)?options:{}, writable: false, configurable: true, enumerable: false}
                );
                if (options && $.isPlain(options)) {
                    if ( $.isPlain(options.itemproto)){
                        $.each(options.itemproto, function (v, k) {
                            ctor.prototype[k] = v;
                        })
                    }
                }
                ctor.prototype.constructor = ctor
                return ctor
            }
        }
        
        return _ItemCtor.makeCtor(optns,addtnl)
    }

    function LookupList(list,optns,addtnl){
        this.options=optns||{};
        Object.defineProperty(this,"_list",{value:[],writable:false,configurable:true,enumerable:false});
        Object.defineProperty(this,"length",{get:function(){return this._list.length},set:function(){},configurable:true,enumerable:true});
        this.parse(list,optns,addtnl)

    }
    LookupList.prototype={}
    LookupList.prototype.parse=function(list,options,addtnl){
        var optns=$.extend({},this.options,options||{})
        var _li, listoptns = optns.list || {}, _list , template,
            labelname = listoptns.labelname || optns.labelName,
            keyname = listoptns.keyname || optns.keyName,
            labelprovider = optns.labelprovider || listoptns.labelprovider,
            keyprovider = optns.keyprovider || listoptns.keyprovider,
            itemtemplate = optns.itemtemplate || listoptns.itemtemplate  //st

        if(typeof(labelprovider)=="string"){
            if(labelprovider.indexOf("$")>=9){
                labelprovider= $.template(labelprovider)
            }
            else{
                labelname=labelprovider;
                labelprovider=null
            }
        }
        if(typeof(keyprovider)=="string"){
            if(keyprovider.indexOf("$")>=9){
                keyprovider= $.template(keyprovider)
            }
            else{keyname=keyprovider;
                keyprovider=null
            }
        }
        if (typeof(list) == "function") {
            list = list()
        }
        if (list && list.data && typeof(list.data) != "function") {
            list.list = list.data
        }
        if (list && list.list) {
            labelname = labelname || list.labelname
            keyname = keyname || list.keyname
            _list = list.list
        } else {
            _list = _list || list
        }
        if (itemtemplate) {
            template = $d.template(itemtemplate)
        }
        if($.isPlainObject(_list)){
            labelname="label"
            keyname="id"
            _list=Object.keys(_list).reduce(function(m,k){
                if(_list[k]!=null && typeof(_list[k])!="object" && typeof(_list[k])!="function"){
                    m.push({id:k,label:String(_list[k])})
                }
                return m
            },[])
        } else if (typeof(_list)=="string") {
            _list=_list.split(/\s+/)
        }
        if (_list && _list.length && (!(labelname &&labelprovider)|| !(keyname && keyprovider))) {
            if (_list[1] || _list[0]) {
                var tst = _list[1] || _list[0]
                if (tst && typeof(tst) == "object") {
                    var kys = typeof(tst.keys)=="function"?tst.keys():Object.keys(tst)
                    if(!keyname) {
                        if (tst.id != null) {  keyname = "id"    }
                        else if (kys.indexOf("id") >= 0) {  keyname = "id"  }
                    }
                    if(!labelname){
                        if(kys.indexOf("label")>=0){labelname = "label"}
                        else if(kys.indexOf("name")>=0){labelname = "name"}
                    }

                    if ((!labelname || !keyname)) {
                        keyname = keyname||kys.shift();
                        labelname = labelname||kys.shift()
                    }

                }
            }
        }
        if (!labelprovider && labelname && labelname.indexOf("$") >= 0) {
            labelprovider = $.template(labelprovider)
        }
        var fin = []
        if (labelprovider || keyprovider) {
            if(!keyprovider && !keyname){keyname="id"}
             for (var i = 0, l = _list, ln = l.length, it; it = l[i], i < ln; i++) {
                if (!it) {
                    continue
                }
                if (typeof(it) == "string"||typeof(it) == "number"||typeof(it) == "boolean") {
                    fin.push({id: it, label: String(it), gp: it.gp || "-"})
                }
                else{
                    var id=keyprovider?keyprovider(it):(typeof(it) == "object" && keyname ? it[keyname] : it)
                    fin.push({id:id , label: labelprovider?labelprovider(it):(typeof(it) == "object" && labelname ? it[labelname] : String(id)), gp: it.gp || "-"})
                }
            }

            keyname =keyname|| "id";
            labelname = labelname||"label";
        } else {
            fin = [].slice.call(_list)
        }
        this.options.keyname=keyname||"id"
        this.options.labelname=labelname||"label"
        if(typeof(labelprovider)=="function"){

        }
        if(!this.__itemCtor){
            this.__itemCtor=getItemCtor(this.options,addtnl);
        }
        var Item=this.__itemCtor;

        this._list.splice(0,this._list.length);
        [].push.apply(this._list,fin.map(function(a){
            return new Item(a)
        }));
        return this
    }
    LookupList.prototype.getList=function(){
        return this._list
    }
    LookupList.prototype.size=function(){
        return this._list.length
    }
    LookupList.prototype.collect=function(fn,ctx){ctx=ctx||null
        return this._list.map(function(a){return fn.call(ctx,a)})
    }
    LookupList.prototype.applyTemplate=function(template,usedata,ctx){
        if(typeof(template)=="string"){template= $.template(template)}
        ctx=ctx||null
        if(usedata===true){
            return this._list.map(function(a){return fn.call(ctx, a.record)})
        }
        return this.collect(template,ctx)
    }

    LookupList.prototype.clearSelection=function(){ delete this.__selection  }
    LookupList.prototype.getSelection=function(id){  return this.__selection  }
    LookupList.prototype.setSelection=function(id){
        this.__selection= this.findModel(id)
    }

    LookupList.prototype.findModel=function(val){
        if(val==null || val instanceof  this.__itemCtor){return val}
        return this._list.find(function(a){
            return a.match(val)
        }.bind(this))
    }

    LookupList.prototype.findByLabel=function(lbl){
        if(id==null){return}
        return this._list.find(function(a){
            return a.matchLabel(lbl)
        }.bind(this))
    }
    LookupList.prototype.findById=function(id){
        if(id==null){return}
        return this._list.find(function(a){
            return a.matchId(id)
        }.bind(this))
    }
    LookupList.prototype.searchText=function(txt,optns){
        this.__cache||(this.__cache={});
        if(!txt){return}
        var reTest
        var filterfn=(this.options||{}).filterfn||(optns||{}).filterfn
        if(!filterfn && typeof(optns)=="function"){
            filterfn=optns;
            optns=null
        }
        if(!$.isPlain(optns)){optns=null}
         optns=optns||this.options||{}
        var flags=[],ops=[]

        if(optns.caseinsenstive ||optns.ignorecase){
            flags.push("i")
        } else if(optns.onlystart||optns.startswith||optns.startsWith||optns.location=="^"){
            ops.push("^")
        } else if(optns.onlyend||optns.endswith||optns.endsWith||optns.location=="$"){
            ops.push("$")
        }
        var ckey=flags.join("")+"--"+ops.join("")+"--"+txt
        if(this.__cache[ckey]){
            reTest=this.__cache[ckey]
        } else{
             ops=ops||[]
            if(typeof(txt)=="string"){
                var re=RegExp.escape(txt)
                if(ops.indexOf("^")>=0){
                    re="^"+re
                } else if(ops.indexOf("$")>=0){
                    re=re+"$"
                }
                reTest=new RegExp(re,flags?flags.join(""):"")

            } else if(txt instanceof RegExp){
                reTest=txt
            }
            if(reTest){
                this.__cache[ckey]= reTest
            }

        }
        if(reTest){
            if(filterfn){
                this._list.forEach(function(a){
                    filterfn.call(this,a,a.matchRe(reTest))
                }.bind(this))
                return this
            }
            else{
                return this._list.filter(function(a){
                    return a.matchRe(reTest)
                }.bind(this))
            }
        }
        return []
    }

  return function(list,optns,addtnl){

      return new LookupList(list,optns,addtnl)

  }


 })();
List.Observable=function(l){
    var list=List.create(l)
    if(!list.emitter) {
        list.emitter=$.emitter (list)
        $.observe (list, {ignorearrayops:true,onlyonchange:true},function(recs){
            if(recs && recs.length&&list.emitter){
                var ev,em=list.emitter;
                while(ev=recs.shift()){
                    if(ev.type=="delete" || !isNaN(ev.name) || ev.name=="length"){continue}
                    console.log(ev.type, ev)
                    ev.type&&em.fire (ev.type, ev)
                }
            }

        })
    }
    list.config||(list.config={});
    list.config.observable=true
    return list

}
ObservableList=(function( ){
    var ARRPROTO=Array.prototype,ARR=Array
    function _arr(v){return [].slice.call(v)}
    function _isarr(v){return ARR.isArray(v)}
    function _isarrLike(v){ return v?(_isarr(v)||(typeof(v)=="object"&&typeof(v.length)=="number"&&isFinite(v.length)&&v.length>=0)):!1}
    function _defineprop(o,k){
        Object.defineProperty(o.__proto__||o,String(k),{set:Function("v","this._set("+k+",v)"),get:Function("return this._get("+k+")"),enumerable:true,configurable:true})

    }

    function core(o){
        var _inner=[],_length=0,_listeners=[]
        var coreproto= {
            _state:{value:{instance:0,capacity:100,haslisteners:0,batchmode:0,reset:0,discarded:0},enumerable:false,writable:false,configurable:false},
            _get:{value:function(i){this.scan();
                return _inner[i]
            },enumerable:false,writable:false,configurable:true} ,
            _ensureCapacity:{value:function(v){
                var evalstr=[],props={},st=this._state
                if(v < st.capacity){return this}
                 for(var i=st.capacity;i<v;i++){
                    evalstr.push( "props['"+i+"']={set:function(v){this._set("+i+",v)},get:function(){return this._get("+i+")},enumerable:true,configurable:true}")
                }
                all=evalstr.join("; ");
                eval( all );
                Object.defineProperties(this.__proto__||this,props);
                st.capacity=v;
                return this
            }},
            scan:{value:function scan(){
                if(scan._busy){return}
                scan._busy=1
                try{
                    var l
                    if((l=Object.keys(this)).length){
                        var exp=this._state.expando||(this._state.expando=[]);
                        for(var i=0,ln=l.length,k;k=l[i],i<ln;i++){
                            if(exp.indexOf(k)>=0){continue}
                            exp.push(k)
                            if(!isNaN(k)){
                                var v=this[k];  delete this[k]
                                this._set(Number(k),v,true)
                            }
                        }
                    }
                }finally{scan._busy=0}
                return this
            },enumerable:false,writable:false,configurable:true},
            _sz:{value:function(v){this.scan()
                if(typeof(v)=="number"&&v>=0){
                    _length=_inner.length=v;
                };
                return _length||0
             },enumerable:false,writable:false,configurable:true} ,
                _rem:{value:function(i,howmany){
                    if(i===true){   //clear
                        for(var i=0,l=_inner,ln=l.length;i<ln;i++){ l[i]=null; }
                        _length=_inner.length=0;
                        this._dispatch( {type:"clear"})
                        return []
                    }
                    var r,ln=(howmany|0)||1
                    if(ln===1&&(i===0||i===-1)){
                        r=(i===-1)?_inner.pop():_inner.shift()
                    } else{
                        r= _inner.splice(i<0?_length+i:i,ln)
                    }
                    _length=_inner.length
                    this._dispatch( {type:"remove",data:r})
                    return r;
                },
                    enumerable:false,writable:false,configurable:true
                } ,
            reverse:{value:function(){return _inner.reverse();this._dispatch( {type:"order",reverse:true})},enumerable:false,writable:false,configurable:true} ,
            sort:{value:function(fn){
                return fn?_inner.sort(fn):_inner.sort();
                this._dispatch( {type:"order"})
            },enumerable:false,writable:false,configurable:true} ,
            _set:{value:function(i,v,insert){
                    if(_isarrLike(i)){ v=i;i=-1; }
                    i=i|0;
                    var ln=_length||_inner.length,idx=i,curr
                    if(_isarrLike(v)){
                        if(i===-1){_length=ARRPROTO.push.apply(_inner, _arr(v))}
                        else if(i===0){_length=ARRPROTO.unshift.apply(_inner, _arr(v))}
                        else{ARRPROTO.splice.apply(_inner, [i,0].concat(_arr(v)))
                            _length=_inner.length
                        }
                    } else{
                        idx=i<0?ln+i:i
                        if(insert===true||idx>=ln){
                            if(idx>=ln||i===-1){ _length=_inner.push(v)}
                            else if(idx===0){_length=_inner.unshift(v)}
                            else{
                                _inner.splice(idx,0,v)
                                _length=_inner.length
                            }
                        } else{
                            curr=_inner[idx]
                            if((typeof(v)!="object" && curr===v)||(curr&&v&&curr.$version&&curr.$version===v.$version)){return curr}
                            _inner[idx]=v
                        }
                    }
                    if(_length==null){_length=_inner.length}
                    this._ensureCapacity(_length)
                    this._dispatch({type:insert?"add":"update",index:idx,value:v,newValue:v,oldValue:curr})
                    return curr
                },enumerable:false,writable:false,configurable:true
                }
            }
            Object.defineProperties(o,coreproto);
        return o
    }
    function ObservableList(capacity,nulist){
         core(this)
        capacity=(capacity|0)||100
         this._ensureCapacity(capacity)
        this._state.instance=true;
        if(nulist!=null){
            this._set(nulist)
        }

    }
    var props={
        emitter:{get:function(){
            if(!(this._state&&this._state.instance)){return null}
            var _listeners={add:[],remove:[],update:[],order:[],"change":[]};
            var nu={
                on:function(type,fn){
                    if(!fn && typeof(type)=="function"){fn=type;type="change";}

                    if(typeof(fn)=="function"&&_isarr(_listeners[type])&&_listeners[type].indexOf(fn)==-1){
                        _listeners[type].push(fn)
                    }
                    this._state.haslisteners++
                    return this
                },
                off:function(type,fn){
                    if(_isarr(_listeners[type])&&_listeners[type].indexOf(fn)>-1){
                        _listeners[type].splice(_listeners[type].indexOf(fn),1)
                    }return this
                },
                fire:function(ev){var type=ev.type,ln,l=(_isarr(_listeners[type])?_listeners[type]:[]).concat(_listeners["*"])
                    if(ln=l.length){
                        for(var i=0;  i<ln;i++){
                            typeof(l[i])=="function" && l[i].call(this,ev)
                        };
                    }
                    return this
                }
            }
            delete this["emitter"]
            nu.fire=nu.fire.bind(this)
            nu.on=nu.on.bind(this)
            Object.defineProperty(this,"emitter",{value:nu,enumerable:false,writable:false,configurable:true})
            return nu;
        },set:function(){}
            ,enumerable:false, configurable:true},
        _dispatch:{value:function(ev){
            if(!this._state.haslisteners){return}
            this.emitter.fire(ev);
            return this
        },enumerable:false,writable:false,configurable:true
        },
        unshift:{value:function(){
            for(var i=0,l=[].slice.call(arguments),ln=l.length;i<ln;i++){
                this._set(0,l[i],true)
            };
            return this._sz()
        },enumerable:false,writable:false,configurable:true
        } ,
        splice:{value:function(i,l,a){
            var r=l?this._rem(i,l):[],
                aa=[].slice.call(arguments,2);
            while(aa.length){this._set(i,aa.pop(),true );}
            return r
        },enumerable:false,writable:false,configurable:true
        } ,
        slice:{value:function(s,e){
            var st=s|0,end=e|0,l=this._sz(),r=[];
            st=Math.min(l,st<0?l+st:st);
            end=Math.min(l,end<0?l+end:end);if(end<st||!end){end=l}
            for(var i=st;i<end;i++){r.push(l[i])};

            return r
        },enumerable:false,writable:false,configurable:true} ,
        shift:{value:function(){return this._rem(0)},enumerable:false,writable:false,configurable:true} ,
        push:{value:function(a){
            for(var i=0,l=[].slice.call(arguments),ln=l.length;i<ln;i++){
                this._set(-1,l[i],true)
            };
            return this._sz()
        },enumerable:false,writable:false,configurable:true} ,
        pop:{value:function(){
            return this._rem(-1)
        },enumerable:false,writable:false,configurable:true} ,
    }
    var proto= Object.create(null);
    Object.getOwnPropertyNames(ARRPROTO).forEach(function(k){
        if(typeof(k)=="string"  && typeof(ARRPROTO[k])=="function"&&  props[k]===undefined  ){
            props[k]= {value:eval("(function(){return ARRPROTO['"+k+"'].apply(_inner,arguments)})") ,enumerable:false,writable:false,configurable:true}
        }
    })

    var evalstr=[]
    for(var i=0;i<100;i++){
        evalstr.push( "props['"+i+"']={set:function(v){this._set("+i+",v)},get:function(){return this._get("+i+")},enumerable:true,configurable:true}")
    }

var all=evalstr.join("; ");
eval( all );props.length={get:function(){return this._sz()},set:function(v){this._sz(v)},enumerable:false,configurable:true}
Object.defineProperties(proto,props);


ObservableList.prototype=proto
ObservableList.prototype.constructor=ObservableList
return ObservableList
})();

/*

var nu=new ObservableList()  ;
nu.emitter.on("update",function(e){console.log(e.newValue===55)})
nu[9]=55
nu[9]==55
var t,c=1000,i,arr=Array(c);
t=Date.now();i=0;while(++i<c){arr[i]=i};console.log(Date.now()-t);
t=Date.now();i=0;while(++i<c){nu[i]=i};console.log(Date.now()-t)*/
;/**
 * Created by Atul on 6/13/2015.
 * Inspired by Angular
 *
 * Accepts binding declared in attributes as well as curlies
 *
 * Example
 * z-bind="eventhandler"
 *
 */

$.scanDom  = (function () {
	var   DOUBLECURLY_RE = /\{\{/, rem = /\{\{([^}]+)\}\}/g,DOUBLECURLY_EXPRRE=/^\{\{(.*?)\}\}$/,
		ops=/^[>#?!\+]/,
		fn = null
	var SCOPECACHE={},SCOPEMODELCACHE={}
	var UIDirectives={}
	function registerDirective(nm,model){
		if($.isPlain(model)){
			model=new uiDirective(model)
		}
		UIDirectives[nm]=model
	}
	function getDirective(nm){
		return UIDirectives[nm]
	}
	function resolveDirective(nm,config){
		var d=getDirective(nm);
		return d
	}
	function exprInfo(expr,istemplate){
		if(/[^\w\.]/.test(expr)){
			var parsed,args=[],orig=expr
			try{
				if(expr.indexOf("(")>0 && expr.indexOf(")")==expr.length-1){
					var arr=expr.split(/\(/)
					expr=arr.shift()
					args=arr[0].split(/\)/).shift().split(',').map(function(a){
						if(isNaN(a) && !/['"].test(a)/){vars.push(a)}
						return {value:a,type:$.typeInfo.get(a).type}
					})

				}
				if(/[^\|]\|[^\|]/.test(expr)){
					var ar=expr.split(/\|/)
					expr=ar.shift();
					args=ar.map(function(a){return {value:a,type:$.typeInfo.get(a).type}});
				}
				if(expr && args.length){
					return {id:orig,vars:vars ,args:args,fname:expr}
				}
				parsed=istemplate?$.template(expr):$.parseExpr(expr)
			} catch(e){return {id:expr}}
			if(!parsed){parsed={}};
			var vars=(parsed.tokens?parsed.tokens.filter(function(a){return a.type=="id"}).map(function(a){return a.value}):parsed.vars)||[]
			if(parsed.graph && parsed.graph.type=="fn"){
				args=args.concat(parsed.graph.args||[]).map(function(a){return ($.typeInfo.fromType(a.type)).coerce(a.value)});
				return {id:expr,args:args,vars:(parsed.graph.args||[]).filter(function(a){return a && a.type=="id"}).map(function(a){return a.value}),fn:parsed.fn,fnname:parsed.graph.value}
			}
			return {id:expr,vars:vars ,fn:parsed.fn||parsed}
		}
		return {id: expr,vars:[expr]}
	}
	var cntr=Date.now()
	function ELExprModel(el,scopeid){
		this._elid=el
		this.exprModels=[]
		this.scopeid=scopeid
		this.dependmap=[]
		this.attr={}
		this.children=[]
	}
	ELExprModel.prototype.$=function dollar(selector){
		var el=$d(this._elid)
		if(el && selector){
			return el.q(selector)
		}
		return el
	}
	ELExprModel.prototype.setScope=function setScope(scope){
		if(!scope){return}
		var scopeid
		if(typeof(scope)=="string"){
			scopeid=scope
			scope=null
		} else {
			scopeid=scope.scopeid

		}
		if(!scopeid){return}
		if(scopeid && scope) {
			SCOPECACHE[scopeid]=scope
		}
		this.scopeid=scopeid
		if(this.children && this.children.length) {
			this.children.forEach(function(a){
				a.setScope(scopeid)
			})
		}
		if(this.exprModels && this.exprModels.length) {
			this.exprModels.forEach(function(a){
				a.scopeid=scopeid
			})
		}
		return this
	}
	ELExprModel.prototype.hasDependancy=function hasDependancy(nm){
		return this.dependmap.indexOf(nm)>=0
	}
	ELExprModel.prototype.getScopeModel=function (){
		return SCOPECACHE[this.scopeid]
	}
	ELExprModel.prototype.findBinding=function (fn,mode){
		if(typeof(fn)=="string"){
			return (this.exprModels||[]).find(function(a){
				return a.prop==fn
			})
		} else if(typeof(fn)=="function"){
			return (this.exprModels||[]).find(fn)
		}

	}
	ELExprModel.prototype.refresh=function refresh(scopeid){
		if(scopeid) {
			this.setScope(scopeid)
		}
		var model= this.getScopeModel();
		if(!model){
			return
		}
		for(var i= 0,l=this.exprModels||[],ln= l.length;i<ln;i++){
			l[i].calc(model,true)
		}
		if(this.children && this.children.length) {
			this.children.forEach(function(a){
				a.refresh(scopeid)
			})
		}
	}
	function getModelBindings(el){
		var ele=$d(el)
		if(!ele){return}
		return ele.data("_modelbindings_")

	}
	function setModelBindings(el,elexpr){
		var ele=$d(el)
		if(!ele){return}
		return ele.data("_modelbindings_",elexpr)

	}
	/*
	 restrict	    Determines where a directive can be used (as an element, attribute, CSS class, or comment).
	 scope	        Used to create a new child scope or an isolate scope.
	 template	    Defines the content that should be output from the directive. Can include HTML, data binding expressions, and even other directives.
	 templateUrl	Provides the path to the template that should be used by the directive. It can optionally contain a DOM element id when templates are defined in <script> tags.
	 controller	    Used to define the controller that will be associated with the directive template.
	 link	        Function used for DOM manipulation task
	 replace       //true/false
	 */
	function uiDirective(config){
		if(!$.isPlain(config)){config={}}
		this._config=config;
		Object.defineProperties(this,{
			template:{get:function(){return this._config.template },
				set:function(a){this._config.template = a} },
			templateUrl:{get:function(){return this._config.templateUrl },
				set:function(a){this._config.templateUrl = a} },
			replace:{get:function(){return !!this._config.replace },
				set:function(a){this._config.replace = !!a} },
			restrict:{get:function(){return this._config.restrict||"" },
				set:function(a){this._config.restrict = a||""}
			}
		})
	}
	uiDirective.prototype.getScope=function(){
		return SCOPECACHE[this.scopeid]
	}
	uiDirective.prototype.compile=function( element, attrs){
		if(!this._rendered){
			this.render(element, attrs)
		}
		this._compile(this.el, attrs)
	}
	uiDirective.prototype.digest=function( scope,element, attrs){
		if(!this._rendered){
			var attribs=attrs||this._config.attr||{}
			var domattr=$d.attr(element)
			if(domattr && $.isPlain(attribs)){
				attribs=$.extend(domattr,attribs)
			}
			this.render(scope,element, attribs)
		}
		return this._link.bind(this)
	}
	uiDirective.prototype._compile=function( element, attrs){
		var config=this._config
		if(!element){return}
		if(this.replace){
			$.scanDom($d(element),this.scopeid)
		}
		else if(element.firstElementChild){
			if(element.firstElementChild==element.lastElementChild){
				$.scanDom($d(element.firstElementChild),this.scopeid)
			}
		}

		return this._link.bind(this)
	}

	uiDirective.prototype._link=function( scope, element, attrs){

		if(typeof(this._config.link)=="function"){
			this._config.link(scope, element, attrs)
		} else {
			if(this._scoped){
				this._scoped.reset(scope)
			} else{
				this._scoped=$.scanDom(element,scope)
			}

		}
		//fn for refresh
		return function(rec){

		}

	}
	uiDirective.prototype._render=function(scope,element, attrs){
		if(!element){return}
		if(!this._templatefn && this._content){
			this._templatefn=$d.template(this._content)
		}
		if(this._templatefn){
			var content=this._templatefn(scope).trim()
			if(this._config.replace){
				element.el.insertAdjacentHTML('afterEnd', content);
				var nu=element.el.nextElementSibling
				element.remove();
				element=$d(nu)

			} else{
				element.html(content);
			}

		}

		this._rendered=true
		this.el=element

		var linkfn= this._compile(element, attrs)
		if(typeof(linkfn)=="function"){
			linkfn(scope, element, attrs)
		} else {

		}
	}
	uiDirective.prototype.render=function(scope,element, attrs){
		if(element){this.el=$d(element)}
		var element=$d(this.el)
		if(!element || this._rendering){return}
		this._rendering=true
		if(!this._content) {
			if (this._config.template) {
				this._content=this._config.template

			} else if (this._config.templateUrl) {
				var str=app.getResource(this._config.templateUrl,function(scope,element1, attrs1,str){
					this._content=str
					this._render(scope,element1, attrs1)
				}.bind(this,scope,element, attrs))
				return
			}
		}
		this._render(scope,element, attrs)
	}


	function BaseExprModel(){

	}
	//BaseExprModel.prototype.shared={vars:[],dependMap:{}};

	BaseExprModel.prototype.initExpr=function initExpr(expr,op,prop,shared){
		this.el=null
		this.origexpr=this.expr=String(expr).trim();
		this.op=op;
		this.prop=prop
		this.id= "id"+(++cntr)
		if(shared && typeof(shared)=="object" && shared.vars){
			this.shared= shared;
		}

	}
	BaseExprModel.prototype.onTrigger=function(ev){
		if(typeof(this._callback)=="function"){
			this._callback.call(this,ev)
		}
	}
	BaseExprModel.prototype.addTrigger=function( ){
		var el=$d(this.el)
		if(!el){return}
		this._boundtriggerfn||(this._boundtriggerfn=this.onTrigger.bind(this));
		var trigger=this.trigger

		if(trigger=="bind"){
			trigger=this.isIp?"change":"pointer"
		}

		if(trigger=="pointer" || !this.isIp){
			el.on( "click.binder",  this._boundtriggerfn)
		} else{
			if(this.isIp){
				el.el.addEventListener("change",this._boundtriggerfn)
			}
		}


	}
	BaseExprModel.prototype.parseExpr=function parseExpr(exprto ){
		var prop=this.prop,expr=exprto||this.expr
		if(!expr){return}

		if(expr.indexOf("message.")==0){
			this.exprInfo={ismessage:true,messageid:expr.substr("message.".length)}
		} else{
			expr=expr.replace(/([^=<>!])=([^=])/,"$1==$2")
			if(this.istemplate!==false && expr.indexOf("${")>=0){this.istemplate=true}
			this.exprInfo=exprInfo(expr,this.istemplate)||{}
			var vars=this.exprInfo.vars||[this.exprInfo.id]
			this.addVars(vars);
		}

		return this.exprInfo
	}

	BaseExprModel.prototype.applyToDom=function(val){

	}
	BaseExprModel.prototype.inspect = function(a) {
		var format,attr=this.attribs||{}
		if (attr) {
			var type  = attr.format || attr.type;
			if (type) {
				var c = $.typeInfo.typeMap[type];
				if(c && c.coerce && $.typeInfo.defaultType != c && !c.nill && !c.string){this.info = c}
				if(this.info ){
					if(this.info._defaultFormat){
						format=this.info._defaultFormat;
					}
				}
			}
			if(!format){
				format=type
			}
			attr.format=format;
		}
		if(!format) {

		}
		if (format) {
			this.attribs||(this.attribs={});
			this.attribs.format=format
		}
		return this.setupDomSelection()
	}
	BaseExprModel.prototype.setAttr=function(name,val){
		this.attribs||(this.attribs={})
		this.attribs[name]=val
	}
	BaseExprModel.prototype.getScopedModel=function(scopeid){
		return (scopeid && typeof(scopeid)=="string")?SCOPECACHE[scopeid]:SCOPECACHE[this.scopeid]
	}
	BaseExprModel.prototype.calc=function(model,andapply){
		if(!(model && typeof(model.get)=="function")){model=null}
		var  cxt=model||this.getScopedModel(),val  ;
		if(!this.exprInfo){return}
		if(this.exprInfo.ismessage){
			val=app.resolveMessage(this.exprInfo.messageid)
		} else{
			if(!this.exprInfo.fn){
				val=this.exprInfo.id? $.resolveProperty(cxt,this.exprInfo.id):null
			}
			else{
				val=this.exprInfo.fn.call(cxt,cxt)
			}
		}
		if(andapply===true){
			this.applyToDom(val)
		}

		return val;
	}
	BaseExprModel.prototype.setEl=function( el){
		this.el=el;
		this.isIp=!!$d.isFormInput(el)
		if(this.isIp && (this.domprop=="text"||this.domprop=="expr"||this.domprop=="bind"||this.domprop=="model")){this.domprop="val"}
		if(this._callback && this.args && $d.domdata(this.el,"key") && !this.args.some(function(a){return a && a.val=="data-key"})) {
			this.elpropkey="data-key";
			//this.args.push({val:"data-key",isdomprop:true})
		}
		if(this.exprInfo && this.exprInfo.ismessage){
			this.applyToDom(this.calc())
		}
		this.el && this.onEl && this.onEl()
		this.el && this.setupDomSelection();

	}
	BaseExprModel.prototype.setupDomSelection=function( ){
		if(this.trigger){
			this.addTrigger();
		}
	}
	BaseExprModel.prototype.isDependantOn=function(nm){
		return this.vars && this.vars.indexOf(nm)>=0
	}
	BaseExprModel.prototype.addToShared=function(shared){
		var vars=this.vars||(this.vars=[]);
		if(!shared){shared={}}
		shared.vars||(shared.vars=[]);
		shared.dependmap||(shared.dependmap={});
		if(!vars.length){return shared}
		var sh=shared.vars,mp=shared.dependmap
		for(var i= 0,l= vars,ln= l.length;i<ln;i++){
			sh.indexOf(l[i])==-1 && sh.push(l[i]);
			mp[l[i]]||(mp[l[i]]=[]);
			mp[l[i]].indexOf(this.id)==-1 &&  mp[l[i]].push(this.id)
			if(l[i].indexOf(".")>0){
				var nm=l[i].split(".")[0]
				mp[nm]||(mp[nm]=[]);
				mp[nm].indexOf(this.id)==-1 && mp[nm].push(this.id)
			}
		}
		return shared
	}
	BaseExprModel.prototype.addVars=function(vars){
		if( vars){
			if(vars.length==1 && vars[0]==this.origexpr){
				this.isId=true
			}
			var thisvars=this.vars||(this.vars=[]);
			for(var i= 0,l= vars,ln= l.length;i<ln;i++){
				thisvars.indexOf(l[i])==-1 && thisvars.push(l[i]);
				if(l[i].indexOf(".")>0){
					var nm=l[i].split(".")[0]
					thisvars.indexOf(nm)==-1 && thisvars.push(nm);
				}
			}

		}
		if(this.shared){
			this.addToShared(this.shared)
		}
	}
	BaseExprModel.prototype.getTarget=function(target){
		var elem,domprop=this.domprop
		if(target && target.nodeType){
			elem=target;
		} else {
			elem=this.el;
			if(typeof(elem)=="string"){
				elem=document.getElementById(elem)
			}
		}
		return elem||null

	}
	BaseExprModel.prototype.prepareVal=function(val,valueModel){
		if(val===NaN){val=0}
		if(val==null ){val=""}
		var attr=this.attribs,frmt=attr?attr.format:null
		if(val && frmt || typeof(val)=="object"){
			val = $.format(val,frmt)
		}
		if(!val  && attr && attr.defaultvalue!=null){
			if(attr.defaultvalue=="nbsp"){val="&nbsp;"}
			else {val=attr.defaultvalue;}
		}

		//if(this._last===val){return}
		//console.log(this.el,this.domprop,val)
		if(this.domprop=="text"||this.domprop=="val"||this.domprop=="expr"){
			if(val==null ){val=""}
			else if(typeof(val)=="object" && valueModel){{
				val=valueModel.getItem(this.expr)
				if(val==null ){val=""}
			}
			}
		}
		val=String(val).replace(/null|undefined|\[object Object\]/g,"").trim().replace(/,$/g,"")
		return val
	}
	BaseExprModel.prototype.parseArgs=function(str){
		var ar=[]
		if(typeof(str)=="string"){ar=str.split(/\s*,\s*/)}
		else if(Array.isArray(str)){ar=str};
		return ar.map(function(a){
			var v=a.trim(),ret={val:v};
			if(/^[a-z_][\w_\.\-]+$/.test(v)){
				if(v.indexOf("data-")==0 || v.indexOf("style.")==0){
					v.isdomprop=true
					ret.val=ret.val.replace(/^style\./,"")
				} else{v.isexpr=true}
			}
			return ret
		});
	}
	BaseExprModel.prototype.getContext=function( ){
		return this.shared
	}
	BaseExprModel.prototype.execScopedFn=function( fn,A,scope){
		if(!fn){
			return
		}
		A=A||[]
		if(!$.isArray(A)){A=[A]}
		var scopedmodel=scope
		if(scope && scope.model && typeof(scope.model)=="object"){
			scopedmodel=scope.model
		}
		if(typeof(fn)=="string"){
			if(scopedmodel.getController().hasMethod(fn)){
				scopedmodel.getController().invoke(fn,A)
			} else if(scopedmodel!==scope &&  scope.getController && scope.getController().hasMethod(fn)){
				scope.getController().invoke(fn,A)
			} else if(scopedmodel._parentController &&  scopedmodel._parentController.hasMethod(fn)){
				scopedmodel._parentController.invoke(fn,A)
			}
		} else if(typeof(fn)=="function"){
			fn.apply(scope,A)
		}
	}
	BaseExprModel.prototype.execFn=function( fn,scopeid){
		var scope=this.getScopedModel(scopeid)
		if(!scope || scope!= this.shared.model){

		}
		var args=[],elpropval ,scopedmodel=scope

		if(scope && scope.model && typeof(scope.model)=="object"){
			scopedmodel=scope.model
		}

		for(var i= 0,l=this.args||[],ln= l.length;i<ln;i++){
			if(l[i] && typeof(l[i])=="object" && l[i].val && scopedmodel){
				if(l[i].isexpr){args.push($.resolveProperty(scopedmodel,l[i].val))}
				else if(l[i].isdomprop){args.push(el.prop(l[i].val))}
				else{args.push(l[i].val)}
			} else {
				args.push(l[i])
			}
		}

		if(this.elpropkey){
			elpropval=$d.prop(this.el,this.elpropkey)
		} else  {
			var el=$d(this.el)
			if(el&& el.el.type=="date" && el.el.valueAsDate){
				elpropval = +($.date(el.el.valueAsDate)||0)
			}
			else{
				elpropval=$d.val(this.el)
			}
		}
		if(!fn){
			if(scopedmodel && elpropval!=null){
				$.updateProperty(scopedmodel,this.expr,elpropval)
			}
		} else{
			if(this.elpropkey){args.push(elpropval)}
			this.execScopedFn(fn,args,scope)
		}

	}
	function ExprDirectiveModel(config){
		this.dirconfig=config||{} ;
	}
	ExprDirectiveModel.prototype=new BaseExprModel();
	ExprDirectiveModel.prototype.init=function init(expr,op,prop) {
		this.canhaveattr=true
		this._directive=getDirective(prop)
		this.dirconfig=expr;
		if(expr && typeof(expr)=="string"){
			if(expr.indexOf("{")==0){
				try{var x=null; eval("x="+expr);this.dirconfig=x	} catch(e){}
			}
		}


	}
	ExprDirectiveModel.prototype.applyToDom=function applyToDom(value) {

	}
	ExprDirectiveModel.prototype.onEl=function onEl(value) {
		if(this._directive){
			this._directive.digest(this.getScopedModel(),this.el, $.extend({},this.attribs||{},this.dirconfig||{}))
		}
	}

	function ExprBlockModel(blockinfo){
		this.block=blockinfo||{} ;
	}
	ExprBlockModel.prototype=new BaseExprModel();
	ExprBlockModel.prototype.init=function init(expr,op,prop) {this.canhaveattr=true;
		var expr=this.block.expr|| expr
		if( prop=="repeat"){
			var parts=expr.split(/(?:^\|)|(?:^\|)/)
			if(/\s+in\s+/.test(parts[0])){
				var iterators=parts[0].split(/\s+in\s+/)
				this.iterator=iterators[0]
				expr=this.expr=iterators[1]
			} else{
				expr=this.expr=parts[0]
			}
			this.block.op="#"
		}
		this.initExpr(expr, op, "block");
		if(this.block.op==">"){
			this.loadPartial();
			this.applyToDom=function(){};
		} else if(this.block.op=="!"){//comments - nothing
			this.applyToDom=function(){};
		} else if(this.block.op=="#" || this.block.op=="^"){//truthy
			if(this.block.content && Array.isArray(this.block)&& this.block.content.length){
				var txt=this.block.content.join("").replace(/\sid\s*\=\s*['"][\w\_\-]+['"]/g,"").trim()
				if(txt){
					this._eltemplate=$d.template(txt);
				}

			}

			this.parseExpr()
		}
	}
	ExprBlockModel.prototype.loadPartial=function loadPartial( ) {
		app.getResource(this.expr,
			function(a){
				var contnr=$d(this.el),doreplace
				if(!contnr && this.block && this.block.start){
					contnr=$d(this.block.start)
					doreplace=true
				}
				if(!contnr || !contnr.el){
					return
				}
				if(doreplace && contnr.el.parentNode && this.block.op==">"){
					var div=document.createElement("div")
					div.innerHTML=a;
					if(div.childElementCount==1){
						$d(contnr.el.parentNode.insertBefore(div.firstChild,contnr.el))
					}
					else{
						while(div.firstChild){
							contnr.el.parentNode.insertBefore(div.firstChild,contnr.el)
						}
					}
					contnr.el.parentNode.removeChild(contnr.el)
					contnr=null
				}
				else {
					contnr.html(a);
				}
				if(contnr){
					//$.partialView.processScopedStyles(contnr)
					this._eltemplate=$d.template(contnr.html());
				}

			}.bind(this)
		)
	}
	ExprBlockModel.prototype.applyToDom=function applyToDom(value) {
		var val=!!value,show=this.block.op=="#"?val:!val
		var cntnr=$d(this.el),isempty
		if(!cntnr){return}
		if(show){
			if(this.block.isproxyNode){
				if(!(this.block.startMarker && this.block.startMarker.parentNode)){
					var markerstart=document.createComment("block-marker-start:"+this.id)
					this.block.startMarker=cntnr.el.parentNode.insertBefore(markerstart,cntnr.el)
					this.block.endMarker=cntnr.el.parentNode.insertBefore(document.createComment("block-marker-end:"+this.id),cntnr.el)
				}
			}
			var bindings=value && typeof(value)=="object"?value:this.getScopedModel()
			if(!this._eltemplate){
				if(this.block.isproxyNode){
					this._eltemplate=$d.template( cntnr.innerHTML.replace(/\sid=['"][^'"]+?['"]/g," "))
				} else {
					var clone=cntnr.clone(true,true);
					[].forEach.call(clone.querySelectorAll("*"), function (a) {
						if (!(a.innerHTML||"").trim() && a.getAttribute("z-expr")) {
							a.innerHTML = a.getAttribute("z-expr");
						}
					})
					this._eltemplate=$d.template( clone.innerHTML.replace(/\sid=['"][^'"]+?['"]/g," "))
					$d.remove(clone)
				}


			}
			if(this._eltemplate ) {
				if ($.isArrayLike(value) || value instanceof $.model.Collection) {
					if(!value.length){isempty=true}
					if(cntnr){
						$d.clear(cntnr)
					} else{
						cntnr=document.createElement("div")
					}

					var html=[],iterator=this.iterator
					if(value instanceof $.model.Collection){
						html=value.collect(function (v) {
							if(iterator){isempty=false
								var data={};
								data[iterator]=v;
								return this._eltemplate(data)
							}
							return this._eltemplate(v)
						}.bind(this))
					}
					else {
						html = $.collect(value, function (v) {
							if(iterator){isempty=false
								var data={};
								data[iterator]=v;
								return this._eltemplate(data)
							}
							return this._eltemplate(v)
						}, this)
					}

					cntnr.html(html.join(""))
				} else {
					$d.html(cntnr, this._eltemplate(bindings))
				}

			}
			if(this.block.startMarker && this.block.endMarker){
				if(isempty || cntnr.firstChild){
					var elm=this.block.startMarker.nextSibling
					while(elm){
						if(elm==this.block.endMarker){break;}
						var e=elm
						elm=elm.nextSibling
						e.parentNode && e.parentNode.removeChild(e);
					}
				}
				if(cntnr.firstChild){
					while(cntnr.firstChild){
						this.block.endMarker.parentNode.insertBefore(cntnr.removeChild(cntnr.firstChild),this.block.endMarker)
					}
				} else {
					var elm=this.block.startMarker.nextSibling
					while(elm){
						if(elm==this.block.endMarker){break;}
						elm.style && $d.show(elm);
						elm=elm.nextSibling
					}
				}
				$d.hide(cntnr)
			}
			else{
				$d.show(cntnr)
			}
		} else {
			if(this.block.startMarker && this.block.endMarker){
				var elm=this.block.startMarker.nextSibling
				while(elm){
					if(elm==this.block.endMarker){break;}
					elm.style && (elm.style.display="none");
					elm=elm.nextSibling
				}
				$d.hide(cntnr)
			}
			$d.hide(cntnr)
		}

	}



	function ExprModel( expr,op,prop){
		if(expr==null){return}
	}
	ExprModel.prototype=new BaseExprModel();
	ExprModel.prototype.init=function init(expr,op,prop,shared){
		this.canhaveattr=true;
		this.initExpr(expr,op,prop,shared);
		this.parseExpr()
		this.domprop=(prop=="bind"||prop=="model"||prop=="expr")?"text":prop

		if(this.prop=="target"||this.prop=="bindTo"||this.prop=="bindto" ){
			this.trigger="bind"
			this.domprop=this.prop=="target"?"":"ipval"
		}

		if(this.method||(this.exprInfo?this.exprInfo.fnname:null)) {
			if (!this.trigger) {
				this.trigger = "pointer"
			}
		}
		if (this.trigger) {
			this.args=[]
			this._callback=function(){
				var  el=$d(this.el)
				if(!el || el.selfOrUp("[disabled]")){
					console.log("disabled")
					return
				}

				var sid,models=getModelBindings(el)
				if(models ){
					sid=models.scopeid
				}
				this.execFn(this.method ,sid)
			}
		}
	}

	//what happens when vars change
	ExprModel.prototype.applyToDom=function(value,target){
		var elem=this.getTarget(target),domprop=this.domprop
		if(!elem || this.prop=="switch-when"){
			return
		}
		if(typeof(value)=="function"){
			var model=this.getScopedModel()
			value=value.call(model);
		}
		if(!this.isIp && domprop=="text"){
			this.isIp=!!$d.isFormInput(elem)
			if(this.isIp){this.domprop=domprop="ipval"}
		}
		if(domprop=="ipval"){
			domprop=this.isIp?"val":""
		}
		if(!domprop ){return
			/*if(this.trigger=="bind" && this.isIp){
			 domprop="val"
			 } else{
			 return
			 }*/
		}

		var val=this.prepareVal(value)
		if(this.domPropertyHandle){
			this.domPropertyHandle(val, domprop,elem)
		}
		else{
			if(  domprop=="val" ){
				var el=$d(elem.el||elem)
				if(el&& el.el&& el.el.type=="date" && "valueAsDate" in el.el){
					if(val){
						val= $.date(val)
					}
					if(val){
						val=el.el.valueAsDate=new Date((+val) )
						val=+val;
					}
					else{el.value=""}
				}
				else{
					$d.val(elem, val==null?"":val)
				}
			}
			else{
				$d.prop(elem, domprop,val==null?"":val)
			}
		}
		this._last=val
	}
	function ExprSwitchModel(){ }
	ExprSwitchModel.prototype=new ExprModel();
	ExprSwitchModel.prototype.applyToDom=function applyToDom(value) {
		var cntnr=$d(this.el)
		if(!cntnr){return}
		cntnr.descendants(true).each(function(a){
			var chld=getModelBindings(a);
			var bound=chld?chld.findBinding("switch-when"):null
			if(bound && bound.calc()==value){
				$d.show(bound.el)
			} else{
				$d.hide(bound.el)
			}

		})

	}
	function ExprEventModel( expr,op,prop){
		this.invokable=true;
		if(expr==null){return}
		this.init(expr,op,prop )
	}
	ExprEventModel.prototype=new ExprModel();
	ExprEventModel.prototype.init=function init(expr,op,prop) {
		prop=String(prop).replace(/^on/,"").trim()
		//check if a selector is included
		if(typeof(expr)=="string" && !/\s/.test(expr) && expr.indexOf("::")>0){
			var arr=expr.split("::")
			this._selector=arr.pop();
			expr=arr[0]
		}
		this.initExpr(expr, op, prop);
		if(/^[\w+]$/.test(expr)){
			this.exprInfo={expr:expr,id:expr,fn:expr,vars:[]}
		}
		else{
			this.parseExpr()
		}
		this._callback=function(ev){
			if(!this.exprInfo){return}
			var S=this.getScopedModel()
			var args=this.exprInfo.args,A=[].slice.call(arguments) ,scopedmodel=S
			var  el=$d(this.el)
			if(!el || el.selfOrUp("[disabled]")){
				console.log("disabled")
				return
			}
			if(S && S.model && typeof(S.model)=="object"){
				scopedmodel=S.model
			}
			if(args && args.length){
				A= A.concat(args.map(function(a){ return (isNaN(a) && !/['"']/.test(a) && scopedmodel.contains(a))?scopedmodel.get(a):a} ))
			}
			this.execScopedFn(this.exprInfo.fnname||this.exprInfo.fn||this.exprInfo.id,A,S)
		}.bind(this)
	}
	ExprEventModel.prototype.onEl=function init(expr,op,prop) {
		$d.on(this.el,this.prop+".ExprEventModel",this._callback,{selector:this._selector})
	}
	ExprEventModel.prototype.applyToDom=function(value,target){
	}
	function ExprOptionsModel( expr,op,prop){
		if(expr==null){return}
		this.init(expr,op,prop )
	}
	ExprOptionsModel.prototype=new ExprModel();
	ExprOptionsModel.prototype.applyToDom=function(value,target){
		var elem=this.getTarget(target),domprop=this.domprop
		if(!elem){  return }
		$d.addOptions(elem,value)
	}
	function ExprVisibilityModel( expr,op,prop){
		if(expr==null){return}
		this.init(expr,op,prop )
	}
	ExprVisibilityModel.prototype=new ExprModel();
	var falsies=["0" ,"null" ,"undefined" ,"false" ,"hidden" ,"none","hide"]

	ExprVisibilityModel.prototype.applyToDom=function(value,target){
		var elem=this.getTarget(target),domprop=this.domprop
		if(!elem){  return }
		if(!value || (typeof(value)=="string" && falsies.indexOf(value)>=0)){
			if(domprop=="visibility"){
				$d.css(elem,"visibility","hidden")
			}
			else if(domprop=="disappear"){
				$d.disAppear(elem)
			}
			else if(domprop=="hideflex"){
				$d.css(elem,"display","none")
			}
			else {
				$d.hide(elem)
			}
		} else {
			if(domprop=="visibility"){
				$d.css(elem,"visibility","visible")
			}
			else if(domprop=="appear"){
				$d.appear(elem)
			}
			else if(domprop=="hideflex"){
				$d.css(elem,"display","flex")
			}
			else {
				$d.show(elem)
			}
		}
	}
	function ExprClassModel( expr,op,prop){
		if(expr==null){return}
		this.init(expr,op,prop )
	}
	ExprClassModel.prototype=new ExprModel();
	ExprClassModel.prototype.init=function(expr, op, prop){
		this._marker=" -- "
		this.classExpr=expr.replace(/\{\{(.*?)\}\}/, this._marker)
		this.initExpr(expr, op, prop);
	}

	ExprClassModel.prototype.applyToDom=function(value,target){
		var elem=this.getTarget(target),domprop=this.domprop
		if(!value){  value="blank-ph"}
		if(!elem || !value){  return }
		if(!this.classExpr){
			this.classExpr=elem.className.replace(/\{\{(.*?)\}\}/, " -- ")
		}
		var val=String(value)
		var expr=this.classExpr
		if(this._last && this._last==val){return}
		if(this._last){expr=expr.replace(this._last+this._marker,this._marker)}
		elem.className=expr.replace(this._marker,val+this._marker)
		this._last=val
	}

	function ExprStyleModel( expr,op,prop){
		if(expr==null){return}
		this.init(expr,op,prop )
	}
	ExprStyleModel.prototype=new ExprModel();
	ExprStyleModel.prototype.init=function init(expr,op,prop) {
		this.initExpr(expr, op, prop);
		this.stylelist = []
		for(var i= 0,l=expr.split(";"),ln= l.length;i<ln;i++) {
			if(DOUBLECURLY_RE.test(l[i])){
				var ar = l[i].split(":")
				var info=this.parseExpr(ar[1].replace(/\{\{(.*?)\}\}/, "$1").trim())
				this.stylelist.push([ar[0],{fn:info.fn,id:info.id}])
			}
		}
		this.domprop=prop
	}

	ExprStyleModel.prototype.applyToDom=function(value,target){
		var elem=this.getTarget(target),domprop=this.domprop,scope=this.getScopedModel(),scopedmodel=scope

		if(scope && scope.model && typeof(scope.model)=="object"){
			scopedmodel=scope.model
		}
		if(!elem || !scopedmodel){  return }

		if(this.stylelist){
			for(var i= 0,l=this.stylelist,ln= l.length;i<ln;i++) {
				var val,L=l[i]
				if(L[1].fn){
					val=L[1].fn(scopedmodel)
				} else {
					val= $.resolveProperty(scopedmodel,L[1].id)
				}
				if(val!=null){
					if(val===NaN){val=0}
					$d.css(elem,L[0],val)
				}
			}
		}

	}
	registerDirective("toggle",{
		link:function(scope,element,attr){
			element.hover(function(){
				this.css("backgroundColor",attr.reg)
			},function(){
				this.css("backgroundColor",attr.alt)
			})

		}
	})
	registerDirective("showlist",{
		link:function(scope,element,attr){
			element.hover(function(){
				this.css("backgroundColor",attr.reg)
			},function(){
				this.css("backgroundColor",attr.alt)
			})

		}
	})
	registerDirective("calendar",{
		link:function(scope,element,attr){
			var cal= $.require("UI.Calendar");
			element.on("click",function(){
				cal(null,{
					onselect:function(e){
						scope.set(attr.model,e)
						this.view.hide()
					}
				})
			})

		}
	})
	//utils

	function processTextNode(data  ){
		if(!(data.val && String(data.val).trim())){return}
		data.val = data.val.trim().replace(/{{|}}/g, "").trim()
		data.isexpr=true
		//if block operation
		if(/^[\^#\>\/!]/.test(data.val)){
			data.isblock=true;
			data.val= data.val.trim().replace(/^[\^#\>\/!]/,function(a){data.op=a;

				return ""
			}).trim()
			if(data.op==">"){
				data.ispartial=true
			} else if(data.op=="/"){
				data.isblockend=true
			} else if(data.op=="#" || data.op=="^"){
				data.isblockstart=true
			}
		}
		data.name=data.name||"expr"
		return data
	}
	function isInScope(el,scopeid){
		if(el && el.getAttribute && el.getAttribute("z-scope") && el.getAttribute("z-scope") != scopeid){
			var scp=el.getAttribute("z-scope");

			return false
		}
		return true
	}
	function wrapTextNode(elem){
		var expr=elem.textContent.trim()
		var span=document.createElement("span")
		elem.parentNode.replaceChild(span,elem)
		return processTextNode({name:"expr",val:expr,el:$d(span).el,isproxyNode:true})

	}

	function inspectProp(prop,val){
		var data={val:val}
		if (prop.indexOf("data-") == 0) {
			prop = prop.substr("data-".length)
			if (prop == "cmd" || prop == "bind" || prop == "bindTo" || prop == "bindto" || prop == "model" || prop == "binder") {
				data.isexpr = true;
				data.name = prop
				data.domattr=true
				return data;
			}
		}
		var type
		if(getDirective(prop)) {
			data.isexpr=true;
			data.domattr=true
			type="ui"
		}
		else {
			var mtch =  prop.match(/(ui|z|ng)([\-\:[A-Z])([\w\-]+)/)
			if (mtch) {
				type = mtch[1]
				var sep = mtch[2], nm = mtch[3]
				if (sep != ":" && sep != "-") {
					nm = sep.toLowerCase() + nm
				}
				data.domattr=true
				data.isexpr = true;
				prop = nm;
				if (type != "ui") {//directive
					//
					if (type != "ui" && (prop == "format" || prop == "args" || prop == "type" || prop.indexOf("attr-") == 0 || prop == "defval" || prop == "defaultvalue" || prop == "filter"
						|| prop == "order")) {
						if (prop == "defval") {
							prop = "defaultvalue"
						}
						data.isattr = true;
					} else if (prop.indexOf("on") == 0 || prop == "click" || prop.indexOf("mouse") == 0 || prop.indexOf("key") == 0 || prop == "change" || prop == "input") {
						data.isevent = true
						prop = prop.replace(/^on/, "")
					} else {
						data.isexpr = true;
						if (prop == "repeat" || prop == "block" || prop == "switch") {
							data.isblock = true;
						}
					}


				}
			}
		}
		if (data.val  && DOUBLECURLY_RE.test(data.val)) {
			data.isexpr=true;
			data.val = data.val.replace(DOUBLECURLY_EXPRRE, "$1").replace(/"/g, '\\"').trim()
		}
		if(data.isexpr) {
			data.name = prop
			data.type = type
			return data;
		}

	}

	function getBindableProps(el,type,memo){
		if (type == 1 && !isInScope(el, memo.scopeid)) {
			return true; //skip self and children
		}
		var holder=memo.holder
		if(!(el && el.nodeType==1)){return null}
		var props=[],txtnodes=[]
		for (var i = 0, attr=el.attributes,ln = attr.length; i < ln; i++) {
			if(!(attr[i] && attr[i].name)){continue}
			var data=inspectProp(attr[i].name,attr[i].value)
			if(data) {
				props.push(data);
			}
		};
		if (el.firstChild ) {
			var textnodes=[].slice.call(el.childNodes).filter(function(a){return a.nodeType==3 && DOUBLECURLY_RE.test(a.textContent)})
			if(textnodes.length){
				//has only text
				if(textnodes.length==1 && el.childNodes.length==1 && DOUBLECURLY_EXPRRE.test(String(textnodes[0].textContent).trim())){
					props.push({name:"text",val:String(textnodes[0].textContent).trim().replace(DOUBLECURLY_EXPRRE, "$1").replace(/"/g, '\\"').trim()})
				} else {
					textnodes.forEach(
						function(elem){
							data= wrapTextNode(elem)
							data && txtnodes.push(data)
						}
					)
				}
			}
		}
		el.id||$d(el)
		var id=el.id
		if(props.length) {
			holder[id]||(holder[id]={bindings:[]});
			props.map(function(data){
				data.el=el;
				if(!data.isattr){
					holder[ id].bindings.push(data);
				}
				if(data.name && data.name!="text" && !data.isblock){
					holder[ id].attr||(holder[ id].attr={})
					holder[ id].attr[data.name]=data.val
				}
			});
		}
		if(txtnodes && txtnodes.length) {
			txtnodes.map(function(data){
				var el=data.el;
				el.id||$d(el)
				var id=el.id
				holder[id]||(holder[id]={bindings:[]});
				holder[ id].bindings.push(data);
			});
		}
		return holder;
	}
	function  injectPartial (el, template ,memo) {
		var str = app.getResource(template)
		if (str && typeof(str)=="string" && str.length) {
			if(el.nodeType==3) {
				var tmp = el.parentNode.insertBefore(document.createElement("span"), el);
				tmp.insertAdjacentHTML('afterEnd', str);
				tmp.parentNode.removeChild(tmp);
				el.parentNode.removeChild(el);
			} else {
				el.innerHTML=str;
			}
			return
		}
	}
	function  replaceTextNodes (el, type,memo) {
		type = type || el.nodeType
		if (type == 1 && memo.scopeid && !isInScope(el, memo.scopeid)) {
			return true; //skip self and children
		}
		if (type == 1 && el.classList.contains("z-block")) {
			return
		}
		if (type == 3) {
			var partialnodes=[]
			var txt = String(el.textContent).trim()
			var  alltxtnodes=txt.match(/\{\{(.*?)\}\}/g)||[]
			if (alltxtnodes.length) {
				var notmpl=txt.replace(/\{\{(.*?)\}\}/g,"")
				if(!notmpl && alltxtnodes.length==1){
					if(/^\s*\>/.test(alltxtnodes[0].replace(/\{\{(.*?)\}\}/g,"$1").trim())) {
						partialnodes.push(el)
					}
				} else {
					var blocks=[],par= el.parentNode
					txt=txt.replace(/{{(.*?)}}/g,function(a,b){blocks.push(a);return "!~!#~"+(blocks.length-1)+"!~!"})
					txt.split("!~!").forEach(function(a){
						if(!a){return}
						var txt=a;
						if((a.indexOf("#~")==0 && !isNaN(a.substr(2)))){txt=blocks[+(a.substr(2))]}
						var newnode = document.createTextNode( txt )
						par.insertBefore(newnode, el);
					})
					par.removeChild(el);
					for(var i= 0,l=par.childNodes;i< l.length;i++){
						if(l[i].nodeType!=3){continue}
						var txt=l[i].textContent
						if(!txt.match(/\{\{\s*\>\s*(.*?)\}\}/)){continue}
						partialnodes.push(l[i])
					}


				}
				partialnodes.forEach(function (el) {
					var txt = String(el.textContent).trim()
					var nm=txt.replace(/{{|}}/g, "").trim()
					if(/^\s*\>/.test(nm)) {
						nm = nm.replace(/^\s*\>/, "").trim()
						injectPartial(el, nm ,memo)
					}
				});

			}
		} else if (type == 1) {
			var template=el.getAttribute("z-include")||el.getAttribute("z:include")||el.getAttribute("ng-include")||el.getAttribute("ng:include")
			if(template){
				injectPartial(el, template ,memo)
			}
		}


	}
	function findBinding(holder,fn,andremove){
		var res=null
		for(var i= 0,l=Object.keys(holder),ln= l.length;i<ln;i++){
			var elid=l[i];
			if(holder[elid] && holder[elid].bindings && holder[elid].bindings.length){
				if(res=holder[elid].bindings.find(fn )){
					if(andremove===true) {
						holder[elid].bindings.splice(holder[elid].bindings.indexOf(res),1)
					}
					break;
				}
			}
		}
		return res;
	}
	function _resolveBlock(start,memo,data) {
		start.processed=true;
		var name= start.val,container=memo.holder
		var end=findBinding(container,function(b){return b && b.isblockend && b.val==name});
		if(!end){container=data.holder
			end=findBinding(container,function(b){return b && b.isblockend && b.val==name});
		}
		if(end && end.el && start.el){
			end.processed=true;
			if(end.el != start.el){
				if($d(end.el).parent()==$d(start.el).parent()){
					var endid=$d(end.el).id,tocopy=[];
					$d.nextAll(start.el).every(function(e){
						if($d(e).id==endid){return false}
						tocopy.push(e);
					})
					while(tocopy.length){
						$d(start.el).append($d(tocopy.shift()))
					}
				}
				end.isproxyNode && $d.remove(end.el)
			}

			return true
		}
	}
	function _proc(el,data){
		el.el.normalize && el.el.normalize();
		var scopedel= (data.scopeid?$d.selfOrDown(el,"[z-scope='"+data.scopeid+"']"):null)||el
		var memo={holder:{},revHolder:data.revHolder,scopeid:data.scopeid,scope:data.scope,ctor:data.ctor}

		scopedel.traverse({enter:replaceTextNodes,memo:memo});
		scopedel.traverse({enter:getBindableProps,memo:memo});
		Object.keys(memo.holder).forEach(
			function(elid){
				var H=memo.holder[elid],ELExprs=[]
				if(H && H.bindings && H.bindings.length){
					var B = [].slice.call(H.bindings)
					B.forEach(
						function(a){
							if(a.processed||a.isblockend||a.name=="scope"||a.name=="app"){
								return
							}
							if(a.isblockstart && !_resolveBlock(a,memo,data)){
								return
							}
							if(a.name=="switch-when"){
								var expr=a.val
								if(expr && /^[\w\-]+$/.test(expr)&& isNaN(expr)){
									a.val="'"+a.val+"'"
								}
							}

							var ELExpr=memo.ctor(a)
							if(ELExpr) {
								if (ELExpr && ELExpr.canhaveattr) {
									if (H.attr) {
										$.each(H.attr, function (v, k) {
											ELExpr.setAttr(k, v)
										});
									}
								}
								ELExpr.setEl(elid)
								memo.revHolder[ELExpr.id] = ELExpr;
								ELExpr.inspect()
								ELExprs.push(ELExpr)
							}
						}
					);
					if(ELExprs.length) {
						var elbindings = new ELExprModel(elid, memo.scopeid)
						if (memo.root) {
							memo.root.children.push(elbindings)
						} else {
							memo.root = elbindings;
						}
						elbindings.exprModels = ELExprs;
						elbindings.attr = $.clone(H.attr || {})
						setModelBindings(elid, elbindings);


					}
				}
			}
		);
		if(memo.holder && Object.keys(memo.holder).length){
			Object.assign(data.holder,memo.holder)
		}
	}
	function addDataBindings( data) {

		var scope=data.scope,valueModel=data.valueModel,revHolder=data.revHolder, ctor=data.ctor,bindings=data.bindings
		if(!scope){return}
		var scopedModel=scope
		if(scope && scope.model && typeof(scope) == "object"){
			scopedModel=scope.model
		} else {
			scopedModel=scope
		}
		if (bindings.indexOf(scope) == -1) {
			var vars = ctor.shared.vars,listeningon= ctor.shared.listeningon||(ctor.shared.listeningon=[]);
			if (scopedModel && typeof(scopedModel) == "object") {

				var cb = function (rec) {
					var name = rec.qname || rec.name
					if (name && vars.indexOf(name) >= 0) {
						if (rec.object && rec.object == valueModel.attributes) {
						}
						valueModel.set(name, rec.value || rec.newValue);
					}
				};
				for (var i = 0, l = vars, ln = l.length, k; k = l[i], i < ln; i++) {
					if (k && typeof(k) == "string" && listeningon.indexOf(k)==-1) {
						if (scopedModel.onPathChange) {
							scopedModel.onPathChange(k, cb)
						} else if (scopedModel.properties && scopedModel.properties.onPathChange) {
							scopedModel.properties.onPathChange(k, cb)
						}
						listeningon.push(k)
					}
				}
				bindings.push(scope)
			}
		}
		valueModel.update(scopedModel)
		return valueModel;
	}
	function _procInitListener (data) {
		var revHolder=data.revHolder, ctor=data.ctor
		var shared=ctor.shared
		var valueModel = new $.simpleModel(data.scopeid,  shared.vars);
		data.valueModel=valueModel
		shared.valueModel = valueModel
		var mp =  shared.dependmap
		valueModel.on(
			function (rec) {
				if (mp[rec.name]) {var revHolder=data.revHolder
					for (var i = 0, l = mp[rec.name], ln = l.length; i < ln; i++) {
						if (revHolder[l[i]]) {
							var res, M = revHolder[l[i]]
							if (M.isId) {
								res = this.get(M.expr)
							}
							else {
								res = M.calc(this)
							}
							M.applyToDom(res)
						}
					}
				}
			}
		)

		valueModel.update = function (model, reset) {
			if (!(model && typeof(model) == "object")) {
				return
			}
			shared.model=model
			for (var i = 0, l = this.keys(), ln = l.length, k; k = l[i], i < ln; i++) {
				var val = $.resolveProperty(model, k)
				if (val != null || reset) {
					this.set(k, val)
				}
			}
		}


		addDataBindings(data)
		return valueModel
	}
	function createScopedCtor(data){
		return (function(scopeDATA){
			var shared=scopeDATA
			var retctor= function(expr,op,prop){
				var data={}
				if(arguments.length==1 && expr && typeof(expr)=="object"){
					data=expr
					prop=expr.name
					op=expr.op
					expr=expr.val
				}
				var nu

				if(data.ispartial || prop=="partial" || prop=="template" || prop=="include" ){
					return
				}
				if(prop=="switch"){
					nu=new ExprSwitchModel(data)
				}
				else if(data.type=="ui"){
					nu=new ExprDirectiveModel(data)
				} else if(data.isblock || prop=="block"){
					data.expr=expr;
					nu=new ExprBlockModel(data)
				} else if(prop=="cmd" || data.isevent || (prop.indexOf("on")==0 && prop.length>3) ){
					if(prop=="cmd"){prop="click"}
					nu=new ExprEventModel( )
				}
				else if(prop=="visibility"||prop=="hide"||prop=="show"||prop=="appear"||prop=="disappear"||prop=="hideflex") {
					nu = new ExprVisibilityModel()
				} else if(prop=="options"){
					nu = new ExprOptionsModel()
				} else if(prop=="style"){
					nu=new ExprStyleModel()
				} else if(prop=="className"||prop=="class"){
					nu=new ExprClassModel()
				}  else {
					nu=new ExprModel( )
				}
				nu._processed = true;
				nu.shared=shared;
				nu.scopeid=shared.scopeid

				nu.init(expr,op,prop,shared)
				nu.inspect()
				return nu
			}
			retctor.shared=shared
			return retctor
		})(data);
	}
//API
	function createScope(elem,scopeid,scope) {
		var el=$d(elem);
		if(!el){
			return
		}
		var DATA={scopeid:scopeid,scope:scope,vars:[],dependmap:{}}
		if(DATA.scopeid){
			if(!el.is("[z-scope='"+DATA.scopeid+"']")){
			}
		}
		DATA.holder = {};
		DATA.revHolder = {};
		DATA.bindings = []
		DATA.ctor=createScopedCtor(DATA)

		_proc(elem,DATA )
		_procInitListener( DATA);
		DATA.reset=function(model) {
			if(this.scopeid){
				SCOPECACHE[this.scopeid]=model
			}
			if (model  ) {
				this.scope=model;
				addDataBindings(DATA)
			}
			this.valueModel.update(model||this.scope,true)
			this.valueModel.trigger();
			return this;
		}
		DATA.scan=function(elem){
			_proc(elem)
			return this;
		}
		DATA.digest=function(el){
			_proc(el,this );
			return this;
		}

		return DATA
	}
	var api= function(elem,scopeid,scope) {
		if(typeof(scopeid)!="string"){
			if(!scope){scope=scopeid}
			scopeid=null
		}
		if(!(scope && typeof(scope)=="object")){
			scope=null
		}
		var el = $d(elem),holder={};
		if (!el) {
			return
		}
		var scoped=null
		if(!scopeid && scope){
			scopeid=scopeid.scopeid
		}
		if(scopeid && scope){
			SCOPECACHE[scopeid]=scope
		}
		if(scopeid ){
			scoped=SCOPEMODELCACHE[scopeid]
		}

		if(!scoped ){
			scoped= createScope(elem,scopeid,scope)
			if(scopeid && scoped){
				SCOPEMODELCACHE[scopeid]=scoped
			}
		} else {
			scoped.digest(elem)
		}
		return scoped
	}
	api.registerDirective=registerDirective
	return api;
})();;/**
 * Created by Atul on 5/20/2015.
 */
$.controller = (function () {
    function _controller(view) {
        this._scope = view;
        this._methods = {log: function () {
            console.log.apply(console, arguments)
        }}
        this._methods.print = this._methods.log;
        this._methods.alert = self.alert.bind(self);
    }

    _controller.prototype = {
        bind: function (nm, args) {
            return function (nm, a0) {
                var a = [].slice.call(arguments, 2)
                var args = [].concat(a0, a)
                return this.invoke(nm, args)
            }.bind(this, nm, args)
        },
        invokeFor: function (nm,arg) {
            if(typeof(this[nm])=="function"){return arg?this[nm].bind(this,arg):this[nm].bind(this)}
            return this.invoke.bind(this,nm)
        },
        hasMethod:function(nm){return (nm in this._methods) || typeof(this._scope[nm])=="function"},
        setPropertyValue: function (nm, val) {
            var owner=this._scope,prop=nm
            if(nm.indexOf(".")>0){
                var arr=nm.split(".");prop=arr.pop();
                owner=  arr.reduce(function(m,k){
                    return m?m[k]:null
                },this._scope);

            }
            if(owner){var curr=owner[prop]
                owner[prop]=val
                return curr;
            }
        },
        getPropertyValue: function (nm, val) {
            var owner=this._scope,prop=nm
            if(nm.indexOf(".")>0){
                var arr=nm.split(".");prop=arr.pop();
                owner=  arr.reduce(function(m,k){
                    return m?m[k]:null
                },this._scope);

            }
            if(owner){
                return owner[prop]
            }
        },
        invoke: function (nm, args) {
            if (args == null) {
                args = []
            }
            else if (typeof(args) != "object") {
                args = [args]
            }
            if (typeof(this[nm]) == "function") {
                return this[nm].apply(this, Array.isArray(args) ? args : args.length?[].slice.call(args):[args])
            }
            var mthd = this._methods[nm]  || (this._scope || {})[nm]
            if (typeof(mthd) == "function") {
                return mthd.apply(this._scope, Array.isArray(args) ? args : args.length?[].slice.call(args):[args])
            } else{
                console.log("controller fn not found:"+nm)
            }
            return null
        },
        add: function (nm, m) {
            if (typeof(nm) == "function") {
                m = nm;
                nm = m.name|| m._name
            }
            if(!nm){return null}
            this._methods[nm] = m//Function("return this.invoke('"+nm+"',[].slice.call(arguments))")
            return this
        }, mixin: function (obj, nooverwrite) {
            var mm = this._methods;
            $.each(obj, function (v, k) {
                if (typeof(k) == "string" && isNaN(k) && typeof(v) == "function") {
                    if (nooverwrite && typeof(mm[k]) == "function") {
                        return
                    }
                    mm[k] = v
                }
            })
            return this
        }
    }
    if (typeof(console) != "undefined")
        _controller.create = function (vw, obj) {
            if (!vw || typeof(vw) != "object" || $.isPlain(vw)) {
                obj = typeof(vw) == "object" ? vw : null
                vw = null;
            }
            var nu = new _controller(vw)
            if (obj) {
                nu.mixin(obj)
            }
            return nu
        }
    return _controller
})();
;/**
 * Created by Atul on 9/6/2015.
 */
$.simpleTemplate=function(str2){
	if(typeof(str2)!="string"){return }
	//simple
	var vars=[]
	str2.replace(/\$([a-z][\w.]+)/g,function(a,b){
		var nm=b.split(/\./).shift();vars.indexOf(nm)==-1 && vars.push(nm)
	})
	var fn= (function(str,varlist ){
		var string=str,res=$.resolveProperty,vars=varlist
		function resolveTemplate(obj){
			return string.replace(/\$([a-z][\w\.]+)/ig,function(a,b){
				var data=obj;
				if(!(obj && typeof(obj)=="object")  ){
					if(vars.length==1){data={};data[vars[0]]=obj}
				}
				var v= b.indexOf(".")>0?res(data,b):data[b]
				return v==null?"":String(v)
			})
		}
		return function(obj){
			var data=obj
			if(!(obj && typeof(obj)=="object") ){
				if(vars.length==1){data={};data[vars[0]]=obj}
			}
			if(data && typeof(data)=="object"){
				return $.isArrayLike(data)?[].map.call(data,resolveTemplate).join(""):resolveTemplate(data)
			}
		}
		return ""
	})(str2,vars )
	fn.fn=fn;
	fn.vars=vars
	fn.qvars=[]
	return fn
}
$.templatehandlebar=function(str,opts) {//"<li>${rr+2} $each{ eeee }</li>"
	//replce with ph registerHelper > registerPartial registerHelper SafeString escapeExpression create isEmpty root first index key last level
	function escapeExpression(a){
		return String(a).replace(/\</g,"&lt;").replace(/\>/g,"&gt;")
	}
	function safeString(a){
		return a==null?"":String(a)
	}
	return (function(expr,options){
		options=options||{}
		var ph=[],origstr=expr.replace(/\t/g,'    ')//each ! & ^
		//block
		var str=origstr.replace(/\{\{([\#\^])(each|list\s+)?([\w]+)}}(.*?)\{\{\/\3}}/g,function(a,op,fn,name,content,i){
			if(op=="!"){return ""}
			var data={value:name.trim(),op:op,index:i,end:i+a.length,fn:fn,block:content}
			var i=ph.push(data)
			return '\t!'+i+'!\t'
		})

		//expr
		var arr=str.replace(/\{\{([^\}]+)\}\}/g,function(a,nm,i){
			nm=nm.trim()
			var data={value:nm ,index:i,end:i+a.length}
			if(nm.charAt(0)==">"){
				var arr1=nm.substr(1).trim().replace(/\s*\=\s*/g,"=").split(/\s+/)
				if(options.resolveTemplate){
					var nu=options.resolveTemplate(arr1.shift())
					if(typeof(nu)=="string"){
						data={template:$.templatehandlebar(nu,options)}
						if(arr1.length && arr1[0]){
							data.additional=arr1.reduce(function(m,k){
								var i=k.indexOf("=");
								if(i>0){
									m[k.substr(0,i).trim()]=k.substr(i+1).trim()
								}
							},{})
						}
					}
				}
			}
			else if(nm.charAt(0)=="&"){
				data.noescape=true;
				nm=nm.substr(1).trim()
			}
			var i=ph.push(data)
			return '\t!'+i+'!\t'
		}).split('\t')

		ph.forEach(
			function(a){
				if(a.block){
					a.template=$.templatehandlebar(a.block,opts)
				}
			}
		);
		function _resolve(D,scope,index,noloop){
			if(!scope){return ""}
			var res="",V= D.value
			if(V){
				if(V=="@index"||V=="@key"){
					res= index
				} else {
					var v = scope[V]
					if (typeof(v) == "function") {
						res= v.call(scope)
					} else if ($.isArray(v)) {
						res= [].slice.call(vS).map(function (a, i) {
							return _resolve(D, a, i, true)
						}).join("")
					} else {
						if (v == null) {
							if(options.helpers && typeof(options.helpers[V]) == "function"){
								res=options.helpers[V].call(scope)
							}
							else if (!noloop && typeof(V) == "string" && /\s/.test(V)) {
								res= V.replace(/([\S]+)/g, function (a) {
									return noloop ? a : _resolve({value:a}, scope, index, true)
								});
							} else if(/\W/.test(V)){
								try {
									var r,allscope= scope;
									if(D.additional){
										allscope=$.extend({},scope,D.additional);
									}
									with (allscope) { r=eval(V) }
									res = r;
								} catch(e){
									res =V;
								}
							}
							else{
								res=D.additional?D.additional[V]:V
							}
						} else {
							res=v;
						}
					}
				}
			}
			if(res==null){return ""}
			if(D.noescape!==true){
				return escapeExpression(res)
			}
			return res
		}
		function retfn(scope,index){
			if($.isArrayLike(scope)){
				return [].slice.call(scope).map(retfn).join("");
			}
			scope=scope||{};
			var res=arr.map(
				function(a){
					if(!a){return a}
					var res1=a
					if(/^!\d+\!$/.test(a)){
						var D=ph[Number(a.replace(/\!/g,""))-1]
						if(D){
							if(D.template) {
								var S=D.value?scope[D.value]:scope
								if(!S){
									if(D.op=="^"){resq=D.block}
									else{
										res1=""
									}
								}
								if (D.fn == "each"||D.fn == "list") {
									res1=$.collect(D.value, function (v, k) {
										return D.template(S[v],k)
									}).join("")
								} else {
									if($.isArray(S)){
										res1=[].slice.call(S).map(function(a,i){
											var v2= D.template(a,i)
											return v2
										}).join("")
									} else{
										res1=D.template(S,index)
									}
								}
							} else {
								res1=_resolve(D ,scope,index)
							}
						}
						//return ""
					}
					return res1==null?"":res1;
				}
			).join("")

			return res;
		}
		retfn.fn=retfn;

		return retfn;
	})(str,opts);
}

$.templatedollar=  function(str,opts){
	if(typeof(str)!="string"){return str}
	function makeArgMap(argus,nmes,ctx){

		var _x=Object.create(ctx||null),vals=[],names=(nmes||[]).slice(),args=$.makeArray(arguments[0],0),_=args[0];
		var  firstisobj=_ && typeof(_)=="object"&&!$.isArray(_)
		// if(!names.length){names.push("it")}
		var varln =names.length,provider=ctx.__valueprovider;
		if(provider && provider.getValProvider){provider=provider.getValProvider.call(ctx.ctx)}
		if(varln==2 && names[1]=="it"){varln=1}
		if(firstisobj&&_.newValue!=null&&("oldValue" in _)&&names[0]== _.name){_=_.value}
		if(ctx.__iter){
			var k=names[0];  if(args[0] && args[0] instanceof List){args[0]=args[0].toArray()}
			if($.isArray(args[0])){_x[k]= args[0].slice()}
			else{_x[k]= (firstisobj&&(k in _))?_[k]:[].concat.apply([],$.makeArray(args,varln-1))}
		}else {
			if(args.length==1 && varln>=1&&firstisobj){
				for(var i= 0,ln=names.length,k;k=names[i],i<ln;i++){
					_x[k]=_[k]
				}
			} else{
				for(var i= 0,ln=names.length,k;k=names[i],i<ln;i++){
					_x[k]=args[i]
				}
			}
		}


		var df=provider?(typeof(provider)=="function"?provider:(provider.get||provider)):null;
		for(var i= 0,ln=names.length,k;k=names[i],i<ln;i++){
			var val;
			if(k!="it"){
				val=_x[k]
				if(k && k!="it" && df ){
					var p=typeof(df)=="function"?df.call(ctx.ctx,k):(k in provider)?provider[k]:df
					if(p){_x[k]=val=typeof(p)=="function"?p.call(ctx,k): p;}
				} else if(!val && firstisobj&& (k in _)){_x[k]=val=_[k]}
			}
			vals.push(_x[k])
		}

		if(names.length==1&& vals[0]&&typeof( vals[0])=="object"&&(names[0] in  vals[0])){
			vals[0]= vals[0][names[0]]
		}

		return {mp:_x,vals:vals,names:names}
	}
	opts=opts||{}
	var expr=[],mmap={each:"map",collect:"collect"},valprovider=opts.valueprovider,K1=function(a){return a};
	function getFnBody(m,mdl){   var fn

		switch(m){
			case "map":;case "collect":;case "each":;case "forEach":
			var listname=mdl.arg||"list"
			fn=  function __fn__(){ var _=arguments[0]||[],__list=[];
				if(Array.isArray(_)){
					if(_.length==1&&Array.isArray(_[0])){_=_[0]}
					if(Array.isArray(_)){
						if(_.length==1&&_[0]) {
							if(Array.isArray (_[0])) {
								_=_[0]
							}
						}
					}
				}
				if(Array.isArray(_)) {  __list=_}
				if(__list.length&&__list[0]&&Array.isArray(__list[0].list||__list[0].l)){__list=__list[0].list||__list[0].l;}

				return __list.map(function(it,i,arr){
						return this.__iter.call(this.ctx,it)
					}
					,this).join('')
			};
			fn.vars=[listname]
			break;
			case "elseiff":;case "iff":fn=  function __fn__(){
			var _val=function(v){var vv=typeof(v)=="function"?v:(typeof(this[v])=="function"?this[v]:null)
				return vv?vv.call(this,this):(v)
			};
			return  _val.call(_val.call(this,arguments[0])?arguments[1]:arguments[2]  )
		};break;
			case "switchby":fn=  function __fn__( ){
				var _val=function(v){var vv=typeof(v)=="function"?v:(typeof(this[v])=="function"?this[v]:null)
					return vv?vv.call(this,this):(v)
				};
				var v=_val.call(this,arguments[0]);
				return $.makeArray(arguments,1).filter(function(it){return it && it.name==v})[0];
			};break;
		}
		return  fn
	}
	//$each
	var lastIf=null
	var str2=str.replace(/\{\{/g,"${").replace(/\}\}/g,"}").replace(/\$([^\{\$]*)?\{([^\}]+?)\}/g,function(a,b,c){
		var barg=""
		if(b&&b.indexOf("(")>0){
			var bara=b.split(/[\(\)]/);
			b=bara.shift().trim();
			barg=bara.shift().trim()
		}
		var mdl={x:c,m:b,arg:barg,type:b||"test",condition:null,i:expr.length,template:true,priority:1,idx:expr.length};
		if(!b){
			mdl.template=/\$\w+/.test(c)
		}  else{
			var ar= c.split(/\->/);
			mdl.argname= barg||(ar.length>1?ar.shift().trim().replace(/^\(|\)$/g,""):"").trim();
			mdl.x=ar.join("->")
			if(b=="else"){
				mdl.priority=9;
				mdl.m=mdl.argname="";
				if(lastIf){
					lastIf._else.push(mdl)
				}
				return ""
			}
			else if(b=="if"||b=="iff"||b=="elseiff"||b=="elseif"||b=="else"||b=="switch"||b=="when"){
				if(b=="if"){b="iff"}
				else if(b=="elseif" ){b="elseiff"}
				//   var argexpr=argexpr.replace(/(["'])([^\1]*?)\1/g,function(a,b,c){aa.push(a);return "!"+aa.length+"!"})
				//      .replace(/\(([^\)]*?)\)/g,function(a,b,c){aa.push(a);return "!"+aa.length+"!"})
				//argexpr= argexpr.split(/\s*,\s*/).map(function(k){return k.replace(/!(\d+)!/g,function(a,b){return aa[Number(b)-1]})});
				//  argexpr=argexpr.replace(/!(\d+)!/g,function(a,b){return aa[Number(b)-1]});
				mdl.priority=10;
				mdl.conditionstr=barg
				var arr=String(mdl.conditionstr||"").trim().split(/\s+/)
				if(arr.length==3){
					if(arr[1]=="is"||arr[1]=="="){arr[1]="=="}
					if(arr[2] && isNaN(arr[2]) && (arr[2].charAt(0)!='"' ||arr[2].charAt(0)!="'")){arr[2]="'"+arr[2].replace(/'/g,"\\'")+"'"}
				}
				mdl.conditionstr=arr.join(" ").trim()
				mdl.condition=  $.parseExpr(mdl.conditionstr,null,{prefix:"it"}   )
				mdl.m=mdl.argname="";
				if(b=="elseiff"){
					if(lastIf){
						lastIf._else.push(mdl)
					}
					return ""
				} else {
					mdl._else=[]
					lastIf=mdl
				}
			}
		}
		expr.push(mdl);
		return "|X"+expr.length+"|"
	});
	function parseMod(mod){
		var fn,qvars=[],vars=[],
			singleVar=/^[a-z_][\w_]*$/i.test(String(mod.x))
		fn=singleVar?{fn:K1}:
			mod.template?$.template(mod.x,mod):
				$.parseExpr(mod.x,null,{prefix:mod.argname||"it"})
		//if(mod.argname){vars}
		vars=singleVar?[mod.x]:fn.vars.slice();
		if(fn.tokens) {
			qvars = fn.tokens.filter(function (a) {
				return a.type == "id" || a.type == "fn" || a.type2 == "fn"
			}).map(function (a) {
				var v = a.value, arr = String(v).split(".");
				return {path: v, name: arr[0], haspath: arr.length > 1, type: a.type2}
			});
		}
		var fnctx=Object.create(null),mthd=mod.m ;
		Object.defineProperty(fnctx, "toString",{value:function(){
			if(this.__lop){return ""}
			var r =""
			try{
				this.__lop=true;
				r=Object.keys(this).map(function(k){
						return (this[k]==this||Object.getPrototypeOf(this[k])==this|| k.indexOf("_")==0)?"":(k+":"+this[k])},this
				).join("");
			} catch(e){} finally{delete this.__lop}
			return r;
		} ,enumerable:false});
		fnctx.fn=fn.fn;  ;fnctx.vars= vars.slice();fnctx.qvars= qvars.slice()
		var mthdfn=mthd?getFnBody(mthd,mod):"";
		if(mthdfn){
			fnctx.__iter=fnctx.fn
			var argname=mod.argname||fnctx.vars.length==1?fnctx.vars[0]:"list";
			if(mthdfn.vars) {
				fnctx.vars=mthdfn.vars
			}else{
				fnctx.vars= vars.slice();
				if(fnctx.vars.indexOf(argname)==-1){
					fnctx.vars.unshift( argname)
				}
			}

			fnctx.fn=mthdfn.bind(fnctx)
		} else{delete fnctx.__iter}

		fnctx.__valueprovider=valprovider
		function wrp(){
			var ctx=wrp.context,a;ctx.ctx=this
			// return fnctx.fn.apply(null,a.slice())
			if(ctx.vars.length==1 && ctx.vars[0]=="it"&&typeof(arguments[0])=="object"){a=[arguments[0]]}
			else{
				var args=makeArgMap(arguments,ctx.vars,ctx);
				a=args.vals

			}
			return fnctx.fn.apply(null,a.slice())
		}
		wrp.context=fnctx
		wrp.vars=fnctx.vars
		wrp.qvars=fnctx.qvars
		wrp.fn=wrp
		wrp.condition=mod.condition
		wrp.string=mod.conditionstr||mthd|| mod.x
		if(mod._else){
			wrp._else=mod._else.map(parseMod)
		}
		return wrp;

	}
	//
	var vars=[],qvars=[],fin=[],ret;

	var exprarr=str2.replace(/\$(@?[\w][\w\.]*)/g,
		function(a,b){
			return "|X"+expr.push({x:b,i:expr.length})+"|"
		}).split(/\|/)   ;

	fin=exprarr.map(function(it,i,arr){
		if(/^X\d/.test(it)) {
			var mod = expr[Number(it.substr(1)) - 1] || {}
			return parseMod(mod)
		} else{
			var ret=  {};
			ret.vars=[]
			ret.qvars=[]

			ret.fn=it;
			ret.string= it
			return ret;
		}

	} );

	fin.forEach(function(it){
		if(it && it.vars){
			it.vars.forEach(function(k,i){
				if(k!="it" && vars.indexOf(k)==-1){
					vars.push(k)
					qvars.push((it.qvars||[]).filter(function(a){return a.name==k})[0]||{name:k,path:k});
				}
			});
		}
	});
	var tofilter=fin.filter(function(it,i,arr){return it.condition}).length>0
	ret=function retfn(ctx){
		var a=[].slice.call(arguments),res=[],l=fin
		if(a[0]!=null && typeof(a[0])!="object" && a.length >1 && retfn.vars.length>1){
			var args={};
			retfn.vars.forEach(function(k,i){
				args[k]=a[i]
			})
			a=[args];
		}
		var qvars=retfn.qvars||[]
		for(var i= 0,ln=qvars.length;i<ln;i++){
			if(qvars[i].haspath && a[qvars[i].name]==null){a[qvars[i].name]={}}
		}
		var C=typeof(ctx)=="object"?ctx:null
		var todo=[];
		if(tofilter){
			for(var i= 0,ln=l.length;i<ln;i++){
				var it=l[i];
				if(!it){continue}
				if(it.condition){
					it._condition=it.condition
					it.result=it.condition.fn.apply(this,a)
					if(it.result){
						todo.push(it)
					} else if(it._else){
						if(Array.isArray(it._else)){
							var r =it._else.find(function(b){return b.condition?b.condition.fn.apply(this,a):true},this)
							if(r ){
								todo.push(r )
							}
						}
						else {
							todo.push(it._else)
						}
						//arr[i+2]&&(arr[i+2].type="else"
					}
					continue
				}
				todo.push(it)
			}

		} else{
			todo=l;
		}
		for(var i= 0,l1=todo,ln=l1.length;i<ln;i++){
			var it= l1[i] ,r;
			if(!it){continue}
			if(typeof(it.fn)=="function"){
				r= it.fn.apply(C,a)
			} else {r=String(it.fn)}
			res.push(r==null?"":r);
		}

		return res.join("")
	}



	Object.defineProperties(ret,{
		"toString":{value:function(){return this.array.map(function(it){return it.string||""}).join("\n\t")},enumerable:false},
		"expr":{value:fin,enumerable:false},
		"array":{value:fin,enumerable:false},
		"vars":{value:vars,enumerable:false},
		"qvars":{value:qvars,enumerable:false},
		"fn":{value:ret,enumerable:false}})

	return ret
}
$.template=  function(str,opts){//"<li>${rr+2} $each{ eeee }</li>"
	if(typeof(str)!="string"){return str}
	if(/\$[\{\w]+/.test(str)){
		if(!/\${/.test(str) && !/\$\w+\{/.test(str)){
			return $.templatedollar(str,opts)//$.simpleTemplate(str,opts)
		}
	} else if(/{{/.test(str)){
		return $.templatehandlebar(str,opts)
	}
	return $.templatedollar(str,opts)
};

$.tokenize=function(expr,ignorews){
	if(ignorews==null){ignorews=true}
	var ex,res = [], phescd = String.fromCharCode(1), escd = [],orig=expr;
	var nms = "sq,dq,id,num,num1,num2,op,ws,other".split(","), ln = nms.length;
	ex=expr.replace(/\\(.)/g, function (a, b) {
		return phescd + escd.push(b) + phsescd
	})
		.replace(
		/'([^']*)'|"([^"]*)"|([\$a-zA-Z][\w\.]*)|([\-]?\d+[\.]\d+)|([\-]?[\.]\d+)|([\-]?[\d]+)|(\+\+|\-\-|>\=|<\=|\=\=|\!\=|<>|\?:|\?\.|\|\=|\|\||\&\&|=|>|<|\(|\)|\{|\}|\]|\[|\-|\*|!|,|\\|\/|\?|:|\+|\*|%|\-)|(\s+)|(.+)/g,
		function (all, sq, dq, id, num,num1,num2, op, ws, other, idx) {
			for (var i = 0, l = [].slice.call(arguments, 1, ln + 1); i < ln; i++) {
				var a = l[i]

				if (a != null) {
					if (a) {var t,t2=nms[i]
						if(a.toLowerCase()=="and"){a="&&";t2=t="op"}
						else if(a.toLowerCase()=="or"){a="||";t2=t="op"}
						else {t=i < 1 ? "string" :(nms[i]||"").replace(/\d$/,"")

						}
						a=i <= 1 ? a.replace(/^['"]|['"]$/g, "") : a
						if(ignorews && t=="ws") {}
						else{
							res.push({type: t, value: a, idx: idx, type2: t2})
						}
					}
				}
			}
			return all
		}
	);
	var data={count:0,tokens:res,expr:expr,orig:orig},prev={}
	if(res.length){
		var nws=res.forEach(function(it,i){var t=it.type2||it.type;
			data[t]||(data[t]=[]);
			data[t].indexOf(it.value)==-1&&data[t].push(it.value);
			if(t=="id"&&it.value.indexOf(".")>0){
				var c=it.value.substr(0,it.value.indexOf("."))
				if(c!="this") {
					data.containers = data.containers || []
					data.containers.indexOf(c) == -1 && data.containers.push(c)
				}
			}
			if(prev&&prev.t&&(prev.t=="num"||prev.t=="id"||prev.t=="fn")&&(t=="id"||t=="fn"||t=="num")) {
				data.invalid = "An operator expected after " + prev.v + " at " + prev.i + " but found " + it.value + ", expr:" + expr ;
			}
			if(t!="ws"){data.count++;prev={t:t,v:it.value,i:it.idx}}

		})

	}

	return  data
}
$.makeGraph=(function() {
	function _sl(arr,ofset){return[].slice.call(arr,ofset||0) }
	var _map={"(":")","[":"]","{":"}"},//.transformAll(function(a,i){return {value:a,type:null,i:i}});
		opprefix = '<>+-&?=*/!%|:',suffix = '=>&:',
		OPS={
			"("	    :{type:"A",pre:0,  fn:function(t,p,i,memo) {                },block:")"},
			"{"	    :{type:"A",pre:1,  fn:function(t,p,i,memo) {                },block:"}"},
			"["	    :{type:"A",pre:1,  fn:function(t,p,i,memo) {                },block:"]",member:1},
			"."	    :{type:"A",pre:1,  fn:function(t,p,i,memo) {                },punc:1,member:1},
			"^="	:{type:"A",pre:1,  fn:function(t,p,i,memo) {                },bit:1},
			"?."	:{type:"A",pre:1,  fn:function(t,p,i,memo) {return "(!$1||{}).$2"},nav:1},
			"?:"	:{type:"A",pre:1,  fn:function(t,p,i,memo) {return "$1||$2"},elvis:1},

			"&&"	:{type:"A",pre:2,  fn:function(t,p,i,memo){                },boolean:1},
			"||"	:{type:"A",pre:3,  fn:function(t,p,i,memo){                },boolean:1},
			"++"	:{type:"A",pre:3,  fn:function(t,p,i,memo) {                },unary:1,number:1},
			"--"	:{type:"A",pre:3,  fn:function(t,p,i,memo) {                },unary:1,number:1},

			"!"	    :{type:"A",pre:4,  fn:function(t,p,i,memo) {                },boolean:1},
			"~"	    :{type:"A",pre:4,  fn:function(t,p,i,memo) {                },bit:1},

			"/"	    :{type:"A",pre:5,  fn:function(t,p,i,memo) {                },binary:1,arith:1,number:1},
			"*"	    :{type:"A",pre:5,  fn:function(t,p,i,memo) {                },binary:1,arith:1,number:1},
			"%"	    :{type:"A",pre:5,  fn:function(t,p,i,memo) {                },binary:1,arith:1,number:1},

			"+"	    :{type:"A",pre:6,  fn:function(t,p,i,memo) {                },binary:1,boolean:1,number:1,string:1},
			"-"	    :{type:"A",pre:6,  fn:function(t,p,i,memo) {                },binary:1,arith:1,number:1},

			"<<"	:{type:"A",pre:7,  fn:function(t,p,i,memo) {                },bit:1},
			">>"	:{type:"A",pre:7,  fn:function(t,p,i,memo) {                },bit:1},
			">>>"	:{type:"A",pre:7,  fn:function(t,p,i,memo) {                },bit:1},

			"<"	    :{type:"A",pre:8,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			">"	    :{type:"A",pre:8,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			"<="	:{type:"A",pre:8,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			">="	:{type:"A",pre:8,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			"in"    :{type:"A",pre:9,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			"=="	:{type:"A",pre:9,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			"!="	:{type:"A",pre:9,  fn:function(t,p,i,memo) {                },binary:1,boolean:1},
			"==="	:{type:"A",pre:9,  fn:function(t,p,i,memo) {                },binary:1,boolean:1,strict:1},
			"!=="	:{type:"A",pre:9,  fn:function(t,p,i,memo) {                },binary:1,boolean:1,strict:1},
			"&"	    :{type:"A",pre:10,  fn:function(t,p,i,memo){                },bit:1},
			"|"	    :{type:"A",pre:11,  fn:function(t,p,i,memo){                },bit:1},
			"^"	    :{type:"A",pre:12,  fn:function(t,p,i,memo){                },bit:1},
			"?"	    :{type:"A",pre:15,  fn:function(t,p,i,memo){                },tertiary:1},
			":"	    :{type:"A",pre:15,  fn:function(t,p,i,memo){                },tertiary:1},
			"="	    :{type:"A",pre:17,  fn:function(t,p,i,memo){                },assign:1},
			"+="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },assign:1},
			"-="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },assign:1},
			"*="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },assign:1},
			"%="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },assign:1},
			"<<="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },bit:1},
			">>="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },bit:1},
			">>>="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },bit:1},
			"&="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },bit:1},
			"|="	:{type:"A",pre:17,  fn:function(t,p,i,memo){                },bit:1},
			","	    :{type:"A",pre:18,  fn:function(t,p,i,memo){                },punc:1,argsep:1},
			";"	    :{type:"A",pre:19,  fn:function(t,p,i,memo) {                },punc:1},
			"instanceof":{type:"A",pre:9,  fn:function(t,p,i,memo) {            },binary:1,boolean:1}


		}
	optypes={"+":"arithmatic","-":"arithmatic","*":"arithmatic","/":"arithmatic","%":"arithmatic","++":"arithmatic","--":"arithmatic",
		">":"binary","==":"binary","=":"binary","===":"binary",">=":"binary","!=":"binary","<":"binary","<=":"binary",
		"?":"tertiary","?:":"tertiary","?.":"nav","|=":"exist"
	}
	var cache={}
	function makeel(type,val) {return {type: type, value:val,items: []}}
	function _acceptVisitor( visitor){
		if( !visitor||this==self||this==null){return}
		var item=this
		if(item.items){var items=item.items;
			for(var i= 0,ln=items.length,it;it=items[i],i<ln;i++){
				_acceptVisitor.call(it,visitor)
			}
		} else if(item.op && (item.l||item.r)){
			_acceptVisitor.call(item.l,visitor)
			_acceptVisitor.call(item.r,visitor)
		}
		if(item.args){
			var items=item.args;
			for(var i= 0,ln=items.length,it;it=items[i],i<ln;i++){
				_acceptVisitor.call(it,visitor)
			}
		}

		if(item.type && typeof(visitor[item.type])=="function"){
			visitor[item.type].call(visitor,item)
		} else{
			visitor.visit(item)
		}
	}
	function xarray(){
		return Object.create([],{last:{value:function(){return this[this.length-1]}},first:{value:function(){return this[0]}},empty:{value:function(){return !this.length}}})
	}

	function _make(input,config) {
		var data=input,gr = {}, currentblock = [], blocks = [makeel("root")], idx = 0
		var vars=[],fns=[],vartypes=[],defargnames
		if(typeof(input)=="string") {
			data = $.tokenize(input)
		}
		var tkns=data.tokens ;
		if(!data.vars){data.vars=[]}
		if(!data.qvars){data.qvars=[]}
		if(!data.fns){data.fns=[]}
		if(!data.vartypes){data.vartypes={}}
		for (var i = 0, ln = tkns.length; i < ln; i++) {
			var tkn = tkns[i]
			if (tkn.value == "(" || tkn.value == "{") {
				var nu = makeel("block", tkn.value)
				blocks[idx].items.push(nu)
				blocks.push(nu)
				idx++
			} else if (tkn.value == ")" || tkn.value == "}") {
				blocks.pop()
				idx--
			} else {
				blocks[idx].items.push(tkn)
			}
		}
		if (blocks.length > 1) {
			blocks.pop()
		}
		if (blocks.length == 1) {
			blocks = blocks[0]
		}
		function addVar(mdl,par){
			var nm,ar=[]
			if(!mdl.value||mdl.inscope){return}
			if(mdl.value.indexOf(".")==-1){
				if(Math[mdl.value]){mdl.value="Math."+mdl.value}
			}
			nm=mdl.value
			var origname=nm
			if(String(nm).indexOf(".")>0){
				ar=nm.split(/\./);nm=ar[0]
			} else{ar.push(nm)}
			data.qvars||(data.qvars=[]);
			if(data.vars.indexOf(nm)>-1|| data.fns.indexOf(nm)>-1){return}
			if(data.qvars.indexOf(origname)>-1|| data.fns.indexOf(origname)>-1){return}
			if(nm=="this"||nm=="Math"||(!(nm=="value"||nm=="x"||nm=="y"||nm=="top")&&(nm in self))){}
			else{
				data.vars.push(nm)
				data.qvars.push(origname)
				if(mdl.type=="fn"){ data.fns.push(nm)}
				data.vartypes[nm]={path:ar.join("."),hasmembers:ar.length>1,type:mdl.type}
			}

		}
		function doblock(b) {
			var ret = b
			if (Array.isArray(b.items)) {
				b.items.forEach(function (it, i) {
					it.index = i
				})
			}
			if (Array.isArray(b.items)) {
				if (b.items.length == 1) {
					ret = doblock(b.items[0])
				} else if (b.items.length == 2 && b.items[0].type == "op") {
					ret = {type: "expr", op: b.items[0].value, r: doblock(b.items[1])}
				} else if (b.items.length == 2 && b.items[1].type == "op") {
					ret = {type: "expr", op: b.items[1].value, l: doblock(b.items[0])}
				}
				else if (b.items.length == 3 && b.items[1].type == "op") {
					ret = {type: "expr", op: b.items[1].value, l: doblock(b.items[0]), r: doblock(b.items[2])}
				} else {

					if (b.items.length > 3) {//find op with lowest pre
						var opsidx = []
						for (var i = 0, ln = b.items.length; i < ln; i++) {
							if (b.items[i].type == "op") {
								b.items[i].pre = (OPS[b.items[i].value] || {}).pre || 100
								opsidx.push(b.items[i])
							}
						}

						if (opsidx.length == 2 && opsidx[0].value == "?" && opsidx[1].value == ":") {
							ret = {
								type: "expr",
								op: opsidx[0].value + opsidx[1].value,
								l: doblock({items: b.items.slice(opsidx[0].index + 1, opsidx[1].index)}, ret),
								r: doblock({items: b.items.slice(opsidx[1].index + 1)}, ret),
								c: doblock({items: b.items.slice(0, opsidx[0].index)}, ret)
							}
						} else if (opsidx.length) {
							var min = opsidx[opsidx.length - 1]
							for (var i = 0, ln = opsidx.length; i < ln; i++) {
								if (min.pre > opsidx[i].pre) {
									min = opsidx[i]
								}
							}
							var o = min
							var l = doblock({items: b.items.slice(0, o.index)}, ret)
							var r = doblock({items: b.items.slice(o.index + 1)}, ret)
							ret = {type: "expr", op: o.value, l: l, r: r}
						}
					}

				}
			}
			if (ret.items) {
				var retarr = []
				for (var i = 0, ln = ret.items.length; i < ln; i++) {
					if (ret.items[i].type == "block" && i && ret.items[i - 1] && ret.items[i - 1].type == "id" && ret.items.length == 2) {
						var li = ret.items[i].items.length - 1, args = ret.items[i].items.reduce(function (m, it, i) {
							if (it.value !== ",") {
								m.cur.push(it)
							}
							if (it.value == "," || i == li) {
								m.a.push(doblock({items: m.cur.slice()}, ret));
								m.cur = []
							}
							;
							return m
						}, {cur: [], a: []}).a
						var mm = doblock({type: "fn", value: ret.items[i - 1].value, args: args}, ret)
						if (i && ret.items[i - 1] && ret.items[i - 1].value == ".") {
							mm.inscope = true
						}
						retarr[retarr.length-1]=mm;

					} else {
						retarr.push(doblock(ret.items[i], ret))
					}
				}
				retarr.forEach(function (it, i) {
					it.index = i
				})
				ret.items = retarr;
			} else if (ret && ret.type == "fn") {
				if (ret.value && ret.value.indexOf(".") == -1) {
					if (typeof(Math[ret.value]) == "function") {
						ret.value = "Math." + ret.value
					}
				}
				addVar(ret)

			} else if (ret && ret.type == "id") {
				if (ret.value == "log" || ret.value == "print" || ret.value == "dump") {
					ret = {type: "fn", value: "console.log", args: []}
				}
				else if (ret.value == "true" || ret.value == "false") {
					ret.type = "bool"
				}
				else {
					addVar(ret)
				}
			}
			if (!ret.type && ret.op) {
				ret.type = "expr"
			}
			return ret
		}

		var fin= doblock(blocks),vars,qvars=[]
		data.graph=fin;
		vars=data.vars.filter(function(a){return a!="this" && data.fns.indexOf(a)==-1})
		qvars=data.qvars.filter(function(a){return a!="this" && data.fns.indexOf(a)==-1})
		if(data.fns){var c=(config||{}).context
			data.fns.forEach(function(a){
				if((c&&typeof(c[a])=="function") || (a.indexOf(".")==-1 &&!(self[a]||Math[a]))){
					vars.push(a)
					qvars.push(a)
				}
			})
		}
		vars=vars.map(function(a){return a.indexOf(".")>0? a.split(".").shift():a}).reduce(function(m,a){if(a!="this" && m.indexOf(a)==-1){m.push(a)}return m},[])
		if(!(vars && vars.length)){
			if(data.containers && data.containers.length){
				vars=data.containers.slice()
			}
		}

		data.vars=vars

		return data;
	}
	return function makegraph(input,config){
		var data,info
		if(!input){return}
		if(typeof(input)=="function"){
			info= $.fn.info(input)
			input=$.fn.getBody(input)
		}
		if(typeof(input)=="string" && /\r\n/.test(input)){
			var arr=input.split(/\r\n/).reduce(
				function(m,a){
					if(!a.trim()){return m}

					if(a.trim() && !m.empty()){var last=m.last().trim().charAt(m.last().length-1)
						if(/[,\=\+\-\*\?\.\(\[\{]/.test(last) || /^\s*[,\=\+\-\*\?\.\)\]\}]/.test(a)){
							m[m.length-1]=m[m.length-1]+((last=="."||a[0]==".")?"":" ")+a;
						} else {
							m.push(a)
						}
					}
					return m
				}
				, xarray())
			data={vars:[],fns:[],containers:[]}
			var grl=arr.map(function(it){return _make (it,config)});
			grl.forEach(function(it){
				for(var j= 0,jl=["vars","fns","containers"],jln=jl.length;j<jln;j++){
					var k=jl[j],arr=it?it[k]:null;
					if(arr&&arr.length){
						for(var i= 0,ln=arr.length;i<ln;i++){
							if(data[k].indexOf(arr[i])==-1){
								data[k].push(arr[i])
							}
						}
					}

				}

			})
			data.multiline=true;
			data.graph={items:grl}
		} else{
			data = _make (input,config)

		}
		if(!data){return}
		if(info){
			data.input=input
			data.fnargs=info.args;
		}
		if(data.graph.items && data.graph.type=="root" && data.graph.items.length==1){data.graph=data.graph.items[0]}
		data._parsedvars=data.vars.slice();
		data.options= $.isPlain(config)?config:{}
		data.graph.accept=_acceptVisitor.bind(data.graph)
		return data;
	}

})();

$.parseUtil=(function(){

	var reservedWords="String Math Number break case catch const continue debugger default delete do else export finally for function if import in instanceof let new return super switch this self throw try typeof var void while with null undefined".split(/\s+/),
	  nativeMethods=[]
	return {
		isReservedWord: function (s,checknativemethods) {
			if ( reservedWords.indexOf(s) >= 0) {
				return true
			}
			if (checknativemethods ) {
				if(!nativeMethods.length) {
					nativeMethods = Object.getOwnPropertyNames(String.prototype)
						.concat(Object.getOwnPropertyNames(Object.prototype))
						.concat(Object.getOwnPropertyNames(Number.prototype))
						.concat(Object.getOwnPropertyNames(Array.prototype))
				}
				return nativeMethods.indexOf(s)==-1
			}
		}
	}
})();
$.parseExpr=(function () {

	function _sl(arr,ofset){return[].slice.call(arr,ofset||0) }
	var cache={}

	var _parseArgsGen=function(holder){
		var parseargfn
		var origCtx=holder.options.context,vars=holder.vars,containers=holder.containers;
		var provider=holder.options.valueprovider||holder.valueprovider

		if(holder.valueObject){
			var argData={a:[holder.valueObject]}
			parseargfn=function(ths,fnargs) {
				argData.ctx=valueObject.__ctx = ths || origCtx
				valueObject.__args = fnargs;
				return {ctx:ctx,a:[valueObject]}
			}
		}
		else if(provider){
			parseargfn=function(ths,fnargs){
				var data={ctx:ths|| origCtx  ,a:[]}
				for (var i = 0,ln=vars.length; i < ln; i++) {
					var nm=vars[i];
					if(!nm){continue}
					data.a.push( provider.apply(data.ctx,[nm].concat(fnargs)) )
				}
				return data
			}
		}
		else if(!holder.vars.filter(function(a){return holder.vartypes[a] && holder.vartypes[a].hasmembers}).length){
			parseargfn= function _parseArgs(ths,fnargs){
				var data={ctx:ths|| origCtx ,a:[]}
				if(fnargs[0] && typeof(fnargs[0])=="object"){
					var obj= fnargs[0]
					for (var i = 0,ln=vars.length; i < ln; i++) {var nm=vars[i];
						if(!nm){continue}
						data.a.push( obj[nm])
					}
				}  else {
					//if(vars.length==1 && fnargs.length>1 && (vars[0]=="y" || vars[0]=="b"||vars[0]=="a2"))
					data.a=fnargs.slice()
				}

				return data
			}

		} else if(typeof(holder.options.provider)=="function"){
			var provider=holder.options.provider
			parseargfn= function _parseArgs(ths,fnargs){
				var data={ctx:ths|| origCtx ,a:[]}
				var obj= data.ctx
				for (var i = 0,ln=vars.length; i < ln; i++) {var nm=vars[i];
					if(!nm){continue}
					data.a.push( provider(obj))
				}
				return data
			}
		}
		else if(containers && containers.length==1 && vars.length==1 && vars[0]==containers[0]){
			var varname=vars[0]
			parseargfn= function _parseArgs(ths,fnargs) {
				var data = {ctx: ths || origCtx, a: []}, obj
				if (fnargs[0] && typeof(fnargs[0]) == "object") {
					obj = fnargs[0];
					data.ctx = data.ctx || fnargs[0];
				} else {
					obj = data.ctx
				}
				if ($.isPlain(obj) && "value" in obj && "oldValue" in obj && "name" in obj) {
					obj = obj.value
				}
				if (obj && obj[varname] && typeof(obj[varname]) == "object"){
					obj =obj[varname]
				}
				data.a.push(obj);
				return data
			}
		} else  {
			parseargfn= function _parseArgs(ths,fnargs){
				var data={ctx:ths||origCtx,a:[]},asprop=0,vars1= vars.slice()
				if(vars1[0]!=="it"){
					if((fnargs.length==1 && fnargs[0] && vars1.length>1 && typeof(fnargs[0])=="object")){asprop=fnargs[0]||{};}
				}

				for (var i = 0,ln=vars1.length; i < ln; i++) {var nm=vars1[i];
					if(!nm){continue}
					var val=(asprop && nm in asprop)?asprop[nm]:fnargs[i];
					if (val && typeof(val)=="object" && "name" in val && val.name == nm && "value" in val) {
						data.a.push( val.value)
					} else{data.a.push( val)}
				}
				return data
			}
		}
		return function(ths){
			var fnargs= [].slice.call(arguments[1])
			return parseargfn((ths ===holder||ths === self)?null:ths,fnargs)
		}
	}
	function serialize(graph,options){
		options=options||{};
		function _ser(o){
			var r=[ ]
			if(!o){return ""}
			if(o.items&&o.items.length){
				r=o.items.map(_ser).filter(function(it){return it})
				return r.join(" ")
			}
			else if(o.type=="ws"){return " "}
			else if(o.type=="expr"){
				if(o.op=="??") {
					r = ["("+_ser(o.c)+")", "?", _ser(o.l), ":", _ser(o.r)]
				}else if(o.op=="?:"||o.op=="|=") {
					r = ["("+_ser(o.l)+")", "?", "("+_ser(o.l)+")", ":", _ser(o.r)]
				} else if(o.op=="?.") {
					r = [_ser(o.l), "?", _ser(o.l)+"."+_ser(o.r), ":", "null"]
				} else if(o.op=="?:") {
					r = [_ser(o.l), "?", _ser(o.l), ":", _ser(o.r)]
				} else{

					if(o.l){r.push(_ser(o.l)) }
					if(o.op){r.push(o.op) }
					if(o.r){ r.push(_ser(o.r)) }
				}
				var ex= r.join(" ")
				if(r.length==3){ex="("+ex+")"}
				return ex
			}
			else{
				if(o.type=="id"){var nm=String(o.value);
					if(options.usePrefix && options.usePrefix !==nm){
						return options.usePrefix+"."+nm
					}
					return nm
				}
				else if(o.type=="bool"||o.type=="num"||o.type=="lit"){
					return String(o.value)
				} else if( o.type=="fn"){
					var aa= o.args.map(_ser).filter(function(it){return it.trim()}).join(", ")
					return  [o.value +"(", aa, ")"].join("")
				}
				else if(typeof(o.value)!="object"){
					return '"'+ o.value+"'"
				}
			}
		}
		return _ser( graph)
	}
	return function parseExpr(expr,optns,issub){
		var orig=expr,valueprovider=null,usePrefix=null
		if(typeof(expr)=="function"){return expr}
		if(typeof(expr)!="string"){return null}

		if(typeof(optns)=="function"){optns={valueprovider:optns}}
		if(!issub && cache[orig]&&(!optns||(optns&&!optns.context))){return cache[orig]};
		if(optns){
			usePrefix=optns.usePrefix
			valueprovider=optns.valueprovider||optns.provider||optns.resolver
			if(valueprovider&&!usePrefix){usePrefix="it"}
		}
		if(expr.indexOf("function")==0){
			return (1,eval)("("+expr+")")
		}
		if(expr.toLowerCase().indexOf("fn!")==0||expr.toLowerCase().indexOf("fn|")==0){
			var ex=expr.substr(3).replace(/^\(|\)$/g,"")
			if(ex.indexOf("function")==-1){ex="function(){"+ex+"}"}
			return (1,eval)("("+ex+")")
		}
		if(/^[\+\-\*\/]\s/.test(expr)){//if starts with arith operator this prepend var
			expr="a "+expr
		} else if(/\s[\+\-\*\/]$/.test(expr)){//if ends with arith operator this append var
			expr=expr+" a"
		}

		expr=expr.replace(/@[\.]?/g,"this.")//replace @ with this.
			.replace(/([\s\w])=([\s\w])/g,"$1==$2") //replace = with ==

		if(!/\W/.test(expr)) {
			if (expr == "log" || expr == "print" || expr == "dump") {
				return console.log.bind(console)
			} else if (optns && optns.context && typeof(optns.context[expr]) == "function") {
				return optns.context[expr].bind(optns.context)
			} else if (typeof(Math[expr]) == "function") {
				return Math[expr].bind(Math)
			} else {
				for (var l = [console, String, Number, window, Object, document], i = 0; i < l.length; i++) {
					var O = l[i]
					if (!O || !(expr in O)) {continue }
					if (typeof(O[expr]) == "function") {
						if (typeof(O) != "function") {
							return O[expr].bind(O)
						} else{return O[expr]}
					}
				}
			}

		}

		var data=$.tokenize(expr)||{}
		data.expr=expr; data.orig=orig

		if(data.invalid){
			$.handleEx({type:"syntaxError",message:data.invalid,details:data},true)
		}
		$.makeGraph(data,optns)
		data.options.valueprovider =valueprovider
		data.options.usePrefix=usePrefix;

		if(data.options.args&&Array.isArray(data.options.args)&&data.options.args.length){
			data.vars=data.options.args.slice()

		}
		if(valueprovider){
			data.valueObject=Object.create(null);
			data.valueObject.__fn=valueprovider;
			data.valueObject.__ctx=null;
			data.valueObject.__args=[];
			var props={}
			data.vars.forEach(function(k){
				props[k]={get:Function("return this.__fn.apply(this.__ctx,['"+k+"'].concat(this.__args))"),set:function(){}}
			});
			Object.defineProperties(data.valueObject,props)
		}
		if(data.vars && data.vars.every(function(a){return /^arg[\d]+$/.test(a)})){
			var max=Math.max.apply(Math,data.vars.map(function(a){return Number(a.replace(/\D/g,""))||0}) )
			var nuvars=[]
			for(var i=1;i<=max;i++){
				nuvars.push("arg"+i)
			}
			data.vars=nuvars;
		}
		data.serialize = function(){alert(5)}
		var fn
		var args=data.options.usePrefix?[data.options.usePrefix]:data.vars;
		if(!args.length){args.push("it")}
		if(expr.indexOf("this.")>=0){
			data.hasThis=true
		}
		if(!data.options.usePrefix) {

			try {
				fn = Function(args.join(","), "return " + expr);
			} catch (e) {
				fn = null
			}
		}
		if(!fn) {
			if(data.valueObject){
				fn = Function( data.options.usePrefix,"return " + serialize(data.graph,data.options));
			} else{
				fn = Function(args.join(","), "return " + serialize(data.graph,data.options));
			}

		}
		var _toret
		if(fn){
			_toret=(function (exprfn,dat){

				if(dat.valueObject){
					if(optns && optns.XX) {
						return (function(object,context){
							return function(a){
								object.__ctx=this===self ?null:(a && typeof(a) == "object" ? a:context)
								object.__args=[].slice.call(arguments)
								return fn(object)
							}
						} )(dat.valueObject,dat.options.context)
					} else{
						return function(context,a){
							this.__ctx=a && typeof(a) == "object" ? a:context
							this.__args=[].slice.call(arguments,1)
							return fn(this)
						}.bind(dat.valueObject,dat.options.context)

					}
				}

				var _parseArgs=_parseArgsGen(dat),CTX=dat.options.context
				return function(){
					var res, THIS=CTX||((this!==self) ?this:(arguments[0] && typeof(arguments[0]) == "object" ? arguments[0]:null)),
						c={}
					if(!arguments.length ){
						if(THIS){c.a=[THIS]}
					}
					if(!(c && c.a)){
						c=_parseArgs( THIS,arguments);

					}

					try {
						THIS=THIS||c.ctx
						/*var a=c.a.map(function(a){
							if(a && typeof(a.getTime)=="function"){return $.date.format(a)}
							return a
						})*/
 						res = fn.apply(THIS, c.a)
					} catch(e){
						console.log(e,fn)
					}
					return res;
				}
			})(fn,data)

			$.extend(_toret,data);
			_toret.toSource=_toret.toString =function(){return fn.toString()}
			_toret.fn=_toret;
			_toret.toFn=function(){
				return _toret
			}
		}
		if( _toret.fn) {
			if(issub!==true&&(!optns||(optns&&!optns.context))){ cache[orig] = _toret}
		} else{
			if(_toret.options.force||_toret.options.quiet){_toret.fn=_toret.fn||function(){}}
			else{throw new SyntaxError("invalid expression "+orig)}
			//_toret.fn=function(){}
		}
		return _toret
	}
})();;
$.viewport = $.viewPort = (function() {
	var rect = null,
		onresize__precessed = null,
		getViewportDimensions,workerY,workerX;

	function getViewportDimensionsInit() {
		var scrollChecks, doc = document,  html = doc.documentElement;
		if(!workerY){
			workerY=document.body.appendChild(document.createElement("div"));
			workerY.style.cssText="position:fixed;top:0;height:100%;left:0;width:1px;overflow:hidden;";
		}
		if(!workerX){
			workerX=document.body.appendChild(document.createElement("div"));
			workerX.style.cssText="position:fixed;top:0;width:100%;left:0;height:1px;overflow:hidden;";
		}
		if (html && typeof doc.createElement != 'undefined') {
			// Test to resolve ambiguity between HTML and body
			scrollChecks = (function() {
				var oldBorder, body = doc.body,
					result = {
						compatMode: doc.compatMode
					};
				var clientHeight = html.clientHeight,
					bodyClientHeight = body.clientHeight;
				var elDiv = doc.createElement('div');
				elDiv.style.height = '100px';
				body.appendChild(elDiv);
				result.body = !clientHeight || clientHeight != html.clientHeight;
				result.html = bodyClientHeight != body.clientHeight;
				body.removeChild(elDiv);
				if (result.body || result.html && (result.body != result.html)) {
					// found single scroller--check if borders should be included
					// skipped if body is the real root (as opposed to just reporting the HTML element's client  )

					if (typeof body.clientTop == 'number' && body.clientTop && html.clientWidth) {
						oldBorder = body.style.borderWidth;
						body.style.borderWidth = '0px';
						result.includeBordersInBody = body.clientHeight != bodyClientHeight;
						body.style.borderWidth = oldBorder;
					}
					return result;
				}
			})();
		}

		var getRoot, getViewportDimensions;

		if (typeof doc.compatMode == 'string') {
			getRoot = function() {
				var doc = window.document,
					html = doc.documentElement,
					compatMode = doc.compatMode;

				return (html && compatMode.toLowerCase().indexOf('css') != -1) ? html : doc.body;
			};
		} else {
			getRoot = function() {
				var doc = window.document,
					html = doc.documentElement;

				return (!html || html.clientWidth === 0) ? doc.body : html;
			};
		}

		// If the document itself implements clientWidth/Height (e.g. Safari 2)
		// This one is a rarity.  Coincidentally KHTML-based browsers reported to implement these properties have trouble with clientHeight/Width as well as innerHeight/Width.

		doc = html = null;
		return function() {
			var win = window;
			var root=getRoot()
			var doc = win.document;
			var wd=Math.max(doc.clientWidth || 0,root.clientWidth || 0, 0), ht=Math.max(doc.clientHeight || 0,root.clientHeight || 0)
			if(win.innerHeight && win.innerHeight<ht){ht=win.innerHeight}
			if(win.innerWidth && win.innerWidth<wd){wd=win.innerWidth}
			if(workerY.offsetHeight<ht){ht=workerY.offsetHeight}
			if(workerX.offsetWidth<wd){wd=workerX.offsetWidth}
			return [wd,ht];
		};
	}


	var data = {_inner:{height:0,width:0,scrollTop:0,scrollLeft:0,scrollWidth:0,scrollHeight:0,orientation:""},
		toMap:function(){return Object.assign({},this._inner)},
		_dispatch:function(k,v,old){
			var rec={name:k,oldValue:old,newValue:v||this._inner[k],value:v||this._inner[k],object:this._inner}
			if(this.emitter){
				this.emitter.dispatch(k,rec)
				if(k=="height"||k=="width"){this.emitter.dispatch("dims",rec)}
				this.emitter.dispatch("change",rec)
			}
		}}, bod, callbacks = [];
	Object.defineProperties(data,{
		height:{get:function(){return this._inner.height},set:function(v){var k="height",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		width:{get:function(){return this._inner.width},set:function(v){var k="width",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		scrollTop:{get:function(){return this._inner.scrollTop},set:function(v){var k="scrollTop",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		scrollLeft:{get:function(){return this._inner.scrollLeft},set:function(v){var k="scrollLeft",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		scrollWidth:{get:function(){return this._inner.scrollWidth},set:function(v){var k="scrollWidth",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		scrollHeight:{get:function(){return this._inner.scrollHeight},set:function(v){var k="scrollHeight",old=this._inner[k];
			if(Math.abs(v-old)>1){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true},
		orientation:{get:function(){return this._inner.orientation},set:function(v){var k="orientation",old=this._inner[k];
			if( v!=old){this._dispatch(k,this._inner[k]=v,old)}
		},enumerable: true
		}
	});
	var pending=null
	function _update(ev) {
		if (!ev || (ev && ev.type === "scroll")) {
			bod || (bod = document.body);
			data.scrollTop = document.body.scrollTop
			data.scrollLeft = document.body.scrollLeft
			if (ev) { return }
		}
		if (!ev || (ev && ev.type === "orientation")) {
			data.orientation = window.orientation||""
			if (ev) { return}
		}
		var wh = getViewportDimensions()
		data.height = wh[1]
		data.width = wh[0]
	}

	function _init() {
		if (!getViewportDimensions) {
			getViewportDimensions = getViewportDimensionsInit();
		}
		if (!data.height) {
			_update()
			var throttled=$.throttle(_update,{tailend:true,delay:400})
			window.addEventListener("resize", throttled)
			//window.addEventListener("scroll", _updatethrottled)
			window.addEventListener("orientationchange", throttled)

		}

		return data;
	}


	var ret = {
		get: function() {
			_init()
			return this
		},
		isInView: function(el, offset) {
			_init();
			if (!el) {
				return
			}
			if (typeof offset != "number") {
				offset = 0
			}
			var e = el.el || el
			if (!e.nodeType) {
				return
			}
			if (e.nodeType === 3) {
				e = e.parentNode
			}
			if (e && e.getBoundingClientRect) {
				var b = e.getBoundingClientRect();
				if (!b.height || !b.width || b.top > (data.height + offset) || b.left > (data.width + offset) || b.bottom < offset || b.right < offset) {
					return false
				}
				return true
			}
		},
		onScroll: function(fn) {
			this.on("scroll",fn)
		},
		on: function() {
			var data=_init()
			var fn, dim,remove=(arguments[arguments.length-1] === false)

			if (typeof(arguments[0]) == "function") {
				fn = arguments[0];
				dim = arguments[1]
			} else if (typeof(arguments[1]) == "function") {
				fn = arguments[1];
				dim = arguments[0]
			}
			var type = "change"

			if (dim && typeof(dim) == "string") {
				if (dim=="dims" || (data && dim in data)) {
					type = dim;
				}
			}
			if(!remove && dim=="scroll" && !this.__onscroll){
				window.addEventListener("scroll", this.__onscroll= $.throttle(function(ev){
					data.emitter && data.emitter.dispatch("scroll",ev);
				}.bind(this)))
			}
			if (typeof(fn) == "function") {
				if(remove){
					data.emitter && data.emitter.remove(type ,fn);
				} else{
					if(!data.emitter && $.emitter && $.emitter.simpleObserver){
						data.emitter=new $.emitter.simpleObserver($.viewport,{})
					}
					data.emitter && data.emitter.add(type ,fn);
				}

			}

			return this;
		}
	}
	Object.defineProperties && Object.defineProperties(ret, {
		height: {  get: function() {  return _init().height  }, set: function() {}  },
		width: {  get: function() { return _init().width },  set: function() {} }
	});
	return ret
})();;(function(){
function ZModuleModel(ns,value,config){
this.init(ns,value,config)
}
    function resolveModule(data,promise){
        var modulefn,val=null;
        if(typeof(data)=="string" && /function\s*\(/.test(data)&& data.indexOf("module.exports")>0){
            modulefn=Function("module",data)

        }  else if(typeof(data)=="function"){
            var args=(data.toString().match(/^function[^\(]*\(([^\)]*)\)/)||[])[1]
            if(args && args.trim()=="module"){
                modulefn=data;
            }
        }
        if(modulefn) {
            var deflt = null, object = {_: {}}
            Object.defineProperty(object._, "exports", {
                set: function (a) {
                    deflt = a;
                    delete this.exports
                    if(promise && promise.resolve){
                        promise.resolve(a);
                    }
                } ,
                get: function () {
                },
                configutable: !0
            })
            modulefn(object._)
            val= deflt;
        }
   return val
    }
function resolveBootStrapped(ns,promise){
    var val=null;
    if(ns && typeof(ns)=="string" && typeof($) !="undefined" && $.getBootstrapData){
        var modulefn,
            data=$.getBootstrapData(ns,"modules")||$.getBootstrapData(String(ns).toLowerCase(),"modules")
        if(data){
            val=resolveModule(data,promise)
        }
    }
    return val;
}
ZModuleModel.prototype={
    init:function(ns,value,config){
        this.promise=Promise.deferred()
        this.config={}

        if(config){
            if(typeof(config)=="string"){
                this.config.url= config;
            } else if(typeof(config)=="function"){
                this.promise.then(config)
            } else if(typeof(config)=="object"){
                if(typeof(config.callback)=="function"){
                    this.promise.then(config.callback);
                    delete config.callback;
                }
                Object.assign(this.config,config)
            }

        }
        if(arguments.length>3 && typeof(arguments[3])=="function"){
            this.promise.then(arguments[3]);
        }
        this._value=null;

        if(typeof(ns)=="string"){
            this.NS=ns;
            this.name=ns
            if(ns.indexOf("/")>=0 ){
                if(!this.config.url){
                    this.config.url=ns;
                }
            }
            else if(ns.indexOf(".")>0){
                var arr=ns.split(".");
                var name=arr.pop()
                this.name=name
                this.path=arr.slice()
                this.container=arr.reduce(
                    function(m,k){
                        return m?m[k]:null
                    },self
                );
            }

        } else if(ns && (typeof(ns)=="object") && (ns.name||ns.ns)){
            this.NS=ns.name||ns.ns
            Object.assign(this.config,ns)
        }
        if(!this.config.url && typeof($) !="undefined" && $.getBootstrapData){
            var cachedTemplates=$.getBootstrapData("cachedtemplates")
            if(this.NS  && cachedTemplates && cachedTemplates[this.NS]) {
                if(typeof(cachedTemplates[this.NS])=="string"||Array.isArray(cachedTemplates[this.NS])){
                    this.config.url = cachedTemplates[this.NS]
                } else {
                    $.extend(this.config,cachedTemplates[this.NS] )
                }

            }
        }


        Object.defineProperty(this,"value",{get:function(){return this._value},set:function(v){
                 this.resolve(v)
            }})
        this.then= this.promise.then.bind(this.promise)
        if(value!=null){
            this.resolve(value)
        } else {
            this.inspect()
        }
     },
    resolve:function(value){
        if(value==null ){
            if(!this._inspecting) {
                this._inspecting = 1
                this.inspect()
            } else{
                value=this.inspectContainer()
            }
        }
        if(value != null){
            this._value=value;
            this._inspecting=0
            this.promise.resolve(value)
        }
        return this._value;

    },
    inspectContainer:function(){
        if(!this.container && this.path){
            this.container=this.path.reduce(
                function(m,k){
                    return m?m[k]:null
                },self
            );
        } else {
            if(self[this.NS]!=null){
                return self[this.NS]
            }
        }

        if(this.container && this.name){
            return this.container[this.name]
        }
    },
    isResolved:function(){
        return this.inspect()
    },
    inspect:function(){
        if(this._value ){return this._value}

        var data=this.inspectContainer()
        if(!data && typeof($) !="undefined" && $.getBootstrapData){
            data=$.getBootstrapData(this.NS,"modules")||$.getBootstrapData(String(this.NS).toLowerCase(),"modules")
            if(data){
                data = this.resolveContent(data)

            }
        }

        if(data){
            return this.resolve(data)
         } else {
            if(this._value==null && !this.config.url) {
                if (this.NS && !/\W/.test(this.NS)) {
                    if (typeof(app) != "undefined" && app.resourcelib) {
                        this.config.url = String(app.resourcelib).replace(/[\\\/]$/, "") + "/" + this.NS + ".js"
                    }
                }
            }
        }
    },
    resolveDependancies:function(dependanciesarg,callback){
        dependanciesarg=dependanciesarg||this.config.dependancies || this.config.dependencies
        if( dependanciesarg){
            var dependancies=Array.isArray(dependanciesarg)?dependanciesarg:[dependanciesarg]
            var allpromises=dependancies.map(function(a){ return ZModule.from(a)}).filter(function(a){ return !a.isResolved()}).map(function(a){return a.process();})

            if(allpromises.length){
                var promises=Promise.all(allpromises)
                promises.finally(callback)
                return promises
            }
        }
        callback()
    },
    resolveContent:function(data){
        var val=data,modulefn
        this.config.source=data
        var result=resolveModule(data,this.promise)
        if(result==null){
            if(typeof(data)=="string"){
                val=val.trim();
                var first=val.charAt(0)
                if(/function\s*\(/.test(val) || ((first=="{"||first=="]") && val[val.length-1]==first)){
                    try{
                        result=(1,eval)("("+val+")")
                    } catch(e){result=null}
                }
            }
        }



        return result
    },

    processUrl:function(callback){
        if(this.config.url){
            if(typeof(this.config.url)=="string" && this.config.url.indexOf("libs/")==0){
                if (typeof(app) != "undefined" && app.resourcelib) {
                    this.config.url = String(app.resourcelib).replace(/[\\\/]$/, "") + "/" + this.config.url.replace(/^libs\//,"")
                }
            }
            var type=this.config.type||this.config.contenttype
            if(typeof(this.config.url)=="string" && !type){
                if(/\.css$/.test(this.config.url)){type=="css"}
                else if(/\.js$/.test(this.config.url)){type=="js"}
                else if(/\.html?$/.test(this.config.url)){type=="html"}
                else if(/\.partial?$/.test(this.config.url)){type=="html"}
                else if(/[\\\/]theme[\\\/]/.test(this.config.url)){type=="css"}
                else if(/[\\\/]js[\\\/]/.test(this.config.url)){type=="js"}
                this.config.type=type
            }

            var b = ResURL.from(this.config.url, type),content,url= b.fixUrl()
            if(type=="css"){
                b.insert().then(
                    function () {
                        this.inspect()
                    }.bind(this)
                );
            }
            b.load(function(data){
                if(!data){return}
                if(typeof(data)=="string") {
                    if (!type) {
                        if (data.indexOf("function(") >= 0) {
                            type = "js";
                        }
                    }
                    if (type == "js") {
                        if (data.indexOf("module.exports") > 0) {
                            content = this.resolveContent(data)
                            if (content) {
                                if (this.config.synccallback) {
                                    this.config.synccallback(content);
                                }
                                this.resolve(content)
                                return
                            }
                        } else {
                            b.insert().then(this.inspect.bind(this));
                            return
                        }
                    }
                }
                this.resolve(data)
            }.bind(this)
                ,{isresource:true,sync:true}
            )


        }
    },
    process:function(){
        if(this._processing || this.isResolved()){return}
        this._processing=1
        if(!this.inspect()){
            if(this.config.url){
                if(Array.isArray(this.config.url)){
                    this.resolveDependancies(this.config.url,function(){
                        this.resolve(null)
                    }.bind(this))
                }
                else{
                    this.resolveDependancies(null,this.processUrl.bind(this))
                }
            }
        }
        return this
    }

}
ZModule=self.ZModule={};
ZModule._cached={}
ZModule.isResolved=function(ns){
    if(typeof(ns)=="string" && this._cached[ns]){
          return this._cached[ns]

    }
}
ZModule.from=function(ns,value,config,callback){
     if(Array.isArray(ns)){
        config=config||{}
        config.url=ns;
        ns=ns.join(";");
    }
    var nu
    if(typeof(ns)=="string"){
        if(this._cached[ns]){
            nu= this._cached[ns]
        }
    }
    if(!nu && ns && typeof(ns)=="object" && ns instanceof ZModuleModel){
        nu=ns
    }
    if(nu ){

        if(typeof(config)=="function"){callback=config}
        else if(config && config.callback){callback=config.callback}
        if(typeof(callback)=="function"){nu.then(callback)}
    } else {

        nu=new ZModuleModel(ns,value,config,callback)
        this._cached[nu.NS]=nu;
    }

    return nu
}
ZModule.get=function(ns,value,config){
    var nu
    if(config==null && typeof(value)=="function"){
        config={callback:value}
        nu= ZModule.from(ns,null,config)
    } else{
        nu=ZModule.from(ns,value,config)
    }
    nu.process()
    return nu.value;
}
ZModule.getWrapper=function(ns,value,config){
    return ZModule.from(ns,value,config)
}
ZModule.register=function(ns,value,config){
    return ZModule.from(ns,value,config||{})
}
ZModule.resource=function(ns,value,config){
    return ZModule.from(ns,value,config)
}
$.requireModule=function(nm,callback){
    var wrapper=ZModule.isResolved(nm),val
    if(wrapper){
        val =wrapper.value
    }
    if(val==null) {
        val = resolveBootStrapped(nm)
        if (val != null) {
            ZModule.from(nm, val)
        } else {
            ZModule.get(nm, null, callback)
        }
    }
    if(val){
        if(typeof(callback)=="function"){
            callback(val)
        }
    }
    return val;
}

ZModule.require=$.require=function(){
    var a = [].slice.call(arguments), callback = typeof(a[a.length - 1]) == "function" ? a.pop() : null
    var all = [], resolved = [], unresolved = []
    while (a.length) {
        var it = a.shift()
        if (Array.isArray(it)) {
            Array.prototype.push.apply(all, it)
        }
        else {
            all.push(it)
        }
    }
    if (!all.length) {return}
    var res=null
    if (all.length==1) {
        if(typeof(all[0])=="string" && self[all[0]]){
            res= self[all[0]]
        } else{
            res= ZModule.get(all[0],null,callback)
        }

     }
    if(res===null) {
        var allvals = []
        var allpromises = all.map(function (k, i) {
            var z = ZModule.from(k);
            z.process()
            allvals.push(z.value)
            return z.promise
        })

        if (callback) {
            Promise.all(allpromises).then(callback)
        }
        return allvals
    }
    if(res && res.isPromise){
        if (callback) {
            res.then(callback)
        }
    }
    return res;
 }

})();
;$.date = (function () {
    var proxy,ctor=Date,augmentProps={},cleanctor2=null,cleanctor=null,_cache={},_worker=null,replaceDash=null,__mindate = +new Date(1900, 1, 1);
    var _months=["January","Feburary","March","April","May","June","July","August","September","October","November","December"],
        _days=["Sunday","Monday","Tuesday","Wednesday","Thrusday","Friday","Saturday"],
      i18n = {
        dayNames: [
            "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat",
            "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
        ],
        monthNames: [
            "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
            "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
        ]
      },
    dateFormatmasks = {
        "default":      "ddd mmm dd yyyy HH:MM:ss",
        date:      "mm/dd/yyyy",
        shortDate:      "m/d/yy",
        mediumDate:     "mmm d, yyyy",
        longDate:       "mmmm d, yyyy",
        fullDate:       "dddd, mmmm d, yyyy",
        shortTime:      "h:MM TT",
        time:      "hh:MM TT",
        mediumTime:     "hh:MM:ss TT",
        longTime:       "h:MM:ss TT Z",
        isoDate:        "yyyy-mm-dd",
        isoTime:        "HH:MM:ss",
        isoDateTime:    "yyyy-mm-dd'T'HH:MM:ss",
        isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
    };
    function pad(v,cnt){ cnt=cnt||2;
        if(v==null){return ""}
        var dif=cnt-String(v).length;
        if(dif<=0){return ""+v}
        if(dif==1){return "0"+v}
        while(diff--) v="0"+v
        return s
    }
    function getWeek() {var date
        if(this && this.getTime){date=this}
        else{date=arguments[0]}
        if(!(date && date.getTime)){return 0}
         var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());// Remove time components of date
         targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3); // Change date to Thursday same week
         var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);// Take January 4th as it is always in week 1 (see ISO 8601)
         firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);// Change date to Thursday same week
         var ds = targetThursday.getTimezoneOffset()/firstThursday.getTimezoneOffset()-1;// Check if daylight-saving-time-switch occured and correct for it
        targetThursday.setHours(targetThursday.getHours()+ds);
        var weekDiff = (targetThursday - firstThursday) / (86400000*7);// Number of weeks between target Thursday and first Thursday
        return Math.floor(1 + weekDiff);
    };
    function isDateStr(a) {
        var b = null;
        if ("string" != typeof a) return null;
        try {
            if (Date.parse)
                if ($.browser.safari) {
                    var c = a.split("T");
                    if (2 == c.length && (b = new Date(c[0]), b.setHours(0), b.setMinutes(0), b.setSeconds(0), b.setMilliseconds(0), !c[1].replace(/[0:+]/g, "").trim())) {
                        var d = c[1].split(":").map(Number);
                        d[0] && b.setHours(d[0]), d[1] && b.setMinutes(d[1]), d[2] && b.setSeconds(d[2])
                    }
                } else b = Date.parse(a), b = b && b > 0 ? new Date(b) : null
        } catch (e) {
            console("date", a, e), b = null
        }
        if ("Invalid Date" == b && (b = null), null == b && "string" == typeof a) {
            try {
                b = new Date(a)
            } catch (e) {
                b = null
            }
            if ("Invalid Date" == b && (b = null), null == b && /[\W\s]/.test(a) && (/GMT-/.test(a) || /\b(sun|mon|tue|wed|thr|fri|sat)\b/i.test(a) || /\d\dT\d\d/.test(a) || a.split(/[\\\/\-]/).filter(Number).length > 2)) try {
                if (Date.parse) try {
                    b = Date.parse(a), isNaN(b) || (b = new Date(b))
                } catch (e) {
                    b = null
                }
                "Invalid Date" == b && (b = null), b || (b = new Date(replaceDash ? a.replace("-", "/") : a), b + "" == "Invalid Date" && null === replaceDash && (b = new Date(a.replace("-", "/")), b && b + "" != "Invalid Date" && (replaceDash = !0)))
            } catch (e) {
                b = null
            }
        }
        return b && "Invalid Date" != b || (b = null), b
    }
    function getcleanCtor(){
        var nativeDate=self.Date
        if(!cleanctor) {
             if($.browser.ie1){
                cleanctor=nativeDate
            } else{
                 var Dproto=nativeDate.prototype,Cproto={}

                 cleanctor2=(function(){var nativedate=self.Date
                       return function Date(){
                           var innr,ln=arguments.length//a=[].slice.call(arguments)
                           if(!ln){innr=new nativedate()}
                           else if(ln===1){innr=new nativedate(arguments[0])}
                           else{
                               innr=new (Function.prototype.bind.apply(nativedate, [null].concat([].slice.call(arguments))))
                           }
                           Object.defineProperty( this,"__inner__",{value:innr,writable:false,enumerable:false,configurable:false})
                       }
                    })();
                 Object.getOwnPropertyNames(nativeDate).filter(function(a){return a!="prototype" && !(a in Function.prototype)}).forEach(
                     function(k){
                         if(!(k in cleanctor2)){
                             cleanctor2[k]=nativeDate[k];
                         }
                     }
                 );

                 for(var i= 0,l=Object.getOwnPropertyNames(Dproto),ln= l.length;i<ln;i++){
                     var nm=l[i];
                     if(typeof(Dproto[nm])!="function" || nm=="constructor" || nm.indexOf("_")==0 || nm=="prototype" || Object[nm]===Dproto[nm]|| Object.prototype[nm]===Dproto[nm]){
                         continue
                     }
                     Cproto[nm]=Function("var IN=this.__inner__; return IN && IN['"+nm+"'].apply(IN,arguments)")
                 }
                 Cproto.constructor=cleanctor2;
                 cleanctor2.prototype=Cproto
                 Cproto.valueOf=function(){return +this.__inner__}
                var iframe = document.createElement("iframe")

                document.body.appendChild(iframe)
                iframe.src = "javascript:"
                cleanctor = iframe.contentDocument.defaultView.Date
                if(!$.browser.IE) {
                    document.body.removeChild(iframe)
                } else{
                    //IE has a weird bug ... cannot execute script from a freed script ... WTF
                    iframe.style.display="none"
                }
            }

            //_getProxy();
            function noop(){};
            var proto={}
            proto.toNative=function toNative( ){ return this.__isNative__?this:new Date(+this) }
            proto.__pad=function pad(v,cnt){ cnt=cnt||2;
                 if(v==null){return ""}
                 var dif=cnt-String(v).length;
                 if(dif<=0){return ""+v}
                 if(dif==1){return "0"+v}
                  while(diff--) v="0"+v
                  return s
             }
            proto.num=function num(){ return +this }
            if(!cleanctor.prototype.toGMTString){
                proto.toGMTString=cleanctor.prototype.toLocaleString||function(){return [this.getMonth(),this.getDate(),this.getFullYear()].join("/")+ " "+[this.getHours(),this.getMinutes()].join(":")}
            }

            proto.asString=function asString(){
                if(this.__busy){
                    return this.__str_||""
                }
                this.__busy_=1
                try{
                    this.__str_=this.format()
                } finally{
                    delete this.__busy_
                }
                return this.__str_||""
            }

            $.extend(proto,exproto);
            $.extend(cleanctor.prototype,proto)
            $.extend(cleanctor2.prototype,proto)
            cleanctor2.prototype.toString=function(){
                return this.__inner__?this.__inner__.toString():""
            }
            var props={

                 "__isdate__":{value:true,configurable:true,writable:false,enumerable:true},
                long:{get:function(){return +this},set:noop,enumerable:true,configurable:true},
                 mmmm:{get:function(){return i18n.monthNames[this.getMonth()+12]},set:noop,enumerable:true,configurable:true},
                mmm: {get:function(){return String(i18n.monthNames[this.getMonth()]).substr(0,3)} ,set:noop,enumerable:true,configurable:true},
                ddd: {get:function(){return String(i18n.dayNames[this.day]).substr(0,3)},set:noop,enumerable:true,configurable:true},
                dddd: {get:function(){return i18n.dayNames[this.day+ 7]},set:noop,enumerable:true,configurable:true},
                t:   {get:function(){return this.getHours()>=12?"p":"a"},set:noop,enumerable:true,configurable:true},
                tt:   {get:function(){return this.t+"m"},set:noop,enumerable:true,configurable:true},
                T:   {get:function(){return String(this.t).toUpperCase()},set:noop,enumerable:true,configurable:true},
                TT:   {get:function(){return String(this.tt).toUpperCase()},set:noop,enumerable:true,configurable:true},
                h:   {get:function(){return ((((this.getHours()+12)%12)||12))},set:function(v){if(typeof(v)=="number"){this.setHours(v)}},enumerable:true,configurable:true},
                hh:  {get:function(){return this.__pad(this.h)},set:noop,enumerable:true,configurable:true},
                MM:  {get:function(){return this.__pad(this.M)},set:noop,enumerable:true,configurable:true},
                M:  {get:function(){return this.getMinutes()},set:noop,enumerable:true,configurable:true},
                W:  {get:function(){return this.getWeek()},set:noop,enumerable:true,configurable:true},
                L:  {get:function(){var L=this.getMilliseconds();return this.__pad(L > 99 ? Math.round(L / 10) : L)},
                    set:function(v){if(typeof(v)=="number"){this.setMilliseconds(v)}},enumerable:true,configurable:true},
                l:  {get:function(){return this.getMilliseconds()  },
                    set:function(v){if(typeof(v)=="number"){this.setMilliseconds(v)}},enumerable:true,configurable:true},
                S:  {get:function(){var d=this.getDate();
                    return   ["th", "st", "nd", "rd"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
                },set:noop,enumerable:true,configurable:true},
            };
            ["day","date","month","year","seconds","milliseconds","minutes","hours","week","quarter"].forEach(
                function(k){
                    var nm=k;
                    if(k=="year"){nm="fullYear"}
                    var abbr=k.charAt(0),nm= nm.charAt(0).toUpperCase()+ nm.substr(1),
                        getter=Function("return this.get"+nm+"()"),
                        setter=(k=="week"||k=="day"||k=="quarter")?function(){}:Function("v","return this.set"+nm+"(v)")
                    props[k]={get:getter,set:setter,enumerable:true,configurable:true}
                    if(k!="day"){
                        if(k=="minutes"){abbr="n"}
                        if(k=="milliseconds"){abbr="ms"}
                        if(abbr=="h"){abbr="H"}
                        props[abbr]={get:getter,set:setter,enumerable:true,configurable:true}
                        if(abbr.length==1){
                            props[abbr+abbr]={get:Function("return this.__pad(this.get"+nm+"())"),set:setter,enumerable:true,configurable:true}
                        }

                    }
                }
            );
            ["n","m","d","s"].forEach(
                function(k){
                    props[k+k]={get:Function("return this.__pad(this."+k+")"),set:noop,enumerable:true,configurable:true}
                }
            );
            $.each({"pm":"tt","am":"tt",ap:"tt",AM:"TT",AP:"TT","mi":"nn",yyy:"yy",yyyy:"yy"},
                function(v,k){
                    props[k]={get:Function("return this."+v),set:noop,enumerable:true,configurable:true}
                }
            );
            augmentProps=props;

            $.defineProperties(cleanctor.prototype,props)
            $.defineProperties(cleanctor2.prototype,props)
            $.each(proto,function(v,k){
                augmentProps[k]={value:v}
            })
            //Object.assign(cleanctor.prototype,proto);
            //Object.assign(cleanctor2.prototype,proto);
            //$.defineProperties(cleanctor2.prototype,props)
        }
        return cleanctor2
    }

    function _augment(d,format){
        var nu=null;
        if(d && d.__isdate__){
            nu= d
        } else {
            var num = +d || (d.getTime?d.getTime():0);
            if (!num) {
                return null
            }
            var cctor = getcleanCtor()
            nu = new cctor(num);
            //nu.toString=function(){return this.asString()}
        }
        if(format){nu._defaultFormat=format}
        return nu
    }
    var fnstoIgnore=["augment","augmentProto","from","asTime","getProxy"]
    function _getProxy(dlg){
        if(!proxy && $.makeProxy2){
            proxy= $.makeProxy2(new Date(),true)

            $.each(api,
                function(v,k){
                    if(typeof v =="function" && fnstoIgnore.indexOf(k)==-1 &&!(k in augmentProps)){
                        augmentProps[k]={value:v,enumerable:true,writable:false,configurable:true}
                    }

                })
            proxy.__add(augmentProps,true);

        }
        var nu
        if(!proxy){return null}
        if(dlg){
            var date=_makeDate(dlg)
            if(date){
                nu= proxy.__clone(date)
            }
        } else{
            nu=proxy
        }
        if(nu && !nu.__isdatewrap){
            $.defineProperty(proxy,"__isdatewrap",{value:true,writable:false,enumerable:false,configurable:false})
        }
        return nu;
    }
    function _isDate(ths,v,astime){
        var d=null
        if(typeof(v)=="boolean"){astime=v;v=null}
        if(ths && (ths instanceof Date || (ths.constructor && ths.constructor.name=="Date") ||ths.__istime__  || ths.__isdate__)){
            d= ths
        }
        else{
            if(v){ths=null;}
            d= v;
        }

        if(d==null ) {
            if (ths) {
                d = ths
            }
            else {
                return null
            }
        }
        if(d != null) {
            var t = typeof(d);
            if (d != "" && t !="object" && !isNaN(d) && Number(d) >=  __mindate) {
                d = new Date(+d)
            } else if (t == "string") {
                var str=d;d=null
                if (str == "now") {
                    d = new Date()
                }
                else if (str == "today") {
                    d = $d.trunc(new Date())
                }
                else if (str == "tomorrow") {
                    d = new Date()
                    d.setDate(d.getDate() + 1)
                }
                else if (str == "yesterday") {
                    d = new Date()
                    d.setDate(d.getDate() - 1)
                }
                else if (astime && /^[\d:]+\s*[ap]m$/i.test(str)) {
                    var arr=str.split(":")
                    var min=0,hr=Number(arr.shift().replace(/\D/g,""))||0
                    if(arr.length){
                        min=Number(arr.shift().replace(/\D/g,""))
                    }

                    if(hr||min){
                        if(/pm$/i.test(str)){hr=hr+12}
                        d=$.date().trunc().set({h:hr,n:min})
                    }
                }
                else if (/\W/.test(str)) {
                    if (astime) {
                        if (/^\d+\s*:(\d+)?\s*/i.test(str.trim())) {
                            try {var curr=new Date()
                                d = new Date([curr.getMonth()+1,curr.getDate(),curr.getFullYear()].join("/")+" "+str)
                                if(d=="Invalid Date"){d=null}
                                else{d.setMilliseconds(0)}
                            } catch(e){
                                d=null
                            }
                            if(!d) {
                                var p = /(\d+)\s*:?(\d+)?\s*([ap]m)?$/ig.exec(str.trim())
                                if (p && p.length) {d = new Date( )
                                    var h = Number(p[1]) || 0, ap = String(p[3]).toLowerCase()
                                    if (h <= 11 && ap == "pm") {
                                        h = h + 12
                                    }
                                    d.setHours(h)
                                    d.setMinutes(Number(p[2]) || 0)
                                    d.setSeconds(0)
                                    d.setMilliseconds(0)
                                }
                            }
                        }
                    }

                    d = d ||  isDateStr(str)
                }
            }
        }
        if(d!=null){
            if(d.__istime__  || d.__isdate__ ){return d}
            if (typeof(d) == "object" && ((d.constructor && (d.constructor.name == "Date" || d.constructor === Date)) || d instanceof Date)) {
            } else {
                d=null
            }
        }
        if(d=="Invalid Date"){d=null}
        if (d && astime) {d.__istime__=true}
        return d

    }
    function _makeDate(ths,v){
        return _isDate(ths,v);
    }
    function _makeTime(ths,v){
        return _isDate(ths,v,true);
    }
    function _parsePart(part,dt){
        if(!part){return}

        if(!dt){dt=_worker||(_worker=_augment(new Date()));}
        if(part=="hr"){part="h"}
        if(!(part in dt) && part.length>1){
            if(part.indexOf("mi")==0){part="mi"}
            else{
                if(part.toLowerCase() in dt){part=part.toLowerCase()}
                else{
                    var p1=part.substr(0,2)
                    if(p1.toLowerCase() in dt){part=p1.toLowerCase()}
                    else if(p1 in dt){part=p1}
                    if(!(part in dt)){
                        p1 = part.substr(0, 1)
                        if (p1.toLowerCase() in dt) {
                            part = p1.toLowerCase()
                        }
                        else if (p1 in dt) {
                            part = p1
                        }
                    }
                }
            }

        }
        if(part=="h"){part="H"}
        if(part=="mi"){part="n"}
        if(part=="ap"){part="tt"}
        return part
    }
    var dateDuration=null
    function getDurationInstance(d1){
        if(!dateDuration) {//ctor, proto, superClass, staticObject
            dateDuration = $.createClass(
                function (dur) {
                    this.duration = +dur
                    var U = this.unitstoms || (this.unitstoms = $.date.__unitstoms);
                    if (dur > U.y) {
                        this.years = Math.floor(dur / U.y)
                        dur = dur - (this.years * U.y)
                    }
                    if (dur > U.m) {
                        this.months = Math.floor(dur / U.m)
                        dur = dur - (this.months * U.m)
                    }
                    if (dur > U.d) {
                        this.days = Math.floor(dur / U.d)
                        dur = dur - (this.days * U.d)
                    }
                    if (dur > U.h) {
                        this.hours = Math.floor(dur / U.h)
                        dur = dur - (this.hours * U.d)
                    }
                    if (dur > U.n) {
                        this.minutes = Math.floor(dur / U.n)
                        dur = dur - (this.minutes * U.n)
                    }
                    if (dur > U.s) {
                        this.seconds = Math.floor(dur / U.s)
                        dur = dur - (this.seconds * U.s)
                    }
                    this.milliseconds = dur


                }, {
                    asString: function () {
                        var r = []
                        for (var i = 0, l = "years months days hours minutes seconds milliseconds".split(/\s+/), ln = l.length; i < ln; i++) {
                            if (this[l[i]]) {
                                r.push(this[l[i]] + " " + l[i])
                            }
                        }
                        return r.join(", ")
                    }
                }
            );
            $.date.unitToMS("h")
            dateDuration.prototype.unitstoms = $.date.__unitstoms
        }
        return new dateDuration(d1 )
    }
    var dateRange=null
    function getDateRangeInstance(d1,d2){
        if(!dateRange){//ctor, proto, superClass, staticObject
            dateRange=$.createClass(
                function(st,end){
                    Object.defineProperties(
                        this,
                        {start:{get:function(){return this.get("start")},set:function(v){return this.setItem("start", $.date(v)) },enumerable:true},
                         end:{get:function(){return this.get("end")},set:function(v){return this.setItem("end", $.date(v)); },enumerable:true},
                         formattedDuration:{get:function(){return this.format()},set:function(v){},enumerable:true},
                            duration:{get:function(){return this.get("duration")},set:function(v){return this.setItem("duration", v)},enumerable:true},
                            durationType:{get:function(){return this.get("durationType")},set:function(v){return this.setItem("durationType", v)},enumerable:true}
                       }
                    )
                    this.set("start",$.date(st)||$.date())
                    this.set("end",$.date(end)||$.date())
                    this.set("datamodified",0)
                 },{
                    setItem: function (nm,val) {this.__modifiedlog||(this.__modifiedlog=0);
                        var curr=this.set(nm, val);this.set("datamodified",++this.__modifiedlog);
                        return curr
                    },
                contains: function (d) {
                    var dt = $.date(d);
                    return (dt && +dt >= +this.start && +dt <= +this.end)
                },
                setDuration: function (type, amount) {
                    if (type == "h" && amount < 1) {
                        type = "n"
                        amount = 60 * amount
                    }
                    this.duration = amount
                    this.durationType = type
                    this.end = $.date(+this.start).plus(type, amount)

                    return this
                },
                isInTimeRange: function (date) {
                    var d=new $.date(date)
                    if(!d){return}
                    var ofset=date.dayOffset();
                    return this.start.dayOffset()<=ofset && this.end.dayOffset()>=ofset
                },
                overlaps: function (rng) {
                    return (rng && +rng.start <= +this.end && +rng.end >= +this.start)
                },
                getDurationInHours: function () {
                    var h=Number((this.end-this.start)/$.date.unitToMS("h")).toFixed(1)
                     return h

                },
                format: function () {
                    var actualDuration = this.end - this.start, str = []
                    if (actualDuration < 0) {
                        return ""
                    }

                    var min = Math.ceil(actualDuration / $.date.unitToMS("n"))
                    var h = Math.floor(actualDuration / $.date.unitToMS("h"))//this.exit_time.getHours() - this.entry_time.getHours()
                    min = this.end.getMinutes() - this.start.getMinutes()
                    if (min < 0) {
                        min = 60 + min
                    }

                    if (Math.ceil(actualDuration / $.date.unitToMS("n")) <= 1) {
                        str.push("less than a minute ..")
                    } else {
                        if (h <= 0) {
                            str.push(min + " minutes")
                        } else {
                            h = Math.floor(actualDuration / $.date.unitToMS("h"))
                            min = Math.floor((actualDuration - (h * $.date.unitToMS("h"))) / $.date.unitToMS("n"))
                            if (h > 24) {
                                var days = Math.floor(actualDuration / $.date.unitToMS("d"))
                                var actualDuration2 = actualDuration - (days * $.date.unitToMS("d"))
                                h = Math.floor(actualDuration2 / $.date.unitToMS("h"))
                                min = Math.floor((actualDuration2 - (h * $.date.unitToMS("h"))) / $.date.unitToMS("n"))
                                if (days) {
                                    str.push(days + " days")
                                }
                                if (h) {
                                    str.push(h + " hours")
                                }
                                if (min) {
                                    str.push(min + " minutes")
                                }

                            } else {
                                if (h) {
                                    str.push(h + " hours")
                                }
                                if (min) {
                                    str.push(min + " minutes")
                                }
                            }

                        }
                    }
                    return str.join(", ").trim()
                }

            },$.observable)

        }
        return new dateRange(d1,d2)
    }

    var wraptemplates={};
    var MIN=1000*60,HR=MIN*60,DAY=HR*24;
    var exproto= {

        getFormatTemplate: function (f) {
            if (typeof(f) == "string" && wraptemplates[f]) {
                return wraptemplates[f];
            }

            var frmt = f, dt = this;
             if (!frmt && dt) {
                frmt = dt._defaultFormat
            }
            if (!frmt) {
                return
            }

            var handle = wraptemplates[frmt]
            if (!handle) {
                var keys = []
                var template = f.replace(/hh:mm/, "hh:nn").replace(/'([^']+)'/g, function (a, k) {
                    return "`" + strings.push(k) + "`"
                })
                    .replace(/\b([\w]+)\b/g, function (a, k) {
                        keys.push(k)
                        return "<span data-key='" + (k) + "' class='date-part date-part-val date-part-" + (k.toLowerCase()) + "'>$" + k + "</span>"
                    })
                    .replace(/`(\d+)`/g, function (a, k) {
                        return "<span class='date-part date-part-text'>" + strings[Number(k) - 1] + "</span>"
                    }).trim().replace(/(\<\/span\>)([\S]+)(\<span)/g, function (a, b, c, d) {
                        return b + "<span class='date-part date-part-sep'>" + c + "</span>" + d
                    })
                handle = wraptemplates[f] = {keys: keys, template: template, format: f}
                handle.getTemplateData = function (dt) {
                    if (!dt || !(dt.__isdate__ || dt.__istime__)) {
                        return {}
                    }
                    return dt.getTemplateValue(this.keys)
                }.bind(handle)
                handle.resolve = function (dt) {
                    var data = this.getTemplateData(dt)
                    return this.template.replace(/\$(\w+)/g, function (a, b) {
                        return data[b] || a;
                    });
                }.bind(handle)
            }
            return handle
        },
        format: function ( frmt, wraptag) {
             var dt = this, res = ""
            if (dt) {
                if (this.__busy1) {
                    return ""
                }
                this.__busy1 = 1
                if($.date.__tmzot&& Number($.date.__tmzot)>0){
                    try {
                        var nudt = $.date(+dt).minus("n", Number($.date.__tmzot))
                        if(nudt && nudt.getTime()>0){
                            dt=nudt
                        }
                    } catch(e){

                    }
                }
                try {
                    var f = frmt || this._defaultFormat;
                    if (typeof(f) != "string") {
                        f = null
                    }
                    if (dateFormatmasks[f]) {
                        f = dateFormatmasks[f];
                    }
                    if (wraptag !== true) {
                        wraptag = !!this._wraptag
                    }
                    if (!f) {
                        f = this.__istime__ ? "hh:nn tt" : 'mm/dd/yy hh:nn tt'
                    }
                    var strings = []

                    if (f.indexOf("recency") == 0) {
                        var today = new Date(), time = dt.getTime(), now = +today, diff = Math.abs(now - time);
                        if (today.getFullYear() == dt.getFullYear() && today.getMonth() == dt.getMonth()) {
                            var dte = dt.getDate(), thsdate = today.getDate()
                            if (thsdate == dte) {
                                if (f === "recency-date") {
                                    res = "Today"
                                } else {
                                    if (diff < MIN) {
                                        res = "just now .."
                                    }
                                    else if (diff < 5 * MIN) {
                                        res = "few minutes ago .."
                                    }
                                    else if (diff < HR) {
                                        res = "a little while ago .."
                                    }
                                    else if (diff < 5 * HR) {
                                        res = "few hours ago .."
                                    }
                                    else {
                                        res = "Today"
                                    }
                                }

                            }
                            else if (thsdate - dte == 1) {
                                res = "Yesterday"
                            } else if (thsdate - dte == -1) {
                                res = "Tommorrow"
                            } else {
                                f = "ddd dd mmm, yyyy"
                            }
                        } else {
                            f = "ddd dd mmm, yyyy"
                        }
                    }
                    if (!res) {
                        if (f == "time") {
                            f = "hh:nn tt"
                        }
                        else if (f == "date") {
                            f = "mm/dd/yy"
                        }
                        else if (f == "datetime" || f == "timestamp") {
                            f = "mm/dd/yy hh:nn tt"
                        }
                        f = f.replace(/MM/g, "nn").replace(/hh:mm/ig, "hh:nn");
                        if (wraptag || String(f).indexOf("<") == 0) {
                            var handle = dt.getFormatTemplate(f)
                            if (handle) {
                                return handle.resolve(dt)
                            }

                        } else {
                            res = f.replace(/'([^']+)'/g, function (a, k) {
                                return "`" + strings.push(k) + "`"
                            })
                                .replace(/\b([\w]+)\b/g, function (a, k) {
                                    var v = dt[k] || dt[k.toLowerCase()] || a;
                                    if (k == "m" || k == "mm" && !isNaN(v)) {
                                        v = Number(v) + 1;
                                        if (k == "mm") {
                                            v = dt.__pad(v)
                                        }
                                    }
                                    return v
                                })
                                .replace(/`(\d+)`/g, function (a, k) {
                                    return strings[Number(k) - 1]
                                }).trim()
                        }
                    } else if (wraptag) {
                        res = "<span class='date-part date-part-" + f + "'>" + res + "</span>"
                    }

                } finally {
                    this.__busy1 = 0
                }
            }
            return res
        },
        dayOffset: function () {
            return (this - this.clone().trunc())
         },
        trunc: function ( onlymins) {
            var dt = this
            if (dt) {
                if (!onlymins) {
                    dt.setHours(0)
                }
                dt.setMinutes(0)
                dt.setSeconds(0)
                dt.setMilliseconds(0)
            }
            return dt
        },
        getTemplateValue: function (key, def) {
            var res = {}, isarr = Array.isArray(key)
            var dt = this;
            if (!(dt.__isdate__ || dt.__istime__) || !key) {
                return res
            }
            for (var i = 0, l = isarr ? key : [key], ln = l.length, k; k = l[i], i < ln; i++) {
                var v = dt[k] || dt[k.toLowerCase()] || "";
                if (k == "m" || k == "mm" && !isNaN(v)) {
                    v = Number(v) + 1;
                    if (k == "mm") {
                        v = dt.__pad(v)
                    }
                }
                res[k] = v
            }
            return isarr ? res : res[key]
        },
        clone: function (cachedifavailable) {
            var nu = null,   dt = this
            if(cachedifavailable==true ){
                if(!$.date.__cache){
                    $.date.__cache={}
                }
                if($.date.__cache[+dt]){
                    return $.date.__cache[+dt]
                }
            }
             var nu = dt.constructor ? new dt.constructor(+dt) : $date.from(+dt)
            nu._defaultFormat = dt._defaultFormat;
            if (dt.__istime__) {
                nu.__istime__ = true
            }
            if(cachedifavailable==true ){
                $.date.__cache[+dt]=nu;
            }
             return nu
        },
        toNearestHalfHour: function ( ) {
            var dt = this
            if (dt.getMinutes() != 30) {
                if (dt.getMinutes() < 30) {
                    dt.setMinutes(30)
                } else {
                    dt.setMinutes(0)
                    dt.setHours(dt.getHours() + 1);
                }
                dt.setSeconds(0);
                dt.setMilliseconds(0);
            }
            return dt;
        },
        isWeekEnd: function ( ) {
            var dt = this
            return (dt.getDay() == 0 || dt.getDay() == 6);
        },
        isWeekDay: function ( ) {
            return !this.isWeekEnd( );
        },
        toNearestHour: function (v) {
            var dt = this
            if (dt.getMinutes() != 60) {
                dt.setMinutes(0);
                dt.setSeconds(0);
                dt.setMilliseconds(0);
                dt.setHours(dt.getHours() + 1);
            }

            return dt;
        },
        get: function ( nm, val) {
            var dt =  this

            var part = _parsePart(nm, dt)
            return part?this[part]:null
        },
        set: function ( nm, val) {
            return this.update( nm, val)
        },
        update: function ( nm, val) {
            var dt = this

            if (typeof(nm) == "string" && val != null) {
                var part = null
                if (nm == "ms") {
                    var diff = Number(val) - dt.getTime()
                    if (!isNaN(diff)) {
                        val = Math.max(0, dt.getSeconds() + Math.ceil(diff / 1000))
                        part = "s"
                    } else {
                        part = ""
                    }

                } else {
                    part = _parsePart(nm, dt)
                }
                if (part == "hh" || part == "mm" || part == "dd" || part == "nn" || part == "ss") {
                    val = Number(val)
                    part = part.charAt(0);
                }
                if (part && dt[part] != val) {

                    if (part == "tt" || part == "t") {
                        if (val) {
                            var lc = String(val).toLowerCase(), curr = String(dt[part]).toLowerCase()
                            if (!curr) {
                                curr = dt.H < 12 ? "am" : "pm"
                            }
                            if (curr != lc) {
                                if (lc == "pm") {
                                    dt.setHours(dt.getHours() + 12)
                                } else if (lc == "am") {
                                    dt.setHours(dt.getHours() - 12)
                                }
                            }
                        }

                    } else {
                        dt[part] = Number(val) || val
                    }

                }

            } else if ($.isPlain(nm)) {
                for (var i = 0, l = Object.keys(nm); i < l.length; i++) {
                    typeof(l[i]) == "string" && dt.update(l[i], nm[l[i]])
                }
            }
            return dt
        },
        minus: function ( part, val) {
            var dt = this

            if (!isNaN(val)) {
                return this.plus(part, 0 - val)
            }
            return this
        },
        plus: function ( part, val) {
            var dt = this
            if (!part) {
                if (dt.__istime__) {
                    part = "H";
                    val = 1
                }
                else if (dt.__isdate__) {
                    part = "D";
                    val = 1
                }
            }
            part = _parsePart(part, dt)
            if (!part) {
                return dt
            }
            if (part == "h" && val < 1 && val > 0) {
                part = "n";
                val = 60 * val;
            }
            if (part == "ms") {
                val = Math.ceil(val / 1000)
                part = "s"
            }
            if (part in dt && !isNaN(val)) {
                dt[part] = Number(dt[part]) + Number(val)
            }
            return dt
        },
        toNearestQuarterMinutes: function ( offset) {
            var dt = this
            offset=Number(offset)||0
            var min = dt.getMinutes()
            var diff = 15 - ((min + 15) % 15)
            if(diff<offset){ diff=diff+15}
            dt.setMinutes(min + diff);
            dt.setSeconds(0);
            dt.setMilliseconds(0);
            return dt;
        },
        getQuarter: function ( ) {
             return Math.ceil((this.getMonth() + 1) / 3);
        },
        getWeekOfYear: getWeek,
        getWeek: function ( ) {
            var dt =  this

            var date = dt.getDate(), fstday;
            dt.setDate(1);
            fstday = dt.getDay();
            dt.setDate(date);
            return Math.ceil((date + fstday) / 7)
        },
        isBefore: function (v ) {
            return !this.isAfter( v)
        },
        isAfter: function (v ) {
            var dt1 =  this , dt2 = _makeDate( v )
            if (dt1 && dt2) {
                return (+dt1) > (+dt2)
            }
        },
        asNumber:function( ){
            return +this
        },
        isSame:function(v ){
            return this.equals.apply(this,arguments)
        },
        compareTo:function(v ){
            var dt1= this ,dt2=_makeDate( v )
            if(dt1&&dt2){
                var diff=(+dt1)-(+dt2)
                return diff?(diff>0?1:-1):0
            }
            return dt1?1:-1
        },
        equals:function(v ){
            var dt1=this,dt2=_makeDate(v )
            if(dt1&&dt2){
                return (+dt1)===(+dt2)
            }
        },
        isAfterNoon:function( ){
            return this.getHours()>=12;
        },
        isSameWeek:function(v){
            var dt= this,t= $.date(v);
            if(!t){return}
            return t.getWeek()==this.getWeek();
        },
        toMap:function( ){
            var props={},dt= this
             "month,year,date,day,seconds,minutes,milliseconds".split(",").forEach(
                function(k){var k1=(k=="year")?"FullYear":(k.charAt(0).toUpperCase()+ k.substr(1));
                    props[k]= dt[k]||dt["get"+ k1]()
                }
            );
            props.week=dt.getWeek(dt)
            return props
        },
        hoursFrom: function(a) {
            var to =  this ,from = $.date(a);
             if(from && to){
                return Math.floor(((+to) - (+from))/ $.date.unitToMS("h"))
            }
            return 0
        },
        asDuration:function(end,prefix,pastdueprefix){
            if(!end){return ""}
            var endtime = +end,mins=1000*60,hrs=mins*60;
            var diff= endtime - (+this),txt="",past
            if(diff<=0) {
                past=true
                diff=0-diff
            }

            var h = Math.floor(diff / hrs)
            var m = Math.floor((diff - (hrs * h)) / mins)
            if(h>0){
                txt= h + " hour(s) and " + m +" minute(s)"
            } else if(m>0){
                txt=m +" minute(s)"
            } else{
                txt="Less than a minute"
            }

            if(past){txt=(pastdueprefix||"")+" "+txt}
            else{txt=(prefix||"")+" "+txt}
            return txt
        },
        daysInMonth:function( ){
             return this.clone().plus("m",1).set("d",1).plus("d",-1).date
        },
        range:function(interval,cnt,step){
            var from  = this

            if(typeof(interval)=="number"){
                step=cnt
                cnt=interval;
                interval="d"
            }
            step=Number(step)||1
            var part=_parsePart(String(interval))
            if(!part){return []}
            var unitToMS=$.date.unitToMS(part)||$.date.unitToMS("d"),st=+from
            if(unitToMS){
                if(cnt>0){
                    var cctor = getcleanCtor()
                    return List.create(cnt,function(i){return new cctor(st+(unitToMS*i*step))});
                }
            }
            return []
        }
    }
    var api={
        toDate:function(v){
            return _makeDate(this,v)
        },
        isValid:function(v){
            return _makeDate(this,v)!=null
        },
        augment:function(dt,format){
            return $.date.from(dt,format)
        },
        asDate:function(){
            var dt=this.from.apply(this,arguments)
            if(dt && !dt.__istime__ && !dt._defaultFormat){
                dt.trunc();
                dt._defaultFormat=dt._defaultFormat||"date"
            }
            return dt;
        },
        asTime:function(){
            var d,dt=arguments[0],format=arguments[1]
            if((!arguments.length && (this==self||this== $.date))||dt===null){d=new Date()}
            else {
                d = _makeTime(this, dt)
                if (!d) { return null }
            }
            if(typeof(format)!="string"){
                if(d===this && typeof(dt)=="string"){format=dt;}
                else{format=null}
            }
            return _augment(d,format||'time')

        },
        from:function(){
            var d,dt=arguments[0],format=arguments[1]
            if((!arguments.length && (this==self||this == $.date))||dt==null){d=new Date()}
            else if(dt && dt.__isdate__){return dt}
            else {
                d = _makeDate(dt)
                if (!d) { return null }
            }
            return _augment(d,format)

        },
        makeRange:function(dt1,dt2){
             return getDateRangeInstance(dt1,dt2)

        },
        extendNative:function(){

        },
        augmentProto:function(){
            if(Date.prototype.__isdate__){return}
            Date.prototype.__isdate__=true;
            Date.prototype.__isNative__=true;
            $.each(exproto,function(v,k){
                Date.prototype[k]=v;
            })
            $.defineProperties(Date.prototype,augmentProps)
        },
        getProxy:function(date){return
            date=_isDate(date)
            if(!date){return null}
            return _getProxy(date)

        },
        lookuplist:function(datepart,constrain,refdate){

            if(refdate==null && this instanceof Date){
                refdate=this
            } else if (constrain && constrain instanceof Date){
                refdate=constrain;
                constrain=null
            }
            refdate=refdate|| $.date()

            var part=_parsePart(datepart)||"";

            var padd=part.length>1? $.fn.rcurry(pad,2):function(a){return a}

            if(datepart=="mmm"){
                return List.create(i18n.monthNames.slice(12)).asKeyValueSet("id","label")
            } else if(part=="m"||part=="mm"){
                return List.create(i18n.monthNames.slice(0,12)).collect(function(it,i){return {id:i+1,label:it}})  ;
            } else if(part=="dd"||part=="d"){
                return List.create(refdate.daysInMonth(),function(i){return {id:i||String(i),label:padd(i)}}) ;
            } else if(datepart=="day"){
                return List.from(i18n.dayNames.slice(7)).asKeyValueSet("id","label")
            }else if(part=="y"||datepart=="yyyy"){constrain=constrain||{}
                var yr=refdate.year
                var start=Number(constrain.start)||yr,end=Number(constrain.end)||(yr+10)
                if(constrain.range && typeof (constrain.range)=="number"){
                    start=yr-constrain.range;
                    end=  yr+constrain.range
                } else if(constrain.offset){
                    if( typeof (constrain.offset)=="number") {
                        start = yr - constrain.offset
                    } else{
                        if( typeof (constrain.offset.start)=="number") {
                            start = yr - constrain.offset.start
                        }
                        if(typeof (constrain.offset.end)=="number"){
                            end=yr+constrain.offset.end
                        }
                    }
                }
                if(typeof (constrain.max)=="number"){
                    end=start+constrain.max
                }
                return List.create(end-start+1,function(idx){return idx +start}) ;

            } else if(datepart=="hh"||datepart=="h"){
                if(constrain && (constrain.as24||constrain=="24")){
                    return List.create(24,function(i){return {id:i+1,label:padd(i+1)}})
                }
                return List.create(12,function(i){return {id:i||String(i+1),label:padd(i+1)}})
            } else if(datepart=="nn"){
                var l=List.create(60,function(i){return {id:i||String(i),label:padd(i)}})
                var step=constrain && (constrain.step);
                if(!step){step=15}
                if(step){
                    return l.filter(function(a,i){return !(i% step)})
                }
                return l
            } else if(datepart=="ss"){
                var l=List.create(60,function(i){return {id:i||String(i),label:padd(i)}})
                if(constrain && (constrain.step)){
                    return l.filter(function(a,i){return !(i%constrain.step)})
                }
                return l
            } else if(datepart=="t"||datepart=="ap"||datepart=="tt"){
                return [{id:"am",label:"AM"},{id:"pm",label:"PM"}]
            }
        },
        unitToMS:function(unit){
            var ret=1,s=1000,part=_parsePart(unit)||"";
            if(!$.date.__unitstoms){
                $.date.__unitstoms={
                    "s":s,
                    "n":s*60,
                    "h":s*60*60,
                    "d":s*60*60*24,
                    "m":s*60*60*24*30,
                    "y":s*60*60*24*365
                }
            }

            return $.date.__unitstoms[String(part).toLowerCase()]
        }


    }
    $.each(exproto,function(fn,nm){
        api[nm]=(function(mthd){
            return function(dt){
                var nu= $.date(dt);if(!nu){return null}
                return mthd.apply(nu,[].slice.call(arguments,1))
            }
        })(fn)
    })
    var toret=function(){
        return api.from.apply(api,arguments.length?arguments:[new Date()])
    }
    toret.now=toret.today=function(){return $.date()}
    toret.yesterday=function(){return $.date().minus("d",1)}
    toret.tomorrow=function(){return $.date().plus("d",1)}
    Object.assign(toret,api)

    return toret
})();

;/**
/**
 * Created by Atul on 5/20/2015.
 */

           /* Object.observe2(this.attributes,function(recs){
                var C=this.__config, deps=C.__depends,O=this.attributes;
                var uniqs={},todisp=[],deplist=[]
                for(var i= 0,l=recs||[],ln= l.length;i<ln;i++) {
                    uniqs[recs[i].name] = recs[i];
                }
                for(var i= 0,l=Object.keys(uniqs),ln= l.length;i<ln;i++) {
                    var r0=uniqs[l[i]],
                        r={name:r0.name,oldValue:r0.oldValue,newValue:r0.newValue,value:r0.newValue,object:O },
                        nm=r.name;
                    if(r.type=="delete"||r.type=="remove"){//??
                        continue
                    }
                    if(!("newValue" in r0)){
                        r.value= r.newValue=O[nm]
                    }
                    //if(r.value===r.oldValue){continue}
                    //if(!(nm in this)){continue}
                    if(deps[nm]){
                        var D=C.descriptors
                        for(var i2= 0,l2=deps[nm],ln2= l2.length;i2<ln2;i2++) {
                            deplist.indexOf(l2[i2]) == -1 && deplist.push(l2[i2])
                        }
                    }
                    todisp.push(r)
                }
                var D=C.descriptors
                for(var i = 0, ln = deplist.length;i<ln;i++){
                    var nm=deplist[i];
                    if(D[nm] && D[nm].get){
                        var curr=O[nm],nu=D[nm].get.call(this,this)
                        if(typeof(curr)=="number" && !isNaN(nu)){nu=Number(nu)}
                        if(nu!=curr){
                            O[nm]=nu
                        }
                    }
                }
                this.firePropertyChangeEv(todisp);
            }.bind(this));*/
$.simpleModel = (function () {
    function _extend(target,src) {
        for(var k in src){
            if(!(src.hasOwnProperty(k))){continue}
            target[k]=src[k]
        }
        return target
    }
    function simpleModelold(id,props) {
        if((this==$ || this==self) || !(this instanceof simpleModel)){return new simpleModel(id,props)}
        if(id===null&& props==null){//as a proto
            var defprops=$.extend({}, this.toMap())
            if(Object.keys(defprops).length){
                this.__defaultProps=defprops
            } else {this.__defaultProps=null}
            return
        }
        this.init(id,props)
    }
    function isDescriptor(obj){
        if(obj && $.isPlain(obj) && Object.keys(obj).length){
            if(obj.descriptor||obj.expr){return true}
            if(obj.name ||obj.type ||obj.typeInfo ||obj.defaultValue||obj.renderer||obj.reader ||obj.format){
                return true
            }
        }
    }
    function __define(k,hasexpr,aliasfor){
        if(this.__verifieddescriptors && this.__verifieddescriptors.indexOf(k)>=0){return}
        if(String(k).indexOf("__")==0||k=="attributes"){return}
        this.__verifieddescriptors||(this.__verifieddescriptors=[]);
        var Get=(Object.getOwnPropertyDescriptor(this,k)||{}).get
        if(typeof(Get)=="function"){
            this.__verifieddescriptors.push(k);
            return
        }

        if(k in this ){
            delete this[k];
        }
        aliasfor=aliasfor||k
        if(!(k in this)){
            Object.defineProperty(this,k,{
                get:Function("return this.attributes?this.get('"+aliasfor+"'):null"),
                set:hasexpr?function(){}:Function("v","return this.attributes?this.set('"+aliasfor+"',v):null"),
                configurable:true,
                enumerable:true
            })
        }
        this.__verifieddescriptors.push(k);



        if(this.__delegate && !this.__config.nofields ){// !(k in this.__delegate)
            var propfield=this.__config.delegatePropertyName||"properties"
             delete this.__delegate[k];
            Object.defineProperty(this.__delegate,k,{
                get:Function("return this."+propfield+"?this."+propfield+".get('"+aliasfor+"'):null"),
                set:hasexpr?function(){}:Function("v","return this."+propfield+"?this."+propfield+".set('"+aliasfor+"',v):null"),
                configurable:true,
                enumerable:true
            })
        }
        return this
    }

    var simpleModel =  $.baseModel.extend({
    //simpleModel.prototype={
        init:function(id,props,config){
            delete this.__setupmodel__;
            this.setupModel(id,props,config)
        },
        setupProps:function(props,config){
            var C=this.getConfig();
            if(!C) {
                C={}
                if(config && $.isPlain(config)){
                    Object.assign(C,config)
                }
                Object.defineProperty(this, "__config", {
                    value: C, writable: false, configurable: true, enumerable: false
                })
            }
            this.__initiliazing=true;
            var nuprops=null
            if($.isPlain(props)){
                nuprops=props
            }
            if(!this.__config.depends){
                this.__config.depends={ }
            }
            var d = {};
            if(this.__config.descriptors) {
                var descriptors = C.descriptors||{};
                 for(var i= 0,l=Object.keys(descriptors),ln= l.length;i<ln;i++){
                     var a=l[i]
                    if(a=="statics"){continue}
                     var D=descriptors[a]
                    D.raw=null;
                    d[a]=null;
                    if(nuprops && a in nuprops) {d[a] = nuprops[a];delete nuprops[a]}
                    else if(typeof(D.defaultValue)=="function"){d[a] = D.defaultValue.call(this,a)}
                     else if(!D.isExpr && D.defaultValue && (typeof(D.defaultValue)!="object" || $.isPlain(D.defaultValue) || Array.isArray(D.defaultValue))){
                        d[a] = $.clone(D.defaultValue)
                     }
                }
            } else{
                C.descriptors={};
            }
            this.initModel({
                get: this.get,
                set: this.set
            });

            //this.update(d);
            if(nuprops && Object.keys(nuprops).length){
                this.addProperties(nuprops);
            }
            else if (props && typeof(props) == "object") {
                this.addProperties(props);
            }
            Object.keys(d).length && this.update(d);
            this.__initiliazing=false;
        },
        setupModel:function(id,props,config){
            if((id && id.__asProto__) || this.__setupmodel__){return false}
            this.__setupmodel__=true;
            //if(id===null && props==null && config==null){return}
            if( id && typeof(id)=="object" ){
                props=id;id=null;
            }


            if(this.attributes){delete this.attributes}
            Object.defineProperty(this,"attributes",{value:{},writable:false,configurable:true,enumerable:false})

            var dlg=null
            if(props && props.__delegate){
                dlg=props.__delegate
                delete props.__delegate;

            } else if(config && config.delegate){
                dlg=config.delegate
                delete config.delegate;
            }
            if(dlg){
                this.setDelegate(dlg);
            }

            this.setupProps(props,config);

            if(this.afterInitialize){
                this.afterInitialize.apply(this,arguments)
            }
            if(this.initModelInstance){
                this.initModelInstance.apply(this,arguments)
            }
        },
        getConfig:function(){return this.__config||(this.__config={});},
        trigger:function(nm){
            var L=this.__listeners
            if(!L){return}
            if (!nm || "*" == nm) {
                for (var i = 0, c = this.keys(), d = c.length; d > i; i++) {
                    c[i] && "*" !== c[i]   && L.hasListeners(c[i]) && this.firePropertyChangeEv(c[i]);
                }
                return this
            }
            return L.hasListeners(nm) && this.firePropertyChangeEv(nm);
        },
        createProxy:function createProxy(delegatename) {
            delegatename=delegatename||"propdelegate"
            var props=this.keys().reduce(function(m,k){
                m[k]={descriptor:true,name:k,delegatedTo:delegatename}
                return m
            },{})
            props[delegatename]={descriptor:true}
            var nu=new $.simpleModel(props)
            return nu
        },
        getSaved:function(nm){
            return this.attributes && this.attributes[nm]
        },
        _setInner: function(name, val) {
             if (!this.attributes || !(name && "string" == typeof name)) {
                return
            }
            var C=this.__config,O=this.attributes,   DS=C.descriptors,initiliazing=this.__initiliazing
                , curr = O[name],D=DS[name]||{},raw=val;
                    if(raw==null && curr==null){curr=raw}

                 if(D.reader){
                    val=D.reader(raw,curr, this);
                     if(val==null && curr==null){curr=val}
                 }
                if(typeof(D.set)=="function"){
                    D.set.call(this,val)
                 }
                else if (!(curr === val ) ) {//&& D.raw!==raw
                    D.raw=raw
                    if(name.indexOf(".")>0){
                        $.updateProperty(this.attributes, name, val, true)
                        var root = name.split(".")[0];
                        if(!this.contains(root)){
                            __define.call(this,root)
                        }
                    }
                    O[name] = val
                    if(C.depends && C.depends[name]){
                        for(var i2= 0,l2=C.depends[name],ln2= l2.length;i2<ln2;i2++) {
                            var nm=l2[i2],DSX=DS[nm]
                            if(nm!=name && DSX && DSX.calc){
                                if(!DSX.calcThrottled){
                                    DSX.calcThrottled=  $.throttle(DSX.calc,{tailend:true,delay:100})
                                }

                                DSX.calcThrottled(this,false,this.attributes[nm])
                             }
                        }
                    }
                    if(!(val==null&&initiliazing) ) {
                        this.firePropertyChangeEv({name:name,value:val,newValue:val,oldValue:curr,object:this,type:"update"});
                     }


                 }

            return curr
         },

        set:function(k,v){
            if(!this.attributes){return}
            if(arguments.length===1 && k && typeof(k)=="object"){
                if(Array.isArray(k)){
                    for(var i= 0 ,ln= k.length;i<ln;i++){
                        this.set(k[i],null)
                    }
                } else{
                    for(var nm in k){
                        if(!(Object.hasOwnProperty.call(k,nm))){continue}
                        this.set(nm,k[nm])
                    }
                }

                return this
            }
            if(typeof(k)!="string" || k=="__config"||k=="attributes"||k=="__listeners"||k=="__delegate"){return}
            if(!(k in this) || !(k in this.attributes && !(this.getDescriptor(k)||{}).delegatedTo)){
                if(v && v.descriptor){
                    return this.addProperty(k,v)
                }
                this.addProperty(k );
            }
            return this._setInner(k,v)
        },
        get:function(k){
            if(!(this.attributes && k && typeof(k)=="string")){return}
            var val=null,D=this.getDescriptor(k)
            if(D){
                if(D.delegatedTo && this.attributes[D.delegatedTo]) {
                    val=this.attributes[D.delegatedTo][k]
                } else{
                    if(typeof(D.get)=="function"){
                        if(D.proxied){
                            return D.get.call(this,this);
                        }
                        this.attributes[k]=D.get.call(this,this)
                    } else if(D.calc  ){
                        this.attributes[k]=D.calc(this,true,this.attributes[k]==null?null:this.attributes[k])
                    }
                    val=this.attributes[k]
                }

            } else {
                val = k in this.attributes ? this.attributes[k] :
                    $.resolveProperty(this.attributes, k, true)
            }

            return val
        },

        /*add:function(k){

        },*/



        getDescriptor: function(a) {
            return a && "string" == typeof a ? this.__config.descriptors[a] || this.__config.descriptors[a.toLowerCase()] : null
        },
        keys: function() {
            return Object.keys(this.__config.descriptors)
        },
        asCtor:function(notbase){
            var nuctor=function(id,props,config){
                if(typeof(this.init)=="function"){
                    this.init(id,props,config)
                }
                if(!this.__setupmodel__ && typeof(this.setupModel)=="function"){
                    this.setupModel(id,props,config)
                }
            }
            var proto=this,DS=(this.__config||{}).descriptors,props=this.keys()
            if(proto.__config){
                DS= proto.__config.descriptors
                if(DS){
                    for(var i= 0,l=props,ln= l.length;i<ln;i++){
                        var D=DS[l[i]];
                        if(D.defaultValue==null && !D.calc){
                            var defaultValue=this.get(l[i])
                            if(defaultValue !=null && (typeof(defaultValue)!="object" || $.isPlain(defaultValue) || Array.isArray(defaultValue)) ){
                                 D.defaultValue= $.clone(defaultValue);
                            }
                        }
                        D.__busy= D.__saved=null;
                    }
                }
            }
            delete this.__verifieddescriptors
            delete this.__setupmodel__
            delete this.__initiliazing

            var ctor=$.createClass(nuctor,this,null,this.statics)

            if(ctor.prototype.__listeners){
                ctor.prototype.__listeners.destroy()
                delete ctor.prototype.__listeners;
            }
           /* if(notbase===true) {
                for (var i = 0, l = props, ln = l.length; i < ln; i++) {
                    var k = l[i], D = DS[k];
                    if(k=="statics"||!D){continue}
                    delete ctor.prototype[k];
                    if (!(k in ctor.prototype)) {
                        var aliasfor = D.aliasfor || k;
                        Object.defineProperty(ctor.prototype, k, {
                            get: Function("return this.attributes?this.get('" + aliasfor + "'):null"),
                            set: (D.isExpr || D.calc) ? function () {
                            } : Function("v", "return this.attributes?this.set('" + aliasfor + "',v):null"),
                            configurable: true,
                            enumerable: true
                        })
                    }
                }
            }*/
            delete ctor.prototype.attributes;
            return ctor;
        },
        getDelegate: function(orself) {
            return this.__delegate||(orself===true?this:null)
        },
        setDelegate: function(a) {
            if(a && typeof(a)=="object" && a!==this.__delegate){
                this.__delegate=a;

            }

        },
        refresh: function() {},
        addProperty: function() {
            var C=this.__config
            if( !this.attributes){
                return
            }
            var descriptor=this.makeDescriptor(arguments),valdescriptor,name,origname,val
            if(descriptor && descriptor.descriptor){
                valdescriptor=descriptor.descriptor
                origname=name = valdescriptor.name
                val=descriptor.value
            } else{
                return
            }
            if(C.caseinsensitive ){
                name=name.toLowerCase()
            }
            var exists=C.descriptors[name]
            C.descriptors[name]=$.extend(C.descriptors[name] || {}, valdescriptor||{})

             __define.call(this,name,!!valdescriptor.isExpr);

            if(origname!=name && !(origname in this )  ){
                 __define.call(this,origname,!!valdescriptor.isExpr,name);
            }
            if(valdescriptor.typeInfo && valdescriptor.typeInfo.date && !valdescriptor.reader){
                valdescriptor.reader=valdescriptor.typeInfo.coerce
            }

            if( this.attributes){
                if(!(name in this.attributes)){
                    this.attributes[name]=null;
                }
                this._setInner(name,val)
                if(valdescriptor && valdescriptor.calc && !this.__initiliazing){
                    try {
                         valdescriptor.calc(this,false,null)
                    } catch(e){}
                }
            }


            return this
        },
        removeProperty: function(a) {
            var C=this.__config;
            if(!this.hasProperty(a)){
                return
            }
            delete C.descriptors[a]
            //this.__defaultProps && delete this.__defaultProps[a]
            delete this[a]
             if(this.__delegate){delete this.__delegate[a]}
            delete this.attributes[a]
        }
     })
    simpleModel.from=function(data){
        if(!data ){return}
        var props={}
        if(typeof(data)=="string"){
            data.split(/\s+/).forEach(function(k){props[k]=null})
        } else if(typeof(data)=="object"){
            if(Array.isArray(data)){
                data.forEach(function(k){props[k]=null})
            } else{
                for(var k in data){
                    if(!(data.hasOwnProperty(k)) || !isNaN(k) || k=="length"){continue}
                    props[k]=data[k]
                  }
             }
        }
        return new simpleModel(props)
    }
    simpleModel.make = function (delegate,props,statics,addtional) {
         var klassprops = props
        //klassprops.init = "super";
        var propmodel=$.simpleModel.newInstance( )
        delete propmodel.__setupmodel__
        delete propmodel.__initiliazing
        if(delegate && typeof(delegate)=="object" && !$.isPlain(delegate)&& !$.isArray(delegate)) {
            propmodel.setDelegate(delegate)
        }
        propmodel.addProperties(props)
        var staticprops={}
        if(statics && typeof(statics)=="object"){
            $.each(statics,function(v,k){
                if(typeof(v)=="function"){
                    propmodel[k]= v;
                }
                else {staticprops[k]=v}
            })
        }
        propmodel.setItem("statics",staticprops||{})

        var nuctor =  propmodel.asCtor()
        return nuctor
    };
    simpleModel.extend1 = function(id,proto){
        var base=this
        if(id && typeof(id)=="object"){
            proto=id;
            id=null;
        }
         var nu=new base({__asProto__:true} )
         var defprops= {}
        if(proto && typeof(proto)=="object"){
            if(!Array.isArray(proto)){
                for(var k in proto){
                    if(!(proto.hasOwnProperty(k))){continue}
                    if(typeof(proto[k])=="function" ){
                        nu[k]= proto[k]
                    } else{
                        defprops[k]=proto[k]
                    }

                }
            } else{
                proto.forEach(function(k){defprops[k]=null})
            }
        }
        if(Object.keys(defprops).length){
            nu.setupProps( defprops)
        }


        var ctor=nu.asCtor()
         //ctor.prototype.__defaultProps=Object.keys(defprops).length?defprops:null;
         return ctor;
    }
    return simpleModel;
})();;/**
 * Created by Atul on 5/20/2015.
 */


    self.Klass = function () {
    function _createBaseKlass() {
        function t() {
            this.isPrototype = true
        }

        var e = "baseKlass";
        var n = function () {
        };
        $.defineProperty(n, "isKlass", {value: true, writable: false, enumerable: false, configurable: false});
        var r = new n;
        r.defaultproperty = null;
        r.fire = function () {
            if (this.observer) {
                this.observer.fire.apply(this.observer, arguments)
            }
            return this
        };
        r.is = function (e) {
            var t = typeof n == "string", n = typeof e == t ? String(e).toLowerCase() : e;
            return n === this || this.constructor && (n === this.constructor || n === this.constructor.name) || t && (n == this.name || n == this.classMeta.simpleName) || typeof n == "function" && this instanceof n
        };
        r.uuid = function () {
            return $.UUID(this)
        };
        r.on = function () {
            if (this.observer) {
                ("state" in this) && this.state && (this.state.hasObservers = true);
                this.observer.on.apply(this.observer, arguments)
            }
            return this
        };
        r.getController = function (e) {
            if (!this._controller) {
                $.defineValue(this, "_controller", {value: $.controller.create(this, e), enumerable: true, configurable: true, writable: false})
            }
            return this._controller
        };
        r.onpropertychange = function (name, callback, opts) {
            if (typeof name == "function") {
                opts=callback ;
                callback = name;
                name= this.defaultproperty
            }
            this.properties.onchange(name, callback.bind(this) , opts)
            //this.observer.onpropertychange(name, callback , opts);

        }
        r.observerInit = function () {
            return this
        }
        $.defineProperty(r, "state", {get: function () {
            delete this.state;
            var e;
            $.defineProperty(this, "state", {value: e = {}, enumerable: true, configurable: true, writable: false});
            return e
        }, set: function () { }, enumerable: true, configurable: true});
        $.defineProperty(r, "observer", {get: function () {
            if (!(this.__isinstance__ && typeof Util !== "undefined" && $.emitter)) {
                return null
            }
            $.emitter(this, true);
            delete this.observer;
            $.defineProperty(this, "observer", {value: this.emitter, enumerable: true, configurable: true, writable: false});
            this.observerInit(this.emitter);
            return this.emitter
        }, set: function () {
        }, enumerable: true, configurable: true});
        $.defineProperty(r, "expando", {get: function () {
            if (!this.__isinstance__){return null}
            delete this.expando;
            return $.expando.augment(this,"expando")
        }, set: function () {
        }, enumerable: true, configurable: true});
        r.updateProperties = function (e) {
            this.properties.update(e)
        }
        r.invoke = function (e, t) {
            if (t == null) {
                t=[]
            } else if (typeof (t) === "object" && t.length!=null) {
                t=Array.isArray(t)?t:[].slice.call(t)
            }
            else {
                if (typeof t !== "object") {
                    t = [t]
                } else if (!Array.isArray(t)) {
                    if (t.length) {
                        t = [].slice.call(t)
                    } else {
                        t = [t]
                    }
                }
            }
            if (e.indexOf("Super.") === 0) {
                var n = e.substr("Super.".length);
                return this.__super[n] ? this.__super[n].apply(this, t) : null
            }
            return this.__proto[e].apply(this, t);
        };
        r.newInstance = function () {
            return this.constructor.newInstance.apply(this.constructor, arguments)
        };
        r.extend = function () {
            return this.constructor.extend.apply(this, arguments)
        };
        r._ex_ = function () {
            var e = arguments[0], t = this.constructor;
            if (typeof e == "string" && arguments.length > 1) {
                e = {};
                e[arguments[0]] = arguments[1]
            }
            if (t && e && $.isPlain(e)) {
                $.each(e, function (e, n) {
                    t.fn[e] = n
                })
            }
            return this
        };
        r.data = function () {
            return this.expando(arguments)
        };
        $.defineProperty(r, "__fromBaseKlass", {value: true, writable: false, enumerable: true, configurable: false});
        if (!r.isKlass) {
            $.defineProperty(r, "isKlass", {value: true, writable: false, enumerable: true, configurable: false})
        }
        n.prototype = r;
        n.prototype.constructor = n;
        return n
    }

    function _create() {
        var e = _createCtor(arguments);
        return e
    }

    var _cleanObj = function () {
        return Object.create(null)
    }, _curried = function (t) {
        var n = t;
        return function () {
            return this.invoke(n, [].slice.call(arguments))
        }
    }, _baseKlass = null, _KlassInit = function (t) {
        var n = self.Klass._PROTOINIT;
        return function () {
            if (arguments[0] === n) {
                Object.defineProperty(this,  "__isinstance__", {value: true, writable: false, enumerable: false, configurable: false});
                return
            }
            this.__initializing = true;
            try {
                var e = [];
                for (var t = 0, r = arguments.length; t < r; t++) {
                    var i = arguments[t];
                    if (i && typeof i == "object" && {}.toString.call(i).indexOf("Arguments") >= 0) {
                        [].push.apply(e, [].slice.call(i))
                    } else {
                        e.push(i)
                    }
                }
                var meta = this.__meta || (this.__meta = _cleanObj()),cb=function (e) {
                    if (!this.__initializing || e.value != null) {
                        //console.log("propertychange",e.name,e.value)
                        this.fire("propertychange", e)
                    }
                    return e.value
                }.bind(this);
                var props=new meta.propertyCtor(null,null,{delegate:this})

                Object.defineProperties(this, {__isinstance__: {value: true, writable: false, enumerable: false, configurable: false},
                    properties: {value: props, writable: false, enumerable: false, configurable: false}});
                this.Super=Object.create(this.constructor._Super)
                this.Super.__inst=this;
                this.Super._invoke=function(nm,a){return this.__super && typeof(this.__super[nm])=='function'?this.__super[nm].apply(this,a):null}.bind(this)
            } finally {
                delete this.__initializing
            }
            if (typeof this.beforeInitialize == "function") {
                this.beforeInitialize(e)
            }
            var mixins=null
            //this.properties.setListener(cb);
            if (e.length == 1 && e[0] && e[0].constructor && e[0].constructor.prototype === Object.prototype &&
                (!meta.ctorArgs || meta.ctorArgs.length === 0 || meta.ctorArgs.length && e.length > meta.ctorArgs.length)) {
                var o = {};
                if ($.isPlain(e[0])) {
                    var u = e[0];
                    if(u.mixin && $.isPlain(u.mixin)){
                        mixins=u.mixin;
                        delete u.mixin;
                    }
                    $.each(u, function (e, t) {
                        if (typeof e == "function") {
                            this[t] = e
                        } else {
                            o[t] = e
                        }
                    }, this)
                }
                this.updateProperties(o)
            }
            props.on(cb)
            if (typeof this.initialize == "function") {
                this.initialize.apply(this, e)
            }
            var a = this.__meta.events, f = this.onInitialize || this.afterInitialize || this.oninitialize;
            if (typeof f == "function") {
                f.call(this)
            }
            if (a && a.init) {
                [].concat(a.init).forEach(function (e) {
                    e.call(this)
                }, this)
            }
            //this.properties.getObserver().queue(false)

            if (a) {
                var l = a, c = this.observer;
                for (var h in l) {
                    h != "init" && c.on(h, l[h])
                }
            }
        }
    }, _createCtor = function _createCtor() {
        var ns = "", par, args = [];
        for (var i = 0, ln = arguments.length; i < ln; i++) {
            var a = arguments[i];
            if (a && typeof a == "object" && {}.toString.call(a).indexOf("Arguments") >= 0) {
                [].push.apply(args, $.makeArray(a))
            } else {
                if(a!=null){args.push(a)}
            }
        }
        var _super = {me:function(){
            var caller=arguments.callee.caller,nm=caller.name||caller._name
            if(!nm && this.__inst){
                if(!nm && this.__inst.__proto){
                    for(var k in this.__inst.__proto){if(this.__inst.__proto[k]===caller){nm=k;break;}}
                }
                if(!nm){
                    for(var k in this.__inst){
                        if(this.__inst[k]===caller){nm=k;break;}
                    }
                }
            }
            if(!nm){
                for(var k in this)if(this[k]==caller){nm=k;break;}
            }
            if(nm&&nm!=="me"&&nm!=="_invoke"){return this._invoke(nm,[].slice.call(arguments))}

        }}, __super = {}, __meta, defprops = _cleanObj(), proto = {}, nuproto = args.pop(), statics = {}, props = {};
        var protoctor = function () {
            this.isPrototype = true
        }, __proto = _cleanObj();
        if (typeof args[0] == "string") {
            ns = String(args.shift())
        }
        __meta = {ns: ns, statics: {}, simpleName: ns.split(/\./).pop()};
        par = args.shift() || null;
        if (par && typeof par == "object" && Object.getPrototypeOf(par) === Object.prototype) {
            par = null
        }
        var _init = nuproto.init || nuproto.initialize;
        if (_init === "super" && par) {
            _init = nuproto.init = typeof _init == "function" ? _init : Object.getPrototypeOf(par).init;
            delete nuproto.initialize
        }
        var mixins = [], _oninit = [];
        if (nuproto.mixin || nuproto.mixins) {
            [].push.apply(mixins, [].concat(nuproto.mixin || nuproto.mixins));
            delete nuproto.mixin;
            delete nuproto.mixins
        }
        if (par) {
            if (typeof par == "string") {
                par = ZModule.get(par)
            }
            if (typeof par == "function") {
                if (par.isKlass) {
                    par = new par(Klass._PROTOINIT)
                } else {
                    par = par.__isklass?par:par.prototype
                }
            }
            if (!(par && (typeof par == "object"||typeof par == "function"))) {
                par = {}
            }
            if (par && par.isKlass) {
                var m = par.__meta || {};
                if (m.defaultProperties) {
                    for (var k in m.defaultProperties) {
                        defprops[k] = m.defaultProperties[k]
                    }
                }
                if (m.mixins && m.mixins.length) {
                    [].push.apply(mixins, m.mixins)
                }
                if (m && m.statics) {
                    Object.keys(m.statics).forEach(function (e) {
                        statics[e] = m.statics[e]
                    })
                }
                var p1 = par.__proto || par;
                for (var k in p1) {
                    if (k == "init" || k == "initialize" || k == "observer" || k == "emitter" || k == "data") {
                        continue
                    }
                    if (typeof p1[k] == "function") {
                        __proto[k] = p1[k]
                    }
                }
            }
        }
        if (!(par && par.__fromBaseKlass)) {
            if (!_baseKlass) {
                _baseKlass = _createBaseKlass()
            }
            var nupar = new _baseKlass
            var toextend=null
            if(par ){
                if(typeof(par)=="function"){
                    toextend=new par(Klass._PROTOINIT)
                } else if(typeof(par)=="object"){
                    toextend=par
                }
            }
            if(toextend){
                for(var k in toextend){
                    //if(toextend.hasOwnProperty(k)){
                    if(k in nupar || (nuproto && typeof(nuproto)=="object" && k in nuproto) || k.indexOf("__")==0 || k in Object || k in Object.prototype){continue}
                    nupar[k]= toextend[k];
                    // }
                }
            }
            par=nupar
        }
        Klass.optimize(par);
        if (mixins.length) {
            $.each(mixins, function (e) {
                var t = typeof e == "object" ? e : Klass.mixins[e];
                if (t && typeof t == "object") {
                    $.each(t, function (e, t) {
                        if (t == "__init" || t == "init" || t == "setup") {
                            _oninit.push(e)
                        } else {
                            nuproto[t] = e
                        }
                    })
                }
            })
        }
        protoctor.prototype = par || _cleanObj();
        __super =  Object.create(protoctor.prototype);
        if (!_createCtor._ctorcounter) {
            _createCtor._ctorcounter = 0
        }
        var name = String(ns || "anonymouse_ctor_" + ++_createCtor._ctorcounter).replace(/[\W]/g, "_");
        var ctorfn = function __c__() {
            var e = __c__;
            if (!(this instanceof e)) {
                return new e(arguments)
            }
            this.__klassInitilize.apply(this, arguments)
        };
        var init, ctor = (1, eval)("(" + ctorfn.toString().replace(/__c__/g, name) + ")");
        proto = new protoctor;
        proto.__klassInitilize = _KlassInit();
        if (nuproto) {
            if (nuproto.properties) {
                var nuprops = nuproto.properties;
                if (typeof nuprops == "string") {
                    nuprops = nuprops.split(/\s+/)
                }
                if ($.isPlain(nuprops)) {
                    $.each(nuprops, function (e, t) {
                        defprops[t] = e
                    })
                } else if ($.isArray(nuprops)) {
                    nuprops.reduce(function (e, t) {
                        e[t] = null;
                        return e
                    }, defprops)
                }
                delete nuproto.properties
            }
            init = nuproto.init || nuproto.initialize;
            ["toString", "valueOf", "initialize", "init", "invoke", "getProperty", "setProperty"].forEach(function (e) {
                if (e in nuproto) {
                    __proto[e] = proto[e] = nuproto[e];
                    delete nuproto[e]
                }
            });
            Object.keys(nuproto).forEach(function (e) {
                if (typeof e == "string") {
                    if (e === e.toUpperCase() || e.indexOf("static") == 0) {
                        var t = e.replace(/^(?:static[s]?)\.?(.*)$/i, "$1"), n = nuproto[e];
                        if (!t && n && typeof n == "object") {
                            Object.keys(n).forEach(function (e) {
                                if (typeof n[e] == "function") {
                                    statics[e] = n[e]
                                } else {
                                    statics[e] = n[e]
                                }
                            })
                        } else if (t) {
                            if (n && typeof n == "function") {
                                statics[t] = n
                            } else {
                                statics[t] = n
                            }
                        }
                        return
                    }
                    if (e.indexOf("__") == 0) {
                        return
                    }
                    if (typeof nuproto[e] == "function") {
                        var r = nuproto[e];
                        if (r.name && r.name.match(/\$([\w]+)(\$(\d+))?/)) {
                            var i = r.name.match(/\$([\w]+)(\$(\d+))?/), s = i[1], o = Number(i.pop()) || 0;
                            if (s && typeof $[s] == "function") {
                                var u = [r];
                                if (o) {
                                    u.push(o)
                                }
                                r = $[s].apply($, u)
                            }
                        }
                        __proto[e] = r;
                        if (e != "onpropertychange" && e.toLowerCase() != "oninitialize" &&e.indexOf("on") == 0 && e.length > 2) {
                            var a = e.substr(2);
                            if (a == "init") {
                                _oninit.push(nuproto[e])
                            } else {
                                __meta.events || (__meta.events = {});
                                __meta.events[e.substr(2)] = nuproto[e];
                                proto[e] = nuproto[e]
                            }
                        } else {
                            if (e.indexOf("_") == 0) {
                                proto[e] = nuproto[e]
                            } else {
                                proto[e] = nuproto[e]//_curried(e)
                            }

                        }
                        if (typeof __super[e] == "function" && e!="onpropertychange"&& e!="delete") {
                            _super[e] = eval("(function " + e + "(){return this._invoke?this._invoke('" + e + "',[].slice.call(arguments)):null})")
                        }
                        if(proto[e] && !proto[e].name){
                            proto[e]._name=e;
                        }
                    } else {
                        defprops[e] = nuproto[e]
                    }
                }
            })
        }
        if (_oninit.length) {
            __meta.events || (__meta.events = {});
            __meta.events.init = _oninit.slice()
        }
        __meta.defaultProperties = null;
        if (Object.keys(defprops).length) {
            __meta.defaultProperties = _cleanObj();
            for (var k in defprops) {
                __meta.defaultProperties[k] = $.clone(defprops[k], true)
            }
        }
        if (proto.init && !proto.initialize) {
            proto.initialize = proto.init
        }
        __meta.mixins = mixins;
        var staticvars = Object.keys(statics).reduce(function (e, t) {
            if (typeof statics[t] == "function") {
                e.ctorvars[t] = e.fns[t] = {value: statics[t], enumerable: true}
            } else {
                e.ctorvars[t] = {get: function (e) {
                    var t = e;
                    return function () {
                        return this.prototype && this.prototype[t]
                    }
                }(t), set: function (e) {
                    var t = e;
                    return function (e) {
                        this.prototype && (this.prototype[t] = e)
                    }
                }(t), enumerable: false};
                e.vars[t] = statics[t]
            }
            return e
        }, {fns: {}, vars: {}, ctorvars: {}});
        //init0, callback, ctx, enhanced b, c, a, d
        var propmodel=$.simpleModel({})
        propmodel.setDelegate(proto)
        propmodel.addProperties(__meta.defaultProperties||{})
        propmodel.setItem("statics",staticvars.vars||{})
        __meta.propertyCtor=propmodel.asCtor();

        /*$.observableMap.augment(proto, $.clone(staticvars.vars, true), function (e) {
            if (!this.__initializing || e.value != null) {
            }
            return e.value
        });*/
        if (Object.keys(staticvars.fns).length) {
            Object.defineProperties(proto, staticvars.fns)
        }
        if (Object.keys(staticvars.ctorvars).length) {
            Object.defineProperties(ctor, staticvars.ctorvars)
        }
        __meta.statics = statics;
        if (init) {
            __meta.ctorArgs = String(init.toString().split(/[\n\r]/).shift().split(/[\)\(]/)[1] || "").trim().split(/\,/).map(function (e) {
                return e.trim()
            });
            if (__meta.ctorArgs.length && !__meta.ctorArgs[0]) {
                __meta.ctorArgs = []
            }
        } else {
            __meta.ctorArgs = []
        }
        Object.freeze(__super);
        $.defineProperty(proto, "__proto", {value: __proto, writable: false, enumerable: true, configurable: false});
        $.defineProperty(proto, "__super", {value: __super, writable: false, enumerable: true, configurable: true});
        $.defineProperty(proto, "Super", {value: null, writable: true, enumerable: true, configurable: true});
        delete proto.__meta;
        $.defineProperty(proto, "__meta", {value: __meta, writable: false, enumerable: true, configurable: false});
        $.defineProperty(proto, "classMeta", {value: __meta, writable: false, enumerable: true, configurable: false});
        $.defineProperty(ctor, "_Super", {value: _super, writable: false, enumerable: false, configurable: false});
        $.defineProperty(ctor, "isKlass", {value: true, writable: false, enumerable: false, configurable: false});
        $.defineProperty(ctor, "ns", {value: ns, writable: false, enumerable: false, configurable: false});
        $.defineProperty(ctor, "classMeta", {get: function () {
            return this.prototype.__meta
        }, set: function () {
        }, enumerable: false, configurable: false});
        if (init) {
            proto.initialize = init
        }
        ctor.prototype = proto;
        ctor.prototype.constructor = ctor;
        ctor.newInstance = function () {
            return $.newInstance(this, arguments)
        }.bind(ctor);
        ctor.createCollection = function () {
            var e = [].concat.apply([], $.makeArray(arguments)), t = this;
            var n = new t(self.Klass._PROTOINIT);
            var r = List.from(e || []).chainable(n);
            return r
        }.bind(ctor);
        ctor.fn = ctor.prototype;
        ctor.optimize=function(inst,asctor){
            if(!inst){var ctor=this
                inst=new ctor();
                asctor=true
            }

            var proto=this.prototype,__proto=proto.__proto
            for(var i= 0,l=$.keys(__proto),ln= l.length,k;k=l[i],i<ln;i++){
                if(typeof(__proto[k])=="function" && k!="invoke"){
                    inst[k]= __proto[k];
                }
            }
            if(asctor){
                var ctor=function(){}
                ctor.prototype=inst;
                ctor.prototype.constructor=ctor
                return ctor;
            }
            return inst;
        }

        ctor.inherit = ctor.extend = function () {
            var e = this, t, n = $.makeArray(arguments);
            if (typeof n[0] == "string") {
                t = n.shift()
            }
            if(t){n.unshift(t);}
            n.unshift(e);
            var r = _createCtor.apply(null, n);
            return r
        }.bind(ctor);
        if (ctor.ns) {
            self.ZModule&&self.ZModule.register(ctor.ns, ctor)
        }
        return ctor
    };
    var ret = function () {
        if (!_baseKlass) {
            _baseKlass = _create(_cleanObj())
        }
        return _create.apply(null, arguments)
    };
    ret.simple = function () {
        function initialize(e) {
            if(arguments.length==1&&arguments[0]&&arguments[0].__ignore){return}
            var args = [].slice.call(arguments);
            this.config = Object.create(null);
            this.__isinstance__ = true;
            if(this.withObserver) {
                setupObs.call(this );
            }
            if (this.init) {
                this.init.apply(this, args)
            }

        }
        function setupObs(override,removemethods){
            if(override && this.observer){
                delete this.observer
            }
            if(removemethods || !this.observer){
                if(this.constructor && this.constructor.prototype){
                    var proto=this.constructor.prototype;
                    "on off fire onpropertychange".split(/[,\s]+/).forEach(function(k){
                        if(!proto[k]){delete this[k]}
                    },this)
                }
            }
            if(!this.observer) {
                $.defineProperty(this,"observer", {
                    get: function () {
                        if (!this.__instance__) {
                            return null
                        }

                        delete this.observer;
                        $.emitter.augment(this)
                        $.defineProperty(this,"observer", {value: this.emitter, configurable: true, enumerable: true})
                        return this.emitter;
                    }, set: function () {}, configurable: true, enumerable: true
                })
            }
        }
        function make(parent, proto, staticObject) {
            function konstructor() {
                if (!(this instanceof konstructor)) {
                    var f = konstructor.bind.apply(konstructor, [null].concat([].slice.call(arguments)));
                    return new f();
                }
                var args=arguments;
                if (args.length == 1 && args[0] && typeof args[0] == "object" && args[0].toString && ({}).toString.call(args[0]).indexOf("Arguments") > 0) {
                    args = [].slice.call(arguments[0])
                }
                initialize.apply(this, args)
            }

            if (arguments.length == 1) {
                if (typeof parent == "object") {
                    proto = parent;
                    parent = function () { }
                } else if (typeof parent == "function") {
                    proto = {}
                }
            }

            proto.asProto = function (setupinst) {
                this.__instance__=false;
                function ctor( ){
                    var args=arguments
                    if (args.length == 1 && args[0] && typeof args[0] == "object" && args[0].toString && ({}).toString.call(args[0]).indexOf("Arguments") > 0) {
                        args=[].slice.call(arguments[0])
                    }
                    if(!(this instanceof ctor)){
                        var f = ctor.bind.apply(ctor, [null].concat([].slice.call(arguments)));
                        return new f();
                    }
                    this.__instance__=true;
                    if(this.withObserver) {
                        setupObs.call(this, true, true);
                    }
                    setupinst=setupinst||this.setupInstance
                    setupinst && setupinst.apply(this,args)
                }
                ctor.prototype=this
                ctor.prototype.constructor=ctor
                ctor.newInstance=ctor.prototype.newInstance=function(){ return new ctor(arguments)}
                return ctor
            }
            proto.uuid = function () { return $.UUID(this)};
            //ctor, proto, superClass, staticObject
            var nu = $.createClass(konstructor, proto || {}, parent, staticObject || {});
            nu.newInstance=nu.prototype.newInstance=function(){ return new nu(arguments)}

            nu.extend = function (proto) {   return make(this, proto)  };
            nu.fn = nu.prototype;
            return nu
        }

        var e = false, t = /xyz/.test(function () {  xyz }) ? /\b_super\b/ : /.*/;
        var r = function () {
            if (e) {
                return
            }
            initialize.call(this, arguments)
        };
        return make
    }();
    ret.create = ret;
    ret.extend = function () {
        if(typeof(arguments[0])=="string"){return _create.apply(null,[arguments[0],this].concat([].slice.call(arguments,1)))}
        return _create.apply(null,[this].concat([].slice.call(arguments)))
    }
    ;
        ret.lazyInit=function(klass,initPars){
            return function(){
                return new klass(initPars)
            }
        }
    //self.ZModule.register(ret);
    return ret
}();
self.Klass.optimize=function(inst,asctor){
    var ctor,isctor
    if(!inst){
        return null
    }
    if(typeof(inst)=="function"){
        ctor=inst;inst=ctor.newInstance();
        isctor=true
    } else{
        ctor=inst.constructor
    }
    var proto=ctor.prototype,__proto=proto.__proto
    for(var i= 0,l=$.keys(__proto),ln= l.length,k;k=l[i],i<ln;i++){
        if(typeof(__proto[k])=="function" && k!="invoke"){
            inst[k]= __proto[k];
        }
    }
    if(isctor){
        var ctor=function(){}
        ctor.prototype=inst;
        ctor.prototype.constructor=ctor
        return ctor;
    }
    return inst;
}
self.Klass._PROTOINIT = {};
self.Klass.mixins = {config: {__init: function () {
    var e = $.simpleModel();
    e.onchange("*",function (e) {
        this.fire("configchange", e)
    }.bind(this));
    this.properties.addProperty("config",null);
    this.properties.setItem("config",e);
}, setConfig: function (e, t) {
    var n = this.config;
    if (e && $.isPlain(e)) {
        $.each(e, function (t) {
            n[t] = e[t]
        })
    } else {
        n[e] = v
    }
    return this
}, getConfig: function (e) {
    var t = this.config, n = {};
    if (e && $.isArray(e)) {
        $.each(e, function (k) {
            n[k] = e[k]
        })
    } else {
        return t[e]
    }
    return n
}}};;/**
 * Created by Atul on 5/20/2015.
 */


$.model = (function () {

    var proto={

        init: function (id,props,config) {
            if(this.setupModel(id,props,config)===false){return}
            //$.extend(this,{boundRecord: null,__bindCache:null,scopeid:null,zscoped:null,attributes:null})
            this.zscoped={}
            this.__bindCache={}
            var ths = this;
            if(this.boundRecord) {
                ths.bindRecord();
            }
            //if(this.afterInitialize){
            //    this.afterInitialize.apply(this,arguments);
            //}

        },
        initModelInstance: function() {},

        getBoundMap: function () {
            var ret = {}
            $.keys(this._bound).forEach(function (k) {
                ret[k] = this.get(k)
            }, this )
            return ret
        } ,
        bindRecord: function (rec) {

            if (rec && rec.__record__) {
                rec.__bound = 1
                this.boundRecord = rec
            } else {
                rec = null
            }
            if (this.boundRecord && (rec || !this.boundRecord.__bound)) {
                this.boundRecord.__bound = 1
                var record = this.boundRecord

                this.onchange("*", function (rec) {
                    if (rec.name == "id" || !record.hasField(rec.name)) {
                        return
                    }
                    record.set(rec.name, rec.value)
                })
            }
            return this

        },

        watch: function (nm, fn) {
            $.watchProperty(this,nm,fn)
            return this
        },
        unwatch: function () {
            return this
        },
        unbind: function (nm) {
            if (this._bound && this._bound[nm]) {
                this._bound[nm].forEach(function (it) {

                })
            }
            return this
        },
         digest: function (dom, scopeid,scoped ) {
            var force
            if(scoped !=null && typeof(scoped)!="object"){force=scoped;scoped=null;}
            var scope=scoped||this;
            this._complied||(this._complied={});

            scopeid=scopeid||(this.scopeid|| (this.scopeid=$.UUID()));
            var compiled=this._complied[scopeid]
            if(!compiled||force){
                this._complied[scopeid]=compiled=$.scanDom(dom ,scopeid,scope);
                //this._complied[scopeid]=compiled=this.compile(dom,scopeid, scope)
            }
            if(compiled){
                compiled.reset(scope);
            }
            return this
        },
        compile: function (dom,scopeid,scope) {
            scopeid=scopeid||(this.scopeid|| (this.scopeid=$.UUID()));
            this._complied||(this._complied={});
            return this._complied[scopeid]=$.scanDom(dom ,scopeid,scope||this);
        },
        updateProperties: function (rec) {return this.update(rec)},
        getController :function (e) {
            if (!this._controller) {
                $.defineValue(this, "_controller", {value: $.controller.create(this, e), enumerable: true, configurable: true, writable: false})
            }
            return this._controller
        },scanDom:function(el,scope,scopeid){
            scopeid=scopeid||this.scopeid;
            scope=scope || this
            scope._complied||(scope._complied={});
            if(!(scope._complied && scope._complied[scopeid])){
                return scope.compile(el, scopeid||this.scopeid)
            }
            return scope._complied[scopeid].scan(el);

        }


    };
    //var kls = $.baseModel.extend("model",proto)
    var kls = $.simpleModel.extend("model",proto)
    //var kls = Klass("$.model" ,$.baseModel,proto)
    //kls.classMeta._enhanced = true
    return kls

})();

$.model.from = function (props) {
    var nu=new $.model(props)
    return nu
}
$.model.make = function () {
    var nu, props = {}, id=null, proparr, addtnl = {}, args = [].slice.call(arguments), boundscope;
    if (typeof(args[0]) == "string" && !/\s/.test(args[0].trim())) {
        id = args.shift()
    }

    if (args.length > 1) {
        if (args[args.length - 1] && $.isPlain(args[args.length - 1])) {
            addtnl = args.pop()
        }
    }
    if (args[0] && typeof(args[0]) == "object") {
        if (!$.isPlain(args[0])) {
            boundscope = args.shift()
        }
        else {
            proparr = args.shift()
        }
    } else if (args[0] && typeof(args[0]) == "string") {
        if (args.length > 1) {
            proparr = args.slice()
        } else {
            proparr = args[0].split(/\s+/)
        }

    }

    var klassprops = {}
    if ($.isArray(proparr)) {
        props = proparr.reduce(function (m, k) {
            if (typeof(k) == "string") {
                m[k] = null;
            }
            else if ($.isPlain(k)) {
                if (k.name) {
                    m[k.name] = k;
                }
                else if (Object.keys(k).length == 1) {
                    var k1 = Object.keys(k)[0];
                    m[k1] = k[k1];
                }
            }
            return m
        }, {});
    } else if ($.isPlain(proparr)) {
        props = proparr
    }
    klassprops=props;
    if ($.isPlain(addtnl)) {
       // $.extend(klassprops, addtnl)
    }
    var statics=klassprops.statics
    delete klassprops.statics
    //klassprops.properties = props

    if (addtnl && addtnl.init) {
        addtnl.afterInitialize = addtnl.init
        delete addtnl.init
    }
    var baseModel=null
    if(klassprops.baseModel && klassprops.baseModel.newInstance){
        baseModel=klassprops.baseModel
        delete klassprops.baseModel;
        nu =  new baseModel(id,klassprops)

    } else{
        nu =  $.model.newInstance(id,klassprops)
    }
    //klassprops.init = "super";
     if($.isPlain(addtnl)){
        $.extend(nu,addtnl)
    }

    var nuctor =  nu.asCtor(!!baseModel)
    if (boundscope) {
        nu.boundscope = boundscope
    }
    /* nu.properties.onchange("boundRecord",function(){
     nu.bindRecord();
     },true)*/
    return nuctor
};

$.model.Collection = Klass("$.model.Collection", (function () {
        var proto = {
            items: null, itemKlass: null, name: null, nameProp: "", nameMap: null,
            init: function () {
                this.setup()
            },
            setup: function () {
                this.nameMap={}
                if (this.itemKlass) {
                    this.items = List.create(this.items || []).chainable(this.itemKlass)
                } else {
                    this.items = List.create(this.items || []);
                }
                if (this.itemAlias) {
                    var al = String(this.itemAlias);
                    al = al.charAt(0).toUpperCase() + al.substr(1)
                    this["update" + al + "s"] = this.updateItems
                    this["find" + al] = this.find
                }
            },
            getNames: function () {
                return this.items.collect(this.nameProp || "name")
            },
            updateItems: function (map) {
                $.each(map, function (v, k) {
                    var f
                    if (f = this.find(k)) {
                        f.updateProperties(v);
                    }
                }, this)
            },
            findAll: function (k) {
                return this.items.findAll(k)
            },

            find: function (k, extndd) {
                if (typeof(k) == "string") {
                    var r = this.nameMap[this.normalizeName(k)]
                    if (!r && extndd && !/id$/.test(k)) {
                        r = this.nameMap[this.normalizeName(k + "_id")]
                    }
                    if (r) {
                        return r;
                    }
                }
                var col = (typeof(k) == "number" && !isNaN(k)) ? this.items.findById(k) : this.items.find(k)
                if (!col) {

                    console.log(  k)
                }
                return col
            },
            prep: function (v) {
                return v
            },
            at:function(i){
                if(typeof(i)=="number" && !isNaN(i)){
                    return this.items[i]
                }
            },
            size: function () {return this.items.length},
            add: function () {
                if (arguments.length == 1 && Array.isArray(arguments[0])) {
                    for (var i = 0, l = arguments[0], ln = l.length; i < ln; i++) {
                        this.add(l[i])
                    }
                    return this
                }
                var v = this.prep.apply(this, arguments)
                if (v) {
                    var v1 = v;
                    var kls = this.itemKlass;
                    if (kls && !(v instanceof kls)) {
                        v1 = kls.newInstance?kls.newInstance(v):new kls(v)
                    }
                    this.items.add(v1)
                    if (this.nameProp){
                        if(typeof(this.nameProp)=="function"){
                            nameProp=this.nameProp(v1,this)
                        } else{
                            nameProp=this.nameProp
                        }

                        if ( nameProp&&v1[ nameProp]) {
                            this.nameMap[this.normalizeName(v1[ nameProp])] = v1
                        }
                    }
                }
                return this
            },
            remove: function (i) {
                var v = this.find(i)
                if (v) {
                    this.items.remove(v)
                }
                return this
            },
            eachItem: function (fn, ctx) {
                this.items.each(fn, ctx || this);
                return this

            },
            collect: function (fn, ctx) {
                return this.items.collect(fn, ctx || this)
            },
            normalizeName: function (k) {
                return k
            }
        }

        return proto;
    })()
);;/**
 * Created by Atul on 6/24/2015.
 */
$.state = (function () {
	/*

	 */
	var cap = function (s) {
		return String(s).toLowerCase().replace(/^\w/, function (s) {
			return s.toUpperCase()
		})
	}
	var flatten = function flatten() {
		var ret = []
		for (var i = 0, l = arguments , ln = l.length, a; a = l[i], i < ln; i++) {
			if (!a || typeof(a) != "object") {
				ret.push(a);
				continue
			}
			if ($.isArray(a) || (a.length && a.length >= 0) || (a.toString && ({}).toString.call(a).indexOf("Arguments") > 0)) {
				[].push.apply(ret, flatten.apply(null, $.makeArray(a)))
			} else {
				ret.push(a)
			}
		}
		return ret
	}
	function transitionklass() {
		return Klass.simple( {holder:null,worker:null,memo:null,withObserver:true,
			name: null,from:null,to:null,isCompleted:null,isActive:null,statePromise:null,
			init:function(holder,from,to,worker){
				this.holder=holder;
				this.from=from;
				this.to=to;
				this.worker=worker;
			},
			start:function(){
				this.memo=this.memo||{}
				this.isActive=true
				this.statePromise=Promise.deferred()
				if(this.worker){
					this.worker.call(this,this.end.bind(this))
				}
				return this.statePromise;
			},
			end:function(data){
				this.statePromise.resolve(data)

			},
			then:function(f1,f2){
				this.statePromise && this.statePromise.then(f1,f2)
			},
			cancel:function(){
				this.statePromise && this.statePromise.reject();

			}
		})

	}
	function holdertemplateklass() {
		return Klass.simple({
			STATIC: {all: [], __parent: null},
			name: null, value: null, state: null, defaultEv: "change", index: null, comparekey: null,memo:null,withObserver:true,
			init: function (name, par,memo) {

				this.__parent = par;this.memo=memo||{}
				this.cancelEventOnFalse = true
				this.name = this.value = String(name)//.replace(/\W/g,"").toUpperCase()
				this.comparekey = String(name).replace(/\W/g, "").toUpperCase()
				this.index = this.__parent._list.length
				if(!this.fire){
					$.emitter.augment(this)
					delete this.observer;
					this.observer=this.emitter;
				}
			},
			onpropertychange: function (nm0, fn, opts) {
				var nm = nm0
				if (typeof(nm0) == "function") {
					opts = fn;
					fn = nm0;
					nm = this.defaultproperty
				}
				this.observer.onpropertychange(nm, fn, opts);
				//return this.on("propertychange",function(rec){if(rec&&(rec.name==nm||nm=="*")){fn.call(this,rec)}})
			},
			addRule: function (rule, memo) {
				if (typeof(rule) == "function") {
					this.on("beforechange", function (nustate) {
						if (!rule.call(this, nustate, memo)) {
							return false
						}
					})
				}
			},
			toJson: function () {
				var r = {};
				r[this.value] = this.state;
				return r;
			},
			toString: function () {
				return this.value + "=" + this.state
			},
			equals: function (k) {
				return !!(this === k || this.comparekey === String(k).replace(/\W/g, "").toUpperCase());
			},
			valueOf: function () {
				return !!this.state
			},

			when: function (fn) {
				var nu = new Promise(function (res) {
					this.observer.on("change", function (fl) {
						res(fl)
					})
				}.bind(this));
				return nu
			},
			onactive: function (fn) {
				this.observer.on("active", fn);
				return this
			},
			oninactive: function (fn) {
				this.observer.on("inactive", fn);
				return this
			},
			deActivate: function () {
				return this.set(0)
			},
			activate: function () {
				return this.set(1)
			},
			isActive: function () {
				return !!this.state
			},
			get: function () {
				return this.state
			},
			set: function (activeflag) {
				if (activeflag == null) {
					activeflag = !this.state
				}
				if (activeflag && this.__parent) {
					this.__parent._list.forEach(function (it) {
						if (it !== this && it.state) {
							it.set(false)
						}
					}, this)
				}
				if(!this.fire){
					$.emitter.augment(this)
					delete this.observer;
					this.observer=this.emitter;
				}
				if (this.__parent.validateStateChange(this, activeflag) === false || this.fire("beforechange", !!activeflag) === false) {
					return
				}
				this.state = !!activeflag
				this.observer.fire("change", !!activeflag, this)
				this.observer.fire(activeflag ? "active" : "inactive", this)
				this.observer.fire("afterchange", !!activeflag, this);
				activeflag && this.__parent._updateState(this);
				return this

			}
		});
	}
	var txclass=null;
	var State = Klass.create({
		_list: null, _current: null, _rules: null,_transitions: null, _enforceSequence: null, _routes: null, _holderTemplate: null,_intransition:null,
		init: function () {
			this._transitions={};
			this._list = [];
			this._rules = {};
			this._routes = {}
			var a = arguments;
			this._holderTemplate = holdertemplateklass()
			if (a.length == 1 && typeof(a[0]) == "string") {
				a = String(a[0]).split(/\s+/)
			}
			var init = this.register("__INIT__")
			this.registerAll.apply(this, a)
			init.isinit = true
			this._current = init
		},
		getStateHolder: function (st) {
			return this._list.find(function (it) {
				return it.equals(st)
			})
		},
		addTransition: function (fromstate, tostate, fn,memo) {
			var st = this.getStateHolder(fromstate),end = this.getStateHolder(tostate)

			if (st && typeof(fn) == "function") {
				var _self = this;
				if(!txclass){txclass=transitionklass()}
				this._transitions[st.comparekey] || (this._transitions[st.comparekey] = []);

				this._transitions[st.comparekey].push(new txclass(this,st,end,fn));
			}
			return this
		},
		endTransition:function(memo){
			if(!this.isInTransition()){return false}
			this._intransition.resolve(memo);
			this._intransition=null; return this
		},
		startTransition:function(){
			if(this._intransition()){return this._intransition}
			return this._intransition=Promise.deferred()
		},
		isInTransition:function(){return !!this._intransition},
		addRule: function (forstate, rule, memo) {
			var st = this.getStateHolder(forstate)
			if (st && typeof(rule) == "function") {
				var fn = rule, _self = this;
				this._rules[st.comparekey] || (this._rules[st.comparekey] = []);
				this._rules[st.comparekey].push([fn, memo]);
			}
			return this
		},
		validateStateChange: function (st, nustate) {
			var ret = true, nextstate = this.getStateHolder(st), _curr = this.getState(),
				idx = this.getState() ? this.getState().index : -1;
			if (nextstate.equals(_curr) && nustate !== _curr.state) {
				return true;
			}
			if (nextstate && nextstate.isinit) {
				return false
			}
			if (this._enforceSequence && nustate && nextstate && nextstate.index != idx + 1) {
				ret = false
			}

			if (ret && nustate && this._rules[nextstate.comparekey] && this._rules[nextstate.comparekey].length) {
				var _self = this;
				if (this._rules[nextstate.comparekey].some(function (r) {
						return !r[0].call(_self, nextstate, _curr,r[1])
					})) {
					ret = false
				}
			}
			if (ret && nustate && _curr && this._routes[_curr.comparekey] && this._routes[_curr.comparekey] && this._routes[_curr.comparekey].indexOf(nextstate.comparekey) == -1) {
				ret = false

			}

			if (!ret) {
				throw "invalid state change from " + _curr.name + " to " + nextstate.name
			}

			return ret
		},
		isState: function (state) {
			return this._current && this._current.equals(state);
		},
		getState: function () {
			return this._current;
		},
		forward: function () {if(this.isInTransition()){return}
			if(!this._current){return this.reset()}
			return this.setState(this._list[this._current.index+1]);
		},
		finish: function () {
			return this.setState(this._list[this._list.length-1]);
		},
		reset: function () {
			return this.setState(this._list[0]);
		},
		to: function (state) {
			return this.setState(state);
		},
		onpropertychange: function (fn) {
			if(fn===null){return this.off("change");}
			this.on("change", fn);
		},
		_updateState: function (state) {
			var st = this.getStateHolder(state)
			if (st && st.isActive()) {
				this._current = st;
				this.fire("change", {name: st.name, value: st.state, newValue: st.state}, st)
			}
			return this
		},
		_setState: function (st) {
			if(!st){return}
			st.set()
			if (st.isActive()) {
				this._updateState(st)
			}
		},
		setState: function (state) {
			if(this.isInTransition()){return}
			var st = this.getStateHolder(state)
			if(!st){return}
			var pr,curr=this._current
			if (curr && curr.isActive()) {

				if(this._transitions && this._transitions[curr.comparekey] && this._transitions[curr.comparekey].length){
					pr=this._transitions[curr.comparekey].filter(function(it){return it && it.to && it.to.comparekey==st.comparekey}).map(function(it){return it.start()})
				}

			}
			if(pr && pr.length){
				Promise.all(pr).then(
					this._setState.bind(this,st)
				)
			} else{
				this._setState(st)
			}

			return this
		},
		hasState: function (k) {
			return !!this.getStateHolder(k)
		},
		registerAll: function () {
			var stateList = flatten.apply(null, arguments)
			if (stateList && stateList.length) {
				var l = stateList.slice()
				while (l.length)this.register(l.shift());
			}
			return this;
		},
		enforceSequence: function (flg) {
			this._enforceSequence = !(flg === false);
			return this;
		},
		register: function (state,memo) {
			var nu = this.getStateHolder(state), ctor = this._holderTemplate
			if (!nu) {
				nu = new ctor(state, this,memo)
				this.properties.set(nu.value, nu)
				if (nu.value != "__INIT__") {
					this["on" + cap(nu.value)] = function (state, fn) {
						state.onactive(fn);
						return this
					}.bind(this, nu)
				}
				this._list.push(nu)

			}
			return nu;
		}
	});
	return State;
})();;
(function(context) {
    function TypeInfo(a, b, c, d) {
        if (!(this instanceof TypeInfo)) return TypeInfo.get(arguments[0]);
        if ("function" != typeof a && (a = Object), this.ctor = a.name || a.toString().replace(/function\s*([^\(]*)\(.*/, "$1").trim(), this.ctorfn = a, this.type = "", d = d || {}, this.type = this.id = this.ctor.toLowerCase(), this.defaultValue = b, "function" == typeof c && (this.coerce = c), d)
            for (var e, f = 0, g = Object.keys(d), h = g.length; e = g[f], h > f; f++) "function" == typeof d[e] && (this[e] = d[e])
    }

    function _extendType(a, b) {
        var c = {};
        return Object.keys(b).forEach(function(a) {
            c[a] = {
                value: b[a],
                enumerable: !0
            }
        }), Object.create(a, c)
    }
    var OProto = Object.prototype,
        ArrProto = Array.prototype,
        TRUE = function() {
            return !0
        }, FALSE = function() {
            return !1
        }, ARRAYLIKES = [],
        $defineProperty = function(a, b, c) {
            return "undefined" != typeof $ && $.defineProperty ? $.defineProperty(a, b, c) : Object.defineProperty(a, b, c)
        } ;


      TypeInfo.prototype = {
        prep: function(a) {
            return a
        },

        validate: function(a) {
            return null != a
        },
        format: function(a) {
            return "object" == typeof a ? a : String(a)
        },
        coerce: function(a) {
            return a
        },
        createInstance: function(a) {
            var b, c = this.ctorfn,
                d = [].slice.call(arguments),
                e = d.length;
            return c && (b = e ? 1 == e ? new c(d[0]) : 2 == e ? new c(d[0], d[1]) : 3 == e ? new c(d[0], d[1], d[2]) : new c(a) : new c), b
        },
        random: function() {
            if (Util.random.setup(), "function" == typeof Util.random[this.type]) {
                var a = Util.random[this.type];
                return proto = Object.getPrototypeOf(this), delete proto.random, delete this.random, proto.random = a, a.apply(null, arguments)
            }
            return null
        },
        isType: function(a) {
            return TypeInfo.getInfoFromValue(a).id === this.id
        },
        isPrimitive: function() {
            return~ ["string", "number", "boolean"].indexOf(this.type)
        },
        compareTo: function(a, b) {
            var c = this.coerce(a),
                d = this.coerce(b);
            return c  == d ? 0 : c > d ? 1 : -1
        },
        equals: function(a, b) {
            return !this.compareTo(a, b)
        },
        minus: function(a, b) {
            return this.coerce(a) - this.coerce(b)
        },
        plus: function(a, b) {
            return this.coerce(a) + this.coerce(b)
        },
        size: function() {
            return 0
        },
        augment: function(a) {
            return this.coerce(a)
        },
        isInfo: !0
    }
    TypeInfo.isPlain = function(a) {
        return null == a ? !1 : Object.getPrototypeOf(Object(a)) === OProto
    }
    TypeInfo.newInstance = function() {
        var a = [].slice.call(arguments, 1),
            b = function() {}, c = this.ctorfn.prototype;
        b.prototype = c;
        var d = new b,
            a = [].slice.call(arguments, 1);
        return a.unshift(a[0]), c.constructor.apply(d, a)
    }
    TypeInfo.isEmpty = function(a) {
        return null == a ? !0 : !a || (a.isEmpty ? a.isEmpty() : a && "object" == typeof a && ("length" in a && 0 === a.length || a.size && 0 === a.size() || 0 === Object.keys(Object(a)).length))
    }
    TypeInfo.isPrimitive = function(a) {
        return !(Object(a) === a)
    }
    TypeInfo.replaceDash = null

    TypeInfo.asDate = function(a) {
        return TypeInfo.isDate(a)
    }
    TypeInfo.__mindate = +new Date(1900, 1, 1)
    TypeInfo.isDate = function(a) {
        return a?$.date.from(a):null
    }
    TypeInfo.asDouble = function(a, b) {
        return b && 3 == arguments.length && arguments[2] && $.isArray(arguments[2]) && (b = 0), TypeInfo.isNumber(a) ? parseFloat(a) : b || 0
    }
    TypeInfo.asNumber = function(a, b) {
        return b && 3 == arguments.length && arguments[2] && $.isArray(arguments[2]) && (b = 0), TypeInfo.isNumber(a) ? Number(a) : b || 0
    }
    TypeInfo.asInt = function(a) {
        return~~ a
    }
    TypeInfo.isNumber = function(a, b, c) {
        return "number" == typeof a ? !0 : c ? !1 : b && "string" != typeof a ? !1 : "0" == a || ~~a || a && a.valueOf && ~~a.valueOf() ? !0 : !1
    }
    TypeInfo.arrayLike = function(a) {
        return $.isArray(a) || a && "object" == typeof a && isFinite(a.length) && a.length >= 0 && a.length === Math.floor(a.length) && a.length < 4294967296
    }
    TypeInfo.asType = function(a, b, c) {
        if (c && null == a) return null;
        var d = TypeInfo.getInfo(b);
        return d.coerce ? d.coerce(a, c) : null
    }

    var _datetype = [Date, null,
        function(a) {
            return $.date.asDate(a)
        }, {
            format: function(a, b) {
                return $.date.format(a, b=="double"||b=="number"?"":b )
            },
            compareTo: function(a, b) {
                var c = +this.coerce(a) - +this.coerce(b);
                return c ? c > 0 ? 1 : -1 : 0
            }

        }
    ];
    TypeInfo.nill = function() {
        return null
    }
    TypeInfo.typeAbbr = {
        num: "number",
        str: "string",
        bool: "boolean"
    }
    TypeInfo.getMap = function() {
        var _get = function(a, b, c, d) {
                var e = new TypeInfo(a, b, c, d);
                return e.primitive = ["number", "float", "string", "boolean", "numeric"].indexOf(e.type) >= 0, e[e.type] = !0, e
            }, datepartMap = null,
            _typeMap = {
                number: _get(Number, 0, function(a) {
	                if("number" == typeof a){return a}
	                return ("string" == typeof a && !isNaN(a)) ? Number(a):this.defaultValue
                }, {
                    _defaultFormat: "###,###.##",
                    format: function(a, b) {
                        var c = this.coerce(a);
                        return b = b || "###,###.##", b && "#" != b ? $.numberFormat(c, b) : String(c)
                    },
                    compareTo: function(a, b) {
                        var c = this.coerce(a) - this.coerce(b);
                        return c ? c > 0 ? 1 : -1 : 0
                    }
                }),
                "float": _get(1.1.constructor, 0, function(a) {
	                if("number" == typeof a){return a}
                    return ("string" == typeof a && !isNaN(a)) ? Number(a):this.defaultValue
                }, {
                    format: function(a, b) {
                        return b = b || this._defaultFormat || "###,###.00", $.numberFormat(a, b)
                    },
                     compareTo: function(a, b) {
                        var c = this.coerce(a) - this.coerce(b);
                        return c ? c > 0 ? 1 : -1 : 0
                    }
                }),

                date: _get.apply(null, _datetype),
                time: _get(Date, null, function(a) {
                    return $.date.asTime(a)
                }, {
                    format: function(a, b) {
                        var c = TypeInfo.TIME.coerce(a);
                        return c ? c.format(b || "hh:nn tt") : ""
                    }
                }),
                string: _get(String, "", function(a) {
                    return String(a)
                }, {
                    plus: function(a, b) {
                        return this.coerce(a).concat(String(b))
                    },
                    minus: function(a, b) {
                        return this.coerce(a).replace(String(b), "")
                    }
                }),
                array: _get(Array, null, function(a) {
                    return $.makeArray(a)
                }),
                "boolean": _get(Boolean, null, function(a) {
                    return !(null == a || 0 == +a || /false|no|0/i.test(String(a)))
                }, {
                    compareTo: function(a) {
                        var b = +this.coerce(a) === +a.value;
                        return b ? b > 0 ? 1 : -1 : 0
                    }
                }),
                regexp: _get(RegExp, null, function(a, b) {
                    return a instanceof RegExp ? a : "string" == typeof a ? new RegExp(String(a), b || "") : null
                }),
                plain: _get(Object, null, function(a) {
                    return a
                }),
                object: _get(Object, null, function(a) {
                    return a
                }),
                nill: _get(TypeInfo.nill, null, TypeInfo.nill, {
                    compareTo: function() {
                        return -1
                    },
                    minus: function(a, b) {
                        return a || b
                    },
                    plus: function(a, b) {
                        return a || b
                    }
                }),
                element: _get(function(a) {
                    return ($d(a) || {}).el
                }, $d)
            };


        _typeMap["float"].isFloat = function() {
            return !0
        }
        _typeMap["float"]["float"] = _typeMap["float"].numeric = !0
        _typeMap.numeric = _typeMap["float"]
        _typeMap.money = _typeMap["float"]
        _typeMap.double = _typeMap["float"]
        _typeMap.timestamp = _typeMap.datetime = _get.apply(null, _datetype)
        _typeMap.timestamp.coerce = function(a) {
            return $.date.from(a)
        }
        _typeMap.timestamp._defaultFormat = "datetime"
        _typeMap.timestamp.format = function(a, b) {
            var c = this.coerce(a);
            return c ? c.format(b || "hh:nn tt") : ""
        }
        _typeMap.time.format = function(a, b) {
            var c = this.coerce(a);
            return c ? c.format(b || "hh:nn tt") : ""
        }
        _typeMap.email = _get(function(a) {
            return String(a)
        }, "", function(a) {
            return String(a)
        }, {
            validate: function(a) {
                return this.Re.test(String(a))
            }
        })
        _typeMap.email.Re = /^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$/, _typeMap.telephone = _get(function(a) {
            return String(a)
        }, "", function(a) {
            return String(a)
        }, {
            validate: function(a) {
                return this.Re.test(String(a))
            }
        })
        _typeMap.telephone.Re = /^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$/;
        var toeval = [];
        _typeMap.promise = _get(Promise, null, function(a) {
            return null == a ? a : Promise.cast(a)
        })
            _typeMap.currency = _extendType(_typeMap.money, {
            _defaultFormat: "$ ###,###.00"
        })
        TypeInfo.typeMap = _typeMap, Object.keys(_typeMap).forEach(function(a) {
            "string" == typeof a && 0 != String(a).indexOf("_") && (TypeInfo[a.toUpperCase()] = _typeMap[a])
        })
        Object.keys(_typeMap).forEach(function(a) {
            var b = a.charAt(0).toUpperCase() + a.substr(1);
            TypeInfo.prototype["is" + b] || toeval.push("TypeInfo.prototype.is" + b + "=(function is" + b + "(){var nm='" + a + "';return this.type?(this.type==nm || this.type.name==nm || this.id==nm):false})")
            TypeInfo.prototype["as" + b] || toeval.push("TypeInfo.prototype.as" + b + "=(function as" + b + "(v,nodefifnull){return TypeInfo.asType(v,this.type,nodefifnull)})")
	        TypeInfo["is" + b] || toeval.push("TypeInfo.is" + b + "=(function is" + b + "(v){return (v==null)?false: v.constructor&&v.constructor.name==='" + b + "'; })")
            TypeInfo["as" + b] || toeval.push("TypeInfo.as" + b + "=(function as" + b + "(v){return TypeInfo.asType(v,'" + a + "')})")
         });
        eval(toeval.join(";\n"))
	    _typeMap.plain.plain = !0
	    _typeMap.plain.object = !0
	    _typeMap.plain.primitive = !1;
        var any = new TypeInfo(Object, null, function(a) {
            return a
        });
        return any.any = !0, any.isDefault = !0, Object.freeze(any), TypeInfo.defaultType = _typeMap.any = any, (TypeInfo.getMap = function() {
            return _typeMap
        })()
    }
    TypeInfo.fromType = function(a) {
        return "string" == typeof a ? TypeInfo.getMap()[TypeInfo.typeAbbr[a] || a] : TypeInfo.inspect(a)
    }
    TypeInfo.inspect = TypeInfo.of = TypeInfo.get = TypeInfo.getInfo = function(a, b, c) {
        if (a && a.nodeType) return TypeInfo.getMap().element;
        var d, e = a,
            f = TypeInfo.getMap();
        if (null == a && null != b && ("string" == typeof b || "function" == typeof b) && (a = b, b = null), null == a) return TypeInfo.getMap().string;
        if (a && "object" == typeof a && a instanceof TypeInfo) return a;
        if ("string" != typeof a)
            if ("function" == typeof a) e = a;
            else if (TypeInfo.isPlain(a)) {
                if (f.plain) return f.plain
            } else a.constructor && (e = a.constructor);
        else {
            if (d = a.toLowerCase(), f && d in f) return f[d];
            if (e = window[a] || window[a.charAt(0).toUpperCase() + a.substr(1)], !e && /html|element|document/i.test(a) && (e = Node), e) {
                var g;
                if (ZModule.get(a, function(a) {
                        g = a
                    }), g)
                    if ("function" == typeof g) {
                        var h = new TypeInfo(g, null);
                        h.klassCtor = g.isKlass, h.fn = !0, h.ctor = g, TypeInfo.getMap()[a] = h, h.isType = function(a) {
                            var b = this.ctor;
                            return a && "object" == typeof a && a instanceof b
                        }
                    } else {
                        var h = new TypeInfo(g.constructor, null);
                        h.module = g, h.fn = !0, h.ctor = g, TypeInfo.getMap()[a] = h, h.isType = function(a) {
                            var b = this.ctor;
                            return a && "object" == typeof a && a instanceof b
                        }
                    }
            } else if (isNaN(a) ? TypeInfo.isDate(a) && (a = "date") : a = "number", f && d in f) return f[d]
        } if ("function" != typeof e && (e = a.constructor), !e) return TypeInfo.defaultType;
        var i = e.name || e.toString().replace(/function\s*([^\(]*)\(.*/, "$1").trim();
        return d = i.toLowerCase(), !f[d] && c && (f[d] = new TypeInfo(e, b, c)), f[d] || TypeInfo.defaultType
    }

    TypeInfo.getInfoFromValue = function(a) {
        if (null == a || a.nill) return TypeInfo.getMap().nill;
        var b, c = typeof a;
        return "string" == c ? isNaN(a) ? TypeInfo.isDate(a) && (c = "date") : c = "number" : "object" == c && (c = a instanceof Date ? "date" : a.constructor && a.constructor.name ? a.constructor.name : {}.toString.call(a).substr(8).slice(0, -1).trim()), b || TypeInfo.getInfo(a)
    };


    var Active = context,
        entCache = {},_allEntities=null,_allEntitiesPr=null,entCachePromises={};
    Active.defineLocalEntity=function(name,cols,optns,promise){
        var m=entCache[name]||new Active.Meta(name,cols,optns?optns.dataoptions:{});
        if(!entCachePromises[name]){
            entCachePromises[name]=Promise.resolve(entCache[name]=m)
        }

        if(typeof(optns)=="function"){optns={callback:optns}}
        if(optns && optns.callback){
            entCachePromises[name].then(optns.callback)
        }
        return m
    }
    Active._processMeta=function(data){

        Object.keys(data.entities).forEach(
            function (k) {
                entCache[k] = {rawmap: data.entities[k],meta:null}
            }
        );
        Object.keys(entCachePromises).forEach(
            function (name) {
                var nu=Active.getEntity(name)
                nu && entCachePromises[name].resolve(nu)


            }
        );
        if (data.metaversion && typeof(localStorage) != "undefined") {
            localStorage.setItem("app__meta", JSON.stringify(data))
        }
        _allEntities = data;
        _allEntitiesPr.resolve(_allEntities);
    }
    Active.loadEntityMeta=function(callback){
        if(!_allEntitiesPr) {
            _allEntitiesPr = Promise.deferred()
        }
        if(typeof(callback)=="function"){
            _allEntitiesPr.then(callback)
        }
        if(_allEntities){
            return
        }

        var saveddata=null
        if(self.__appinit && self.__appinit.metaversion &&  typeof(localStorage)!="undefined" ){
            var  saved=localStorage.getItem("app__meta")
            if(saved){
                var saveddata=JSON.parse(saved)
                if(saveddata && saveddata.metaversion === self.__appinit.metaversion){
                    Active._processMeta(saveddata)
                } else {saveddata=null}
            }
        }
        if(!saveddata){
            app.remoteDirective("allmeta", {}).then(function (a) {
                try {
                    var data = typeof(a) == "string" ? eval(a) : a
                    if (data && Object.keys(data).length) {

                        if (!data.entities) {
                            alert("No entity meta found")
                            return
                        }
                        Active._processMeta(data)
                    }
                } catch (i) {
                    _allEntitiesPr.reject({error: i.toLocaleString(), url: url})
                }
            });
        }
    }
    Active.getEntity=function(name,nocache){
        if(!_allEntitiesPr) {
            Active.loadEntityMeta()
        }
        if (entCache[name] && entCache[name].rawmap) {
            if(nocache===true && entCache[name].meta){
                return entCache[name].meta
            }
            var nu=new Active.Meta(name, entCache[name].rawmap, entCache[name].dataoptions || {});
            if(nocache!==true){
                entCache[name].meta=nu
            }
            return nu
        }
    }
    Active.defineEntity=function(name,cols,optns0 ){
        var optns=optns0||{}
         if(typeof(cols)=="function"&&optns0==null){optns=cols;cols=null}
        if(typeof(optns)=="function"){optns={callback:optns}}

        var processing=entCachePromises[name]
        if(!processing){
            entCachePromises[name]=Promise.deferred()
        }
        if(!_allEntitiesPr) {
            Active.loadEntityMeta();
        }
        var nu=Active.getEntity(name)
         if (nu) {
            entCachePromises[name].resolve(nu)
        }
        if(typeof(optns.callback)=="function") {
            if(nu){
                optns.callback(nu)
            } else {
                entCachePromises[name].then(optns.callback)
            }
        }
        return entCachePromises[name];
       /*




                var servicePath = optns && optns.servicePath ? optns.servicePath : (self.app || {}).servicePath;
                var url = servicePath + "?cmd=allmeta";
                $.xhr.jsonp(url, {}, function (b) {
                    try {
                        var data
                        if (b) {
                            if (typeof(b) == "string") {
                                data = eval(b)
                            } else {
                                data = b;
                            }
                            if (data && Object.keys(data).length) {
                                _allEntities = data;
                                _allEntitiesPr.resolve(_allEntities);
                            }
                        }
                    } catch (i) {
                        e({
                            error: i.toLocaleString(),
                            url: url
                        })
                    }
                })
            }
            _allEntitiesPr.then(function(name,cols,optns0,all){
                Active.defineEntity(name,cols,optns0,p);
            }.bind(this,name,cols,optns0))
            return p
        }

        if(optns.callback){
            entCachePromises[name].then(optns.callback)
        }


             if(cols&&(Array.isArray(cols)|| $.isPlain(cols))) {
                 Active.defineLocalEntity(name,cols,optns)
                 processing=true;
            }
        if(!processing) {

            var servicePath = (optns && optns.servicePath) ? optns.servicePath : (self.app || {}).servicePath
            if (servicePath) {
                var url = servicePath + "?entity=" + name + "&info=1"
                $.xhr.jsonp(url, {}, function (name,d) {
                    try {
                        var m
                        var p = entCachePromises[name]
                        var r = (d && typeof(d) == "string") ? JSON.parse(d) : d;
                        if (r && typeof(r) == "object") {
                            if (r.error) {
                                p.reject(r.error)
                            }
                            else {
                                m = new Active.Meta(name, r, optns ? optns.dataoptions : {});
                                entCache[name] = m

                                p.resolve(m)
                            }
                        }

                        else {
                            p.reject(r)
                        }
                    } catch (e) {
                        p.reject({error: e.toLocaleString(), url: url})
                    }
                    ;
                }.bind(this,name));
            }
        }
         return   entCachePromises[name];
        */
    }
	//all names are lowercase
    Active.Record = $.baseModel.extend({
        init:function(data){
            this.setupRecord()
        } ,
        setupRecord:function(){
            this.__record__= Object.create(null);
            if(!this.__config){
                var config={keys:[],aliases:{} ,entitymeta:null}
                Object.defineProperty(this, "__config", {value:config,writable:false,configurable:true,enumerable:false})
            }
            if(!this.__config.descriptors){
                Object.defineProperty(config, "descriptors", {value:Object.create(null),writable:false,configurable:true,enumerable:false})
            }
        },
        getSaved:function(k){
            var nm
            if(!this.__config || !this.__record__||!(nm= this.__config.aliases[k])){return}
            return this.__record__[nm]
        },
        _get:function(k){
            var C=this.__config,nm,res
            if(k=="rownum"||k=="idx"){return this.index||0}
            if(!C || !this.__record__||!(nm= C.aliases[k])){return}
            var M=C.descriptors[nm]
            if(M && M.fn ){
                var fn=M.fn;
                res= this.__record__[nm]=fn(this)
            } else{res= this.__record__[nm]}
            if(res==null){return ""}
            return res
        },
        getDisplayValue:function(nm){
            var res=this._get(nm)
            if(!res){return ""}
            var M=this.__config.descriptors[nm]
            if(M && M.col){
                 var v= M.col.getDisplayValue?M.col.getDisplayValue(res):res
                if(v!=nm){res=v}
            }
            return res;
        },
        get:function(k,raw ){
            var C=this.__config,nm,res
            if(k=="rownum"||k=="idx"){return this.index||0}
            if(!C || !this.__record__||!(nm= C.aliases[k])){return}
            var M=C.descriptors[nm]
            if(M && M.fn ){
                var fn=M.fn;
                res= this.__record__[nm]=fn(this)
            } else{res= this.__record__[nm]}
            var mode=this.__templateMode
            if( mode && (raw!==true)){//
                var col= M.col
                 if(col){
                    res=col.getDisplayValue?col.getDisplayValue(res):res
                     var rndr=(typeof(mode.renderer)=="string" && typeof(col[mode.renderer])=="function")?col[mode.renderer]:col.cellRenderer;
                    res=rndr?rndr.call(col, res==null?" ": res , res):res;
                }
                if(" NaN undefined null [object Object] 0 ".indexOf(String(" " + res + " ")) >= 0){res=""}
            }
            return res
        },
        keys:function(){
	        return this.__config?this.__config.keys.slice():[]
        },
        _set:function(nm,v,curr,M,noev){
            if(!nm){return curr}
            var tosave=M&&M.reader?M.reader(v):v
            if(curr===tosave){
                return curr
            }
            this.__record__[nm]=tosave
            this.__mod||(this.__mod=[]);
            this.__mod.indexOf(nm)==-1 && this.__mod.push(nm)
            !(noev===true) &&  this.firePropertyChangeEv( {name:nm,value:tosave,newValue:tosave,oldValue:curr,object:this,type:"update"})
            return tosave
        },
        getConfig:function(){return this.__config||(this.__config={});},
        set:function(k,v,recalc,noev){
            var C=this.__config
            if(!this.__record__ || !C || !C.aliases[k]){return }
            var nm=C.aliases[k],M= C.descriptors,curr=this.__record__[nm] ;
            if(recalc!==true && this._set(nm,v,curr,M[nm]||{},noev )===curr){
                return
            }
            if(C.depends && C.depends[nm]){
                for(var i=0,l=C.depends[nm],ln=l.length,nm1;nm1=l[i],i<ln;i++) {
                    if(nm1  && M[nm1] && nm1 !==nm && M[nm1].isExpr){
                        M[nm1].calc(this )
                     }
                }
            }
            return curr
        },
        addProperty:function(nm,descript,meta){
            if(!descript ||!this.__config ){return}
            var D=this.makeDescriptor(nm,descript)
            if(!(D && D.descriptor)){return}
            var valdescriptor=D.descriptor
            var a=meta||valdescriptor.meta||(this.__config.entitymeta?this.__config.entitymeta.findField(nm):null)||{name:nm}
            var config=this.__config,holder=this
            delete valdescriptor.meta
            var getter=valdescriptor.getter||"return this.__record__ && this.get('!')",
	            setter=valdescriptor.setter||"return this.__record__ && this.set('!',v)"
            var nm= String(a.name||"").toLowerCase(),
                descriptor={
	                get:Function(getter.replace('!',nm)),
	                set:Function("v",setter.replace('!',nm)),
	                enumerable:true,configurable:false
                }
            config.keys.indexOf(a.name)==-1 && config.keys.push(a.name)
            config.aliases[nm]=config.aliases[a.name]=nm
            var T= a.typeInfo||{}
            var rdr=null
            if(!T.primitive || !T.date){
                rdr=T.date? $.date: T.coerce
            }
            config.descriptors[nm]= $.extend(valdescriptor,{col:a,defaultValue: a.defaultValue,
                typeInfo:T,reader:rdr ,cache:{"NULL":a.defaultValue},isprimitive: T.primitive,isdate:T.date});
            if(nm || !(nm in holder)) {
                Object.defineProperty(holder, nm, descriptor)
            }
            if(nm.indexOf("_")>0){//normalized
                var nm1= nm.replace(/\_/g,"")
                if(!nm1 || nm1 in holder){return}
                config.aliases[nm1]=nm
                Object.defineProperty(holder,nm1,descriptor)
            }
            if(valdescriptor.isExpr){
                 if(this.__record__){
                    valdescriptor.calc(this)
                }
             }
        },
        clear:function( ) {
            var C = this.__config, R = this.__record__
            if (!R || !C) {
                return  this
            }
            var M=C.descriptors||{},A=C.aliases
            for (var i = 0, l = this.keys() || [], ln = l.length, k; k = l[i], i < ln; i++) {
                k && (R[k] = (M[k]||{}).defaultValue)
            }
            delete this.__mod;
            this.__dirty__=false
            return  this
        },
        reset: function(a) {if(!this.__record__){return}
            this.clear();
            this.firePropertyChangeEv("reset")
            a && this.read(a)
            delete this.__mod;
            return  this
        },
	    readTo:function(data ,config,holder){
		    var   C=config ,R=holder||{}, M,A
		    if( !(C && C.descriptors && C.aliases) || !data){return }
		    M=C.descriptors||{}
		    A=C.aliases
		    if(data&&typeof(data)=="object"){
			    var nm,c=0
			    if($.isArray(data)){
				    for(var i=0,l=C.keys ||[],ln=l.length,k;k= l[i ],i<ln;i++) {
					    if(k &&  M[k] && data[i]!=null){
                            R[k]=M[k].reader?M[k].reader(data[i]):data[i]
                            c++
                        } ;
					    //k && this.set(k,data[i],null,M[k] )
				    }
			    } else{
				    for(var i=0,l=Object.keys(data)||[],ln=l.length,k;k=l[i],i<ln;i++) {
					    if(k && (nm=A[k]||A[(k+"").toLowerCase()]) && M[nm] ) {
                            R[nm]=M[nm].reader?M[nm].reader(data[k]):data[k];
                            c++
					    //(nm=A[k]) && (k in data) && this.set(nm,data[k],null,M[nm] )
                        }
				    }
			    }
                if(c){this.__dirty__=true}
		    };
		    return R
	    },
        read:function(data ){
	        //performance- for initial read no need to check dependancies or dispatch change events
	        if(!this.__record__ || !this.__config || !data){return  this}
            this.readTo(data,this.__config,this.__record__)
            this.recalcAll();
            return this

        },
        hasField: function(a) { return ((this.__config||{}).aliases||{})[a] },
        setLabelExpr: function(a) {
            this.addExpr(this.labelExpr="labelexpr", a)
        },
        getLabelValue: function() {
            var a;
            if("labelExpr" in this.labelExpr){
                return this.get(this.labelExpr);
            }
            var meta=this.__config.entitymeta
            if(meta && meta.getLabel){
                return meta.getLabel(this)
            }
            var titlefield=meta?meta.find(function(a) {
                return a.titlefield
            }):null
            if(titlefield){
                return this.get(this.labelExpr = titlefield.name);
            }
            return ""
        },
        update:function(a){return this.read(a)},

        mod: function() {
            return this.__mod||[]
        },
        resetStatus: function() {
            delete this.__mod;
	        return this
        },
        prepTemplate:function(a){
            if(a && a.__recordprepped){return a}
            var fn=$.template(a);

            var nu=(function(f){
                return function(rec,trans){
                    if(!rec){return ""}
                    rec.__templateMode={}
                    var idx="number" == typeof trans?trans:0;
                    if(idx){rec.index=idx}
                    var c = f.call(this,rec);
                    if("function" == typeof trans){
                        c = trans(c)
                    }
                    if(idx){delete rec.index}
                    delete rec.__templateMode;
                    return c;

                }
            })(fn)
            Object.keys(fn).forEach(function(k){nu[k]=fn[k]})
            nu.__recordprepped=true
            nu.fn=nu;
            return nu
        },
        applyTemplate: function(a, idx) {
            if(!this.__record__){return}
            a = this.prepTemplate(a)
            return a(this)
        },
        resolveName: function(a,config) {
            config=config||this.__config;

            return (config && config.aliases[a])||a
        },
        refresh: function() {
            return this.provider && this.id > 0 ? this.provider.getRecord(this.id) : Promise.reject("No provider found")
        },
        save: function() {
            this.mod();
            return this.provider ? this.id > 0 ? this.provider.update(this) : this.provider.insert(this) : Promise.reject("No provider found")
        }
    })
    Active.Record.makeStoreTemplate=function(meta ,catchall){
        var holder=new Active.Record()
        holder.__config.entitymeta=meta
        meta.eachItem(function(a) {if(!a||!a.name||!isNaN(a.name)){return}
            holder.addProperty(a.name,{descriptor:true,meta:a})
        });
        var ctor=$.createClass(function ctor(data,dataprepped){
            this.__record__= dataprepped===true?data:Object.create(null);
            this.__mod=[];
            this.__dirty__=false
            if(dataprepped!==true){
                this.reset(data)
            }
        },holder,null,{})
        ctor.prototype.static={};
        ctor.prototype.newInstance=ctor.newInstance.bind(ctor)
        ctor.prototype.sharedState={RESETMODE:false, BATCHMODE:false, REGULAR:false}
        ctor.fn=ctor.prototype
        return ctor;
    }




    Active.Column=$.model.make("entitycolumn",
        ["id","name", "type", "entity", "safe", "encodehtml", "aliasmap", "typeInfo", "actualtype",
            "renderer", "fieldrenderer","required", "readonly", "cellRenderer", "list", "primaryEntity",
            "hasLookup", "dataIndex", "defaultValue", "profileimage", "label","index","viewonly","titlefield",
            "decodevalue", "format","ui","cellui","searchalias"
        ],
        {
            initModelInstance:function(){
                this.__initModelInstance=true;
                $.domUI.addTo(this,"ui","iptype combo nolabel labeltop labelwidth wrapklass wrapstyle block hidden")
                $.domUI.addTo(this,"cellui","combo nolabel labeltop labelwidth wrapklass wrapstyle block hidden")
                this.setUpColumn.apply(this,arguments)
            },
            setUpUI:function(){

            },
            setUpColumn:function(){
                this.setUpUI()
                this.id=Active.Meta.normalizeName(this.name||"--none--")

                // this.ui={klass:[],style:{},attr:{},iptype:null,hidden:null }
                var name=arguments[0],type=arguments[1],props=arguments[2]
                if(arguments.length==1&&typeof(name)=="object" ){
                    props=name
                } else if(name&& typeof(name)=="string"){
                    props=props   ||{}
                    props.name=name;props.type=type;
                }

                this.updateProperties(props)
                //props={label,validations,display,lookup}
                this.onchange("list",function(rec){
                    if(rec&&rec.value&&rec.value.length){
                        if(this.lookuplistPromise){
                            this.lookuplistPromise.resolve(rec)
                        }
                        this.hasLookup=true
                    }
                    this.lookuplistPromise=null
                    this._lookupmap=null
                }.bind(this))
                this.lookup=new Data.Lookup(this)
            }   ,
            updateProperties:function(props ){
                this.setUpUI()
                var ui=this.ui;
                if(props &&typeof(props)=="object" && Object.keys(props).length){
                    if(typeof(props.format)=="function"){props.format={fn:props.format}}
                    if(props.type){
                        props.typeInfo = $.typeInfo(props.actualtype||props.type);
                    }
                    this.update(props);
                } else {

                }

                if(!this.dataIndex){
                    this.setItem("dataIndex",this.name.replace(/\W+/g,"_").toLowerCase())
                }
                var type=this.type,actualtype=this.actualtype
                if(!this.typeInfo && !type){

                    var name=this.name
                    if(/date/i.test(name||"")){type="date"}
                    else if(/time/i.test(name||"")){type="time"}
                    else if(/(id|num|year|month)$/i.test(name||"")){type="number"}
                    else {type="string"}
                    this.setItem("type",type)
                }
                if(!this.typeInfo && (actualtype||type)){
                    var typeInfo
                    if(actualtype&&TypeInfo.typeMap&&TypeInfo.typeMap[actualtype]){typeInfo=TypeInfo.getInfo(actualtype)}
                    else{typeInfo=TypeInfo.getInfo(type)}
                    this.setItem("typeInfo",typeInfo)
                }
                this.cellRenderer=(this.cellRenderer||function(a){return a}).bind(this)

                if(!this.label){
                    this.label=  String(this.name||"").replace(/[_\.]/g," ").replace(/([A-Z])/g," $1").replace(/([a-z])name/g,"$1 Name")
                        .replace(/_id$/g,"")
                        .replace(/^[a-z]/g,function(a){
                            return a.toUpperCase()
                        })
                }
                if(this.reader && typeof(this.reader)=="string" && this.reader.indexOf("FN|")==0){
                    try{this.reader=(0,eval)("("+this.reader.substr(3)+")")} catch(e){this.reader=null}
                }
                if(typeof(this.reader)!="function"){this.reader=null}
                if(this.fieldrenderer=="rte"){
                    this.cellRenderer=function(v){
                        return "<pre>"+String(v).replace(/\[TS\]/gi,"<").replace(/\[TE\]/gi,">")+"</pre>"
                    }
                }
                if(!this.hasLookup&&(this.list||this.primaryEntity)){this.hasLookup=true}
                if(this.defaultValue==null && this.typeInfo){this.defaultValue=this.typeInfo.defaultValue}
                if(this.actualtype&&this.actualtype!=this.type){
                    if(this.type=="date"&&!this.format){
                        this.format=this.actualtype
                    }
                }
                if(this.safe &&!this.format){
                    this.format=function(v){return String(v).replace(/>/g,"&gt;")
                        .replace(/</g,"&lt;").replace(/script/g,"s_ript")
                        .replace(/function/g,"f_nction").replace(/eval/g,"e_al").replace(/on([\w]+)/g,"o_$1")
                    }
                }
                if(this.encodehtml &&!this.format){
                    this.format=function(v){return String(v).replace(/>/g,"&gt;").replace(/</g,"&lt;")}
                }
                if(this.list){
                    // this.getLookupValueMap()
                }
                if(!this.index){
                    this.index=100
                }
             } ,

            read:function(val ){
                if(val==null){return TypeInfo.ValueNull}
                if(this.decodevalue&&typeof(val)=="string"){val=val.replace(/</g,"&lt;").replace(/>/g,"&gt;")}
                var ret=this.reader?this.reader(val):(this.typeInfo&&this.typeInfo.coerce?this.typeInfo.coerce(val):val);
                return ret
            },
            resetLookup:function(){},
            getLookupValueMap:function(k){
                var p=Promise.deferred()
                if(this._lookupmap){p.resolve(this._lookupmap)}
                else{
                    if(this.list&&this.list.length){
                        this._lookupmap=this.list.reduce(function(m,it){m[it.id]=it.label
                            return m},{})
                        p.resolve(this._lookupmap)
                    }
                    else{
                        this.getLookupList().then(
                            function(list){var arr= (list||{}).list||list
                                if(!arr){return}
                                if(!$.isArray(arr)){ arr=[]}
                                var lc=String(k).toLowerCase()
                                var mp=arr.reduce(function(m,it){if(it&&it.id){m[it.id]=it.label}
                                    return m},{})
                                this._lookupmap=mp;
                                p.resolve(mp)

                            }.bind(this)
                        );
                    }
                }
                return p;
            },
            getLookupValue:function(k){
                var p=Promise.deferred()
                if(this._lookupmap){p.resolve(this._lookupmap[k])}
                else{
                    this.getLookupList().then(
                        function(list){
                            if(list){var lc=String(k).toLowerCase(),data=list.data||list.list||list
                                if($.isArray(data)) {
                                    var tuple = (list.list || list).find(function (it) {
                                        return String(it.id).toLowerCase() == lc || String(it.label).toLowerCase() == lc
                                    })
                                    p.resolve((tuple||{}).label)
                                    return;
                                }
                            }
                            //p.reject()
                        }
                    );
                }
                return p;
            },
            getDynaLookupList:function(lookupid,callback){
                if(  typeof app =="undefined"){return}
                var url=app.servicePath+"?entity="+this.entity+"&lookuplist="+this.name+ "&lookupid="+lookupid

                var ths=this
                $.xhr.jsonp(url,{},function(d){
                    var list=(d.list||d),keyname="id",labelname="label";
                    if($.isArray(list)&&list[0]){
                        if(typeof(list[0])!="object"){
                            list=list.map(function(it){return {id:String(it),label:String(it)}})
                        }
                        else{
                            var kys=Object.keys(list[0])
                            keyname=("id" in list[0])?"id":kys[0];
                            labelname=("label" in list[0])?"label":(("name" in list[0])?"name":kys.pop());
                            if(keyname&&(keyname!="id"||labelname!="label")){
                                list=list.map(function(it){return {id:it[keyname],label:it[labelname]}})
                                keyname="id";labelname="label"
                            }
                        }
                    }

                    var lookuplist={keyname:keyname,labelname:labelname,list:list}
                    //  if(ths.lookuplistPromise){ths.lookuplistPromise.resolve(lookuplist)}
                    callback && callback(lookuplist) ;
                } );
            },
            getLookupList:function(refresh,getuniqifnolookup,lookupid) {
                var p = this.lookuplistPromise
                if (getuniqifnolookup) {
                    p = this.uniqlookuplistPromise
                }
                if (p) {
                    return p
                }
                var url

                if (this.list || this.primaryEntity || this.lookuplist || getuniqifnolookup) {
                    p = Promise.deferred();
                    if (getuniqifnolookup) {
                        this.uniqlookuplistPromise = p
                    }
                    else {
                        this.lookuplistPromise = p
                    }
                    var list = this.list || this.lookuplist
                    if (this.list || (!refresh && this.lookuplist)) {
                        p.resolve(list)
                    } else {
                        if (typeof app != "undefined") {
                            url = app.servicePath + "?entity=" + this.entity + "&lookuplist=" + this.name + (lookupid ? ("&lookupid=" + lookupid) : "")
                        }

                        $.xhr.jsonp(url, {}, function (d) {
                            var list = (d.list || d), keyname = "id", labelname = "label";
                            if (list.error) {
                                list = []
                            }
                            if ($.isArray(list)) {
                                list = list.map(function (it) {
                                    if (it == null) {
                                        return {id: "", label: ""}
                                    }
                                    if (typeof(it) != "object") {
                                        return {id: String(it), label: String(it)}
                                    }
                                    return {id: it.id, label: it.label || it.name}
                                })
                                keyname = "id";
                                labelname = "label"
                            }

                            this.lookuplist = {keyname: keyname, labelname: labelname, list: list}
                            p.resolve(this.lookuplist);
                        }.bind(this));
                    }


                } else {
                    if (!p) {
                        p =this.lookuplistPromise
                        if(!p){
                            p =this.lookuplistPromise=Promise.deferred()
                        }
                        p.resolve();

                    }
                    else {
                        p.resolve()
                    }
                }
                return p
            },
            getDisplayValue:function(v){  //this.type&&this.type.format&&!this.meta.hasLookup)?this.type.format(v):String(v);
                //hasLookup)?this.type.format(v):String(v)
                var lkup
                if(!v){

                    if(this.defaultValue){
                        if(this.defaultValue.label){lkup=this.defaultValue.label;v=this.defaultValue.value}
                        else {v=this.defaultValue}
                    } else{
                        v=this.typeInfo.defaultValue}
                    if(!v && this.typeInfo.date){return ""}
                }

                if(!lkup){

                    this.getLookupValueMap()
                    var keyv=v
                    if(this.typeInfo&&this.typeInfo.isDate()){
                        keyv=+this.typeInfo.coerce(v)
                    }
                    keyv=keyv||v;
                    if(this.hasLookup&&this._lookupmap&&Object.keys(this._lookupmap).length){
                        lkup=this._lookupmap[keyv+""] || v
                    }
                    else if(this.format&&typeof(this.format.fn||this.format)=="function"){
                        lkup=(this.format.fn||this.format)(v)
                    } else{
                        if(v && typeof(v.format)=="function"){
                            lkup=v.format()
                        } else {
                            var t = this.typeInfo;
                            if (t.isNumber() ) {
                                if(!(this.name == "id" || /_?id$/i.test(this.name))) {
                                    var a = this.actualtype;

                                    if (typeof(this.format) == "string" || a == "dollar" || a == "currency" || a == "money") {
                                        lkup = t.format(v, this.format)
                                    }
                                    else if (a == "integer" || a == "number") {
                                        lkup =  Math.round(Number(v))
                                    }
                                    else {
                                        lkup = String(v)
                                    }
                                } else{
                                    lkup =  Math.round(Number(v))
                                }
                            }
                            else {
                                lkup = t.format(v, this.format)
                            }
                        }
                    }
                }
                return String(lkup==null?v:lkup)
            },
            validate:function(v){
                var i=this.typeInfo,val=v;
                if(i && i.isNumber()){
                    if(!TypeInfo.isNumber(v)){return null}
                    val=i.coerce?i.coerce(v):v ;
                    if(this.actualtype=="decimal"||this.actualtype=="dollar"||this.actualtype=="numeric"||this.actualtype=="currency"||this.actualtype=="money"){}
                    else if(i.isNumeric()){if(Math.floor(val)<v){val=Number(val.toFixed(2))} }
                    else{val=Math.round(val)}

                }
                return val;
            },

            getUIInstance:function(ctor0,specs){
                var ctor=ctor0||Active.UIField;
                var nu=new ctor(this.toMap())

                if(this.ui){nu.ui=$.extend(nu.ui||{},this.ui)}

                nu.statics||(nu.statics={});
                if(specs){
                    nu.update(specs)
                }
                return nu
            }

        }
    )
    Active.UIField = Data.Column.extend({
        ip: null,
        wrapel: null,
        val: null,
        hidden: null,
        listvw: null,
        labelel: null,labelstyle:null,
        valueWrap: null,
        defaultproperty: "val",
        wrapstyle: null,
        wrapklass: null,
        wasvalid: null,
        inline: null,
        resetState: function() {},
        buildFragment: function() {
            this.fieldTemplate || (this.fieldTemplate = $.require("UI.Form").defaultFieldTemplate);
            var a = this.fieldTemplate(this);
            if(a && a.nodeType==11){a= a.firstChild}
            this.wrapel = $d(a), this.labelel = this.wrapel.q(".ui-ip-label");
            this.ip = this.wrapel.q("input,textarea,select");
           $.emitter.augment(this)
            return this
        },
        sync: function() {},
        build: function(a, b) {
            b = b || {};
            var c = this.name,
                d = a || {}, e = this;

            t
            if (!(!e || e.hidden || e.ui && e.ui.hidden)) {
                var f, g, h = {
                        formDom: d.formDom,
                        layoutTemplate: d.layoutTemplate,
                        dom: d.formDom ? d.formDom.q(".field-wrap2[data-key='" + c + "']") : null,
                        fieldKlass: d.fieldKlass,
                        model: d.model,
                        panel: d.panel,
                        meta: d.meta
                    }, i = $.require("UI.Form"),
                    j = this,
                    k = i.models;
                if (!h.layoutTemplate || h.dom) {
                    if (h.model ){
                        h.model.hasProperty(c) || h.model.addProperty(c, {
                            type: j.typeInfo
                        });
                        h.model.onchange(c, function(a) {
                            this.setValue(a.value, a.valueLabel)
                        }.bind(this))

                        $.extend(e.ui, b.ui)
                        b.label && (e.label = b.label)
                        ("combo" == e.iptype || "combo" == e.ui.iptype) && (e.ui.combo = !0, e.ui.iptype = "search");
                    }

                    var n = e.renderer;
                    if (!n && e.fieldrenderer && (n = k[e.fieldrenderer]), !n) {
                        if ("time" == e.type || "time" == e.actualtype) {
                            for (var o = [], p = 0, q = $.date().format("mm/dd/yyyy"); 24 > p;) {
                                for (var r = 0; 4 > r; r++) {
                                    var s = (0 == p || 12 == p ? 12 : (12 + p) % 12) + ":" + (15 * r || "00") + (p >= 12 ? " pm" : " am");
                                    o.push({
                                        id: +new Date(q + " " + s),
                                        label: s
                                    })
                                }
                                p++
                            }
                            e.list = o, n = k.datalist
                        }
                        var t = e.ui || {}, u = t.iptype || "text";
                        n = k[e.type] || k[t.iptype || e.iptype] || k[e.name], e.hasLookup && (n = k.datalist),
                        ("checkbox" == u || "bool" == u || "bool" == e.type || "boolean" == e.type || "tinyint" == e.actualtype) &&
                        (n = k["boolean"]), ("img" == e.type || "img" == u) && (n = k.img), "function" == typeof n && (n = {
                            render: n
                        })
                    }
                    n && (e.renderer = n);
                    var v = b,
                        w = j.toMap();
                    if (!/color$/.test(e.name) || u && ("text" != u || e.renderer) || (u = "color"), v && "object" == typeof v) {
                        var x = $.clone(v.ui || v);
                        if (x.klass) {
                            var y = String.isString(x.klass) ? x.klass.split(/\s+/) : [].concat(x.klass || []);
                            [].push.apply(j.ui.klass, y)
                        }
                        x.iptype && (j.ui.iptype = x.iptype, delete x.iptype),
                        (x.css || x.style) && (j.ui.style || (j.ui.style = {}), $.extend(j.ui.style, x.css || x.style),
                            delete x.css, delete x.style), x.attr && (j.ui.attr || (j.ui.attr = {}), $.extend(j.ui.attr, x.attr), delete x.attr),
                            $.keys(x).forEach(function(a) {
                                $d.css.isStyle(a) && (j.ui.style || (j.ui.style = {}), j.ui.style[a] = x[a], delete x[a]), /^label\w+/.test(a) && (j.ui[a] = x[a], delete x[a])
                            }),
                            $.keys(w).forEach(function(a) {
                                $d.css.isStyle(a) && (j.ui.style || (j.ui.style = {}), j.ui.style[a] = w[a]), /^label\w+/.test(a) && (j.ui[a] = w[a])
                            }),
                            j.update(x)
                    }
                    try {
                        j.render({
                            model: h.model,
                            panel: h.panel,
                            meta: h.meta
                        })
                    } catch (z) {
                        console.error(z)
                    }
                    if (g = j.wrapel, (!h.dom || !h.dom.q("input[name='" + c + "'],select[name='" + c + "'],textarea[name='" + c + "']")) && h.formDom) {
                        var A = h.formDom.q(".field-wrap2[data-key='" + c + "']") || h.formDom.q(".field-wrap[data-key='" + c + "']");
                        A && (j.wrapel = g ? A.append(g) : A, f = 1), !f && g && (j.wrapel = h.formDom.append(g))
                    }
                    j.wrapel = j.wrapel || j.ip;
                    var B = j.ip;
                    if(B){
                        j.ui.iptype && !j.renderer && (B.type = j.ui.iptype);
                        ("id" == e.name || e.hidden) && (B.type = "hidden", j.wrapel.hide());
                        "email" == e.name && "text" == B.type && (B.type = "email") ;
                        j.ui.width && (B.style.width = j.ui.width + "px")
                        j.ui.height && (B.style.height = j.ui.height + "px")
                        j.ui.style && $d.css(B, j.ui.style)
                            $d.addClass(B, j.ui.klass || [])
                            $d.prop(B, j.ui.attr || {})
                        j.hasLookup && !j.readonly && "search" != B.type && !/SELECT/i.test(B.tagName) && $d.up(B).addClass("glyph-ddn");
                        j.typeInfo && j.typeInfo.isDate() && $d(B).after("Z!div.gl-icon-cfndar[marginLeft:-20]");
                        j.ui.nolabel && g.addClass("nolabel")
                        j.ui.labeltop && g.addClass("label-top")
                        j.ui.block && g.css("display", "block")
                        j.hidden && j.wrapel && $d.hide(j.wrapel);
                    }
                    var C = j.ui.labelwidth;
                    if (C) {
                        var D = j.wrapel.q(".ui-ip-label");
                        D && (D.style.width = C + ("auto" == C ? "" : "px"))
                    }
                    var L = e.labelstyle|| e.ui.labelstyle;
                    if(L){
                        var D = j.wrapel.q(".ui-ip-label");
                        D && D.css(L)
                    }
                    var E = e.wrapklass || e.ui.wrapklass;
                    j.wrapel && E && String(E).split(/[\s,]/).forEach(function(a) {
                        j.wrapel.classList.add(a)
                    });
                    var F = e.wrapstyle|| e.ui.wrapstyle;
                    if(F){
                        $d.css(j.wrapel || $d.parent(this.ip), F);
                    }

                    this.ip && $d.on(this.ip, "click", function() {
                        this.fire("selection")
                    }.bind(this));

                    if(!this.inline && j.wrapel){
                        //j.wrapel.addClass("field-wrap-inline")
                    }
                    return this
                }
            }
        },
        render: function(a) {
            var b = (this.typeInfo.type, this),
                c = this.renderer;
           // this.fire("beforerender")
            this.ip || this.buildFragment()
            c && (c && c.init && c.init(b, a), c.render && c.render(this, a));
            this.applyUI()
           // this.fire("afterrender")
            return this
        },
        applyUI: function() {},
        onchange: function(a) {
            return this.on("change", a)
        },
        oninput: function(a) {
            return this.on("input", a)
        },
        isModified: function() {},
        applyFormat: function(a) {
            var b = a;
            if(this.type=="date" && typeof(this.format)=="string"){
                return $.date.format(a,this.format);
            }
            return this.format && "function" == typeof(this.format.fn || this.format) && (this.hasLookup && (this.getLookupValueMap(), this._lookupmap && this._lookupmap[String(b)] && (b = this._lookupmap[String(b)])), b = (this.format.fn || this.format)(b)), b
        },
        setValue: function(a, b) {
            var c = this.validate(a);
            if (null !== c && c != this.valueOf() && this.ip  && this.ip.dataset.val != c) {
                if (this.ip.dataset.val = c, b && b != c) c = this.applyFormat(b);
                else if (!this.ip.is("input,select,textarea") || "text" == this.ip.el.type || "search" == this.ip.el.type) {
                    var d;
                    if (this.format && (d = this.applyFormat(c), c == d ? d = null : c = d), !d)
                        if (this.hasLookup) {

                            var e = c;
                            this.getLookupValueMap(), this.typeInfo && this.typeInfo.isDate() && (e = +this.typeInfo.coerce(c)), e = e || c, this._lookupmap && this._lookupmap[e || c] ? c = this._lookupmap[e] : this.getLookupValue(e).then(function(a) {
                                var b = a || c;

                                this.ip.val(b)
                            }.bind(this))
                        } else {
                            c = this.typeInfo.format(c);
                        }
                    "date" == this.ip.el.type && "valueAsDate" in this.ip.el ? (this.ip.el.valueAsDate = new Date(c), c = null) : c = null == d ? c : d
                }

                return (null == c || "null" == a || "0" == String(c)) && (c = ""), this.ip.val(c), this
            }
        }
    });
   Active.Meta = Klass($.model.Collection, {
        columns: {},
        _normalizedNames: [],
        _provider: null,
        nameProp: "name",
        itemAlias: "field",
        init: function(a, b, c) {
            this.itemKlass = Active.Column, this.setup(), this.columns = this.nameMap || (this.nameMap = {});
            var d = [];
            if (c = c || {}, this.name = a, "string" == typeof b) d = b.split(/[\s,]/).reduce(function(a, b) {
                var c = b.trim().split(/=:/);
                return a.push({
                    name: c.shift().trim(),
                    type: c.shift()
                }), a
            }, []);
            else if (b && "object" == typeof b) {
                var e = [];
                if ($.isArray(b)) e = b.slice();
                else
                    for (var f in b) {
                        var g = {
                            name: f
                        };
                        if ("string" == typeof b[f]) g.type = b[f];
                        else
                            for (var h in b[f]) g[h] = b[f][h];
                        e.push(g)
                    }
                d = $.clone(e, !0)
            }
            $.each(d, function(a, b) {
                "object" != typeof a || a.name || "string" != typeof b || (a.name = b), this.add(a)
            }, this), !c.autogenid && "id" in this.nameMap || (this.autogenid = !0)
        },
        getLabel: function(a) {
            if (!this.__labelcol) {
                var b, c;
                this.eachItem(function(a) {
                    a && !b && "string" == a.type && (c || (c = a.name), a.name.indexOf("label") >= 0 || a.name.indexOf("lbl") >= 0 ? b = a.name : a.name.indexOf("name") >= 0 && (b = a.name))
                }), b || (b = c), this.__labelcol = b
            }
            return a ? a.get(this.__labelcol) : null
        },
        getProvider: function(a) {
            var b = a ? null : this._provider;
            b || (b = new Data.UrlProvider(("undefined" != typeof app ? app.servicePath : Data.servicePath || "router") + "?entity=" + this.name), b.entity = this.name), a || (this._provider = b)
            b.meta=this
            return b
        },
        createStore: function(provider, options) {
            if(!options && $.isPlain(provider)){
                options=provider;
                provider=null;
            }
            $.isPlain(options) || (options = {});
            if(!(provider && typeof(provider)=="object")){
                provider = this.getProvider(provider === !0)
            }
            options.provider = provider;
            var c = new Data.store(this, options);
            return c
        },

        createRecord: function(data, provider) {
            if(!this.recordProto){
                this.recordProto=Data.Record.makeStoreTemplate(this)
            }

            provider || (provider = this.getProvider());
            var c = this.recordProto.newInstance();
            if(data ){
                if(!isNaN(data) && data > 0 && provider){
                    provider.load({criteria:{id:data}}).then(function(a) {
                        var rec=a.data||a
                        c.update(Array.isArray(rec)?rec[0]:rec)
                    })
                } else if($.isPlain(data)){
                    c.update(data)
                }
            }
            return  c
        },
        prep: function(a, b) {
            {
                var c = arguments[2] || {};
                Active.Meta.normalizeName
            }
            if ("object" == typeof a ? c = a : (c.name = a, c.type = b || c.type), c.entity = this.name, c.name) {
                var d = this.normalizeName(c.name);
                d && this._normalizedNames.push(d)
            }
            return c
        },
        normalizeName: function(a) {
            return Active.Meta.normalizeName(a)
        }
    });
    Active.Meta.normalizeName = function(a) {
        return a && "object" == typeof a && (a = a.name), a && "string" == typeof a ? String(a).replace(/[\W]/g, "").toLowerCase() : ""
    }
    Active.Lookup = Klass("Data.Lookup", {
        field: null,
        list: null,
        lookuplist: null,
        init: function(a) {
            this.field = a || {}, this.onpropertychange("list", function(a) {
                a && a.value && a.value.length && (this.lookuplistPromise && this.lookuplistPromise.resolve(a), this.field.hasLookup = !0), this.lookuplistPromise = null, this._lookupmap = null
            }.bind(this))
        },
        clear: function() {
            this.lookuplist = null
        },
        getLookupValue: function(a) {
            var b = Promise.deferred();
            return this._lookupmap ? b.resolve(this._lookupmap[a]) : this.getList().then(function(c) {
                if (c) {
                    var d = String(a).toLowerCase(),
                        e = (c.list || c).find(function(a) {
                            return String(a.id).toLowerCase() == d || String(a.label).toLowerCase() == d
                        });
                    b.resolve((e || {}).label)
                }
            }), b
        },
        getDynaLookupList: function(a, b) {
            if ("undefined" != typeof app) {
                var c = app.servicePath + "?entity=" + this.field.entity + "&lookuplist=" + this.field.name + "&lookupid=" + a;
                $.xhr.jsonp(c, {}, function(a) {
                    var c = a.list || a,
                        d = "id",
                        e = "label";
                    if ($.isArray(c) && c[0])
                        if ("object" != typeof c[0]) c = c.map(function(a) {
                            return {
                                id: String(a),
                                label: String(a)
                            }
                        });
                        else {
                            var f = Object.keys(c[0]);
                            d = "id" in c[0] ? "id" : f[0], e = "label" in c[0] ? "label" : "name" in c[0] ? "name" : f.pop(), !d || "id" == d && "label" == e || (c = c.map(function(a) {
                                return {
                                    id: a[d],
                                    label: a[e]
                                }
                            }), d = "id", e = "label")
                        }
                    var g = {
                        keyname: d,
                        labelname: e,
                        list: c
                    };
                    b && b(g)
                })
            }
        },
        getList: function(a, b, c) {
            if (this.lookuplistPromise) return this.lookuplistPromise;
            var d, e = Promise.deferred();
            if (this.lookuplistPromise = e, this.list || this.field.primaryEntity || this.lookuplist || b) {
                var f = this.list || this.lookuplist;
                this.list || !a && this.lookuplist ? e.resolve(f) : ("undefined" != typeof app && (d = app.servicePath + "?entity=" + this.field.entity + "&lookuplist=" + this.field.name + (c ? "&lookupid=" + c : "")), $.xhr.jsonp(d, {}, function(a) {
                    var b = a.list || a,
                        c = "id",
                        d = "label";
                    if (b.error && (b = []), $.isArray(b) && b[0])
                        if ("object" != typeof b[0]) b = b.map(function(a) {
                            return {
                                id: String(a),
                                label: String(a)
                            }
                        });
                        else {
                            var e = Object.keys(b[0]);
                            c = "id" in b[0] ? "id" : e[0], d = "label" in b[0] ? "label" : "name" in b[0] ? "name" : e.pop(), !c || "id" == c && "label" == d || (b = b.map(function(a) {
                                return {
                                    id: a[c],
                                    label: a[d]
                                }
                            }), c = "id", d = "label")
                        }
                    this.lookuplist = {
                        keyname: c,
                        labelname: d,
                        list: b
                    }
                    this.lookuplistPromise && this.lookuplistPromise.resolve(this.lookuplist)
                }.bind(this)))
            } else {
                this.lookuplistPromise && this.lookuplistPromise.resolve();
            }
            return this.lookuplistPromise
        }
    });

    Active.criteria=Klass({
            meta:null,_holder:{},listPromises:{},_cached:null,
            checkIfModified:function(noev){
                var expr=this.toJson()||null;
                if(this._cached!==expr){ this._cached =expr;
                    this.fire("change")
                }
            },
            remove:function(k,v){
                var el=this.findElement(k,true)
                if(arguments.length==1){v=null}
                if(el){var nm=el.col
                    if(v==null||!($.isArray(el.val)&&el.val.length)){delete this._holder[nm]}
                    else{   var idx
                        if(typeof(v)=="number"){idx=v}
                        else{    var fnd=[].concat(el.val||[]).find(function(it){return it.value==v})
                            idx=fnd?[].concat(el.val||[]).indexOf(fnd):-1;
                        }
                        if( idx>=0){
                            el.val.splice(idx,1)
                        }
                    }
                }
                this.checkIfModified(false);
                return this
            },
            getLookupList:function(nm,refresh,crit ){
                if(!this.listPromises[nm]){
                    var f=this.meta?this.meta.findField(nm):{name:nm}
                    if(f && f.getLookupList){
                        this.listPromises[nm]=f.getLookupList(refresh,true,crit)
                    }
                }
                return this.listPromises[nm]

            },
            findElement:function(k){
                if(!k){return null}
                if(typeof(k)=="object"&&k.col&&k.val&&typeof(k.val)=="object"){return k}

                return this._holder[k]
            },
            empty:function(){ return Object.keys(this.toMap()).length<1},
            setCondition:function(col,v,lbl){
                var elm=this.findElement(col )
                if(!elm){this.append(col);
                    elm=this.findElement(col )
                }
                if(elm){
                    var nm=col
                    if($.isArray(elm.val)){
                        elm.val.length=0
                    }  else{elm.val=[]}
                    this.append(nm,v,"=",lbl)
                }
            },
            update:function(col,v,lbl,idx){ if(!this.meta) {}
                if(v==null){return}
                idx=typeof(idx)=="number"?idx:-1
                if(idx>=0){if(!(v&&typeof(v)=="object")){v={value:v,label:lbl||v}}
                    var elm=this.findElement(col )
                    if(elm ){
                        var meta=this.meta.findField(col)
                        if(meta && meta.searchalias){
                         //   alert(2);
                        }
                        if(!$.isArray(elm.val)){elm.val.value=v.value;elm.val.label=v.label}
                        else{ elm.val.splice(idx,1,v)   }
                        if(elm&&elm.val&&elm.val.length>1){var nll=elm.val.find(function(it){return it&&it.value==null});
                            if(nll){elm.val.splice(elm.val.indexOf(nll),1)}
                        }
                    }
                }
                this.checkIfModified(false);
            },
            parseCriteria:function(str){
                var arr= str.split(/\s/),crit={}
                if(arr.length==3 && /[\=\>\<!]/.test(arr[1])){
                    crit.value=arr[2]
                    crit.name==arr[0]
                    crit.op=arr[1];
                    this.append(crit.name,crit.value,crit.op)
                    return crit
                } else {
                    var gr=$.makeGraph(str)
                    if(gr && gr.graph){
                        if(gr.graph.op){
                            this.append(gr.graph)
                        }
                    }
                }
                return this
            },
            append:function(nm,v,op,lbl,isnew){
                if(!this.meta) {}
                if(arguments.length==1){
                    if(typeof (nm)=="number" || !isNaN(nm)){
                        v=nm; nm="id"; op="=";
                    } else if(nm && typeof (nm)=="object"){
                        if(nm.l && nm.r && nm.op){
                            if(nm.r.op || nm.l.op) {
                                if (nm.l.op) {
                                    this.append(nm.l)
                                    if(nm.l.l && this._holder[nm.l.l.value]){
                                        this._holder[nm.l.l.value].op2=nm.op
                                    }
                                }
                                if (nm.r.op) {
                                    this.append(nm.r)
                                }
                                return this
                            }
                            v=nm.r.value;
                            nm=nm.l.value;
                            op=nm.op;

                        };

                    } else if(typeof (nm)=="string"){
                        //var tokens=$.tokenize(nm)
                        var arr= nm.split(/\s/)
                        if(arr.length==3 && /[\=\>\<!]/.test(arr[1])){
                            v=arr[2];
                            nm=arr[0];
                            op=arr[1];
                        }
                    }
                }
                var val= v,col,f=this.meta?this.meta.findField(nm,true):{name:nm},cntu=true
                if(!f){return}
                col= f.name;op=op||"="
                var elm,curr  =this._holder[col]||(this._holder[col]={col:col,type: f.type||"",title: f.label,val:{value:v,label:lbl}});
                if(lbl&&["and","or","||","&&","+","-","*"].indexOf(String(lbl))>=0){curr.op2==lbl;lbl=null;}
                if(arguments.length>1){
                    lbl=(!lbl||lbl==v)&&f.getDisplayValue? f.getDisplayValue(v):lbl
                    if(op=="="&&curr.col){
                        if(!(curr.val && $.isArray(curr.val))){curr.val=[curr.val]}
                        if(!curr.val.find(function(it){return it&&it.value==v})){
                            curr.val.push({value:v,label:lbl})
                        }
                        elm=curr
                        cntu=false
                    }else{
                        $.extend(this._holder[col],{op:op,val:{value:v,label:lbl}})
                    }
                    elm=this._holder[col]
                    if(elm&&elm.val&&elm.val.length>1){var nll=elm.val.find(function(it){return it&&it.value==null});
                        if(nll){elm.val.splice(elm.val.indexOf(nll),1)}
                    }


                    this.checkIfModified(false);
                }
                return this;
            },
            collect:function(fn){  var res=[],mp=this.toMap()
                for(var i= 0,l=Object.keys(mp),ln=l.length;i<ln;i++ ){
                    res.push(fn(l[i],mp[l[i]]))
                }
                return res;
            },
            toModel:function(){
                var ret={map:this.toMap(true)}
                ret.fields=Object.keys(ret.map);
                ret.collect=function(fn){  var res=[]
                    for(var i= 0,l=this.fields,ln=l.length;i<ln;i++ ){
                        res.push(fn(l[i],this.map[l[i]]))
                    }
                    return res;
                }.bind(ret);
                return ret;
            },
            toMap:function(prune){
                var ret={},mp=this._holder
                Object.keys(mp).forEach(function(it){
                    if(!mp[it] || (prune && (mp[it].val==null||String(mp[it].val.value).trim()=="") )){return}

                    else {
                        ret[it]=mp[it]
                    }
                });

                return ret;
            },
            prep:function(){
                if(!("IN" in self )){
                    self.IN=function(val){
                        if(val==null||!val.valueOf){return !1}
                        var v=String(val.valueOf())
                        return [].slice.call(arguments,1).some(function(it){
                            var v1=String((it!=null&&it.valueOf)?it.valueOf():it);
                            return v1==v
                        });
                    }
                }
            },
            clone:function(){
                var nu=new Data.criteria();
                nu._holder=JSON.parse(JSON.stringify(this._holder))
                nu.meta=this.meta
                nu._cached=this._cached
                return nu;
            },
            toJson:function(){return JSON.stringify(this._holder)},
            toExpr:function( mode ){var mp=this._holder;
                this.prep()
                mode=mode||"js"
                var ret=[],cnt=0;
                var AND=mode=="js"?"&&":"and",
                    OR=mode=="js"?"||":"or",
                    EQ=mode=="js"?"==":"=",
                    prefix=mode=="js"?"it.":"";
                var list=  Object.keys(mp).map(function(it){
                    var v,nm=prefix+it,
                        m =mp[it]||{},
                        ret1=[] ,
                        val=m?m.val:null
                    if(!val  || (val==null||val=='')||($.isArray(val)&&!val.length)){return ""}
                    m.op=m.op||(m.op="=");
                    var op=(m.op=="="||m.op=="=="?EQ:m.op),
                        type=m.type,
                        valList=[].concat(val||[]);
                    if(!type || type=="any"){
                        if(valList.every(function(a){return typeof(a.value)=="number" || (typeof(a.value)=="string" && !isNaN(a.value))})){
                            type="number"
                        }
                    }
                    var nu=valList.map(function(v1){
                        if(!v1||v1.value==null||v1.value=="undefined"){return ""}
                        var val1,value=v1.value ;
                        if(type=="number"||type=="int"||type=="float" ||type=="long"){
                            val1=Number(value)||0
                        }
                        else if(String(type).indexOf("date")>=0||String(type).indexOf("time")>=0){
                            val1=(+new Date(value))
                        }
                        else {
                            val1= "'"+ String(value).replace(/^["']|['"]$/g,"")+"'"
                        }
                        return val1
                    }).filter(function(it){return String(it).trim()})
                    var v;
                    if(nu.length<=1){nu=nu[0]}
                    if(nu!=null){
                        if($.isArray( nu)){
                            if(mode=="sql"){
                                v=nm+" in ("+nu.join(",")+")"
                            }
                            else{
                                v="IN("+ nm+","+nu.join(",")+")"
                            }
                        }
                        else {v=nm + " "+op + " "+ nu}
                        if(v){ret1.push(v)};
                    }
                    cnt +=ret1.length
                    var ret=ret1.join(" "+OR+" ").trim()
                    return {value:ret,op:m.op2};
                });
                list.forEach(function(it,i,ar){if(!it){return}
                    var v=it.value,op=it.op
                    if(op=="or"||op=="OR"||op=="||"){op=OR}
                    else if(!op || op=="and"||op=="AND"||op=="&&"){op=AND}
                    if(v && v.replace(/[\|'"\s]/g,"").trim()) {
                        var s=cnt>2 || op==OR ?"("+v+")":v
                        ret.push(s)
                        if(i<ar.length-1){
                            ret.push(op)
                        }

                    }
                });
                var last=String(ret[ret.length-1])
                if(last && (last=="and"  || last=="&&")){
                    ret.pop()
                }
                ret=  ret.join(" ");

                return ret;
            },
            toSql:function(){
                return this.toExpr("sql");
            },
            toJs:function(asfn){
                var ret=  String(this.toExpr("js")||"").trim()
                if(asfn){
                    ret=!ret?function(){return true}:Function("it","return ("+ ret.replace(/\sand\s/g," && ").replace(/\sor\s/g," || ").replace(/([^=])=([^=])/g,"$1==$2")+")")
                }

                return ret;
            },
            toString:function(){
                return this.toJs();
            }
        }
    );
    Active.criteria.toCriteria=function(o){
        if(!o||typeof(o)=="string"||typeof(o)=="number"){return o==null?"":String(o)}
        var arr=[]
        if($.isPlain(o)){
            $.each(o,function(v,k){
                arr.push(k+"="+(!isNaN(Number(v))?v:"'"+v+"'"))
            })
            return arr.join(" and ")
        } else if($.isArray(o)){
            return $.collect(o,function(v,k){
                return Active.criteria.toCriteria(v)
            }).join(" or ")

        }
        return ""

    }
    Active.Sort=Klass("Data.Sort",{
            sortCols:null,multi:null,sortfn:null,
            init:function(sortcrit,sortdir){


            },
            update:function(sortcrit,sortdir){
                if(sortcrit){
                    var nu=this.parse(sortcrit,sortdir);
                    if($.serialize(nu)!== $.serialize(this.sortCols)){

                    }
                }
                return this;
            },
            parse:function(sortcrit,sortdir){
                var arr=[],col
                if(typeof(sortcrit)=="string"){
                    arr=sortcrit.split(/[,\s]}/);

                } else if(Array.isArray(sortcrit)){
                    arr=sortcrit.slice()
                }
                return arr.map(
                    function(col){
                        var dir=sortdir||""
                        if(/^([+\-]|[da01]!])/i.test(col)){
                            dir=col.charAt(0);
                            col=col.substr(1)
                            if(col.charAt(0)=="!"){col=col.substr(1)}
                        }
                        dir=(dir=="-"||dir=="d"||dir=="D"||dir=="0")?"d":"a"
                        return col?{col:col,dir:dir}:null
                    }
                ).filter(function(a){return a});

            }

        }

    );
    Active.pager=Klass(
        //this.store=store;this.sortcol=null;this.sortdir=null;; this.pageno=1;this.pagesize=20;this.totalrows=0
        {   sortcol:null,
            sortdir:null,  cachekey:null,  filter:null,
            pageno:1,
            pagesize:20,
            totalrows:0  ,
            init:function(store){this.store=store;
                //this.properties.addExpr("isCachedLocal","totalrows==store.records.length")
                this.properties.addExpr("startrow",{expr:function(rec){ return rec.pagesize<=0?1:Math.max(1,rec.endrow-rec.pagesize+1)},vars:["pagesize","endrow"]})
                this.properties.addExpr("endrow",{expr:function(rec){
                    return rec.pagesize<=0 || rec.pagesize > rec.totalrows?rec.totalrows:Math.min(rec.totalrows,rec.pageno*rec.pagesize)},vars:["pageno","pagesize","totalrows"]})
                this.properties.addExpr("totalpages",{expr:function(rec){return rec.pagesize?Math.max(1,rec.pagesize>0?Math.ceil(rec.totalrows/rec.pagesize):1):1},vars:["pagesize","totalrows"]})
            }
            ,applySort:function(s){
            if(this.update({sort :s})){
                this.loadPage()
                //this.fire("update");
            }
            return this ;
        }
            ,next:function(){ return this.nav(this.pageno+1)  }
            ,nav:function(p){
            var ret=this.update(p=="-1"?this.totalpages:p)
            if(ret){
                this.fire("update");
                //return this.loadPage()
            };
            return this;
        }
            ,previous:function(){return this.nav(this.pageno-1) },
            recalc:function(  num ){
                if(this.isCachedLocal){
                    this.totalrows=num>0?num:
                        Math.max(this.totalrows,this.store.size());
                }
                if(!this.pageno){this.pageno=1}
                return this
            }
            ,reset:function(){this.totalrows=0;this.pageno=0;this.sortcol=null;}, //pageno,sort,filter
            refreshViewIfNeeded:function(){
                if(this.isCachedLocal){
                    if(this.filter){
                        this.store.filter(this.filter);
                    }

                    if(this.sort){
                        this.store.filter(this.sort);
                    }
                    if(this.pagesize<this.store.size()){
                        this.store.records.splice(this.pagesize,this.store.size())
                    }
                }
            }
            ,update:function(){
            this.recalc()
            var st,end,sort,page=0 ,filter,args=[].slice.call(arguments)  ,first=args[0] ,curr=this.properties.toMap()
            if(!isNaN(first)){first={pageno:Math.max(1,Number(first))}}
            if(first && typeof (first)=="object"){
                ["pageno","pagesize","totalrows" ].forEach(function(k){
                    if(k && typeof(k)=="string"&& k in this&&first[k]>=0){
                        this[k]=first[k]}
                },this)

                if(first.cachekey){this.cachekey=first.cachekey}

                this.pageno=Math.max(1,Math.min(this.pageno,this.totalpages))
                if(curr.pageno!=this.pageno){page=this.pageno}
            }
            //  var v=first.pageno||(typeof(args[0])=="number"?args[0]:0)
            first=first||{}
            var sortdir,sortcol,v=first.sort||(typeof(args[1])=="string"?args[1]:"")
            if(v && typeof(v)=="string"){
                if(/^[\+\-]/.test(v)){sortdir= v.charAt(0)=="+"?"a":"d";v= v.substr(1)}
                else if(/^[ad]:/.test(v)){sortdir= v.charAt(0);v= v.substr(2)}
                else if(/[\s:][ad]$/.test(v)){var arr=v.split(/[\s:]+/);sortdir= arr.pop();v= arr.shift()}
                sortcol=this.store.meta.findField(v)
                if(sortcol){sortcol=sortcol.name}
            }
            if(sortcol){
                if(!(sortcol==this.sortcol&&this.sortdir==sortdir)){
                    if(!sortdir){sortdir=this.sortdir=="a"?"d":"a"}
                    this.sortcol=sortcol;this.sortdir=sortdir||"a"
                    sort=sortdir+":"+sortcol
                }
            }
            var v=first.filter  ;
            v=String(v)=="0"?"":v
            if(v!=null &&  v!=this.filter){filter=v||"_clear_"}
            //if(sort){this.store.sort(sort);this.sortcol=sort}
            if(filter!=null){
                this.filter= String(filter).trim()
                if(this.filter.charAt(0)=="("&&/\)$/.test(this.filter)&&this.filter.split("(").length==2){
                    this.filter=this.filter.replace(/^\(|\)$/g,"").trim()
                }
            }
            if(page||sort||filter){
                return true;
            }
            if( this.isCachedLocal==null && this.totalrows==this.store.size(true) && !this.filter){
                 this.isCachedLocal=true
            }
        },//pageno,sort,filter
            load:function(){},
            getVisibleRecordCount:function(){return this.getPageRecords().length},
            getPageRecords:function(){//page
                var vis=[]
                if( this.store && this.endrow && this.endrow>=this.startrow){
                    vis= this.store.records.slice(this.startrow-1,this.endrow)
                }  else{vis=this.store.records.slice()}
                return vis;

            },
            loadPage:function(callback){//pageno,sort,filter
                if(this.loadingPromise){
                    if(typeof(callback)=="function"){this.loadingPromise.then(callback)}
                    return this.loadingPromise
                }
                if(this.store){this.store.clear();}
                this.fire("pageloadstart")
                try{
                    var vis    , pr=   Promise.deferred() ,props=$.compact(this.properties.toMap(),true);
                    var timer=setTimeout(function(p){timer=0
                        this.fire("pageloadend")
                        if(this.loadingPromise&&this.loadingPromise===p){
                            this.loadingPromise.reject("timed out")
                            this.loadingPromise=null;
                            this.fire("pageloadend")
                        }
                    }.bind(this,pr),15000)

                    this.loadingPromise=pr

                    if(this.store && this.store.provider){
                        this.store.provider.load({page:props,store:this.store,pager:this}).then(function(data){
                                if(timer){clearTimeout(timer);this.loadingPromise=null}
                                var recs=data.data||data
                                if(data && data.page){
                                    this.update(data.page)
                                }
                                else if(recs.length){
                                    this.totalrows=recs.length
                                }
                                //dont load lookups again
                                if(this.includelookups==null || this.includelookups){
                                    this.includelookups=false;
                                }
                                this.fire("pageloadend")
                            }.bind(this),
                            function(){
                                this.fire("pageloadend")
                            }.bind(this)
                        ) ;
                        if(this.pagesize==-1){
                            this.isCachedLocal=true
                        }
                        var props=this.properties.toMap(),ths=this;
                        this.store.observer.once("dataloadcompleted",function(){
                            this.loadingPromise=null
                            pr.resolve(this.getList())
                        });
                    } else{
                        if(props.filter){
                            this.store.filter(props.filter);
                            var cnt=this.store.size()
                            this.totalrows=cnt;
                            this.pageno=1
                        }
                        if(props.sortcol ){
                            this.store.sort(props.sortcol);
                        }
                        this.loadingPromise=null
                        pr.resolve(this.getPageRecords())
                    }
                    pr.finally(function(recs){
                            this.loadingPromise=null
                            typeof(callback)=="function" &&callback.call(this,recs)
                            this.observer.fireAsync("pageloadend")
                        }.bind(this)
                    );
                } finally{
                    //this.observer.fireAsync("pageloadend")
                }
                return pr;
            },
            getPage:function(noload,callback){//pageno,sort,filter
                if(typeof(noload)=="function"){callback=noload;noload=false;}
                this.recalc()//.update.apply(this,arguments);

                if(typeof(callback)!="function"){callback=function(){}}
                var vis    , pr=   Promise.deferred()
                var props=this.properties.toMap();
                if(!(noload===true)  ){
                    pr=this.loadPage(callback)
                } else{
                    pr.resolve(this.getPageRecords())
                }

                return pr
            }
            ,makeMessage:function(st,end){  //this.totalrows=this.store.size();
            return "Page "+this.pageno+ " rows "+st + " to "+end+" of "+this.totalrows+(this.sortcol?(" sorted by "+this.sortcol):"")
        }
            ,toString:function(){var p= this.pageno ;
            return this.pagesize<0?"":this.makeMessage(((p-1) * this.pagesize)+1,((p) * this.pagesize))
        }

        });

    Active.Provider=Klass({
        store:null,loader:null,isLocal:true,defaultArgs:null,
        onInitialize:function(){ var ths=this;
            this.onpropertychange("loader",function(r){
                r.value.store=ths.store;

            })
        },
        getUniqValues:function(col){},//            if(this.pager.isCachedLocal){return this.getList(true).collect(col).uniq(String).sort()}
        getDataForUpdate:function(rec,forupdate){
            var data={},id,plainobj=$.isPlain(rec)
            if(rec){
                id=plainobj?rec.id:rec.get("id")
                if(forupdate&&typeof(rec.mod)=="function"){
                    var mods=rec.mod( )
                    if(mods.length){
                        for(var i= 0,ln=mods.length;i<ln;i++){
                            data[mods[i]]=rec.get(mods[i])
                        }
                    }
                }
                else{
                    data=( rec.toMap)?rec.toMap(true,true):(plainobj? $.clone(rec):rec)
                }
                delete data.id;
                if(id&&forupdate&&Object.keys(data).length){
                    data.id=id;
                }

            }
            if(!Object.keys(data).length){console.log("nothing to update");data=null}
            var isdate=$.is.date;
            $.each(data,function(v,k){
                if(isdate(v)){
                    data[k]=+v;
                }})
            return data
        },
        save:function(rec){
            if(rec&&rec.id>0){
                return rec._delete_?this["delete"](rec):this.update(rec)
            } else{return this.insert(rec)}
        },
        insert:function(rec){  },
        "delete":function(id){ },
        update:function(rec){   },
        getRecord:function(crit){   var p=Promise.deferred()
            if(crit&&!isNaN(crit)&&crit>0){
                crit='{"id":'+crit+'}'
            }
            this.load({criteria:crit,count:1,includelookups:false}).then(function(d0){var d=d0.data||d0;

                if(d&&d.length==1){d=d[0]}

                if(d){p.resolve(d)} else{p.reject("not found:"+crit)}
            })
            return p
        },
        getValue:function(id,col){   var p=Promise.deferred()
            var crit={id:id  ,field:col}

            this.load({criteria:crit,count:1 }).then(function(d0){var d=d0.data;
                if(d0&&d0.data&&typeof(d0.data)=="object"&&d0.data.length){d=d0.data[0]}
                if(d){p.resolve(d)} else{p.reject("not found:"+crit)}
            })
            return p
        },
        load:function(opns){
            //criteria,store,pager,callback
            var optns={}
            if(!opns || $.isPlain(opns)){
                Object.assign(optns,opns||{})
            } else {
             }
            if(arguments.length>1){
             }


            if(this.loadPromise&& this.loadPromise._state){$.handleEx("already in progress "+this.loadPromise._state)}
            this.loadPromise=Promise.deferred();



            var crit,args={},store=optns.store,pager=optns.pager ;
            delete optns.store;
            delete optns.pager;
            delete optns.callback
            if(pager && !optns.page){
                optns.page=pager.toMap? pager.toMap():pager
            }
            if(optns.criteria) {
                if (typeof(optns.criteria) == "number" && optns.criteria > 0) {
                    optns.criteria = "id=" + optns.criteria
                }
                else if (optns.criteria && (optns.criteria.criteria || optns.criteria.data || typeof(optns.criteria) == "string")) {
                    optns.criteria = Active.criteria.toCriteria(optns.criteria.criteria || optns.criteria.data || optns.criteria)
                }
            }
            if(store&&store.defaultCriteria){
                var defcrit=store.defaultCriteria;
                if(defcrit){
                    if(typeof(defcrit)=="function"){defcrit=defcrit(store)}
                    if(typeof(defcrit)=="string" && !/[\W]/.test(String(defcrit))){
                        defcrit=String(defcrit)
                        if(store.meta.findField(defcrit)){
                            var v=store.meta.findField(defcrit).defaultValue
                            if(v==null&&optns.criteria && optns.criteria[v]!=null){v=optns.criteria[v]}
                            if(typeof(v)=="function"){v=v(store)}
                            defcrit=defcrit+"="+ v

                        }
                    }
                    else{defcrit=Active.criteria.toCriteria(defcrit)}
                }
            }
            if(defcrit&&(!optns.criteria||(typeof(optns.criteria)=="string" && optns.criteria.replace(/\s+/g,"").indexOf(defcrit.replace(/\s+/g,"")==-1)))){
                optns.criteria=defcrit+(optns.criteria?(" and "+optns.criteria):"")
            }
             if($.isPlain(this.defaultArgs)){
                $.extend( optns,this.defaultArgs)
            }
            if(store&&$.isPlain(store.defaultArgs)){
                $.extend( optns,store.defaultArgs)
            }
             if(!optns.page &&pager){optns.page=$.compact(pager.properties.toMap(),true)}


            var entity=this.entity||((store||{}).meta||{}).name//,u=this.fixUrl(this.url)
            if(entity){
                optns.entity=entity;
            }
            if(optns.includelookups==null){
                optns.includelookups = true
            }
            var onload=function(pager,d){
                if(typeof(d)=="string"){

                }
                var res=d,page=d.page,data=d.data ;
                 if(d.mode=="list"){
                    data=[]
                    if(d.fields&&d.data&&d.data.length>0){var f=d.fields  ,ln2=f.length
                        for(var i=0,l=d.data,ln=l.length,r;r=l[i],i<ln;i++){
                            var rec={}
                            for(var i2=0,l2=r,c;c=l2[i2],i2<ln2;i2++){
                                (c||c===0)&&(rec[f[i2]]=r[i2]);
                            }
                            data.push(rec)
                        }
                    }
                    d.data=data
                }

                if(this.reader){
                    res=this.reader(d);
                }
                this.loadLoadCompleted(res,page)


                if(page&&pager){
                    pager.update(page)}
            }
            this.loadData(optns,onload.bind(this,pager))  ;
            if(typeof(optns.callback)=="function"){
                this.loadPromise.then(optns.callback)
            }
            return this.loadPromise;
            ;
        },
        loadX:function(args,doload,pager){
            if(this.loadPromise&& this.loadPromise._state){;
                $.handleEx("already in progress "+this.loadPromise._state)}
            this.loadPromise=Promise.deferred();
            this.observer.fire("loadstarted");
            var crit;
            if(args) {
                if (typeof(args) == "number" && args > 0) {
                    crit = "id=" + args
                }
                else if (args && (args.criteria || args.data || typeof(args) == "string")) {
                    crit = Active.criteria.toCriteria(args.criteria || args.data || args)
                }
            }
            if(this.store&&this.store.defaultCriteria){
                var defcrit=this.store.defaultCriteria;
                if(defcrit){
                    if(typeof(defcrit)=="function"){defcrit=defcrit(this.store)}
                    if(!/[\W]/.test(String(defcrit))){defcrit=String(defcrit)
                        if(this.store.meta.findField(defcrit)){
                            var v=this.store.meta.findField(defcrit).defaultValue
                            if(v==null&&args[v]!=null){v=args[v]}
                            if(typeof(v)=="function"){v=v(this.store)}
                            defcrit=defcrit+"="+ v

                        }
                    }
                    else{defcrit=Active.criteria.toCriteria(defcrit)}
                }
            }
            if(defcrit&&(!crit||(crit.replace(/\s+/g,"").indexOf(defcrit.replace(/\s+/g,"")==-1)))){
                crit=defcrit+(crit?(" and "+crit):"")
            }
            if(!args||typeof(args)!="object"){args={}}
            if(crit){args.criteria=crit}

            if(this.defaultArgs){
                $.extend( args,this.defaultArgs)
            }
            if(this.store&&this.store.defaultArgs){
                $.extend( args,this.store.defaultArgs)
            }
            this.loadData(args,doload,pager)  ;
            return this.loadPromise;
        },
        loadLoadCompleted:function(data){

            this.observer.fire("dataavailable",data);
            this.loadPromise && this.loadPromise.resolve(data);
            this.loadPromise=null;
        },
        loadData:function(args){throw new Error("not implemented - loaddata")},

        dataset:function(criteria){
            var args=typeof(criteria)=="string"?{criteria:criteria}:criteria
            return this.load(args);}
    });

    Active.Cookie=(function(){
        function createCookie(name,value,days) {
            var expires = ""
            if (days) {
                var date = new Date();
                date.setTime(date.getTime()+(days*24*60*60*1000));
                expires = "; expires="+date.toGMTString();
            }
            document.cookie = name+"="+value+expires+"; path=/";
        }

        function readCookie(name) {
            var nameEQ = name + "=",ca = String(document.cookie).split(';');
            for(var i=0;i < ca.length;i++) {
                var c = ca[i];
                while (c.charAt(0)==' ') c = c.substring(1,c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
            }
            return null;
        }

        function eraseCookie(name) {createCookie(name,"",-1);}
        return {
            set:createCookie,
            get:readCookie,
            clear:eraseCookie
        }
    })();
    Active.LocalStorageProvider=Klass( Active.Provider,{
        type:null,storage:null,local:null,storekey:null,//local or session
        init:function(type){
            this.storekey="storekey_"+Date.now();
            this.storage=Data.Storage(this.type||"local")
            this.storage.setItem(this.storagekey,this.local={});
        },
        getUniqValues:function(col){var p=Promise.deferred();
            var res=this.store?this.store.getList(true).pluck(col).uniq():null
            p.resolve(res);return p

        },
        update:function(rec){
            var map=this.getDataForUpdate(rec,true),p=Promise.deferred();;
            if(!map){return}

            this.local[map.id]=map;
            this.storage.setItem(this.storekey,this.local)
            this.fire("data",{action:"update",record:rec})
            p.resolve(rec)
            return p
        },
        insert:function(rec){
            var map=this.getDataForUpdate(rec),id=rec.id||(Date.now()+Math.round(Math.random()*100)),
                p=Promise.deferred();
            if(!map){p.resolve(null)
                return p
            }
            this.local[id]=map;
            this.storage.setItem(this.storekey,this.local)
            rec.id=id
            this.fire("data",{action:"insert",record:rec})
            p.resolve(rec)
            return p
        },
        "delete":function(rec){
            var p=Promise.deferred();
            delete this.local[rec.id]
            this.storage.setItem(this.storekey,this.local)
            this.fire("data",{action:"delete",record:rec})
            p.resolve(rec)
            return p
        },
        persist:function(data0){
            var data=data0||(this.store?this.store.collect(function(it){return it.toMap(true)}):[])
            if($.isArray(data)){this.local=data.reduce(function(m,it){m[it.id]=it;return m;},{});}
            this.storage.setItem(this.storekey,this.local)



        },

        loadData:function(argmap,onload, pager){argmap=argmap||{}
            var al=this.storage.getItem(this.storekey);
            var alld= Object.keys(al).map(function(it){return al[it]})
            if(typeof(argmap.criteria)=="function"){alld=alld.filter(argmap.criteria)}
            //Active.Loader
            this.loadLoadCompleted(alld)
            if(typeof(onload)=="function"){onload(al)}
            return alld;
        },
        getRecord:function(id){ return Promise.resolve(this.local[id])}
    }) ;
    Active.readDataset=function(nm,data,config){  config=config||{}
        var  res={},ent//,pr=Promise.deferred();

        if(nm && typeof(nm)=="object"){data=nm;nm=config.name}
        if(typeof(data)=="string"){
            if(data.charAt(0)=="{"){
                res=Function("js","return eval(js)")("("+data+")");
            } else {
                res.rows=data.split(/\n/);
                res.datadef=res.rows.shift()
            }
        } else if(data){
            if(data.meta){   res.datadef=data.meta  }
            if(data.data){  res.rows=data.data }
            else if($.isArray(data)){res.rows=data}

        }
        var store=     config.store

        var pr=   Active.defineEntity(nm,res.datadef).then(
            function(ent){
                if(config.onMeta){config.onMeta(ent)}
                if(res.rows&&res.rows.length){
                    res.rows=res.rows.map(function(line,i){
                        return  (typeof(line)=="string" )?line.split(/,/) : line
                    });
                }
                if(!store && ent){
                    store=new Active.store(ent)
                    if(config.onStore){config.onStore(ent)}
                }
                if(typeof(config.callback)=="function") {pr.then(config.callback)}

                if(config.doadd){
                    if(store  && res.store && res.rows){
                        store.observer.once("dataloadcompleted",function(){pr.resolve(res)});
                        store.addAll(res.rows);
                    }
                }  else { pr.resolve(res)}
            }
        )



        return pr
    }

    Active.RandomDataProvider=Klass(Active.LocalStorageProvider,{
        store:null, random:null,
        init:function(store){if(store){this.store=store;}
            this.random||(this.random=Util.random.setup());
        },
        loadData:function(numberofrows,onload, pager){ numberofrows||(numberofrows=100);
            var fns=[],nms=[]  ;
            if(this.store){
                this.random||(this.random=Util.random.setup());
                this.store.meta.eachItem(function(c,nm){
                    var r,nm0=nm.toLowerCase(),fn= c.typeInfo.random
                    if(nm=="id"){r=(function(){var __counter=0;return function(){return ++__counter}})();}
                    else{ if(nm0!="name"&&/name$/.test(nm0)){nm0=nm0.replace(/name$/,"").replace(/\W/g,""); }
                        if(typeof(Util.random[nm0])=="function"){fn=Util.random[nm0]}
                        r=fn.bind(Util.random);
                        if(!r || r()==null){
                            r=function(){return ""} }
                    }
                    fns.push(r);nms.push(nm)
                });
                var rows=[],ln=nms.length
                while( --numberofrows>=0){   var d={}
                    for(var i=0;i<ln;i++){
                        d[nms[i]]=fns[i]();
                    }
                    rows.push(d)
                } ;
                // this.persist()
                if(typeof(onload)=="function"){onload(rows)}
                this.loadLoadCompleted(rows)

            }
        }
    });
    Active.UrlProvider=Klass(Active.Provider,{    resURL:null,entity:null,includelookups:null,
        url:null,PATH:null,store:null,reader:null, _lookupcache:{},
        "static.getBasePath":function(){
            return this.PATH||(this.PATH=location.href.split("/").slice(0,4).join("/")+"/");;
        },
        init:function( url,reader,onload){
            this.reader=reader;  this.isLocal=false
            if(!Data.workerservice){
                //Data.workerservice=$.services.ServiceImpl.asWorkerScript("js/DataService.js",["loaddata"])
            }
            if(typeof(onload)=="function"){
                this.on("load",onload)
            }
            this.setUrl(url)

            // if(this.store){this.store.pager.isCachedLocal=false}

        },
        setUrl:function(url){
            this.resURL=ResURL.from(url)
            if(!this.entity&&this.resURL.args.entity){this.entity=this.resURL.args.entity}
            this.url=this.resURL.url
            //if(this.PATH&&typeof(url)=="string"&&!/[^\w_]/.test(url)){url=this.PATH+"?entity="+url}
            // if(url){this.url=ZModule.ResourceURL.resolve(url)}
        },
        clearCache:function(){this._lookupcache={}},
        getUniqValues:function(col0){  var col=col0
            var promise=Promise.deferred();
            if(this._lookupcache&&this._lookupcache[col]){
                promise.resolve(this._lookupcache[col])}
            else{
                var meta=this.entity||((this.store||{}).meta||{}).name//,u=this.fixUrl(this.url)
                this.resURL.updateArgs({ entity:meta,columns:"distinct:"+col })
                var pr= this.resURL.load(),cache=this._lookupcache
                //  var pr= $.xhr.get(u,{args:{ columns:"distinct:"+col }}),cache=this._lookupcache;
                pr.then(function(d){var nm=col,lst=(d.data||d);
                    var res= $.isArray(lst)?lst.map(function(it){if(!(nm in Object(it))){nm=Object.keys(it)[0]}
                        return it[nm]||""}):null  ;
                    if(d.page){}
                    cache[col]=res
                    promise.resolve(res)
                })
            }
            return promise
        },

        loadData:function( args,onload){
            if(args&&args.page&&args.page.properties){
                args.page=args.page.properties.toMap()
            }
            if(args&&args.page&&args.page.filter){
                args.page.filter=String(args.page.filter).replace(/it\./g,"").replace(/\.IN\s*\(/," in (").replace(/IN\(\s*(\w+),/,function(a,b){return b+" in ("})
            }
             this.resURL.updateArgs(args)
            if(Data.workerservice){
                Data.workerservice.loaddata(this.resURL.build(),onload)
            }
            else{
                this.resURL.load(onload)
            }
        } ,
        insert:function(rec,store){
            var recuuid=null
            store=store||this.store
            if($.isPlain(rec)){

            } else if(rec.uuid) {recuuid=rec.uuid()}
            var pr=Promise.deferred()
            var data=this.getDataForUpdate(rec)
            if(!data){
                pr.reject("Nothing to insert")
            } else {

                this.resURL.updateArgs({entity: this.entity, save: 1})
                $.xhr.post(this.resURL.build(), {params: {data: data}}, function (rest) {
                    var nu, rec = rest.data || rest
                    if (rest ) {

                        this.observer.fireAsync("data", {
                            target: this,
                            type: recuuid ? "update" : "insert",
                            record: rec
                        });
                        /*this.store.observer.fireAsync("data", {
                         target: this,
                         type: recuuid ? "update" : "insert",
                         record: nu
                         });*/
                    }
                    pr.resolve(nu || rec)
                }.bind(this))
            }
            return pr
        },
        "delete":function(id){
            var pr=Promise.deferred(),rec
            if(id&&typeof(id)=="object"&&id.id){id=id.id}
            if(!(id&&id>0)){
                pr.reject("invalid record. A valid id is required")
            } else {
                this.resURL.updateArgs({entity: this.entity, del: 1,id:id})
                $.xhr.jsonp(this.resURL.build(), {params: {data: {id: id}}}, function (rest) {

                    this.observer.fireAsync("data",  {target: this, id:id,type: "delete"})
                    /*if (this.store) {
                     this.store.remove(id)
                     this.store.observer.fireAsync("data", {target: this, id:id,type: "delete"});

                     }*/
                    pr.resolve();
                }.bind(this))
            }
            return pr
        },
        update:function(rec){    var p=Promise.deferred()
            if(!rec||(rec.id==null||isNaN(rec.id))){
                p.reject("invalid record. A valid id is required")
                return p
            }
            var id=rec.id,recuuid=rec.uuid?rec.uuid():null
            var data=this.getDataForUpdate(rec,true)
            if(data){
                if(Object.keys(data).length<=1){console.log("nothing to save");
                    p.reject({error:"Nothins to update"})
                    return p
                }
                this.resURL.updateArgs({entity:this.entity,save:1})
                $.xhr.post(this.resURL.build(),{data:data},function(rest){
                        if(!rest||rest.error){
                            p.reject(rest?rest.error:"request failed")
                        } else{
                            if(recuuid){rec.update(rest)}
                            this.observer.fireAsync("data",  {record:rec,target:this,type:"update"})
                            // if(this.store){
                            //     this.store.observer.fireAsync("data",{record:rec,target:this,type:"update"});
                            // }
                        }

                        p.resolve(rec||data)
                    }.bind(this)
                );

            } else{p.reject({error:"Nothins to update"})}
            return p
        }
    });
    var storeproto = {
        loader: null,
        meta: null,
        optns: null,
        pager: null,
        provider: null,
        lastAdded: null,
        defaultCriteria: null,
        stats: null,
        proxyStore: null,
        proxyStoreFn: null,

        initialize:function(meta,optns){
            this.optns=optns||{}  ;
            if(meta){this.meta=meta;}
            this._idcounter=0;
            this.stats={deleted:[]}
            this.pager=new Active.pager(this)
            this._recordCtor=Active.Record.makeStoreTemplate(meta,function(rec){
                if(rec.name=="clear" || rec.name=="reset"){return}
                this.dispatchDataEv( "value", rec.object,rec );
            })
            this.dataRecordPrototype=this._recordCtor.prototype
            this.StoreRecordProto=this._recordCtor.prototype
            this.sorter=this.sorter||function(nm){
                    if(typeof(nm)=="function"){return nm}
                    var f=this.meta.findField(nm),t=f.typeInfo
                    return function(a,b){return t.compareTo(a.get(nm),b.get(nm))}
                }
            this.optns.reader||(this.optns.reader=function(meta,data){

                if(data && typeof(data)=="object"&&data instanceof this._recordCtor){
                    return data
                }
                var  nu=   this._recordCtor.newInstance( data) ;
                if(meta.autogenid && !Number(nu.id)){
                    if(!this._idcounter&&this.getList().pluck){
                        this._idcounter  =this.size()?this.getList().pluck("id").max():0
                    }
                    nu.id=++ this._idcounter
                }
                return nu
            }.bind(this,this.meta));



            //if(!this.records){this.records=List.create()}


            if(this.optns.chainable){
                this.records = List.create().chainable(this.dataRecordPrototype)
            } else {
                this.records=List.create()
            }
            var lst=this.records

            lst.setKeyProvider(function(rec){return rec.id})
            lst.config.finders={
                prop:function(prop,val){var p=prop,v=val;
                    return function(rec){return rec.get(p)==v}
                }
            }
            lst.config.reader={read:function(data){
                if(data && data.__record__){return data}
                return this.optns.reader(data)
            }.bind(this)}

            var ths=this

            this.onpropertychange("provider",function(r){
                if(!r.value){return}
                r.value.store=ths;
                if(this._recordCtor){this._recordCtor.prototype.provider= r.value}

                r.value.on("loadstarted",function(d){
                    //ths.clear();
                })

                r.value.on("dataavailable",function(d){
                    //if(!d) {return}
                    var data=d||{},pg,fields
                    if(d.data||d.rows){data= d.data||d.rows
                        pg= d.page
                        fields= d.fields
                    }
                    if(pg){ths.pager.update(pg)}
                    ths.addAll(data, d.mode)
                })
            },true) ;
            if(this.optns.provider){
                this.provider=this.optns.provider

            }
            if(!this.provider&&Data.servicePath){
                this.provider=this.meta.getProvider(true)
                this.provider.store=this
            }
            if(this.provider){
                //this.provider.store=this
                this.provider.on("data",function(ev){
                    this.handleDataEv(ev)
                }.bind(this))

            }
            if(this.optns && this.optns.loader){this.loader=this.optns.loader}
        },
        setupProxyStore:function(){
            if(this.proxyStore){
                this.properties.remove("records")
                delete this.records;
                this.properties.add("records",{
                    descriptor:true,
                    get:function(){
                        if(!this.proxyStore){return null}
                        return this.proxyStore.records.findAll(this.proxyStoreFn||function(a){return a})
                    },
                    set:function(){ }
                })
                this.properties.remove("provider")
                this.properties.add("provider",{
                    descriptor:true,
                    get:function(){
                        return this.proxyStore && this.proxyStore.provider
                    },
                    set:function(){ }
                })
            }
        },

        addExpr:function(nm,expr){this._recordCtor.prototype.addExpr(nm,expr);return this;},
        endBatch:function(){
            if(this.StoreRecordProto){this.StoreRecordProto.sharedState.BATCHMODE=false}
            // console.log("this.templateTuple.state.__resetmode",this.templateTuple.state.__resetmode)
            return this;
        },
        startBatch:function(){
            if(this.StoreRecordProto){this.StoreRecordProto.sharedState.BATCHMODE=true}
            // console.log("this.templateTuple.state.__resetmode",this.templateTuple.state.__resetmode)
            return this;
        },
        setOriginalList:function(list,assgn){
            if(assgn===true){
                this.__origrecords=list
            }
            else{
                this.getOriginalList().reset(list)
            }
        },
        renderRecords:function(template,callback){
            var p=(this.records.size()?this.records.first():this.StoreRecordProto).prepTemplate(template)
	        var res=[]
	        for(var i= 0,l=this.records,ln= l.length;i<ln;i++){
		        var r=l[i]
		        r.index=i
		        res.push(r.applyTemplate(p))
	        }
            if(typeof(callback)=="function"){
                callback.call(this,res);
            }
            return res;
        },
        getOriginalList:function(){
            if(!this.__origrecords){
                this.__origrecords=List.create()
            }
            return this.__origrecords
        },
        getList:function(orig){

            if(this.getOriginalList().size()<this.records.size()) {
                this.getOriginalList().reset(  this.records )
            }
            return orig===true && this.getOriginalList().size() ?this.getOriginalList():this.records
        },
        clear:function(a) {
            this.records.clear(a);
            this.__origrecords && this.__origrecords.clear(a);
        },
        filter:function(fn){var orig=this.getList(true),recs=this.getList()
            if(!orig.size()){orig.addAll(recs.toArray())}
            recs.clear()
            if(fn=="_clear_"||(arguments.length==1 &&  !arguments[0])) {recs.addAll(orig.toArray());return this}
            else{
                var f=orig.findAll.apply(orig,arguments);
                recs.addAll(f)
            }
            return this
        },

        size:function(totalsize){return this.getList(totalsize===true).size()},
        sort:function(nm,dir,nopagerupdate){
            if(typeof(dir)=="boolean"){nopagerupdate=dir;dir=""}
            var l=this.getList(true);
            if(nopagerupdate!==true && typeof nm=="string") {
                if (this.pager.sortcol && this.pager.sortcol === nm) {
                    dir = (this.pager.sortdir || 1) * -1;
                }
                this.pager.sortcol = nm;
                this.pager.sortdir = dir || 1;
            }
            if(!nm){return}
            if(!l.size()){return this}
            l.sort(this.sorter( nm));
            var rev=(dir=="d"||dir=="-"||dir=="0"||dir=="-1")
            if(rev){l.reverse()}
            l.forEach(function(it,i){it.viewindex=i})
            return this;
        },
        applySortAndFilter:function(pager,mode) {
            if(!(pager&&typeof(pager)=="object")){pager=null}
            pager=pager||this.pager
            if(pager && pager.isCachedLocal) {
                if (pager && pager.filter) {
                    this.filter(pager.filter)
                }
                if (pager && pager.sortcol) {
                    this.sort(pager.sortcol, pager.sortdir, true)
                }
            }
            return this
        },
        on:function(nm,fn,optns){
            if(typeof(nm)=="string"){var arr=[],type="data"
                if(nm.indexOf(":")>0){
                    arr=nm.split(":")
                    type=arr.shift()
                    nm=arr.join(":")
                }
                var idarr=nm.split(".")

                if(["value","update","insert","delete","add","load"].indexOf(idarr[0])>=0){
                    nm=idarr.shift()
                    var action=nm,cb=fn;
                    this.observer.on(type+(idarr.length?("."+idarr[0]):""),function(rec){
                        if(rec.action==action){
                            cb.call(this,rec)
                        }
                    },optns)
                    return this
                }

            }
            this.observer.on(nm,fn,optns)
        },
        addRecords:function(data0,mode){
            if(!data0){return}
	        var st=Date.now()
             var batchsize=200,data,startbatch=this.StoreRecordProto&&this.StoreRecordProto.sharedState.BATCHMODE;

            if(!data0){data=[]}
            else{if(data0.rows){data=data0.rows} else{data=data0.data||data0}
                if(data.rows){data=data.rows}
            }
            data=$.isArray(data)?data:[data];
            var origrecs=this.getList(true),ordered=[] ,nulst=[];;
            if(!origrecs.length){origrecs.push.apply(origrecs,this.getList().toArray().slice())}
            var idlist=origrecs.map(function(it){return String(it.id)})  ,
                idlist2=this.getList().map(function(it){return String(it.id)
                })
            //idlist.sort();
            var mod=0
            if(mode===true){
                this.getList().clear()
                nulst=data.slice()
            } else {
                //nulst=data.slice()
                for(var i=0, l=data, ln=data.length, r; r=l[i], i<ln; i++) {
                    var idx=idlist.indexOf (String (r.id));
                    if(r &&r.id&& idx>=0){
                        origrecs[idx].update(r);
                        if(origrecs[idx].mod().length){
                            mod=1
                        }
                    }
                    if(idlist2.indexOf (String (r.id)) == -1) {
                        nulst.push (r)
                    }

                }
            }

            //if no new records .. preserve the order of incoming data
            if(!nulst.length) {
                /*var nuid=data.map(function(it){return String (it.id)})
                 for(var i=0,l=nuid,ln=nuid.length,r;r=l[i],i<ln;i++){
                 var idx=idlist.indexOf(r);
                 if(  idx>=0){
                 ordered.push(origrecs[idx])
                 }else{ordered.push(data[i])}
                 }
                 var nuid2=ordered.map(function(it){return String (it.id)})
                 if(nuid2.toString()!=nuid.toString()) {
                 mod=1
                 this.getList().reset(ordered);
                 this.lastAdded = this.getList().last()
                 }*/

            }else{
                mod=1
                if( this.optns.loadasync && nulst.length>batchsize){
                    var lst=nulst   ;
                    if(!startbatch){this.startBatch();}
                    var dd= nulst.slice(),tot=dd.length,bnd=function(lst,remaining,last){
                        this.getList().addAll(lst );
                        this.observer.fireAsync("dataloadprogress",{total:tot,pending:remaining,processed:tot-remaining,perc:((tot-remaining )/tot)*100});
                        if( last===true){ data=  this.getList().last() ;
                            this.endBatch()
                            this.dispatchDataEv("load",data );
                            this.fire("datasetModified","load");
                            this.fire("dataloadcompleted");
                            this.getList(true).reset(this.getList().slice());
                             return 0
                        }

                    }.bind(this )
                    var f=$.debounce(bnd,true);
                    var last=dd.pop()
                    if(this.pager.pagesize>0){bnd.call(this,dd.splice(0,this.pager.pagesize+10),dd,false) }
                    while(dd.length){f(dd.splice(0,batchsize),0,false)}
                    f([last],0,true);
                     return this
                } else {
                    if( nulst.length){
                        if(startbatch){this.startBatch();  }
	                    var lst=this.getList()
                        this.lastAdded=lst.addAll(nulst).last()
                         if(startbatch){this.endBatch()}
                    }
                }
            }
            this.getList().getObserver().on("clear",function(r){

            })

            if(mod) {

                var mode=nulst.length > 1 ? "load" : (nulst.length ? "insert" : "update")
                this.dispatchDataEv(mode,this.lastAdded );
                this.fire("datasetModified", "load");
                this.fire("dataloadcompleted");
            }
            return this;
        },
        handleDataEv:function(ev){
            var store=this,nu,  record=ev.record||{},id=ev.id||record.id

            if(id){
                nu= store.find( id)
            }
            if(ev.type=="delete"){
                if(ev.id){var deleted=store.stats.deleted||[]
                    var rem=deleted.find(function(r){return r && r.id==ev.id})
                    if(rem){deleted.splice(deleted.indexOf(rem),1)}
                    else{
                        store.dispatchDataEv("delete",nu );
                    }
                }
                nu && store.records.remove(nu)
                return
            }
            if(ev.type=="insert"){
                if(!nu){
                    store.add(record)
                    nu=store.lastAdded
                } else {
                    nu.update(record)
                    nu.id=record.id
                }

            }
            if(id > 0 && record){
                record.id=id
            }
            nu && nu.update( record);
            if(id > 0 && nu){
                nu.id=id
            }
            nu && nu.resetStatus()
        },
        dispatchDataEv:function(type,record,evrecord){
            this.fire("data", {
                action: type,type: type,
                record: record,datarecord:evrecord
            });
        },
        addAll:function(data,mode){
            return this.addRecords(data,mode);

        },
        load:function( ){
            var a=[].slice.call(arguments);
            var optns={},callback
            if(typeof(a[a.length-1])=="function"){callback= a.pop()}
            if(!a.length){
                optns={}
            }
            else if(a.length==1){
                if($.isPlain(a[0])){optns=a[0]}
                else if(a[0]===true){optns.includelookups=false}
                else if(typeof(a[0])==="string"){optns.criteria=a[0]}
                else if(typeof(a[0])==="number"){optns.criteria="id="+a[0]}
            } else {
                alert("args")


            }
             var p=optns.pager||this.pager,pr;
            if(callback){optns.callback=callback}
            if(optns.includelookups==null && this.includelookups!=null){
                optns.includelookups= this.includelookups;
            }
            if(optns.includelookups==null && p && p.includelookups!=null){
                optns.includelookups= p.includelookups;
            }
            optns.store=this;
            if((!this.provider && !optns.criteria && p && p.pagesize!=-1  && p.getPage) ){
                pr=p.getPage()
             } else if(this.provider){
                if(p && p.properties && p.properties.toMap){
                    optns.page=p.properties.toMap()
                }
                pr=this.provider.load(optns);
            }
            return pr;
            //return this.provider?this.provider.load(data,doload):null
        },

        getMods:function(){
            return this.stats.deleted.concat(this.getList(true).findAll(function(a){return a && a.mod()}))
        },
        hasMods:function(){
            return this.getMods().length;
        },
        remove:function(data,nostats){
            var id=data.id||data
            var rec=this.findById(id)
            if(rec&&!nostats){
                this.getList().remove(rec)
                this.getList(true).remove(rec)
                if(this.stats.deleted && this.stats.deleted.indexOf(rec)==-1) {
                    rec.__deleted=true;
                    this.stats.deleted.push(rec)
                }
            }
            this.applySortAndFilter()
            this.dispatchDataEv( "delete", rec );
            return this;
        },
        addRecord:function(data,pos){
            var id=data.id
            this.add(data,pos);
            if(id){return this.findById(id)}
            return this.lastAdded;
        },
        add:function(data,pos){
            if(data && data.id){
                var rec=this.findById(data.id)
                if(rec){
                    rec.update(data)
                    this.applySortAndFilter()
                    return this;
                }
            }
            return this.addRecords([data]);
        },
        update:function(rec,data){
            if(rec===true){rec=this.lastAdded}
            if(rec && rec.update&&data&&typeof(data)=="object"){
                rec.update(data);
                this.applySortAndFilter()
                this.dispatchDataEv( "update", rec );
            }
        },
        findById:function(id,onlyvis){
            return this.records.findById(Number(id))
        },
        clone:function(){
            var nu=new Data.store(this.properties.toMap());
            nu.setOriginalList(this.getList(true).clone(true))
            nu.records=this.getList().clone(true)
            return true;
        },
        findBy:function(nm,val,onlyvis){var k=nm
            var col=this.meta?this.meta.findField(nm):null
            if(col){k=col.name}
            var fn=typeof(val)=="function"?val:function(it){return  it && it[k]==val}
            return this.getList(!onlyvis).find(fn);
        }
    }
    var returnself = ["each", "clear"];
    [ "first", "last", "each", "groupBy", "collect", "find", "findAll"].forEach(function(a) {
        try {
            storeproto[a] = Function("var res=this.getList()['" + a + "'].apply(this.getList(),arguments);return " + (returnself.indexOf(a) >= 0 ? "this" : "res"))
        } catch (b) {}
    })

    Active.store = Klass(storeproto)

    Active.store.createFilteredClone = function(a, b) {
        $.fnize(b)
    }

     context.TypeInfo = TypeInfo;
    var Storage = function() {
        function a(a) {
            var b = a;
            return null == b ? b : (b && "object" == typeof b ? isNaN(+b) ? "function" == typeof(b.toJson || b.toJSON) ? b = (b.toJSON || b.toJson)() : ("function" == typeof b.toMap && (b = b.toMap()), Object.keys(b).forEach(function(a) {
                "function" == typeof b[a] && (b[a] = "FN|" + b[a].toString())
            }), b = JSON.stringify(b)) : b = +b : "function" == typeof b && (b = "FN|" + b.toString()), b)
        }

        function b(a) {
            var b = a;
            if (b && "string" == typeof b) {
                var c = b.charAt(0),
                    d = b.charAt(b.length - 1);
                "[" == c && "]" == d || "{" == c && "}" == d ? b = JSON.parse(b) : (0 == b.indexOf("FN|") || 0 == b.indexOf("function")) && (b = b.replace(/^FN\|/, ""), b = (1, eval)("(" + b + ")"))
            }
            return b
        }

        function c(a) {
            return a
        }

        function d() {
            var a = [],
                b = [],
                c = void 0;
            return {
                getItem: function(d) {
                    if (!d) return c;
                    var e = a.indexOf(d);
                    return e >= 0 ? b[e] : c
                },
                removeItem: function(a) {
                    return this.setItem(a)
                },
                setItem: function(d, e) {
                    if (!d) return c;
                    var f = e,
                        g = a.indexOf(d),
                        h = c;
                    if (g >= 0) {
                        if (h = b[g], h === f) return h;
                        if (f === c) return a.splice(g, 1), b.splice(g, 1), this.length = a.length, h
                    } else g = (this.length = a.push(d)) - 1;
                    return b[g] = f, h
                },
                has: function(b) {
                    return a.indexOf(b) >= 0
                },
                key: function(b) {
                    return a[0 > b ? this.length + b : b]
                },
                clear: function() {
                    a.length = 0, b.length = 0
                },
                length: 0
            }
        }

        function e(a, b, e, f) {
            var g = e || c,
                h = f || c,
                i = b || c,
                j = a || d(),
                k = {}, l = {}.dummyundefined,
                m = "function" == typeof j.has ? "has" : "contains" == typeof j.has ? "contains" : null,
                n = {
                    getItem: function(a) {
                        return h(j.getItem(i(a)))
                    },
                    removeItem: function(a) {
                        return this.setItem(a)
                    },
                    setItem: function(a, b, c) {
                        var d = i(a),
                            e = g(b),
                            f = d ? j.setItem(d, g(b)) : null;
                        if (!c && d && e !== l && f !== e)
                            for (var h = [].concat(k[d] || [], k["*"] || []).filter(function(a) {
                                return !a.cond || a.cond(d, e, f)
                            }); h.length;) h.shift().callback(d, e, f);
                        return f
                    },
                    key: function(a) {
                        return j.key(a)
                    },
                    on: function() {
                        var a, b = arguments[0],
                            c = arguments[2],
                            d = arguments[1];
                        "function" == typeof b && (c = d, d = b, b = ""), "function" == typeof d && (a = b ? i(b) : "*", k[a] || (k[a] = []), k[a].push({
                            callback: d,
                            cond: c
                        }))
                    },
                    clear: function() {
                        j.clear()
                    },
                    collect: function(a, b) {
                        for (var c, d = [], e = j, f = 0, g = this.length; c = e.key(f), f++; g > f) d.push(a.call(b, e.getItem(c), c));
                        return d
                    },
                    contains: function(a) {
                        return m ? j[m](a) : !(this.getItem(a) === l)
                    },
                    each: function(a, b) {
                        for (var c, d = j, e = 0, f = this.length; c = d.key(e), e++; f > e) a.call(b, d.getItem(c), c)
                    }
                };
            return $defineProperty(n, "length", {
                get: function() {
                    return j.length
                },
                set: function() {},
                configurable: !1,
                enumerable: !1
            }), n
        }
        var f = {
            local: window.localStorage,
            session: window.sessionStorage
        }, g = {};
        return function(c, d) {
            var h, i = String(c);
            return i = "sessionStorage" == i ? "session" : "local", h = !! f[i], h ? g[i] || (g[i] = e(f[i], d, h ? a : null, h ? b : null)) : e(null, d, null, null)
        }
    }();
    context.Storage = Storage, context.Storage.local = function(a) {
        var b = Storage("local");
        return a && "string" == typeof a ? 2 == arguments.length ? (b.setItem(a, arguments[1]), b) : b.getItem(a) : b
    }
    context.Storage.session = function(a) {
        var b = Storage("session");
        return a && "string" == typeof a ? 2 == arguments.length ? (b.setItem(a, arguments[1]), b) : b.getItem(a) : b
    }
    context.DB = function() {
        function a(a, b) {
            var c = _promise();
            return "function" == typeof a && c.then(a, b), c
        }

        function b(a) {
            var b = a,
                c = {
                    impl: b,
                    count: function() {
                        return b._count.apply(b, arguments)
                    },
                    size: function() {
                        return b._count.apply(b, arguments)
                    },
                    getKeys: function() {
                        return b._getKeys.apply(b, arguments)
                    },
                    get: function() {
                        return b._get.apply(b, arguments)
                    },
                    put: function() {
                        return b._put.apply(b, arguments)
                    },
                    "delete": function() {
                        return b._remove.apply(b, arguments)
                    },
                    clear: function() {
                        return b._clear.apply(b, arguments)
                    },
                    hasIndex: function() {
                        return !1
                    },
                    iterate: function() {},
                    query: function() {},
                    makeKeyRange: function() {}
                };
            return c.batch = function(a, b) {
                var c = b,
                    d = a,
                    e = [].slice.call(arguments),
                    f = ($.isArray(e[0]) ? e.shift() : null, [].concat(e || [])),
                    g = function(a, b, e) {
                        return c._batch(a, b, e), d
                    };
                return g.set = function(a, b, c, d) {
                    var e = [].concat.apply(f, [].slice.call(arguments));
                    return f.length = 0, [].push.apply(f, e.map(function(a) {
                        if (!b) return a;
                        var c = {
                            type: b
                        };
                        return "object" != typeof a ? c.key = a : c.value = a, c
                    })), g(f, c, d)
                }, g.put = function(a, b, c) {
                    return this.set(a, "put", b, c)
                }, g.remove = function(a, b, c) {
                    return this.set(a, "remove", b, c)
                }, g.get = function(a, b, d) {
                    return c._getBatch(a, b, d)
                }, g
            }(c, b), c
        }

        function c(c, e, f) {
            [].slice.call(arguments);
            f = "function" == typeof f ? f : function() {};
            var g = a(f);
            if (!d) {
                "number" == typeof e && (e = {
                    version: e
                });
                var h = "https://github.com/firien/IndexedDB-polyfill/blob/index_fix/indexedDB.polyfill.js",
                    h = "js/IDBStore.js",
                    i = {
                        storeName: c,
                        storePrefix: "IDBWrapper-",
                        dbVersion: 1,
                        keyPath: "id",
                        autoIncrement: !0,
                        indexes: [],
                        onStoreReady: function() {
                            g.resolve(this.db)
                        },
                        onError: function(a) {
                            throw a
                        }
                    };
                return Object.keys(i).forEach(function(a) {
                    e[a] = e[a] || i[a]
                }), ZModule.register("IDBStore", h).process().promise.then(function() {
                    d = {
                        db: new IDBStore(e)
                    }, d._put = function() {
                        var b, c, d, e = [],
                            f = {}, g = [].slice.call(arguments),
                            h = g.length;
                        return "function" == typeof g[h - 1] && (f.success = g.pop()), "function" == typeof g[h - 1] && (f.error = g.pop()), 2 == g.length && (d = g.shift()), c = g.shift(), c && !d && (d = c.id || c.key), d && (e.push(d), delete c.id, delete c.key), b = a(f.success, f.error), e.push(c, b.resolve, b.reject), this.db.put.apply(this.db, e), b
                    }.bind(d), d._count = function(b, c, d) {
                        var e = a(c, d);
                        return this.db.count(e.resolve, e.reject), e
                    }, d._get = function(b, c, d) {
                        var e = a(c, d);
                        return this.db.get(b, e.resolve, e.reject), e
                    }, d._getKeys = function() {}, d._getAll = function(b, c) {
                        var d = a(b, c);
                        return this.db.getAll(d.resolve, d.reject), d
                    }, d._remove = function(b, c, d) {
                        var e = a(c, d);
                        return this.db.remove(b, e.resolve, e.reject), e
                    }, d._clear = function(b, c) {
                        var d = a(b, c);
                        return this.db.clear(d.resolve, d.reject), d
                    }, d._batch = function(b, c, d) {
                        var e = a(c, d);
                        return this.db.batch(b, e.resolve, e.reject), e
                    }, d._getBatch = function(b, c, d, e) {
                        var f = a(c, d);
                        return this.db.getBatch(b, f.resolve, f.reject, e), f
                    }, g.resolve(b(d))
                }), g
            }
        }
        var d = window.indexedDB;
        return {
            open: function() {
                return c.apply(this, arguments)
            },
            createStore: function(a) {
                return c.apply(this, [a, 1].concat([].slice.call(arguments, 1)))
            },
            close: function() {}
        }
    }


})(self.Data = {});
;$.__css = function( $d,CACHES){
    var SUPPORTSCALC=null,__domworker=null
    var CONVERTTOREM=true,BASEREMRATIO=0,varMap={}, calcMap={},_proxy,remcalc=null,remworker=null,MAGICNUM=0.1991,remcalcCached=MAGICNUM,dimmatcher=/(\-?[\d\.]+)([a-z]+)$/i,checkcnt=0
    var NOUNITS=['columnCount','fillOpacity','flex','flexGrow','flexShrink','fontWeight','lineClamp','lineHeight','opacity','order','orphans','strokeOpacity','widows','zIndex','zoom'];
    function _el(el){
        return $d.toEl(el)
    }
    function num(v){
        if(v==null){return 0}
        if(typeof(v)=="number"){return Number(v)}
        if(typeof(v)=="string"){
            return Number(v.replace(/[^\d\.]/g,""))||0;
        }
        return 0;
    }
    function supportsCalc(){
        if(SUPPORTSCALC==null){
            var w=document.body.appendChild(document.createElement("div"));
            w.style.height="100vh"
            var initheight=w.offsetHeight
            w.style.height="calc(100vh-10px)"
            SUPPORTSCALC=Math.abs((initheight-10) - w.offsetHeight) < 5;
            document.body.removeChild(w)
        }
        return SUPPORTSCALC
    }
    var resizelistener=null
    function remratio(){
        if(!BASEREMRATIO){
            remworker=remworker||document.body.appendChild(document.createElement("div"));
            remworker.style.cssText="margin:0;overflow:hidden;padding:0;padding:0;border:none;position:fixed;height:1px;width:1px;top:-1px;left:0;z-index:0"
            remcalc=document.body.appendChild(document.createElement("div"));
            remcalc.style.cssText="margin:0;overflow:hidden;padding:0;padding:0;border:none;position:fixed;height:1px;width:1rem;top:-1px;left:0;z-index:0"
            BASEREMRATIO=remcalc.offsetWidth
            //remcalc.parentNode.removeChild(remcalc)
            //alert(BASEREMRATIO)
            console.log(BASEREMRATIO)
        }
        if(!resizelistener && typeof($d)!="undefined" && $.viewport){
            $d.__resetRemRatio = $d.__resetRemRatio||function(){  BASEREMRATIO=0; };
            $.viewport.on(resizelistener=function(){
                BASEREMRATIO=0;
            })
        }
        return  BASEREMRATIO//remcalc.offsetWidth
    }
    function topx(val){
        var dim,num
        if(typeof(val)=="number"){num =val}
        else if(typeof(val)=="string"){
            var m=val.match(dimmatcher)
            if(m){
                dim=m[2];num=Number(m[1])||0
            }
        }
        if(dim=="px"){return num}
        if(num && (!dim || dim=="rem")){return num*remratio()}
        else {
            if(dim){
                //var r=remratio()
                //remworker.style.width= val;
                num=null;
                return val
            }
        }
        return num==null?val:num
    }
    function torem(val){
        var dim,num
        if(typeof(val)!="string"){return val}
        var m=val.match(dimmatcher)
        if(!m){
            return val
        }
        dim=m[2];num=Number(m[1])||0
        if(dim!="px"  || !num || (num>0 && num<=1)){return val}
        if(num && (dim=="px")){return (num/remratio()).toFixed(3)}
        else {return val
            /*if(dim){
             var r=remratio()
             remworker.style.width= val;
             return remworker.offsetWidth?(remworker.offsetWidth/remratio()).toFixed(3):val
             }*/
        }
        return num==null?val:num
    }
    function  converttorem(  str){var r=remratio();
        var htmlblocks=[],cache={}
        var ret = str.replace(/([\d\.]+)px/g,function(a,b){
            if(cache[b]){return cache[b]}
            var n=Number(b);
            if(!n || n<=1){return a}
            return cache[b]=(n?((n/r).toFixed(3)):0)+"rem"
        })
        htmlblocks.length=0;htmlblocks=null;cache=null;
        return ret
    }
    function _css(el ,ky){el=_el(el);if(!el){return}
        var args=[].slice.call(arguments,2),notranslate
        if(args[args.length-1]===true){notranslate=args.pop()}
        if(el==document){el=el.documentElement||el}
        var m={},res ,tp=typeof(ky),frst=args[0];
        if(typeof(frst)==="undefined"&&args.length==1){args=[]}
        if(Array.isArray(el)){
            res=[];
            for(var i= 0,ln=el.length;i<ln;i++){res.push(_css.apply(null,[el[i],ky].concat(args)))};
        } else if(tp=="string"){ var doset=typeof(frst)!="undefined"
            if(ky=="rotate"){res=$d.rotation(el,frst)}
            else{
                if(ky=="skew"||ky=="translate"){if(doset){frst=String(frst).indexOf(ky)==-1?(ky+"("+frst+")"):frst}else{res=""};ky="transform";}
                res=_css.get(el,ky);
                res=doset?_css.set(el,ky,frst,res,notranslate):res
            }
        }
        else if(tp=="object"){
            if(Array.isArray(ky)){res=_css.getMulti(el,ky )}
            else if(tp=="object"){_css.setMap(el,ky,notranslate);res= el}
        }
        return (res&&res.nodeType)?$d(res):res;
    }
    function _getComputed(el0){
        var el=document.body;
        var computedStyle=(document.defaultView&&document.defaultView.getComputedStyle)?(function(vw){
                var f=vw.getComputedStyle;
                return function(el){return el?f((el.el||el),null):null}})(document.defaultView)
                :("currentStyle" in el)?function(el){
                if(!el){return null}
                var e=("el" in el?el.el:el),stl= e.currentStyle
                if(!stl){e.offsetHeight;
                    e.style && (e.style.zoom=1); stl= e.currentStyle
                    if(!stl&&"currentStyle" in e){
                        while(!e.currentStyle){e.style.zoom=.99;e.offsetHeight;e.offsetWidth;e.style.zoom=1;}
                    }
                }
                return stl
            }:function(el){return el?(el.el||el).style:null}
            ;
        _css.getComputed=computedStyle;
        return el0?computedStyle(el0):null

    }

    function _notify(el,rec){  return;
        if(!(el._islistening&&el._islistening.indexOf("propertychange")>=0)){return}
        setTimeout(
            function(){$d(el).trigger( "propertyChange",{data:rec})}
            ,0);
    }
    function applyVars(string){
        if(!_css._varmap){_css.setVarMap()}

        if((string&&(string.indexOf("@")>=0||string.indexOf("$")>=0))&&_css._varmap){
            return string.replace(/[@\$]([\-\w]+)/g,function(a,k){return (_css._varmap[k]||{}).val||k})
        }
        string=converttorem(string)

        return string
    }
    function calcresolver(delegate,prop,fn,val){
        if(fn=="val" || fn=="px"){return num(val)}
        if(!delegate){return 0}

        if(fn=="perc"){
            var par=$d.parent(ctx.delegate)
            if(par){
                var u=prop.charAt(0).toUpperCase()+prop.substr(1)
                if(par["offset"+u]!=null){
                    return par["offset"+u]*val
                }
                return num(par.css(prop))*val
            }
            return 0
        }


        if(prop=="attr"){
            return   delegate?num($d.prop(delegate,prop)):0;
        }
        val=num(val)
        if(fn=="vh"){ return $.viewport.height*val}
        if(fn=="vw"){ return $.viewport.width*val}
        if(fn=="vmax"){ return Math.max($.viewport.height,$.viewport.width)*val}
        if(fn=="vmin"){ return Math.min($.viewport.height,$.viewport.width)*val}
        var worker= __domworker
        if(!worker){
            worker=document.body.appendChild(document.createElement("div"))
            worker.style.position="fixed" ;
            worker.style.height="1px"; worker.style.width="1px"
            worker.style.overflow="hidden"
            __domworker=worker
        }
        //worker.style.display=""
        $d.css(worker,prop,val+fn);
        var ret= num($d.css(worker,prop));
        worker.style.height="1px"; worker.style.width="1px";
        return ret
    }
    function calcExprhandle(a,nm){
        if(/([\-\+\*\/])/.test(a)){return a};
        if(/^([\d\.]+)(rem|rm|px|\%|in|vh|vw|vmax|vmin)?$/.test(a)){
            return a.replace(/^([\d\.]+)(rem|rm|px|\%|in|vh|vw|vmax|vmin)?$/,function(a,b,c){c=c||"val";return "_(this,'"+nm +"','"+(c=="%"?"perc":c)+"',"+b+")"})
        }
        return "_('attr','"+a+"')"
    }
    function parseCalcExpr(nm,expr){
        expr=expr.trim().replace(/^calc\s*\(|\)$/g,"").trim()
        var varmap=_css._varmap||{}
        expr=(expr+" ").replace(/[@\$]([\-\w]+)\s/g,function(a,k){return (( varmap[k]||{}).val||k)+" "}).trim()

        return Function("_"," return "+expr.replace(/([\-\+\*\/])/g," $1 ").split(/\s+/).map(function(val){
                 return calcExprhandle(val,nm)
            }).join(" "))
    }
    var calcREsolvers={
        "%":function resolveCalcPerc(prop,val){
            return calcREsolvers.perc(prop,val)
        },
        "perc":function resolveCalcPerc(prop,val){
            return function(el){
                var par=el.offsetParent||el.parentNode
                if(!par){return 0}
                if(prop=="height"){return (par.offsetHeight||Number(String(document.defaultView.getComputed(par).height).replace(/[a-z]+$/i,""))) * val}
                if(prop=="width"){return (par.offsetWidth||Number(String(document.defaultView.getComputed(par).width).replace(/[a-z]+$/i,""))) * val}
                return 0
            }
        },
        "vh":function resolveCalcPerc(prop,val){
            return function(el){return $.viewport.height}
        },
        "vw":function resolveCalcPerc(prop,val){
            return function(el){return $.viewport.width}
        },
        "vmax":function resolveCalcPerc(prop,val){
            return function(el){return Math.max($.viewport.height,$.viewport.width)}
        },
        "vmin":function resolveCalcPerc(prop,val){
            return function(el){return Math.min($.viewport.height,$.viewport.width)}
        },
        "px":function resolveCalcPerc(prop,val){
            return function(el){return val}
        },
        "rem":function resolveCalcPerc(prop,val){
            return function(el){return val*16}
        },
        "em":function resolveCalcPerc(prop,val){
            return function(el){return val*16}
        },
        "unit":function resolveCalcPerc(prop,val,unit){
            return function(el){return val}
        },
        "nounit":function resolveCalcPerc(prop,val){
            return function(el){return +val}
        },
        "val":function resolveCalcPerc(prop,val){
            return function(el){return (+val)||0}
        }
    }
    var calcops={
        "-":function(l,r){
            return function(el){
                return l(el) - r(el)
            }
        },
        "+":function(l,r){
            return function(el){
                return l(el) + r(el)
            }
        },
        "*":function(l,r){
            return function(el){
                return l(el) * r(el)
            }
        },
        "/":function(l,r){
            return function(el){
                return l(el) / r(el)
            }
        }
    }
    var calcMap_processed={}
    function resolveCalcs(){
        for(var k in calcMap_processed){
            var m=calcMap_processed[k]
            if(m && m.selector){
                for(var i= 0,l=document.querySelectorAll(m.selector),ln=l.length;i<ln;i++){
                    var el=l[i],val=m.fn(el)
                    el.style[m.prop]=val+"px";
                }
            }
        }
    }
    function parseCalc(prop,expr){
        var v = expr.split(/\s+/);
        var lft=(String(v[0]).match(/(\d+)(\D+)?$/)||[]).slice(1);
        var rght=(String(v[2]).match(/(\d+)(\D+)?$/)||[]).slice(1);
        var op=v[1]||"";
        var lres,rres
        var val=Number(lft[0]),unit=String(lft[1]||"").toLowerCase()
        if(!unit){lres=calcREsolvers.nounit(prop,val)}
        else if(!calcREsolvers[unit]){lres=calcREsolvers[unit](prop,val)}
        else {lres=calcREsolvers.unit(prop,val,unit)}
        var val2=Number(rght[0]),unit2=String(rght[1]||"").toLowerCase()
        if(!unit2){rres=calcREsolvers.nounit(prop,val2)}
        else if(!calcREsolvers[unit2]){rres=calcREsolvers[unit2](prop,val2)}
        else {rres=calcREsolvers.unit(prop,val2,unit2)}

        return calcops[op](lres,rres)

    }
    function processCalc(){
        for(var k in calcMap){
            if(Array.isArray(calcMap[k])){
                for(var i= 0,l=calcMap[k],ln=l.length;i<ln;i++){
                    if(!calcMap_processed[k+"__"+l[i][0]]){
                        calcMap_processed[k+"__"+l[i][0]]={prop:l[i][0],selector:k,fn:parseCalc(l[i][0],l[i][1])}
                    }

                 }
            }
        }
    }
    function checkCalcs(selector,rules){
        if(typeof(rules)=="string"){var b=selector;
            rules.replace(/([\w\-]+)\s*:\s*calc\(([^\)]+)\)/mg,function(a,c,d){
                var ar=calcMap[b.trim()]||(calcMap[b.trim()]=[]);
                ar.push([c.trim(),d.trim()])
            })
        } else {
            selector.replace(/^\s*([^{]+){.*?([\w\-]+)\s*:\s*calc\(([^\)]+)\)/mg,function(a,b,c,d){
                var ar=calcMap[b.trim()]||(calcMap[b.trim()]=[]);
                ar.push([c.trim(),d.trim()])
            })
        }
        processCalc()
    }
    _css.getCalcs = function(){
        return calcMap
    }
    _css.checkCalcs = checkCalcs
    _css.applyVars = applyVars
    _css.setStyle = function (el0,ky,val ){
        var el=el0.el||el0,rem=val?torem(val):val
        if(rem!=val && !isNaN(rem)){rem=rem+"rem"}
        el.style[ky]=rem
        return el0
    }
    _css.set = function (el0,ky,val,curr,notranslate,batched){
        var el=_el(el0);if(!el){return null}
        var m=_css.prep(el,ky,val,curr==null?_css.get(el,ky):curr),info;
        if(!m){return}
        ky=m.name||ky;
        info= m.info
        if(val===null||val=="-delete-"){el.style.removeProperty(ky);}

        else {
            val=m.value
            var isnum=(typeof(val)=="number" || (val && typeof(val)=="string" && !isNaN(val)));
            if(info.isDimension){
                if(isnum ){
                    if(NOUNITS.indexOf(name)>-1){
                        notranslate = true
                        //do nothing
                    }   else{
                        val = val + "px"
                    }
                }

                if (notranslate !== true && CONVERTTOREM && val && String(val).indexOf("calc") == -1) {
                    var val1 = torem(val)
                    if (Number(val1) == val1 && val != val1) {
                        val = val1 + "rem"
                    }
                }
            }

            el.style.setProperty(m.info.css,val)
        }
        if(batched){m.el=el;return m}
        _notify(el,m)
        return el;
    }

    _css.setMap = function (el0,map,notranslate){ var el=_el(el0),recs=[]; if(!(el&&map&&typeof(map)=="object")){return null}
        var props=Object.keys(map),vals=_css.getMulti(el,props)||{};
        recs=Object.keys(map).map(function(k){return _css.set(el,k,map[k],vals[k],notranslate,true) })
        _notify(el,recs);
        return el;
    }

    _css.get= function (el0,ky ){   var el=_el(el0);if(!el){return null}
        return  _css.getComputed(el) [_css.prep(el,ky).name]
    }
    _css.getMulti= function (el0,arr){ var el=_el(el0); if(!el){return null}
        var res={}, m,comp=_css.getComputed(el)
        for(var i= 0,l=$.makeArray(arr),ln=l.length;i<ln;i++){
            m=_css.prep(el,l[i])
            res[m.name]=comp[m.name];
        }
        return res;

    }
    var abbr={w:"width",h:"height","t":"top","r":"right","b":"bottom",l:"left",z:"zIndex",
        o:"overflow",op:"opacity",mxw:"max-width",mnw:"min-width",
        d:"display",bg:"background",bgc:"background-color"}
    var units={"z-index":"number","opacity":"number", "zoom":"number","border-top":"border","border-right":"border","border-left":"border","border-bottom":"border"}
    var valueabbr={"abs":"absolute"}
    var ruleabbr={"abs":"position:absolute","rel":"position:relative"}
    "hwtrbl".split("").forEach(function(it){units[abbr[it]||it]="dimension"});
    units["max-height"]=units["max-width"]=units["min-height"]=units["min-width"]="dimension";
    units["radius"]="dimension"
    _css.abbr=abbr;
    _css.units=units
    _css.valueabbr=valueabbr
    _css.ruleabbr=ruleabbr
    var bdy=document.body;
    _css.fixName=function(s0){var s=String(abbr[s0]||s0);
    }
    _css.isStyle= function isStyle(k){
        if(!k || !isNaN(k) || k=="text"||k=="value"||k=="length"||k=="style"||k=="css"||k=="content"){return false}
        return  getInfo(k,true)
    }

    var _infoCache=null
    var getRecord=(function(el,nm0){
        var  recordctor=null,transormfns={
            skew:{getValue:function(){return $d.skew(this.el)},setValue:function(v){return $d.skew(this.el,v)}},
            translate:{getValue:function(){return $d.translate(this.el)},setValue:function(v){return $d.translate(this.el,v)},
                rotate:{getValue:function(){return $d.rotation(this.el)},setValue:function(v){return $d.rotation(this.el,v)}  }
            }};
        return function(el,nm0,val){
            if(!recordctor){
                var comp=$d.css.getComputed
                recordctor=function recordctor(el,nm,val){
                    this.el=$d(el);
                    this.info=getInfo(nm)
                    this.name=this.info.js
                    if(transormfns[nm]){
                        this.getValue= transormfns[nm].getValue
                        this.setValue= transormfns[nm].setValue
                    }
                    if(val!=null){this.value=val}
                    else {this.value=this.getValue()}

                }
                recordctor.prototype={
                    el:null,isStyle:true,value:null,name:null,info:null,oldValue:null,
                    getValue:function(elem){
                        var el=elem||this.el,k=this.name;
                        if(el){el=el.el||el}
                        if(typeof(el)=="string"){el=($d(el)||{}).el}
                        return el?comp(el)[k]:null//(el&&el.style)?el.style[k]||:null
                    },
                    setValue:function(v,elem){k=this.name;
                        var el=elem||this.el,k=this.name;
                        if(el){el=el.el||el}
                        if(typeof(el)=="string"){el=($d(el)||{}).el}
                        if(!el){return null}

                        if(typeof(v)=="function"){v= v.call(el,el,k)}
                        if(this.info.isDimension && !isNaN(v) && k.indexOf("line")!=0){v=v+"px"}
                        return (el&&el.style)&&(el.style[k]=v);
                    }}
                $.defineProperty(recordctor.prototype,"valueAsNumber",function(){
                    var v=this.getValue();
                    if(!v){return v}
                    if(/\s/.test(String(v))){return v}
                    if(v=="auto"||v=="inherit"||String(v).indexOf("%")>0){return v}
                    if(this.info.numeric){
                        return Number(this.info.isDimension?String(v).replace(/\D+$/g,""):this.value)||0
                    }
                    return 0;
                })
                $.defineProperty(recordctor.prototype,"valueAsInt",function(){
                    return Math.round(this.valueAsNumber)

                })
            }

            return new recordctor(el,nm0,val)
        }

    })();
    var _cachedRecords={}
    var getCachedRecord=function(el,nm0){
        var ret=_cachedRecords[nm0],e=$d(el);
        if(!ret ){
            ret=_cachedRecords[nm0]=getRecord(e,nm0)
        }
        if(ret){
            ret.el=e
        }
        return ret;
    }
    function gatherStyles(){
        if(_infoCache){return _infoCache}
        _infoCache={}
        var vendorkey,worker=document.body.appendChild(document.createElement("div"))
        var a=document.defaultView.getComputedStyle(worker,null),prefixs=[]
        for(var i=0,ln=a.length;i<ln;i++){

            var k=a[i],data= {name:k,defValue:k=="display"?"":a[k]} ;
            if(!k || !isNaN(k) || k=="text"||k=="value"||k=="length"||k=="cssText"||k=="style"||k=="css"||k=="content"){continue}
            var nm=k;
            if(k.indexOf("-")==0) {
                if(!vendorkey) {
                    vendorkey = "-" + k.substr(1).split(/-/).shift() + "-"
                }
                k = k.substr(vendorkey.length)

                data.vendor=vendorkey;

            }

            data.js= k.replace(/(^|\w)\-(\w)/g, function (a, b, c) {
                return (b || "") + c.toUpperCase()
            })
            data.css= k.replace(/[A-Z]/g, function (a) {
                return "-"+a.toLowerCase()
            });
            if(data.css.indexOf("-")>0){var arr=data.css.split("-")
                arr.pop();var prefx=arr.join("-")
                prefixs.indexOf(prefx)==-1 && prefixs.push(prefx)
                if(arr.length>1){arr.pop();prefx=arr.join("-")
                    prefixs.indexOf(prefx)==-1 && prefixs.push(prefx)
                }
            }

            data.unit=units[data.css]||units[data.css.split("-").pop()]
            data.numeric=data.unit=="dimension" || data.unit=="number",
                data.isDimension=data.unit=="dimension" ;
            if(Object.freeze){Object.freeze(data)}

            _infoCache[nm]=data
            _infoCache[data.css]=data
            _infoCache[data.js]=data
        };
        ["rotate","skew","translate"].forEach(function(k){
            _infoCache[k]= $.clone(_infoCache["transform"])
            _infoCache[k].fnname="transform"
        });
        if(!_infoCache["borderRadius"] ){
            _infoCache["borderRadius"]=_infoCache["border-radius"]={ js:"borderRadius",  css:"border-radius",isDimension:true,numeric:true}
        };
        prefixs.forEach(function(k){
            if(!_infoCache[k] ) {
                _infoCache[k] = {js: k, css: k}
            }
        });

    }


    function getInfo(nm0,nullifnot){
        if(!_infoCache){gatherStyles()}
        var nm=String(nm0)
        if(nm in _infoCache){return _infoCache[nm]}
        if((nm=abbr[nm0]) && nm in _infoCache){return _infoCache[nm]}
        if(!nullifnot){nm=nm||nm0
             return {js:nm,  css:nm,unresolved:true}
        }
        return null
    }
    var _slice=Array.prototype.slice
    _css.prep=function(el){var a=_slice.call(arguments,1),memo=a[0];
        if( typeof(memo)!="object"){
            memo={name:a[0],value:a[1],curr:a[2]}
        }
        var info,vtype
        if(!(info=memo.info)){info=memo.info=getInfo(memo.name)}
        memo.name=info.js
        if(!memo.value){return memo}
        vtype=typeof(memo.value)
        if(vtype =="function"){
            memo.value=memo.value.call($d(el),el,getCachedRecord(el,memo.name));
        }
        if(vtype==="string"){
            memo.value=_css.valueabbr[memo.value]||memo.value
            if(memo.value.indexOf("calc(")>=0 ||/\-?[\d\.]+(%|\w+)/.test(memo.value)) {
                return memo
            }
            if(/^\-?[\d\.]+$/.test(memo.value)){
                var value=Number(memo.value)
                if(!isNaN(value)){memo.value=value;vtype="number"}
            }
        }
        if((info.isDimension && vtype=="number")   ){
            if(String(memo.name).indexOf("line")!=0&&memo.value!=0){memo.value=memo.value+"px"}
            return memo
        }
        var c,unit=info.unit,v =memo.value,t=vtype,nm=memo.name;
        if( vtype!="string"|| !info.numeric||CACHES.cssvalueCache[v]===null||v=="-delete-" ||   !/\W/.test(v) ){
            return memo
        }
        var origx=memo.value;
        if(CACHES.cssvalueCache[origx]){
            v=CACHES.cssvalueCache[origx]
        }  else{
            //simple arithmatic anfd relative values - +10 , -10
            if(/^([\/\+\*]|(\- ))\s*([\d\.]+)$/.test(v)){
                var curr=_css.getNum(memo.curr|| $.css(el,nm))
                try {
                    v = (1, eval)(curr + v)
                } catch(e){
                    v=null
                }
                if(v==null){
                    var nm1=nm.charAt(0).toUpperCase()+nm.substr(1),nm2="offset"+nm1;
                    c="Number(String($d.css.getComputed(this)['"+nm+"']).replace(/[^\\d\\.\\-]/g,''))"
                    v=Function( "var el=this,it=this;return "+c+" " + origx)
                }

            }else  {
                if(/^@(\.)?([\w]+)(\([^\)]*\))?$/.test(v) ){
                    v=v.replace(/@(\.)?([\w]+)(\([^\)]*\))?/g,function(a,b,c,d){
                        if(d&&c in el && typeof(el[c])=="function"){
                            if(typeof($d[c])=="function"){
                                var args=d.replace(/^\(|\)$/g,"").split(",")
                                if(args.length){v= el[c].apply(el,args)}
                                else {v= el[c]()}
                            }
                        }
                        else if(c=="value"||c=="val"){v=$d.val(c)}
                        else if(c && _css.isStyle(c)){
                            v= _css.get(el,c)}
                        else{  var el0=el.el||el
                            if(c in el0){v=el0[c]}
                            else {v= el0.getAttribute(c)}
                        }
                        return v
                    })
                }
                if(/[^\w\.\-%]/.test(v)&&!/^\-\d+/.test(v)){
                    v=functionize( v)
                }
            }

        }
        var fn;
        if(v!=null){
            if(typeof(v)=="function"){fn=v;
                try{
                    v= fn.call($d(el),memo.name,memo.curr,memo)
                } catch(e){ fn=null; v= null;
                    CACHES.cssvalueCache[origx]=null}
            }
            if(v!=null){   var v1=v;
                if(info.numeric&&!/%$/.test(v+"")){
                    v=_css.getNum ( v1);v=v==null?v1:v
                    if(String(memo.name).indexOf("line")!=0&&info.isDimension&&!isNaN(v)){v=v+"px"}
                }
                memo.value=v
            }
        }
        if(fn&&typeof(fn)=="function"){
            CACHES.cssvalueCache[origx]=fn;
        }
        return memo;
    }

    _css.getWorkStyleSheet=function(){
        if(!CACHES.workersheet){
            var all=document.querySelectorAll("link[type='text/css']")
            if(all&&all.length){
                CACHES.workersheet=all[all.length-1]
            }
            if(!CACHES.workersheet){
                var style = document.createElement("style");
                style.appendChild(document.createTextNode(""));// WebKit hack :(
                document.head.appendChild(style);
                CACHES.workersheet=style.sheet;
            }
            if(CACHES.workersheet&&CACHES.workersheet.sheet){
                CACHES.workersheet=CACHES.workersheet.sheet
            }
        };

        //CACHES.workersheet.cssRules||(CACHES.workersheet.cssRules=CACHES.workersheet.rules);
        // var r=CACHES.workersheet.cssRuleArray||(CACHES.workersheet.cssRuleArray=[]);
        // r.length=0;
        // [].push.apply(r,$.makeArray(CACHES.workersheet.cssRules));
        return CACHES.workersheet ;
    }
    _css.findRule=function(nm){var ret={}, fn=$.fnize(nm)
        var res=$.makeArray( _queryOne("link[type='text/css']").sheet.cssRules).map(function(it){return it.cssText+""}).filter(function(s){
            return s&&fn(s)
        })
        if(res&&res.length){
            res.forEach(function(k){var arr=k.split("{");
                if(arr.length==2){ret[arr[0].trim()]=arr.join().replace(/\}\s*$/,"").trim()}
            })
        }
        return ret
    }
    _css.removeRule=function(selector,rule){
        var sheet=_css.getWorkStyleSheet();
        if(sheet && sheet.cssRules){
            var m=(sheet.deleteRule||sheet.removeRule).bind(sheet),
                rules=[].filter.call(sheet.cssRules,function(it,i){
                    return (it && it.selectorText&&it.selectorText==selector)? i+1:false}).sort();
            while(rules.length) {
                m(rules.pop()-1)
            }
        }
        delete CACHES.cssruleCache[selector]


    }
    _css.fixUrl=function fixUrl(url) {
        var arr=String(url).split(/\[\/\\]/)
        var parts=location.href.split(/#/).shift().split(/\/\//).pop().split(/\//)
        parts

    }
    _css.addRules=function addRules(selectormap) {
        var id
        if(arguments.length==2&&typeof(arguments[0])=="string"){
            id=arguments[0];selectormap=arguments[1]
        }
        CACHES.cssruleGroupCache=CACHES.cssruleGroupCache||{};

        if(id&& CACHES.cssruleGroupCache[id]){return }
        _css.addRule(selectormap)
        if(id){
            CACHES.cssruleGroupCache[id]=true
        }

    }
    function stringifyrules1(k,v,holder) {
        var val,info=getInfo(k);
        val=_css.valueabbr[v]||v
        if(info&&val!=null){
            if(k.indexOf("line")!=0&&info.isDimension&&!isNaN(String(val))){
                val=val+"px"
            }
            holder&&holder.push(info.css+":"+val)
            return info.css+":"+val
        }
        return holder
    }
    function stringifyrules(rules) {
        var ph=[], allrules=[]
        if(typeof(rules)!="string"){
            if($.isPlain(rules)){
                $.each(rules,function(v,k){ stringifyrules1(k,v,allrules) })
            }

        } else {

            if(rules.indexOf ("(data:")>=0||rules.indexOf ("(data :")>=0) {
                rules=rules.replace (/\((data\s*:[^\)]+)\)/g, function(a, b){
                    return "dataurl" + ph.push (a)
                })
            }
            if(rules.indexOf (";")>0) {
                //_css.abbr,_css.valueabbr _css.ruleabbr
                rules.split(";").map(function(k1){
                    if(_css.ruleabbr[k1]) {
                        k1=_css.ruleabbr[k1]
                    }
                    var arr=String(k1).split(":")
                    if(arr.length>1&&arr[0].trim ()) {
                        stringifyrules1(arr.shift().trim(),arr.shift().trim(),allrules)
                    }
                })
            }else {
                allrules.push (rules)
            }
        }
        var ret=allrules.join(";") +";"
        if(ph.length){ret=ret.replace(/dataurl([\d]+)/g,function(a,b){return ph[Number(b)-1]||""})}
        return ret;
    }
    _css.addRule=function addRule(selector, rules, index) {
        if(!selector){return}
        if(typeof(selector)=="object"){
            if(typeof(rules)=="number"){index=rules}
            if($.isPlain(selector)){
                $.each(selector,function(v,k){
                    addRule(k,v,index)
                })
            }
            return;
        }

        //var sheet=_css.getWorkStyleSheet();


        var nurules=stringifyrules(rules)||""
        selector=String(selector).trim()
        nurules=applyVars(String(nurules)).trim()
        if(!supportsCalc()){
            //checkCalcs(selector,String(nurules))
        }

        if(!nurules||nurules==";"){return}

        if(selector in CACHES.cssruleCache && CACHES.cssruleCache[selector]==nurules){return}
        if(!CACHES.__workersheet){
            var styleEl = document.createElement('style')
            // Append style element to head
            styleEl = document.head.appendChild(styleEl);
            // Grab style sheet
            CACHES.__workersheet= styleEl.sheet;

        }
        var sheet = CACHES.__workersheet;
        try {
            if (!(index && typeof(index) == "number")) {
                index = (sheet.cssRules || []).length
            }
        } catch(e){
            console.log(e)
            index=0;
        }
        if(!index){
            index=0
        }
        try {
            if (sheet.insertRule) {

                sheet.insertRule(selector + "{" + nurules + "}", index || 0);
            }
            else if (sheet.addRule) {
                sheet.addRule(selector, nurules, index || 0);
            } else {
            }
        } catch(e){}
        CACHES.cssruleCache[selector]=nurules
    }
    _css.parse=function(){var mp={},prefix;
        var prefixed=[].filter.call(_css.getComputed(document.body||document.documentElement ),function(it){
            return it[0]=="-"})
            .map(function(it){prefix||(prefix=it.replace(/(-[\w]+-).*/,"$1")); return it.substr(prefix.length)
            });
        qq(document ,"style").forEach(function(s){
            s.textContent.split(/}/).reduce(function(m,it){var arr=it.split(/{/);if(arr.length>1){
                m[arr[0].trim()]=arr[1].trim().split(/;/)
                    .reduce(function(m1,it1){var arr1=it1.split(/:/);if(arr1.length>1){m1[arr1[0].trim()]=arr1[1].trim()}return m1},{});
            }
                return m
            },mp);
        });
        var nu={};
        for(var k in mp){  var mm=mp[k]
            for(var k1 in mm){
                if(prefixed.indexOf(k1)>=0){nu[k]||(nu[k]=[]);nu[k].push(prefix+k1+":" +mm[k1]);}
                else if(mm[k1] && mm[k1].indexOf("gradient")>0){
                    mm[k1].replace(/(.*?)\((.*?)\)$/,function(a,b,c){
                        var arr=c.split(",")
                        arr[0]=arr[0].replace(/to\s+(\w+)/,function(a,b){return b=="top"?"bottom":b=="left"?"right":b=="right"?"left":"top"});
                        nu[k]||(nu[k]=[]);
                        nu[k].push(k1+":" +prefix+b+"("+ arr.join(",") +" )")
                    });
                }

            } }
        for(var k in nu){
            if(nu[k] && nu[k].length){_css.addRule(k,nu[k].join(";"))}
        }

    }
    function getNum(val){
        if(val==null){return null}
        if( typeof(val)=="number"){return val}
        else if( typeof(val)=="string"){
            if( /^\-?[\d\.]+([\w]{2})?$/.test(val)){
                return Number(val.replace(/[^\-\.\d]/g,""))
            }
        } else if(!isNaN(+val)){ return +val;}

        return null

    }
    _css.setVarMap=function(data,calcs){
        if(_css._varmap && Object.keys(_css._varmap).length){
            return
        }
        if(!data ){
            if($.getBootstrapData){
                data=$.getBootstrapData("cssvarmap")
                calcs=$.getBootstrapData("calcmap")
            }
        }

        if(data){
            _css._varmap=$.extend(_css._varmap||{},data)
        }
        if(calcs){
            $.extend(calcMap||{},calcs)
            if(Object.keys(calcMap).length){
                if(!supportsCalc()){
                    $.each(calcMap,function(calcarr,selector){
                        if(calcarr && calcarr.length){
                            while(calcarr.length){
                                var prop=calcarr.shift()
                                var expr=calcarr.shift()
                                if(expr){
                                   /* var fn=parseCalcExpr(prop,expr)
                                    if(fn){
                                         //fn.call(el,calcresolver)
                                    }*/
                                }
                            }
                        }
                    })
                }
            }
        }
    };
    _css.getInfo=getInfo;
    _css.getRecord=getRecord
    _css.getNum=getNum;
    _css.getComputed=_getComputed
    return _css;
}  ;
;//collection methods- each, collect, find findAll flatten keys values size
$d = self.DomCore = function(el0, props) {
    var el = el0,
        cntnr = (props && props.nodeType) ? props : document.body;
    if (cntnr === props) {
        props = null
    }
    if (!el) {
        return null
    }
    if (arguments.length == 2 && arguments[1] && arguments[1].nodeType) {
        cntnr = (arguments[1])
    }
    if (typeof(el) == "string") {
        if (el.indexOf("<") == 0) {
            if (/^<[\w]+>$/.test(el)) {
                el = el.replace(/^<([\w]+)>$/, "<$1></$1>")
            }
            el = $d.insert(cntnr, el, props)
        } else if (el.indexOf("Z:") == 0) {
            el = $d.template(el.substr(2)).render().appendTo(cntnr).lastElementChild
        }

    } else if (Array.isArray(el) || (el!==window && !el.nodeType && typeof(el.length) == "number")) {
        return cntnr ?$d.ex(cntnr).qq(el) : $d.qq(el)
    }
    return $d.ex(el)
};




(function() {
    var _dom = self.DomCore,
        core = self.CoreUtils;

   

    var asList = function() {
        var m = fixargs(arguments),
            s = m.s
        if (m.arr) {
            return m.e
        }
        if (typeof(s) == "string") {
            if (!/\W/.test(s)) {
                s = s + ",#" + s
            }
            return $.makeArray((m.e || document).querySelectorAll(s))
        } else {
            return [].concat(m.e || []).map(_el)
        }
    }
    

     if (document && !document.getBoundingClientRect) {
        document.getBoundingClientRect = function() {
            return document.body.getBoundingClientRect();
        }
    }




    function _el(s) {
        if (!s) {
            return null
        }
        if (s.nodeType || (s.el && s.el.nodeType)) {
            return s.el || s
        }
        var ret=null
        if (typeof(s) == "string") {
            try{
                if(/^[\w\_][^\s\[\(]+$/.test(s)){
                    ret=document.getElementById(s)
                }
                if(!ret){
                    ret=document.querySelector(s)
                }
             } catch(e){
                ret=null;
            }
            if (!ret) {
                ret = $d.q(s)
            }
        } else if (s && s.nodeType || s===document || s===window) {
            ret = s
        }
        return !ret ? null : (ret.el || ret)

    };

    function ancestors(ctx, cnt0) {
        var res = [],
            p = ctx,
            d = document,
            cnt = (cnt0 == null || cnt0 < 0) ? cnt0 = 10000 : cnt0;
        while (p && (p = p.parentNode) && (p !== d)) {
            if (cnt <= res.push(p)) {
                return cnt == 1 ? res[0] : res
            }
        }
        return res
    }

    function _scopedExpr(a) {
        var parts = [],
            v = String(a)
        var v1 = v.replace(/\{\{(.*?)\}\}/g, function(a, b) {
            parts.push(b.trim().replace(/@\.?/g, "it."));
            return "!" + parts.length + "!"
        });
        parts = parts.map(function(it) {
            return Function("it", "it||(it=this);with(it){return " + it.replace(/return/g, "").trim() + "}");
        });

        if (!v1.replace(/!\d!/g, "").trim()) {
            v = parts[0];
        } else {
            var parts1 = parts.slice()
            parts = v1.split(/!\d!/g, "").reduce(function(m, k, i) {
                if (i && (i % 2)) {
                    m.push(parts1.shift())
                };
                m.push(k);
                return m
            }, []);
            v = (function(arr) {
                return function(it) {
                    return arr.map(function(k) {
                        if (typeof(k) == "function") {
                            return k.apply(this, arguments)
                        } else {
                            return k
                        }
                    }, it || this).join("");
                }
            })(parts);
        }
        return v
    }

    //dom shims
    var _idCounter = 0

    function _asNumber(val) {
        return typeof(val) == "number" || !isNaN(val) ? Number(val) : Number(String(val).replace(/[^\d\.]/g, ""))
    }

    function _wrap(el0, valifnotdom) {
        var el = el0,
            nu
        if (!el || (el && el.isDomWrap)) {
            return el
        }
        if (typeof(el) == "string" && !(valifnotdom === true)) {
            el = $d.q(el)
        }
        if (!(el && el.nodeType)) {
            if(el===window){
                return setupWrap(el)
            }
            return valifnotdom === true ? el : null
        }
        if (el && el.nodeType == 3) {
            el = el.parentNode
        }
        if (!el) {
            return null
        }
        if (!el.id) {
            el.id = "anonel_" + el.tagName + "_" + (++_idCounter)
        }
        nu = setupWrap(el);

        return nu
    }

    var _arr = function(arr) {
        if(!arr){return []}
        return arr.nodeType?[arr]:[].slice.call(arr)
    };
    var _ech = function(arr, fn) {
        _arr(arr).forEach(function(it) {
            fn(it)
        })
    };

    function _callRecursively(e, prop, filter, count) {
        var el = _el(e);
        if (!el) {
            return []
        }
        var i = 0,
            res = null,
            resall = [],
            _is = $d.matches,
            doc = document,
            fn = typeof(prop) == "function" ? prop :
                function( p) {if(!this || this===self){return null}
                    return (typeof(this[p]) == "function") ? this[p].call(this) : this[p]
                },
            r ,
            filterfn = typeof(filter) == "function" ? filter :
                typeof(filter) == "string" ?
                    function(elem, i) {
                        return _is(elem, filter)
                    }
                    :
                    function() {  return 1  };
        if (typeof filter == "number") {
            count = filter
        }
        if (!count || isNaN(count)) {
            count = 100000
        }
        r = fn.call(el, prop, i);
        while (r && r !== doc && (prop in Object(r))) {
            if (filterfn(r, i)) {
                if (resall.push(r) >= count) {
                    break;
                }
            }
            r = fn.call(r,prop, i++)
        }
        return resall
    }

    function $n(v, df) {
        if (typeof(v) == "number" && isFinite(v)) {
            return v
        }
        if (typeof(v) == "string" && /^[\-\.]?[\d\.]+/.test(v)) {
            return Number(v.replace(/\D+$/g, "")) || df
        }
        return Number(df) || 0
    }
    function getFnBody(fn) {
        return fn.toString()
            .replace(/^[^{]+?{/m,"")
            .replace(/\}\s*$/,"")
            .trim()
    }
    function ensureProxy(el) {
        var info = $d.__proxywrap__,
            tag = el===window?"win":String(el.tagName).toLowerCase()

        if (!info) {

            var proto={isDomWrap: { value: true, enumerable: false, writable: false, configurable: false } ,
                el: {
                    get: (function(doc){
                        return function() {
                            var dlg=this.___delegate___
                            if (typeof(dlg) == "string") {
                                return doc.getElementById(dlg)
                            }
                            return dlg;
                        }
                    })(document),
                    set: function(el) {
                        el && (this.___delegate___ = el);
                    },
                    enumerable: true, configurable: false
                }
            };

            for(var k in $d){
                if(!(k && typeof(k)=="string") || (k.indexOf("_")==0||k=="el" )){continue}
                 if(typeof($d[k])=="function"){
                    proto[k]= { value:Function("var el=this.el;if(el){return $d['"+k+"'].apply($d,[el].concat([].slice.call(arguments)))}"),
                        writable:false,enumerable:true,configurable:true
                    }
                }
            }

            var base={},
                noop=function () {},
                templatefn=getFnBody(function __name___proxy(){
                    var k='__name__',el=this.el, fn= el?el[k]:null;
                    if(!(fn && typeof(fn)=="function")){return null};
                    var __a=[]
                    for(var i= 0,l=arguments,ln= l.length,a;a=l[i],i<ln;i++){
                        __a.push(a && a.isDomWrap ?a.el:a)
                    }
                    var res= fn.apply(el,__a);
                    return (res && typeof(res)==='object' && !res.nodeType && isFinite(res.length))?[].slice.call(res):res
                }),
                templategetterfn=getFnBody(function(){ return  this.el && this.el['__name__']}) ,
                templatesetterfn=getFnBody(function(){this.el && (this.el['__name__']=arguments[0]);})

            $.defineProperties(base, proto);
            info={
                tags:{},
                base:base,
                extend:function(target) {
                    var nu = {}, nuprops = {}
                    nu = Object.create(this.base);
                    $.each($.getAllProperties(target), function (v) {
                        var nm = v.name ;
                        if (nm == "remove" || nm=="el" || (nm in nu)|| ((v.isMethod && (nm in Object) && Object[nm]===target[nm])||
                            (v.isMethod && (nm in Object.prototype) && Object.prototype[nm]===target[nm]))) {
                            return
                        }
                        if (v.isMethod) {
                            nuprops[nm] = {
                                writable: false,
                                value: Function(templatefn.replace(/__name__/g,nm))

                            }
                        } else {
                            nuprops[nm]= {
                                set: (v.descriptor.set || v.descriptor.writable) ? Function("v", templatesetterfn.replace(/__name__/g, nm)):noop,
                                get: Function(templategetterfn.replace(/__name__/g, nm))
                            }
                         }
                        nuprops[nm].enumerable=true;
                        nuprops[nm].configurable=true;
                    });
                    Object.keys(nuprops).length && $.defineProperties(nu, nuprops);

                    var ctor = function (el) {
                        this.___delegate___=el;
                     }
                    nu.___delegate___ = null;
                    ctor.prototype = nu;
                    ctor.prototype.constructor=ctor
                    return ctor
                }
            }
            $d.__proxywrap__=info
            info.tags["body"]=info.extend(document.body);
            info.base=info.tags["body"].prototype;
        }
        if(tag=="win"){
            info.tags["win"]=info.tags["win"]||Object.create($d(document),{
                    on:{value:function(ev,fn){
                        if(ev=="load"){$(fn);return this}
                        var nm="on"+ev;
                        if(nm in window){
                            window.addEventListener(ev,fn)
                        } else{
                            $d(document).on(ev,fn)
                        }
                        return this
                    }},
                    scrollTop:{value:function(ev,fn){

                        return window.scrollTop
                    }},
                    scrollLeft:{value:function(ev,fn){

                        return window.scrollLeft
                    }},
                    off:{value:function(ev,fn){
                        var nm="on"+ev;
                        if(nm in window){
                            window.removeEventListener(ev,fn)
                        } else{
                            $d(document).off(ev,fn)
                        }
                        return this
                    }}
                })
            return info.tags["win"]
        }
        var wrap = info.tags[tag]
        if (!wrap) {
             if(tag==="doc"){
                info.tags["doc"]=info.extend(el)
            } else {
                var wrkr = document.body.appendChild(document.createElement(tag));
                //info.tags[tag] = wrap = info.base.__clone(wrkr, true);
                info.tags[tag] = wrap = info.extend(wrkr);
                wrkr.parentNode.removeChild(wrkr)
            }
         }

        return new wrap(el);
    }
    var  localcache=null
    function setupWrap(el) {
        if (el && el.isDomWrap) {
            return el
        }
        if(el && el.nodeType==3){el=el.parentNode}

        if (!(el && el.nodeType)) {
            if( el!==window){return}

        }

        var wrapped ,nu
        if(typeof($)!="undefined" && $.objectMap){
            if(localcache && localcache.kys.length){
                for(var i= 0,l=localcache.kys,ln= l.length;i<ln;i++){
                    var mp=$.objectMap.getOrCreate(l[i])
                    mp._wrappedEl=localcache.vals[i]
                }
                localcache=null;
            }

            wrapped = $.objectMap.getOrCreate(el)

        } else {
            localcache||(localcache={kys:[],vals:[]})
            var i=localcache.kys.indexOf(el)
            if(i<0){i=localcache.kys.push(el)-1}
            wrapped = localcache.vals[i]||(localcache.vals[i]={_wrappedEl:null});
        }

        if (!wrapped._wrappedEl) {
            wrapped._wrappedEl = ensureProxy(el)//.__clone(el);
         }
        nu=wrapped._wrappedEl

        return nu
    }

    var _proto = {
        el: _el,  
        holdMouse2: function(el,opts) {
            //calls the callback if mouse is not released until timeout period has elapsed.
            //if no timeout then calls the callback on mouseup.
            if(arguments.length==1){
                opts=el
                el=document.body
            }
            if(!$d(el)){return}
            var EL=$d(el),elem=EL.el
            opts=opts||{}
            function _setup(EL,optns) {
                var intervaltimer = 0, timeouttimer = 0,elem=EL.el
                if(!optns.onend && optns.end){
                    optns.onend =optns.end
                }
                if(!optns.onstart && optns.start){
                    optns.onstart =optns.start
                }
                if(!optns.onstart && optns.start){
                    optns.onstart =optns.start
                }
                function end(ev,nocallback) {
                    document.removeEventListener("mouseup", mup)
                    if(optns.endonmousemove || optns.onmove){
                        document.removeEventListener("mousemove", mmv)
                    }

                    if( optns.once){
                        elem.removeEventListener("mousedown", mdn)
                    }

                    if (intervaltimer) {
                        clearInterval(intervaltimer)
                        intervaltimer = 0
                    }
                    if (timeouttimer) {
                        clearTimeout(timeouttimer)
                        timeouttimer = 0
                    }

                    if (!nocallback && optns.onend) {
                        optns.onend.call(EL, ev, optns)
                    }
                }

                function intrval() {
                    if (optns.oninterval) {
                        optns.oninterval.call(EL, optns)
                    }
                }

                function mmv(ev) {
                    if (optns.onmove) {
                        optns.onmove.call(EL, optns)
                    }
                    if (optns.endonmousemove) {
                        end(ev, !!optns.timeout)
                    }
                }

                function mdn(ev) {
                    end(null,true);
                    if (optns.onstart) {
                        optns.onstart.call(EL, ev, optns)
                    }

                    if (optns.interval && optns.interval > 10) {
                        intervaltimer = setInterval(intrval, optns.interval)
                    }
                    if (optns.timeout && optns.timeout > 10) {
                        timeouttimer = setTimeout(function(){end(null )}, optns.timeout)
                    }
                    setTimeout(function () {
                        document.addEventListener("mouseup", mup)
                        if (optns.endonmousemove || optns.onmove) {
                            document.addEventListener("mousemove", mmv)
                        }
                    }, 1);
                }

                function mup(ev) {
                    end(ev,!!optns.timeout)
                }

                if (optns.ev && optns.ev.type == "mousedown") {
                    optns.once=true;
                    mdn(optns.ev)
                } else {
                    elem.addEventListener("mousedown", mdn)
                }

                return {
                    cancel:function(){
                        optns.once=true;
                        end(null,true);
                    }
                }
            }

            return _setup($d(el),opts);
        },
         trackMouse:(function(options){
			function docev(ev,fn,act){
					document[act+"EventListener"](ev,fn)
				}
			return function(options){	
			   (function(optns){
					optns=optns||{}
					if(typeof(optns)=="function"){ optns={move:optns} }
					$d(document.body).addClass("noselection")
					if(typeof(optns.move)!="function"){
						optns.move=null
					}
					var curpos=null,animframe=$d.util.animframe,currentdelta={pos:{x:0,y:0},delta:{x:0,y:0},el:$d(optns.target)},
						curr=optns.target?$d.offset(optns.target):null,
						pending=0
                   if(optns.applyElPos && !currentdelta.el){
                       optns.applyElPos=false
                   }
                   if(optns.applyElPos && (currentdelta.el.parent().is(document.body) || currentdelta.el.css("position")=="fixed")){
                       curr=currentdelta.el.bounds();
                   }
                   if(optns.applyElPos && currentdelta.el && optns.translate) {
                       currentdelta.translate={x:0,y:0}


                       var currtransform=$d.css(currentdelta.el,"transform")
                       if(currtransform=="none"){currtransform=null}
                       if(currtransform  ){
                           var trdata=currentdelta.el.parseTransform()||""
                           if(trdata && trdata.translate){
                               currentdelta.translate=trdata.translate
                           }
                            optns.currtransform=currtransform
                           //currentdelta.el.css({top:curr.top,left:curr.left})
                       }

                   }
					function end(ev){
						docev("mousemove",mv,"remove");docev("mousedown",end,"remove");docev("mouseup",end,"remove") 
						if(currentdelta) {
                            if(optns.applyElPos && currentdelta.el) {
                                var el = currentdelta.el.el || currentdelta.el;
                                 if (!(optns.translate )) {
                                    //optns.translate &&  el.style.removeProperty("transform")
                                    el.style.left = currentdelta.pos.x + "px"
                                    el.style.top = currentdelta.pos.y + "px"
                                }
                            }

							 typeof(optns.end)=="function" &&  optns.end.call(currentdelta.el,currentdelta,optns.memo)
							currentdelta=null
						}
						
					}
					function mv(ev){if(!currentdelta){return}
						if(!curpos){
							curpos={x:ev.x,y:ev.y}
							typeof(optns.start)=="function" &&  optns.start.call(currentdelta.el,currentdelta,optns.memo)
						}
                        if(!curr){curr=curpos}
						var delta={x:ev.x-curpos.x,y:ev.y-curpos.y}
						currentdelta.pos={x:(curr.left+delta.x),y:(curr.top+delta.y)}
						currentdelta.delta=delta
						if(pending){return}
						pending=1;
						animframe(function(){if(!currentdelta){return}
							setTimeout(function(){pending=0;},10)

                                if(optns.rect){
                                    if(optns.dims) {
                                        currentdelta.lastdelta=currentdelta.lastdelta||currentdelta.delta
                                        for (var i = 0, l = optns.dims, ln = l.length; i < ln; i++) {
                                            if (l[i] == "top" || l[i] == "height" || l[i] == "bottom") {
                                                optns.rect[l[i]] += (currentdelta.delta.y-currentdelta.lastdelta.y)

                                            }
                                            else if (l[i] == "left" || l[i] == "width" || l[i] == "right") {
                                                optns.rect[l[i]] += (currentdelta.delta.x-currentdelta.lastdelta.x)
                                            }
                                            if((l[i]=="height"||l[i]=="width")&& optns.rect[l[i]]<0){
                                                if(l[i]=="height"){
                                                    optns.rect.top=optns.rect.top+(optns.rect.height-1)
                                                    optns.rect.height=Math.abs(optns.rect.height)+1
                                                } else{
                                                    optns.rect.left=optns.rect.left+(optns.rect.width-1)
                                                    optns.rect.width=Math.abs(optns.rect.width)+1
                                                 }
                                             }
                                        }
                                    } else{
                                        optns.rect.top += currentdelta.delta.y
                                        optns.rect.left += currentdelta.delta.x
                                    }
                                }
                                else if(optns.applyElPos && currentdelta.el && optns.translate){
                                    if(!currentdelta.translate || currentdelta.translate.x==null){
                                        currentdelta.translate={x:0,y:0}
                                    }
                                    if(!currentdelta.translatematrix){
                                        var trdata=currentdelta.el.parseTransform()
                                        if(trdata && trdata.transformStyle) {
                                            currentdelta.translatematrix = trdata.transformStyle.replace(/matrix|\)|\(/g, "").split(/\s*,\s*/)
                                            if(currentdelta.translatematrix.length<6){
                                                currentdelta.translatematrix=null
                                            }
                                        }
                                    }
                                    if(currentdelta.translatematrix){
                                        var arr=currentdelta.translatematrix.slice()
                                        arr[4]=(currentdelta.translate.x+currentdelta.delta.x)
                                        arr[5]=(currentdelta.translate.y+currentdelta.delta.y)
                                        currentdelta.el.style.transform="matrix("+(arr.join(","))+")";
                                    }
                                    else{
                                        currentdelta.el.style.transform="translate("+(currentdelta.translate.x+currentdelta.delta.x)+"px,"+(currentdelta.translate.y+currentdelta.delta.y)+"px)";
                                    }
                                }
								else if(optns.applyElPos && currentdelta.el){
                                   currentdelta.el.css({top:currentdelta.pos.y,left:currentdelta.pos.x})
                                }
                            currentdelta.lastdelta=currentdelta.delta

                            optns.move && optns.move.call(currentdelta.el,currentdelta,optns.memo)
						});
					}
					setTimeout(function(){docev("mousemove",mv,"add");docev("mousedown",end,"add");docev("mouseup",end,"add")},0);
				})(options);
			}
		 })(),
         
         
        isPaused: function(e) {
            var el = _wrap(e);
            return el && el.__paused
        },
        isAnimating: function(e) {
            var el = _wrap(e);
            return el && (el.__animatingactive || el.hasClass("animating"))
        },

        moveTo: function(e,x,y,animate) {
            var el = $d(e);
            if (!el) { return }
            if(typeof(y)=="boolean"||$.isPlain(y)){animate=y;y=null}
            if(x && typeof(x)=="object"){
                x= x.x|| x.X|| x.left||0;
                y= x.y|| x.Y|| x.top||0

            }
            if(x==null || y==null){return el}
            if(animate){
                var opts=$d._util.parseAnimOptions(animate)
                var fxclass = $d._util.addFxRule(opts.duration,opts.easing),delay=opts.delay||10
                el.addClass(fxclass);
                if(!opts.notranslate){
                    $.fn.delay(function(){el.css({top:y,left:x})},delay)
                } else{
                    var trans=x+"px,"+y+"px"
                    $.fn.delay(function(){el.el.style.transform="translate("+trans+");"},delay)
                }
                $.fn.delay(function(){el.removeClass(fxclass);},duration +50)
            }

        },
        disAppear: function(e) {
            var el = $d(e), args = [true].concat($.makeArray(arguments, 1));
            if (!el) {
                return
            }
            args.push(function(a){
                this.hide()
            });
            return el.appear.apply(el, args)

        },
        appear: function(e,reverse){
                var el=$d(e)
                if(!el){return}
                var args=[].slice.call(arguments,1)
                args.unshift(el,"clip")
                 return $d.anim.apply(this,args)
            },

        highlight: function(e, color, duration) {
            var el = $d(e);
            if (!el) {
                return
            }
            if (typeof(color) == "number" || color == "fast" || color == "slow") {
                duration = color;
                color = null
            }

            color = color || "yellow"
            var anim = el.anim({
                duration: duration,
                background: color,
                backgroundColor: color
            })
            anim.reverse()
            return anim
        },
        scrollPageTo: function(e) {
            var el = $d(e.el || e);
            if (!el) {
                return
            }
            var par = $d(document.body) //el.getOffsetParent()
            //if(par&&par.parentNode==document.body){par=$d(document.body)}
            //if(el.offsetTop>par.)
            var fr = $d.util.animframe
            var pb = par.bounds(),
                diff = el.bounds().top - (pb.height / 2)
            if (typeof(par.scrollTop) != "number" || (par.scrollTop + 1) != (par.scrollTop + 1)) {
                return
            }
            if (diff > 0) {
                var max = diff;
                fr(function scr() {
                    max = max - 1
                    if (max < 0) {
                        return
                    }
                    par.scrollTop = par.scrollTop + 1
                    var pb = par.bounds(),
                        diff = el.bounds().top - (pb.height / 2)
                    if (diff > 0) {
                        fr(scr)

                    }
                });
            }

        },
        slideUp:function(e ){
            var el=$d(e);
            if(!el || !el.parent()){return}
              var    parof=el.parent().style.overflow;
            el.parent().css("overflow","hidden")
             return $d.anim.apply($d,[el,"transform","translateY(-100%)"].concat([].slice.call(arguments,1))).then(function(a){
                this.element().style.transform="translateY(0px)";
                 if(!parof){
                     this.element().parent().style.removeProperty("overflow")
                 }
                 else{
                     this.element().parent().style.overflow=parof
                 }
                this.element().hide();
            })
        },
        slideDown:function(e ){
            var el=$d(e);
            if(!el || !el.parent()){return}
            var curr=+String(el.css("height")).replace(/[^\d\.]/g,""),of=el.el.style.overflow,parof=el.parent().style.overflow;
            el.parent().css("overflow","hidden")
            el.el.style.overflow="hidden"
            var ht=curr
            if(!ht) {
                //ht = Math.max(el.offsetHeight, $d(el).css({height: "auto"}).show().offsetHeight)
            }
            $d(el).show()
            $d.css(el,"transform","translateY(-100%)")
            var anim= $d.anim.apply($d,[el,"transform","translateY(0)"].concat([].slice.call(arguments,1)))
            return anim.then(function(a){
                if(!parof){
                    this.element().parent().style.removeProperty("overflow")
                }
                else{
                    this.element().parent().style.overflow=parof
                }
                     if(!of){
                         this.element().style.removeProperty("overflow")
                     }
                     else{
                         this.element().style.overflow=of
                     }
                 })

        },
        fadeOut:function(e ){
            return $d.anim.apply($d,[e,"opacity",.01].concat([].slice.call(arguments,1)))
        },
        fadeIn:function(e,opts ){
            if(!$d(e)){return}
            if(+$d.css(e,"opacity") == 1){
                $d.css(e,"opacity",0.1)
            }

            return $d.anim.apply($d,[e,"opacity",opts && opts.opacity?opts.opacity:1].concat([].slice.call(arguments,1)))
         },

        //prop,tovalue..prop,tovalue..   or  {from:{prop:value..},to:{prop:value..}}  or  {prop:{from:value,to:value} ....}

        onTransiotionEnd: (function() {
            var transitionEvent = null;

            function whichTransitionEvent() {
                var t, myDiv, transition;
                myDiv = document.body.appendChild(document.createElement('div'));
                if ('onwebkittransitionend' in window) {
                    transition = 'webkitTransitionEnd';
                } else if ('ontransitionend' in window) {
                    transition = 'transitionend' // Chrome/Saf (+ Mobile Saf)/Android
                } else if ('onotransitionend' in myDiv || navigator.appName == 'Opera') {
                    transition = 'oTransitionEnd'; // Opera
                } else {
                    transition = false;
                } // IE - not implemented (even in IE9) :(*/
                document.body.removeChild(myDiv)
                transitionEvent = transition
                return transitionEvent;
            }
            return function onTransiotionEnd(e, f, opts) {
                if (!transitionEvent) {
                    transitionEvent = whichTransitionEvent()
                }
                  var el = e === document ? e : _el(e);
                if (!(el && typeof(f) == "function")) {
                    return
                }
                var fn = f,
                    isonce =  (opts===true  || (opts && opts.once)),
                    _end = function(ev) {
                        var ret
                        if (isonce) {
                            el.removeEventListener(transitionEvent, _end)
                        }
                        try {
                            ret = fn.call(ev.target, ev);
                        } catch (e) {

                        }
                        if (!isonce && ret === false) {
                            el.removeEventListener(transitionEvent, _end)
                        }

                    };
                (el.el || el).addEventListener(transitionEvent, _end, false);
            }

        })(),
        has:function(el, chk){
            return $d.down(el, chk)
        },
        is: function(e, chk) {
            var el = _el(e);
            if(!el || !chk){return}
            if (el == chk || el == chk.el) {
                return true
            }
            if ((el == document && (chk == "doc" || chk == "document" || chk == "root")) || (el == window && (chk == "win" || chk == "window" || chk == "self"))) {
                return true
            }
             if (typeof(chk) == "string") {
                if (chk == "input") {
                    return $d.isFormInput(el)
                } else if(el.id===chk || el.name===chk || String(el.tagName||"").toLowerCase()=== chk.toLowerCase()  ){
                    return true
                }
                return $d.matches(el, chk)
            }
            return
        },
      
         
		  
        isFormInput: function(e) {
            var el = _el(e);
            if (!el) {
                return
            }
            var t = el.tagName;
            if (t === "INPUT" || (t.indexOf("SELECT")>=0 && el.options) || t === "TEXTAREA" || (t.indexOf("-") > 0 && "onchange" in el && "value" in el)) {
                return true
            }
        },
      
        //last:function _up(el0,sel){},
        //first:function _up(el0,sel){},
        up: function _up(el0, sel) {
            var r = _callRecursively(el0, "parentNode", sel, 1)
            return _wrap(r[0]);
        },
        prev: function prev(e, selector) {
            var el = _el(e);
            if (!el) {
                return null
            }
            if (!selector) {
                return _wrap(el.previousElementSibling)
        }
            var r = _callRecursively(el , "previousElementSibling", selector, 1)
            return _wrap(r[0])
        },
        prevAll: function prevAll(e, selector) {
            var el = _el(e);
            if (!el) {
                return null
            }
            var r = _callRecursively(el , "previousElementSibling", selector, 0)
            return r.map(_wrap)
        },
        prevUnion: function prevUnion(e, selector) {
            return $d.prevAll(e, selector)
        },
        next: function next(e, selector) {
            var el = _el(e);
            if (!el) {
                return null
            }
            if (!selector) {
                return _wrap(el.nextElementSibling)
            }
            var r = _callRecursively(el , "nextElementSibling", selector, 1)
            return _wrap(r[0])
        },
        nextAll: function nextAll(e, selector) {
            var el = _el(e);
            if (!el) {
                return null
            }
            var r = _callRecursively(el , "nextElementSibling", selector, 0)
            return r.map(_wrap)
        },
        closest: function closest(e, selector) {
            return $d.up(e, selector)
        },
        nextUnion: function nextUnion(e, selector) {
            return $d.nextAll(e, selector)
        },
        not: function _not(e, selector) {
            return !$d.is(e, selector)
        },
        parent: function _parent(e,selector) {
            var el = _el(e);
            if (!el) {
                return
            }
            if(selector){
                return $d.up(el,selector)
            }
            return $d(el.parentNode)
        },

        getOffsetParent: function _getoffsetparent(e) {
            var el = _el(e);
            if (!el) {
                return
            }
            if(el.offsetParent){
                return $d(el.offsetParent)
            } else if(el.parentNode && el.parentNode.offsetParent){
                return $d(el.parentNode.offsetParent)
            }
            return $d(el.parentNode)
        },

        selfOrUp: function _selfOrUp(e, sel) {
            var el = _wrap(e);
            return !el ? null : el.matches(sel) ? el : el.up(sel);
        },
        selfOrDown: function _selfOrDown(e, sel) {
            var el = _wrap(e);
            return !el ? null : el.matches(sel) ? el : el.down(sel);
        },

        find: function find(e, selector) {
             return $d.q(e, selector)
        },
        select: function selectEl(el0, selector) {
            var el = el0;
            var list=$d.qq(el, selector);
             if(arguments.length>2){
                  return list.select.apply(list,[].slice.call(arguments,2))
             }
            return list
        },
        contents: function(e, s) {
            var el = $d(e);
            if (!el) {
                return
            }
            return [].slice.call(el.childNodes||[])
        },
        down: function(e, s) {
            var el = _el(e);
            if (!el) { return null }
            if(!s){
                return $d(el.firstElementChild)
            }
            if (typeof(s) == "string") {
                return $d.q(el, s)
            }
            else if (typeof(s) == "number") {
                return $d(el.children[s])
            }
            return null
        },
        at: function(e, includeText) {
            var el = _el(e);
            if (!el || !el.parentNode) {
                return 0
            }
            return [].indexOf.call(el.parentNode[includeText===true ? "childNodes" : "children"],el)
        },
        sibling: function(e, selector) {
            var el = $d(e);
            if (!el) {
                return
            }
            if (typeof(selector) == "number") {
                var idx = el.at() + selector
                return el.parent().down(idx)
            }
            return $d.siblings(el, selector, 1).shift()
        },
        siblings: function(e, selector, count) {
            var el = $d(e);
            if (!el) {
                return
            }
            count = isNaN(count) ? 0 : +count
            var elem=el.el
            if(el.parentNode && !selector && !count){
                return [].slice.call(el.parentNode.children).filter(function(a){
                    return a !==elem}).map($d)
            }
            var r = _callRecursively(el, "previousElementSibling", selector, count)
            if (!count || r.length < count) {
                var r1 = _callRecursively(el, "nextElementSibling", selector, 0)
                if (count) {
                    while (r.length < count && r1.length) {
                        r.push(r1.shift())
                    }
                } else {
                    [].push.apply(r, r1)
                }
            }

            return r.map(_wrap)
        },
        descendants: function descendants(e, selector) {
            var el = _el(e);
            if(!el){return []}
            if(!selector || selector===true){
                return $d.qq( el.children )
            }
            return $d.qq(el,selector)
        },
        parents: function ancestors(e, selector) {
            var r = _callRecursively(e, "parentNode", selector)
            return r.map(_wrap)
        },
        ancestors: function ancestors(e, selector) {
            var r = _callRecursively(e, "parentNode", selector)
            return r.map(_wrap)
        },

        domIndex: function _domIndex(e, includeText) {
            var el = _el(e);
            if(!el){return -1}
            return ("cellIndex" in el) ? el.cellIndex :
                ("sectionRowIndex" in el) ? el.sectionRowIndex :
                    el.parentNode ? [].slice.call(el.parentNode[includeText ? "childNodes" : "children"] || []).indexOf(el) : 0;
            //return _callRecursively(el.parentNode,"previousElementSibling").length
        },
        fillContainer: function(el0, initstyle, watch) {
            if (initstyle === true || $.isPlain(initstyle)) {
                watch = initstyle;
                initstyle = null
            }
            var mins, options
            if ($.isPlain(watch)) {
                options = watch
            } else {
                options = {
                    watch: watch === true,
                    applyMin: initstyle == "min",
                    style: !initstyle || initstyle == "min" ? null : initstyle
                }
            }

            var el = _wrap(el0),
                tow = ["height"],
                par = $d(el.el.offsetParent || el.up())

            function _inner() {

                if (options.style) {
                    el.css(options.style)
                }
                var oht = el.outerHeight(),
                     ih = par.innerHeight()
                var  overflow = par.css("overflow")

                par.css("overflow", "hidden")
                var ht =  ih - (el.offsetTop)
                if (options.bottomOffset) {
                    var offset = options.bottomOffset;
                    if (options.bottomOffset.nodeType) {
                        offset = $d.height(options.bottomOffset)
                    }
                    ht = ht - (Number(offset) || 0)
                }
                if (ht > 0) {
                    if (options.applyMin) {
                        el.css({
                            minHeight: ht + "px"
                        })
                    } else {
                        el.css({
                            height: ht + "px"
                        })
                    }
                }
                if (el.css("position") == "absolute" || el.css("position") == "fixed") {
                    tow.push("width")
                    var iw = par.innerWidth()
                    el.css({
                        w: iw - (el.offsetLeft)
                    })
                }
            }
            _inner();
            if (options.watch === true) {

            }
            return el

        },

        clone: function _clone(e, deep, removeid) {
            var el = _el(e);
            if (!(el && el.cloneNode)) {
                return null
            }
            if (removeid == null) {
                removeid = true
            }
            if (deep == null) {
                deep = true
            }
            var nu = el.cloneNode(!!deep)
            if (removeid) {
                nu.removeAttribute("id");
                [].slice.call(nu.getElementsByTagName("*")).forEach(function(it) {
                    it && it.removeAttribute && it.removeAttribute("id")
                })
            }
            return $d(nu);

        },
        createFragment:function(content){
            var cntnt = document.createDocumentFragment()
            cntnt.qq=function(sel){return $d.q(this.firstChild,sel)};
            cntnt.q=function(sel){return $d.q(this.firstChild,sel)};
            cntnt.html=function(cntnt) {
                if(!cntnt){return this.firstChild?this.firstChild.innerHTML:""}
                var el
                if(typeof(el)=="string"){el=document.createElement("div");el.innerHTML=cntnt;}
                if(!el){return}
                while(this.firstChild){
                    this.removeChild(this.firstChild)
                }
                while(el.firstChild){
                    this.appendChild(el.removeChild(el.firstChild))
                }
                el=null;
                return this;
            }
            cntnt.appendTo=function(el) {
                var par = $d(el);
                if (!par) {
                    return
                }
                return $d(par.el.appendChild(this));
            }
            return cntnt
        },
        addOptions:function(el,optslist,clear){
            var elem=_el(el),list=optslist;
            if(!elem){
                return
            }
            var val=$d.val(el)
            if(clear!==false){
                var options=elem.options
                while(elem.options && elem.options.length){
                    elem.removeChild(elem.options[0]);
                }
            }

            if(typeof(optslist)=="string"){list=optslist.split(/\s+/)}
            if(optslist && optslist.list){list=optslist.list}
            if($.isArray(list)){
                for(var i= 0,ln=list.length;i<ln;i++){
                    var O=list[i],id,label;
                    if(O==null){continue}
                    if(typeof(O)=="object"){
                        id= O.id||O.key||O.value;
                        label= O.label||O.text||id
                    }
                    else {
                        label=id=String(O)
                    }
                    var opt=document.createElement("option")
                    opt.text = label
                    opt.setAttribute && opt.setAttribute("value", id);
                    typeof(elem.add)=="function"?elem.add(opt):elem.appendChild(opt);
                }
            }
            if(val){$d.val(elem,val)}
            return $d(elem);
        },
        
        clipDims: function clip(e) {
            var el = _wrap(e);
            if (!el) {
                return null
            };
            var args = $.makeArray(arguments, 1),
                dims = {
                    top: 1,
                    left: 1
                },
                ascss, upd;
            dims.right = el.offsetWidth;
            dims.bottom = el.offsetHeight;
            var curr = el.css("clip").trim().replace(/([\w]+\()|\)/g, "").split(" ")
            var ln = curr ? curr.length : 0;
            if (ln > 0 && $n(curr[0], -1) > 0) {
                dims.top = $n(curr[0])
            }
            if (ln > 1 && $n(curr[1], -1) > 0) {
                dims.right = $n(curr[1])
            }
            if (ln > 2 && $n(curr[2], -1) > 0) {
                dims.bottom = $n(curr[2])
            }
            if (ln > 3 && $n(curr[3], -1) > 0) {
                dims.left = $n(curr[3])
            }
            if (args && args.length) {
                if (typeof(args[0]) == "boolean") {
                    ascss = args.shift();
                }
            }
            if (args && args.length) {
                if ($.isPlain(args[0])) {
                    $.extend(dims, args[0])
                } else if (Array.isArray(args[0])) {
                    args = args[0]
                }
                if (args && Array.isArray(args) && args.length) {
                    var ln = args ? args.length : 0;
                    if (ln > 0 && $n(args[0], -1) >= 0) {
                        dims.top = $n(args[0])
                    }
                    if (ln > 1 && $n(args[1], -1) >= 0) {
                        dims.right = $n(args[1])
                    }
                    if (ln > 2 && $n(args[2], -1) >= 0) {
                        dims.bottom = $n(args[2])
                    }
                    if (ln > 3 && $n(args[3], -1) >= 0) {
                        dims.left = $n(args[3])
                    }
                }
            }
            var ret = [];
            if (ascss) {
                ("top right bottom left").split(/\s+/).forEach(function(it) {
                    ret.push($n(dims[it]) + "px")
                });
                return "rect(" + ret.join(" ") + ")"
            }
            return dims
        },
        clip: function clip(e) {
            var el = _wrap(e);
            if (!el) {
                return null
            };
            var args = $.makeArray(arguments, 1),
                getter = !args.length || typeof(args[0]) == "boolean"
            var nu = $d.clipDims.apply($d, [el, true, getter ? [] : args])
            if (!getter) {
                return el.css("clip", nu)
            }
            return nu;
        },
        effectiveStyle: function(e, prop) {
            if (e && e === document) {
                return
            }
            var el = _wrap(e);
            if (!el) {
                return
            }
            var v = String(el.css(prop)).trim(),
                p = el.parent()
            //if(!v||v.replace(/\s/g,"")==="rgba(0,0,0,0)"||v==="inherit"||v==="inherited"||v==="auto"){v=""}
            if (!v || v === "inherit" || v === "inherited" || v == "auto") {
                if (p == "backgroundColor" || p == "background-color") {
                    v = el.getBackgroundColour()
                } else if (p && (v === "inherit" || v === "inherited")) {
                    v = p.effectiveStyle(prop)
                } else if (!v || v == "auto") {
                    var info = $d.css.getInfo(prop)
                    if (info.isDimension) {
                        var elem = el.el
                        var off = "offset" + prop.charAt(0).toUpperCase() + prop.substr(1)
                        if (off in elem) {
                            v = elem[off] + "px"
                        }
                    }
                }
            }


            return v;
        },
        opacity: function(el, s) {
            return $d.css(el, "opacity", s)
        },
        detach:function(e){
            var el = $d(e);
            el && el.el && el.el.parentNode && el.el.parentNode.removeChild(el.el)
            return el;
        },
        remove: (function  () {
            function _rem(el){
                var emitter=$d.getEmitter(el,true)
                if(emitter){
                    emitter.fire("removed")
                    emitter.destroy()
                }
                $.objectMap.delete(el)
                el.parentNode && el.parentNode.removeChild(el)
            }

            return function(e, anim, animconfig){
                var el = $d.toEl(e);
                if (!el) { return }
                 if (anim === true) {
                          $d(el).css("overflow","hidden").anim({height:1,width:1}, animconfig).then(function(){
                             _rem(this.element().el)
                         })
                     return el;
                }
                _rem(el)
                return el
            }


        })(),


       
        hide: function(e, anim, animconfig) {
            var el = $d(e);
            if (!el) {
                return
            }
            if (anim === true) {
                if(!$.isPlain(animconfig)){
                    animconfig={
                        opacity: .01
                    }
                }
                return el.anim(animconfig).then(function() {
                    this.element().hide()
                })
            }
            else{
                el.css("display", "none");
            }
            return el
        },
        toggle: function(e, show) {
            if(show===true){return $d.show(e)}
            else if(show===false){return $d.hide(e)}
            else if($d.isVisible(e,true)){return $d.hide(e)}
            return $d.show(e)
        },
        show: function(e, anim, animconfig) {
            var el = $d(e),  css = { display: "" };
            if (!el) {
                return
            }

            if (el.css("visibility") == "hidden") {
                css.visibility = "visible"
            }
            if (anim === true) {
                css.opacity = .1
            }

            el.css(css)
            var curr  =el.css("display")
            if(curr=="none"){curr=null}
            if (!(el.offsetHeight + el.offsetWidth + el.offsetTop)) {
                if(!curr  ){curr="block"}
                curr && el.css("display", curr);
            }
            if (anim === true) {
                return el.anim({
                    opacity: 1
                }, animconfig)
            }
            return el
        },
          outerDims: function(e) {},
        isVisible: function(e,noLayercheck) {
            if(!e){return}

            var i = 0,
               elem = e.el||e

            if (!(elem && elem.nodeType && $d.isAttached(elem))) {
                return false
            }
            var   prop = $d.util.getHiddenProp(),  doc = document
            if (!(elem.offsetHeight && elem.offsetWidth)) {
                return false;
            }
            if (prop && (doc[prop] ||  elem[prop] )) {
                return false;
            }

            var stl = document.defaultView.getComputedStyle(elem)||{},
                b, offsets, vw, addeddot = 0,
                points = ["top", "right", "bottom", "left"];
            //0 wd and ht if no content in some browsers
            var cntnt = elem.innerHTML,notviz=false;
            if (!cntnt) {
                // el.innerHTML = ".";
                //addeddot++
                //stl = $d.css.getComputed(el)
            }
            if (!notviz && (stl.display == "none" || stl.visibility == "hidden" ||   stl.opacity === 0)) {
                notviz=true
            }
            if(!notviz) {
                b = elem.getBoundingClientRect();
                vw = $.viewPort
                if (b.bottom <= 0 || b.right <= 0 || b.left > vw.width || b.top > vw.height) {
                    notviz = true
                }

                if ( !notviz && noLayercheck!==true) {
                    if (!elem.contains(doc.elementFromPoint(b.left + (b.width/ 2), b.top+ (b.height/2)))) {
                        if (!elem.contains(doc.elementFromPoint(b.left + (b.width/ 3), b.top+ (b.height/3)))) {
                            if (!elem.contains(doc.elementFromPoint(b.left + ((2*b.width)/ 3), b.top+ ((2*b.height)/3)))) {
                                notviz = true
                            }

                        }

                    }

                }
            }
            if( notviz) {
                if (addeddot) {
                    el.innerHTML = cntnt || ""
                }
                return false;
            }


            return true

        },
        getBackgroundColour: function getBackgroundColour(e, limitElem) {
            var bgColour = '',
                el = _el(e);
            var styleElem = el;
            var rTrans = /^transparent|rgba\(0, 0, 0, 0\)|auto|inherit$/;
            var style;
            limitElem || (limitElem = document.body);
            while (!bgColour && styleElem !== limitElem.parentNode) {
                style = String($d.css(styleElem, "backgroundColor") || "").trim();
                if (style && !rTrans.test(style)) {
                    bgColour = style;
                    break;
                }
                styleElem = styleElem.parentNode;
            }
            return bgColour;
        },


        bounds: function(e, mode) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            var b=el.el.getBoundingClientRect(),rect={};
            ["top","left","right","bottom","height","width"].forEach(
                function(a){
                    rect[a]=b[a];
                }
            );
            if(mode==="relative"||mode==="rel"){
                var par=el.getOffsetParent()
                if(par){
                    var parb=par.bounds();
                    rect.top=rect.top-parb.top;
                    rect.left=rect.left-parb.left;
                    rect.bottom=rect.bottom-parb.top;
                    rect.right=rect.right-parb.left;
                }
            }
            /*var rect = el.data("_rect")
            if (!rect) {

                el.data("_rect", rect = UI.Rect.create(el))
            } else if (noref !== true) {
                rect.refresh();
            }*/
            return rect;
        },
        innerHeight: function(e, nocache) {
            var el = _wrap(e);
            if (!el) {  return  }
            var box,val=el.el.clientHeight,dims=["border-top-width", "border-bottom-width"]
            if(!val) {box=el.css("box-sizing")
                val = Number(el.css("height").replace(/px$/, "")) || 0
                if (box == "content-box") {
                    return val
                }
                if (box == "border-box") {
                    dims.push("border-top-width", "border-bottom-width", "padding-top", "padding-bottom")
                }
            }
            $.each(el.css(dims),function(v){if(!val || val=="0px"){return}
                val=val-(Number((v||"").replace(/px$/,""))||0)
            })
            return val
        },
        innerWidth: function(e, nocache) {
            var el = _wrap(e);
            if (!el) {  return  }
            var box,val=el.el.clientWidth,dims=["padding-left", "padding-right"]
            if(!val) {box=el.css("box-sizing")
                val = Number(el.css("width").replace(/px$/, "")) || 0
                if (box == "content-box") {
                    return val
                }
                 if (box == "border-box") {
                    dims.push( "border-left-width", "border-right-width")
                }
            }
            $.each(el.css(dims),function(v){if(!val || val=="0px"){return}
                val=val-(Number((v||"").replace(/px$/,""))||0)
            })
            return val
        },
        outerHeight: function(e, nocache) {
            var el = _wrap(e);
            if (!el) { return }

            var val=el.el.offsetHeight
            var box ,dims=["margin-top","margin-bottom"]
            if(!val) {box=el.css("box-sizing")
                val = Number(el.css("height").replace(/px$/, "")) || 0
                if (box == "padding-box") {
                    dims.push("border-top-width", "border-bottom-width")
                } else {
                    dims.push("border-top-width", "border-bottom-width", "padding-top", "padding-bottom")
                }
            }
            $.each(el.css(dims),function(v){if(!val || val=="0px"){return}
                val=val+(Number((v||"").replace(/px$/,""))||0)
            })
            return val
        },
        outerWidth: function(e, nocache) {
            var el = _wrap(e);
            if (!el) { return }
            var val=el.el.offsetWidth
            var box ,dims=["margin-left","margin-right"]
            if(!val) {
                box = el.css("box-sizing")
                val = Number(el.css("width").replace(/px$/, "")) || 0
                if (box == "padding-box") {
                    dims.push("border-left-width", "border-right-width")
                } else {
                    dims.push("border-left-width", "border-right-width", "padding-left", "padding-right")
                }
            }
             $.each(el.css(dims),function(v){if(!val || val=="0px"){return}
                val=val+(Number((v||"").replace(/px$/,""))||0)
            })
            return val
        },
        cummulativeOffsetTop:function(e){
            var el = _el(e), h=0,p=el;
            while(p){
                h=h+(p.offsetTop||0);
                p=p.offsetParent;
            };
            return h
        },
        offset: function offset(e, dim0) {
            offset._dimMap || (offset._dimMap = {
                top: "offsetTop",
                width: "offsetWidth",
                height: "offsetHeight",
                left: "offsetLeft"
            });
            offset._dims || (offset._dims = $.keys(offset._dimMap));
            var el = _el(e),
                dim;
            if (!el) {
                return
            }
            if($.isPlain(dim0)){
                $.each(dim0,function(v,k){
                    var dim = offset._dimMap[String(k).toLowerCase()]
                    if (dim && dim in el) {
                        el[dim]=typeof(v)=="number"?(v+"px"):v;
                    }
                })
            }else{
                if (typeof(dim0)=="string") {
                    dim = offset._dimMap[String(dim0).toLowerCase()]
                }
                if (dim && dim in el) {
                    return el[dim]
                }
            }

            return {
                top: el.offsetTop,
                width: el.offsetWidth,
                height: el.offsetHeight,
                left: el.offsetLeft
            }
        },
        offsetFrom: function offsetFrom(e, other) {
            var el = _wrap(e),
                el2 = _wrap(other);
            if (!(el2 && el)) {
                return
            }
            return el.bounds().minus(el2.bounds())
        },


        absolutize: function(e, addtoroot) {
            var options = {}
            if (typeof(addtoroot) == "boolean") {
                options.appendTo = addtoroot
            } else if ($.isPlain(addtoroot)) {
                $.extend(options, addtoroot)
            }
            if (options.appendTo === true) {
                options.appendTo = document.body
            }

            var el = _wrap(e);
            if (!el) {
                return
            }
            var target=el,ref=options.ref
            if(options.clone && $d(ref) && $d(ref).parent()){
                ref=el
                target = el.clone(true, true).el
                target =  $d($d(ref).parent().el.appendChild(target))
            }


            var offset = target.offset(),
                css = options.css || {}
            css.margin == null && (css.margin = 0);
            if(options.fixed){css.position = "fixed"}
            css.position == null && (css.position = "absolute");

            if (!(target.css.position === "absolute" || target.css.position === "fixed")) {
                var b = ref?$d.bounds( ref):target.bounds(),
                    par, b1
                if(css.position =="fixed"){
                    css.top = b.top
                    css.height = b.height
                    css.width = b.width
                    css.left = b.left
                }  else {
                    if (options.appendTo && target.parent().is(options.appendTo)) {
                        $.extend(css, offset);
                    } else {
                        var nu = {}
                        if(css.position != "fixed"){
                            var rel
                            if (options.appendTo) {
                                rel = $d.bounds(options.appendTo)
                            }

                            if (rel) {
                                b.relativeTo(rel)
                            }
                        }

                        b.getDimensionCss(target, nu)
                        b.getPositionCss(target, "tl", nu)
                        $.extend(css, nu);
                        //par=el.getOffsetParent();  b1=$d.bounds(par) ||{};dims=$d. (par)||{};dims.inner||(dims.inner={})

                        //b.minus({top:b1.top  + dims.inner.top,left:b1.left  + dims.inner.left})
                    }
                    $.compact(css);
                    css.margin = 0;
                }

                if (!options.noApply ) {
                    if (options.appendTo) {
                        options.appendTo = $d(options.appendTo)
                    }
                    if (options.appendTo) {
                        target = options.appendTo.append(target)
                    }
                    target.css(css)
                } else {
                    return css
                }
            }
            return target;
        },
        printEl:(function(){
            function PrintElem(target,stle)
            {
                var allstyles={},_counter= 1 ,vw=document.defaultView,lst=[].slice.call(target.getElementsByTagName("*"));
                lst.unshift(target)
                lst.forEach(function(el){
                    if(el.nodeName=="svg"){return}
                    el.id||(el.id="el_"+(++_counter));
                    var st=vw.getComputedStyle(el),style={};
                    Object.keys(st).forEach(function(k){
                        isNaN(k) && typeof( k)=="string" && st[k] && typeof(st[k])=="string" && (style[k]=st[k]);
                    });
                    allstyles[el.id]=style
                })
                var elem=target.cloneNode(true),lst2=[].slice.call(elem.getElementsByTagName("*"));
                lst2.unshift(elem)
                lst2.forEach(function(el){
                    if(el.nodeName=="svg"){return}
                    var id=el.id;
                    el.removeAttribute && el.removeAttribute("id");
                    var st=allstyles[id]||{};
                     Object.keys(st).forEach(function(k){
                         el.style[k]=st[k];
                     });
                 });
                if(stle){
                    Object.keys(stle).forEach(function(k){
                        elem[k]=stle[k];
                    })
                }
                Popup(elem,target.getBoundingClientRect() );
            }

            function Popup(data,bounds)
            {

                var mywindow = document.body.appendChild(document.createElement("iframe"))//window.open('', 'ClaimCheck', 'height=400,width=600');
                if(!mywindow){return}
                mywindow.src="javascript:"
                mywindow.contentDocument.body.appendChild(data)
                var head=mywindow.contentDocument.head||mywindow.contentDocument.querySelector("head")||mywindow.contentDocument.body;
                [].forEach.call(document.querySelectorAll("link"),function(el){
                    var link=head.appendChild(mywindow.contentDocument.createElement("link"));
                    link.href=el.href;
                });
                mywindow.style.top="-"+bounds.height+"px";  mywindow.style.left="-"+bounds.width+"px";
                mywindow.style.height=(bounds.height+5)+"px"; mywindow.style.width=(bounds.width+5)+"px";
                mywindow.style.padding="0";mywindow.style.position="fixed";  mywindow.style.zIndex=0;

                var win=mywindow.contentWindow||mywindow.contentDocument.defaultView
                if(win){
                    try{win.focus();} catch(e){}
                    win.print();
                }
                setTimeout(function(){mywindow.parentNode.removeChild(mywindow)},100)
                 return true;
            }
            return function(e,style){
                var el=$d(e)
                if(!el){return}
                PrintElem(el.el,style)
                return el;
            }
        })(),
        relativize: function(e, par) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            par = (par ? $d(par) : null) || $d(document.body)
            if (el.contains(par)) {
                return el
            }
            var b = el.bounds(),
                b1 = par.bounds(),
                rel = {
                    top: b.top - b1.top,
                    left: b.left - b1.left
                }
            if ((el.css.position === "absolute" || el.css.position === "fixed")) {
                el.css("position", "relative")
            }
            if (el.parentNode !== par.el) {
                el = par.append(el)
            }
            el.css(rel)
            return el;
        },
        parseTransform: function(e) {
            var el = _wrap(e);
            if (!el) {
                return
            }

            var tr=el.css("transform")||el.css("webkitTransform")||el.css("MozTransform")||el.css("msTransform")
            if(tr=="none"){tr=null}

            var   matrix=tr?$d.util.parseMatrix(tr):{},rotateZ=0,rotateX=0,rotateY=0
            if(matrix && matrix.m11!=null) {
                 rotateY = Math.asin(-matrix.m13)
                rotateX = Math.atan2(matrix.m23, matrix.m33);
                rotateZ = Math.atan2(matrix.m12, matrix.m11);
             }
            var ret= {
                transformStyle: tr,
                matrix: matrix||{},
                skewY:0,
                skewX:0,scale:1,
                rotate: {
                    x: rotateX,
                    y: rotateY,
                    z: rotateZ
                },
                translate: {
                    x: matrix.m41||0,
                    y: matrix.m42||0,
                    z: matrix.m43||0
                }
            };
            if(tr) {
                var a = String(String(tr.split('(')[1]).split(')')[0]).split(',').map(Number);
                ret.skewY = Number(((180 / Math.PI) * Math.atan2(((0 * a[2]) + (1 * a[3])), ((0 * a[0]) - (1 * a[1]))) - 90).toFixed(2).replace(/\.00$/, ""));
                ret.skewX = Number((180 / Math.PI) * Math.atan2(((1 * a[2]) + (0 * a[3])), ((1 * a[0]) - (0 * a[1]))).toFixed(2).replace(/\.00$/, ""));
                var a1 = a[0], b = a[1]
                ret.scale = Number(Math.sqrt(a1 * a1 + b * b).toFixed(2).replace(/\.00$/, ""))
                ret.skew = ret.skewX + "deg," + ret.skewY + "deg"
            }
           return ret
        },
        scale: function(e, nu, anchor) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            if(typeof(nu)=="undefined"){
                return this.parseTransform(el).scale
            }
            var pre = $.browser.css3pr || "";
            if (nu) { //traslation into [dx,dy]=[tx,ty]
                el.el.style[pre + "transform"] = "scale(" + nu + ")"
                el.el.style["transform"] = "scale(" + nu + ")"
            } else{
                el.el.style.removeProperty("transform");
                el.el.style.removeProperty(pre + "transform");
            }
            return nu == null ? "" : el
        },
        translate: function(e, nu, anchor) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            var pre = $.browser.css3pr || "";
            if (nu) { //traslation into [dx,dy]=[tx,ty]
                el.el.style[pre + "transform"] = "translate(" + nu + ")"
                el.el.style["transform"] = "translate(" + nu + ")"
            }
            return nu == null ? "" : el
        },
        skew: function(e, nu, anchor) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            if(typeof(nu)=="undefined"){
                return this.parseTransform(el).skew
            }
            var pre = $.browser.css3pr || "";
            //             var skewY = ((180/Math.PI) * Math.atan2( ((0*a[2])+(1*a[3])),((0*a[0])-(1*a[1]))) - 90;
            //           var skewX = (180/Math.PI) * Math.atan2( ((1*a[2])+(0*a[3])),((1*a[0])-(0*a[1])));
            //        var rotation = ((180/Math.PI) * Math.atan2( ((0*a[2])+(1*a[3])),((0*a[0])-(1*a[1]))) - 90
            //
            if(typeof(anchor)=="number"){nu={x:nu,y:anchor}}
            if (nu) { //sx=sqrt(a*a+b*b) and sy=sqrt(c*c+d*c)
                if(typeof(nu)=="number"){
                    nu=nu+"deg,"+nu+"deg"
                }
                else if(typeof(nu)=="string"){
                    nu=nu.split(",").map(function(a){return a.trim()+"deg"}).join(",")
                } else if($.isPlain(nu)){
                    var obj=nu;nu=""
                    if(obj.x){nu=obj.x+"deg"}
                    if(obj.y){nu += (nu?",":"")+obj.y+"deg"}
                }
                el.el.style[pre + "transform"] = "skew(" + nu + ")"
                el.el.style["transform"] = "skew(" + nu + ")"
            } else{
                el.el.style.removeProperty("transform");
                el.el.style.removeProperty(pre + "transform");
            }
            return  el
        },
        rotation: function(e, nu, anchor) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            if(typeof(nu)=="undefined"){
                return this.parseTransform(el).rotate
            }
            var st = document.defaultView.getComputedStyle(el.el, null),
                angle = 0,
                pre = $.browser.css3pr || "";
            var tr = st.getPropertyValue(pre + "transform") || st.getPropertyValue("transform") || ""
            if (tr) {
                var values = String(String(tr.split('(')[1]).split(')')[0]).split(',');
                var a = values[0],
                    b = values[1],
                    c = values[2],
                    d = values[3];
                if (a != null && b != null) {
                    var scale = Math.sqrt(a * a + b * b),
                        sin = b / scale; // arc sin, convert from radians to degrees, round  DO NOT USE: see update below
                    angle = Math.round(Math.atan2(b, a) * (180 / Math.PI)); //Math.round(Math.asin(sin) * (180/Math.PI));
                }
            }
            if (nu != null && typeof(nu) == "number" || (typeof(nu) == "string" && /\d+deg/.test(nu))) {
                var perspective = st.getPropertyValue(pre + "perspective-origin") || st.getPropertyValue("perspective-origin") || "50% 50%"
                if (anchor) {
                    if (anchor == "topleft") {
                        perspective = "0 0"
                    } else if (anchor == "bottomleft") {
                        perspective = "0 100%"
                    } else if (anchor == "topright") {
                        perspective = "100% 0"
                    } else if (anchor == "bottomright") {
                        perspective = "100% 100%"
                    } else if (/^\d/.test(anchor)) {
                        perspective = anchor
                    }
                }
                el.el.style[pre + "perspective-origin"] = perspective
                el.el.style["perspective-origin"] = perspective

                el.el.style[pre + "transform"] = "rotate(" + nu + (typeof(nu) == "number" ? "deg" : "") + ")"
                el.el.style["transform"] = "rotate(" + nu + (typeof(nu) == "number" ? "deg" : "") + ")"
            }
            return angle
        },

        height: function(e) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            if (arguments.length > 1) {
                return el.css("h", arguments[1]);
            }
            return _asNumber(el.css("h"))
        },
        width: function(e) {
            var el = _wrap(e);
            if (!el) {
                return
            }
            if (arguments.length > 1) {
                return el.css("h", arguments[1]);
            }
            return _asNumber(el.css("w"))
        },
		 E: function(el) {
            return _wrap(el)
        },
        scrolltoView: function(e, pos,anim) {
            var el = _wrap(e);

            if (!el) {
                return
            }
             var scrollable = el.ancestors().find(function(it) {
                return it.scrollHeight > it.offsetHeight + 15
            })
            if (!scrollable) {
                el.el.scrollIntoView(!!pos)
            } else {
                var cnt=0
                      function scroll(){
                        var diff = el.bounds().bottom - scrollable.bounds().bottom
                        if(diff > 10 && cnt>400) {
                            scrollable.scrollTop += 10
                            cnt++
                            $d.util.animframe(scroll)
                         }
                    }
                    $d.util.animframe(scroll)

                    //scrollable.scrollTop += diff
             }
            return el
        },


        
        traverse: function walk(root0, optns) {
            optns = optns || {}
            if (typeof(optns) == "function") {
                optns = {
                    enter: optns
                }
            }
            var noText = optns.noText,
                textOnly = !!optns.textOnly,
                levels = Number(optns.level||0) || 10000
            var enter = typeof(optns.enter) == "function" ? optns.enter : function(){},
                exit = typeof(optns.exit) == "function" ? optns.exit : null,
                root = $d.toEl(root0),
                childProp=noText?"children":"childNodes";
            function _inner(node, lvl,memo) {
                // Call enter callback, and check if it explicitly returns false
                if (!node ) {
                    return
                }
                var t = node.nodeType,ret=enter(node, t, memo)
                if (ret === false) {
                    return false; // And return false
                }
                if(ret!==true){//skip children
                    var nodes = t === 1 ? node[childProp] : null; // Move to first child
                    if (nodes && nodes.length && (levels > lvl)) {
                        for (var i = 0,l=[].slice.call(nodes), ln = l.length, n; n = l[i], i < ln; i++) {
                            if (_inner(n, lvl + 1,memo) === false) {
                                return false;
                            }
                        }
                    }
                }

                // Call exit callback on the parent node and listen for false return value
                if (exit && exit(node, t,memo) === false) {
                    return false;
                }
                return ret;
            }
            _inner(root, 0,optns.memo)

        },
		
		 //isEmpty
        isEmpty: function(e) {
            return !($d.down(e))
        },
        empty: function(e) {
            return this.clear();
        },
        clearWhiteSpace: function(e,andcomments) {
            var el=$d(e), torem=[]
            if(!el){return}
            if(andcomments==null){andcomments=true}
            $d.traverse(el.el,
                function(node, t){
                    if(t===3 || (andcomments && t === 8)){if(!String(node.nodeValue).trim()){torem.push(node)}}
                });
            var elrem
            while(elrem=torem.pop()){
                elrem && elrem.parentNode &&  elrem.parentNode.removeChild(elrem)
            }
            return $d(e)
        },
        clear: function(e) {
            var el = _el(e)
            while (el && el.firstChild) {
                el.removeChild(el.firstChild)
            }
            return _wrap(el);
        },

        ex: _wrap,
        wrap: _wrap,
        st: function(el, par) {
            var clctn, list, dc = _dom,
                selector = el,
                parElem; //,info=setupCollectionWrap()
            if (el && typeof(el) == "object" && el.nodeType) {
                parElem = _el(el);
                selector = par;
            } else if (par && typeof(par) == "object" && par.nodeType) {
                parElem = _el(par);
                selector = el;
            }
            var lst = (typeof(selector) == "string") ? dc.qq(parElem || document, selector) : $.isArrayLike(selector) ? $.makeArray(selector) : null;
            if (!lst && el && el.nodeType) {
                lst = [el]
            }
            clctn = List.from(lst || []).chainable("element")
            if (clctn && clctn.config) {
                var c = clctn.config,
                    d = c._delegate
                c._shared || (c._shared = {});
                c._shared.root = $d(parElem || document)
                if (d && d.__type && d.__type.ctor) {
                    var pr = d.__type.ctor.prototype;
                    if (pr && typeof(pr.root) != "function") {
                        pr.$ = pr.reset = pr.root = function(sel) {
                            return sel ? $d.st(sel, this.config._shared.root) : this.config._shared.root
                        }
                    }
                    if (!c._shared._methods) {
                        clctn.config._shared._methods = {
                            "$": pr.$,
                            "reset": pr.reset,
                            "root": pr.root
                        }
                    }
                }
            }
            //clctn=info.ctor((lst||[]).map(dc.wrap),null,"dom")

            return clctn
        },
       

        toEl: _el,
        isAttached : function(el) {
            if (!el) {return}
            var elem = el.nodeType?el:$d(el)
            if (!elem) { return }
            var p = elem.el||elem;
            while (p && p.parentNode && ((p = p.parentNode) !== document));
            return p === document

        }
    }

    Object.keys(_proto).forEach(function(k) {
        _dom[k] = _proto[k]
    });
    _dom.prototype = _dom

    _dom._coreHelper = true;
     if (!window.requestAnimationFrame) {
        window.requestAnimation
            = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
                window.setTimeout(callback, 1000 / 60);
            };
    }
    _dom.onAttach = (function() {
        var doc = document,
            body = document.body,
            docElem = doc.documentElement || doc.body,
            animklass = "nodeInserted";
        var isAttached = $d.isAttached
        function waitForInserton(elm, container) {
            container = container || doc;
            var timeout = 2000,
                p = Promise.deferred()
            if ($d.isAttached(elm)) {
                p.resolve($d(elm))
                return p
            }


            return (function(e, container, pr) {
                if (!e) {
                    return
                }
                var _timer = 0,
                    sel = typeof(e) == "string" ? e : e.nodeType ? ("#" + ($d(e) || {}).id || "") : null,
                    pr;
                if (!sel || sel == "#") {
                    return
                }

                function cleanup() {
                    if (!_timer) {
                        return
                    }
                    clearInterval(_timer);
                    _timer = null
                    var el = container.querySelector(sel)
                    if(el ){
                        el.classList.remove("attach-check")
                    }
                    $d.watchMutation(container, false);
                    document.removeEventListener('DOMNodeInsertedInDocument', chk)
                }
                pr.then(function(){},cleanup)
                function chk() {
                    if (_timer === null) {
                        return
                    }

                    var el = container.querySelector(sel)
                    if (!el) {
                        return
                    }

                    if (isAttached(el)) {
                        cleanup(); pr.resolve($d(el))
                        return el
                    }
                }
                if (!chk()) {
                    _timer = setInterval(chk, timeout);
                    document.addEventListener('DOMNodeInsertedInDocument', chk, false)
                    $d.watchMutation(container,"childList",chk)
                    var el = container.querySelector(sel)
                    if(el){
                        el.classList.add("attach-check")
                        $d.onTransiotionEnd(  el,function(ev){  chk() } ,true);

                    }

                    $d.css(el,$d.__transitionprop||"transition","all  .01s")
                }
                return pr;
            })(elm, container, p)

        }
        return function(el) {
            var args = [].slice.call(arguments, 1),
                callback, container, towatch;
            container = el;

            if (args[0] && (typeof(args[0]) == "string" || args[0].nodeType)) {
                towatch = args.shift();
            }
            if (typeof(args[args.length-1]) == "function") {
                callback = args.pop();
            }
            if (!towatch) {
                towatch = el;
                container = null;
            }
            if (!towatch) {
                console.error("to attach " + towatch)
            }

            var c = container && container.nodeType ? container : document;
            if (el == null) {
                return
            }
            var pr=waitForInserton(towatch, c);
            callback && pr.then(callback)
            return pr;
        }

    })();



    ["mousedown", "mouseup", "mouseover", "keyup", "keydown","dblclick"].forEach(function(k) {
        _dom[k] = Function("e,fn,optns", "$d.on(e,'" + k + "',fn,optns)")
    });
    return _dom
})();



 ;(function(){
    var selectorfn = function(s, lst) {
        if (typeof(s) == "function") {
            return lst.filter(s)
        }
        if (typeof(s) == "number") {
            if (s < 0) {
                s = lst.length + s
            }
            s = Math.min(0, Math.min(s, lst.length - 1))
            return lst.slice(s, s + 1)
        }
        if (typeof(s) == "string") {
            var _is = _dom.is.bind(_dom)
            return lst.filter(function(it) {
                return _is(it, s)
            })
        }
    }
	function _fixSelector(sel) {
        if (/\binput\b/.test(sel) && !/\btextarea\b/.test(sel)&& !/\bselect\b/.test(sel)) {
            sel = [sel, sel.replace(/input/g, "textarea"), sel.replace(/input/g, "select")].join(",")
        }
        if(sel.charAt(0)==">"){
            sel=sel.substr(1)
        }
        if(/#[A-Za-z]/.test(sel)){
            sel=sel.replace(/.*(?=#[^\s]*$)/, '')// strip for ie7
        }

         sel=sel.replace(/\[([^\=]+)\s*\=\s*([^'"][^\]]+)/g, "[$1='$2']")//[data-key=aaa]=>[data-key='aaa']
        return sel.trim()
    }
	
    function fixargs(args) {
        var c, s, a = [].slice.call(arguments[0])
        a = a.filter(function(it) {
            if (it && (it.nodeType || it.isDomWrap)) {
                c = it;
                return false
            }
            return !!it
        });
        if (a.length) {
            if (a.length == 1 && typeof(a[0]) == "object" && a[0].length) {
                return {
                    s: null,
                    e: $.makeArray(a[0]),
                    arr: true
                }
            }

            if (!s && typeof(a[0]) == "string") {
                s = a.shift()
            } else if (!c) {
                c = a.shift()
            }
            if (!s && typeof(a[0]) == "string") {
                s = a.shift()
            } else if (!c) {
                c = a.shift()
            }
        }

        return {
            s: typeof(s) == "string" ? s : null,
            e: $d.toEl(c)
        }
    }
 var _matches = function(el, selector) {
        var documentElement = document.documentElement || document,
            matchesProp = "m oM msM mozM webkitM".split(" ").reduce(function(result, prefix) {
                var propertyName = prefix + "atchesSelector";
                return result || (result = propertyName in documentElement ? propertyName : null);
            }, null);
        var nu = matchesProp ?
            function(e0, sel) {
                var e = $d.toEl(e0);
                if(!sel || !e){return}
                if(typeof(sel)=="function"){
                    return sel($d(e))
                }
                if(typeof(sel)!="string"){return}
                if(_isCustomSelector(sel)) {
                    $d.__zSelector||($d.__zSelector=$.require("zSelector"));
                    if ($d.__zSelector && $d.__zSelector.getEngine) {
                        return $d.__zSelector.getEngine().matches(e, sel)
                    }
                    return e && e[matchesProp] && e[matchesProp](sel)
                }
                return e && e[matchesProp] && e[matchesProp](sel)
            } :
            function(e0, sel) {
                var e = $d.toEl(e0);
                if(!sel || !e){return}
                if(typeof(sel)=="function"){
                    return sel(e)
                }
                return  typeof(sel)=="string" && e.parentNode && [].indexOf.call(e.parentNode.querySelectorAll(sel),e) >= 0
            };
        _matches = nu;
        return nu(el, selector)
    }
    function _matcheList(list,sel,count){
        var res=[], l=list||[],ln= l.length;
        if(count==null || typeof(count)!="number"){count=ln+1}
        for(var i= 0;i<ln;i++){
            if(_matches(l[i],sel)){
                if(res.push(l[i])>= count){break}
            }
        }
        return res;
    }
	function q(el,sel) {
        if(sel==null && el && el.nodeType){return $d(el)}
        if(sel && sel.nodeType){return $d(sel)}

        var m = fixargs(arguments)
        if (!m.s) {
            return null
        }

        return $d(_queryOne(m.s, m.e))
    }

    function _querySel(selector, dom,cnt) {
        var sel = selector,res
        cnt=cnt||999999
        dom=dom || document
        if(typeof(sel)=="string" && sel.indexOf(">")==0){
            sel=sel.substr(1).trim()
            if(!sel){
                return [].slice.call(dom.children,0,cnt)
            }
            res=[]
            var match=_matches,rnng=0;
            [].slice.call(dom.children).every(function(a){
                if(match(a,sel)){
                    if((rnng=res.push(a))>=cnt){return false}
                }
                return true
            });
            return res
        }
        sel = _fixSelector(selector),res
        if (/^[\.#]?[\w\-_]+$/.test(sel) ) {
            var c = sel.charAt(0),
                s = sel
            if (c == "." && dom.getElementsByClassName) {
                res = dom.getElementsByClassName(s.substr(1))
            } else if (c == "#") {
                if(dom===document){
                    res=[document.getElementById(s.substr(1))]
                } else{

                    res= cnt===1?[dom.querySelector(s)]:dom.querySelectorAll(s)
                }

            } else {
                if(cnt===1){
                    res=[dom.querySelector(s)||(dom.querySelector("#"+s))||dom.getElementsByTagName(s)[0]]
                } else{
                    if(/^[a-z]/i.test(s)){
                        res=dom.getElementsByTagName(s)
                        if(!res.length){
                            res=dom===document?[document.getElementById(s)]:dom.querySelectorAll("#"+s)
                        }
                    }
                }
              }

        } else {

            res = cnt===1?[dom.querySelector(sel)]:dom.querySelectorAll(sel)
        }
        if(res && res.length==1 && !res[0]){res=[]}
        if(res && cnt && cnt < res.length ){
            return [].slice.call(res,0,cnt)
        }
        return res||[];
    }
    function _isCustomSelector(selector) {
        return (selector.indexOf(":visible")>=0 || selector.indexOf(" < ")>=0)
    }

    function _doquery(selector, dom,cnt) {
        if(typeof(dom)=="number"){
            cnt=dom;
            dom=null
        }
        dom=dom||document
        cnt=cnt||999999
        var res=[]

        if(_isCustomSelector(selector)){
            if(!$d.__zSelector){
                $d.__zSelector= $.require("zSelector")
            }
            if($d.__zSelector && $d.__zSelector.getEngine){
                res=$d.__zSelector.getEngine().query(selector,dom,cnt)
            }
        } else{
            res=_querySel(selector,dom,cnt)
        }
        if(res){
            if(cnt && cnt < res.length ){
                res= [].slice.call(res,0,cnt)
            }
            if(!Array.isArray(res)){
                res= [].slice.call(res);
            }
        }

        return res||[];
    }
    function _queryOne(sel, dom) {
        return _doquery(sel, dom,1)[0];

    }
     function _qall(selector,par) {
        return _doquery(selector, par);
    }
    $d._doquery=_doquery;
	$.extend($d,{
        matchAll: _matcheList,
		matches :  function(el,sel) {

				return _matches.apply(this, arguments)
			},
		q :  q,
		is :  function(e, chk) {
				if (e == chk) {
					return true
				}
				if (e == document && (chk == "doc" || chk == "root")) {
					return true
				}
				if (e == window && (chk == "win" || chk == "self")) {
					return true
				}
				var el = $d.toEl(e);
				if (!el || !chk) {
					return
				}
				if (el == chk || el == chk.el) {
					return true
				}
				if (typeof(chk) == "string") {
					if (chk == "input") {
						return $d.isFormInput(el)
					}
					return _matches.apply(this, arguments)
				}
				return
			}
	})
	
})();	;;(function(){
var _query = {
	byId: function(s) {
		return document.getElementById(s)
	},
	byClass: function(s, dom) {
		return _arr((dom || document).getElementsByClassName(s))
	},
	byStyle: function(s, dom) {
		return _arr((dom || document).querySelectorAll("*")).filter(function(a){var v=a.style?a.style[s]:"";return v&&v!="auto"&&v!="inherit" })
	},
	byTag: function(s, dom) {
		return _arr((dom || document).getElementsByTagName(s))
	},
	makeAttribSel: function(nm, v, pre) {
		var s = "",
			nm, v, pre, dom
		s = (pre || "") + "[" + nm + ((v == null || v == "") ? "" : ('="' + v + '"')) + "]"
		return s
	},
	byAttrib: function() {
		var s = "", nm, v, pre, dom, single
		var a = [].slice.call(arguments)
		if (a[a.length - 1] === true) {
			single = a.pop()
		}
		if (a[a.length - 1] && a[a.length - 1].nodeType) {
			dom = a.pop()
		}
		nm = a.shift();
		v = a.shift();
		pre = a.shift()
		s = _query.makeAttribSel(nm, v, pre)
		return single ? _arr((dom || document).querySelector(s)) : _arr((dom || document).querySelectorAll(s))
	},
	byData: function() {
		var a = [].slice.call(arguments)
		if (String(a[0]).indexOf("data") == -1) {
			a[0] = "data-" + String(a[0]).replace(/^-/, "")
		}
		return _query.byAttrib.apply(_query, a)
	}
}
var __JQproto = null
function _qall(selector,par) {
	return _doquery(selector, par);
}
var fncache={}
	function _setupJQProto(){
 			__JQproto={}
			function _exarray(lst) {
				return List.from(lst).chainable()
			};




			Object.defineProperty(__JQ.prototype,"el",{get:function(a){var e=this[0];
				return (e && e.el)?e.el:e
			},set:function(){},enumerable:true})
			var __getPropGen = (function() {
				function makecallback(propname){

					var haspath=propname.indexOf(".")> 0,isstyle= 0,callback
					if($d.css.isStyle(propname)){
						isstyle=$d.css.getRecord(propname)
					}
					if(isstyle) {
						callback = isstyle.getValue.bind(isstyle)
					}
					else if(haspath) {
						callback = $.resolveProperty
					} else {var prop=propname
						callback = function(el){
							var r=el?el [prop]:null;
							return r==null && el.getAttribute?el.getAttribute(prop):r
						}
					}
					return callback
				}
				var cache={}
				return function(propertyName){
					// if(cache[propertyName]){return cache[propertyName]}
					var callback=makecallback(propertyName);
					return cache[propertyName]=function(){
						return this.__invoke(
							function(el) {
								return (el && el.el)?callback(el.el, propertyName):null
							}
						)}
				}
			})();
			var workel=document.createElement("div")
			function _selectorOrfn(val){
				if(typeof(val)=="function"){
					return val
				}
				if(typeof(val)=="string" ){
					if(val.trim().indexOf("->")==0) {
						return $.fnize(val.trim().replace("->", "").trim())
					} else if(/^[\w]+$/.test(val)) {
						if(typeof($d[val])=="function"){
							return $d[val];
						}
						if(this.__config__ && this.__config__.root&& typeof(this.__config__.root[val])=="function"){
							return this.__config__.root[val];
						}
					}
				}
				return val
			}
			function _flatten(list,res){
				res=res||[]
				list.forEach(function(a){
						if(Array.isArray(a) || (a instanceof Array)){
							_flatten(a,res);
						} else{
							res.indexOf(a)==-1 && res.push(a);
						}
					}
				);
				return res
			}
			function _resolveMethod(fn,args){
				if(typeof( fn) === "function"){
					return {fn:fn, ctx:"el",args:[].slice.call(args||[])}
				}
				if(typeof(fn) !== "string"){
					return null
				}
				var memo={fn:null, ctx:$d,args:[].slice.call(args||[])}
				if(fncache[fn]){var c=fncache[fn]
					return {fn: c.fn,ctx: c.ctx,native: c.native,args:[].slice.call(args||[]),newcollection: c.newcollection};
				}

				if(!$d[fn] && typeof(workel[fn]) == "function"){
					memo.fn=workel[fn]
					memo.native=true;
					memo.ctx=null
				} else {
					if(typeof($d[fn]) == "function"){
						memo.fn=$d[fn]
					} else {
						var parsed = $.parse(fn)
						if (parsed && parsed.vars && parsed.vars.length && (parsed.vars[0] in $d || parsed.vars[0] in workel)) {
							memo.fn = parsed
							if (parsed.vars[0] in workel) {
								memo.ctx = null
							}
						}
					}
				}




				if(memo.fn && memo.ctx==null){
					memo.args=memo.args.map(function(it){return (it && it.el)?it.el:it})
				}
				if(memo.ctx===null || memo.ctx ==="el"){
					if(memo.native){memo.firstarg="element"}
					else{
						memo.firstarg=memo.ctx?memo.ctx ==="el"?"el":"element":null
					}

				}
				if(/s$/.test(fn)){
					memo.newcollection=true
				}
				fncache[fn]=memo

				return memo
			}
			__JQ.prototype.newInstance = function(res,selector,root) {
				var nu=new __JQ(res,  this.__config__)
				return nu;
			}
			__JQ.prototype.getProperty = function(nm) {
				var fn=__getPropGen(nm)
				return fn.call(this)
			}
			__JQ.prototype.setProperty = function(nm,val) {
				this.each(function(el){el.prop(nm,val)})
				return this
			}
			__JQ.prototype.tap = function(fn) {
				fn.apply(this,[this].concat([].slice.call(arguments,1)))
				return this
			}
			__JQ.prototype.__exec = function(fn,fnargs,memo) {
				var res=[]

				memo=memo||_resolveMethod(fn,fnargs)
				if(!memo || !memo.fn){return null}

				var mthd =memo.fn,args=memo.args||[],ctx=memo.ctx, l = this, ln = l.length
				for (var i = 0; i < ln; i++) {
					var r,el=$d(l[i]);
					if (!el) {
						continue
					}
					var r
					if(memo.native){
						r=mthd.apply(el.el,args)
					}
					else if(typeof(el[fn])=="function"){
						r=el[fn].apply(el,args)
					}
					else{
						r=mthd.apply((ctx===null || ctx ==="el")? el:ctx, ctx ?[ctx ==="el"?el:(el.el || el)].concat(args): args )
					}
					res.push(r)
				}
				return res;
			}
			__JQ.prototype.__invoke = function(fn,fnargs) {
				var memo=_resolveMethod(fn,fnargs)
				var allel = 1,issame= 0,  result=[],result0 = this.__exec(fn,fnargs,memo)
				if(!result0){
					return this
				}
				var ln = result0.length||0,ifnotself=this.__config__.returnfirstifnotself,ifnotel=this.__config__._returnfirstifnotel
				if(!ifnotself && memo.newcollection){
					ifnotself=false;
				}
				//if(!ln){return }
				if(ln==1){
					var first=$d(this[0]),resultfirst=$d(result0[0])
					if(this.length==1 && first && (first===resultfirst)){
						return this
					}
					return resultfirst

				}
				for (var i = 0, l = result0 ; i < ln; i++) {
					var r =l[i];
					if(typeof(r)==="undefined"){r=this[l]}
					if(r===this[i]){
						issame++;
						result.push(r)
						continue
					} else{
						if(ifnotself){
							return i?result[0]:r
						}
						if(ifnotel && !(r && r.nodeType)){return i?result[0]:r}
					}
					if (r!=null){

						if(typeof(r)==="boolean"){
							allel = 0
							if(!r){
								return false;
							}
						}
						else if (Array.isArray(r) || (typeof(r) === 'object' && r.length)) {
							issame=0;
							for (var i2 = 0, l2 = r, ln2 = l2.length; i2 < ln2; i2++) {
								if(allel && !(l2[i2] && l2[i2].nodeType) ){allel=0}
								(!allel  || result.indexOf(l2[i2])==-1) && result.push(l2[i2])
							}
						} else {
							if(r && r.nodeType){
								result.indexOf(r)==-1 && result.push(r)
							} else{
								allel = 0
								result.push(r)
							}
						}
					}
				}

				if (issame && !(issame===this.length)) {
					issame = 0
				}
				/*if (!result.length || result.some(function(a) {
				 return a != null && !a.nodeType
				 })) {
				 allel = 0
				 }*/
				if (allel && issame) {
					return this;
				}
				if(ifnotself){
					return result[0]
				}
				if (allel) {
					return this.newInstance(result);
				}
				if(result.length==1 && typeof(result[0])==="boolean") {
					return result[0]
				}
				return _exarray(result)
			}
			var bdy = "return this.__invoke('__name__',arguments);"
			Object.keys($d).forEach(
				function(a) {if(a=="el"){return}
					if (typeof(a) !== "string" || a.toUpperCase() === a || a == "st"   ||a == "qq"   || (a.indexOf("__")==0) || a in __JQ.prototype) {
						return
					}
					if(typeof($d[a]) == "function"){
						__JQ.prototype[a] = Function(bdy.replace(/__name__/, a));
					}

				}
			);
			__JQ.prototype.scrollTop = function(val){
				var first=$d(this[0])
				if(!first){return}
				if(val!=null) {
					first.el.scrollTop = val;
					return this
				}

				return first.el.scrollTop
			};
			__JQ.prototype.scrollLeft = function(val){
				var first=$d(this[0])
				if(!first){return}
				if(val!=null) {
					first.el.scrollLeft = val;
					return this
				}
				return first.el.scrollLeft
			} ;
			if(document.body){
				var body=document.body,noop=function(){ } ;
				Object.keys(document.body).forEach(
					function(a) {if(a=="el"){return}
						if ( typeof(a) !== "string" || body[a] == "function" || a.toUpperCase() === a || a.indexOf("_") == 0 ||  a in __JQ.prototype) {
							return
						}
 						var _set= Function("v","this.setProperty('"+a+"',v)")
 						Object.defineProperty(__JQ.prototype,a,{ get: __getPropGen(a), set:_set})
					}

				);
			}

			__JQ.prototype.collect = function(fn) {
				return this.__invoke(fn,[].slice.call(arguments,1))
			}
			var nthcache={}
			__JQ.prototype.nth = function(i) {
				if(typeof(i)=="string" && i.indexOf("n")>=0){
					var fn=nthcache[i]||(nthcache[i]=Function("n","return "+ i.replace(/([\d]+)n/g,function(a,b){return "("+b+"* n)";})));
					var result=[],sz=this.size();
					for (var i1 = 0, l1 = this, ln1 = l1.length; i1 < ln1; i1++) {
						var i2=fn(i1+1);
						if(i2>= sz){break;}
						i2>0 && this[i2-1] && result.push(this[i2-1])
					}
					var config=this.__config__||{}
					return new this.constructor(result, null, config.root, config.log);
				}
				if(i>0 && i<=this.length ){
					return this[i-1]
				}
				return null
			}
			__JQ.prototype.last = function() {
				return $d(this[this.length-1])
			}
			__JQ.prototype.first = function() {
				return $d(this[0])
			}
			__JQ.prototype.each = function(fn,ctx) {
				if(!(ctx && typeof(ctx)=="object")){ctx=null}
				for(var i= 0,l=this,ln= l.length;i<ln;i++){
					var el=$d(l[i])
					el && fn.call(ctx||el,el,i,this)
				}
				return this
			}
			__JQ.prototype.select = function( ) {
				var args=[].slice.call(arguments),tx=null,res=[];
				var last=_selectorOrfn(args[args.length-1])
				if(args.length) {
					var fn=args.shift(),l = this, ln = l.length
					for (var i = 0; i < ln; i++) {
						var el = $d(l[i]);
						if (!el) {
							continue
						}
						if(typeof(fn)=="function"){
							var r=fn(el)
							if(!r){continue}
							if(typeof(r)=="object" && r.length!=null){
								res.push(r)
							} else{
								res.push(el)
							}

						}else{
							res.push($d._doquery(fn, el))
						}

					}
					res = _flatten(res)
					if (args.length > 1) {

						var res2 = args.reduce(function (list, sel) {
							return list.select(sel)
						}, res)

						res = _flatten(res2)
					}
				} else{
					res=this
				}
				if (tx) {
					return res.map(tx)
				}
				return this.newInstance(res.map($d.ex) )
			}
			__JQ.prototype.filter = function(fn) {
				var res=[], l = this, ln = l.length
				var last=_selectorOrfn(fn)
				for (var  i = 0; i < ln; i++) {
					var el=$d(l[i]);if(!el){continue}
					if(typeof(last)=="function"){
						last.call(el, el,i) && res.push(el)
					} else if(typeof(last)=="string"){
						$d.matches(el,last) && res.push(el)
					}
				}
				if(res.length==ln){return this}
				return this.newInstance(res )
			}
			__JQ.prototype.findAll = function(fn) {
				var res=this.filter(fn)
				if(arguments.length>1){
					return [].slice.call(arguments,1).reduce(function(list,sel){
						return list.filter(sel)
					},res)
				}
				return res


			}
			__JQ.prototype.size = function() {
				return this.length
			};


			__JQ.prototype.index = function(a) {
				return this.indexOf(a)
			};
			__JQ.prototype.refresh = function(selector) {
				selector = selector || this.__config__._selector;
				if (selector && typeof(selector) == "string" && this.__config__.root) {
					var lst = [].slice.call(this.__config__.root.querySelectorAll(selector));
					this.splice(0, this.length)
					this.push.apply(this, lst.map(function(a){return $d(a)}));
				}
				return this;
			};
			__JQ.prototype.eq= function eq(idx) {

				return $d(this[idx])
			}
			__JQ.prototype.add = function(el) {
				el=$d(el)
				if(el && this.indexOf(el)==-1){
					this.push(el)
				}
				return this;
			}
			__JQ.prototype.andSelf = function() {
				return this.add(this.__config__.root);
			}
			__JQ.prototype.constructor=__JQ
			__JQ.fn = __JQ.prototype;
			qq.fn = __JQ.prototype;

	}
function setupJQProto(){
	if (!__JQproto) {
		_setupJQProto()
	}
	return qq
}
var 	__JQ = (
	function(){
		var arrproto=Array.prototype,D=null
		return function(lst, selector ) {
			setupJQProto();
			if(D===null){D=$d.ex||null};
			var config={}
			if(lst==null && typeof(selector)=="object" && (Array.isArray(selector) || (selector.length!=null))){
				lst = selector;
				selector=null;
			}
			if(arguments.length==2 && selector && typeof(selector)=="object"){
				config=arguments[1];
			} else{
				var root=document.documentElement||document.body
				if(arguments[2] && arguments[2].nodeType){
					root=arguments[2]
				}
				config={returnfirstifnotself:true,selector:selector,root:$d(root),log:arguments[3] || []}
			}
			if(config.returnfirstifnotself==null){
				config.returnfirstifnotself=true;
			}
			if(typeof(lst)=="string"){
				selector=lst;
				lst=null;
			}
			if(lst==null && typeof(selector)=="string"){
				lst = $d._doquery(selector, config.root)
			}

			Object.defineProperty(
				this,"__config__",
				{value:config,enumerable:false,writable:false,configurable:true}

			)
			if(lst == null){return}
			if(!lst){lst=[]}
			else if(lst.nodeType){lst=[lst]}
			if(Array.isArray(lst) || (typeof(lst)=="object" && lst.length && lst[0] && typeof(lst[0])=="object") ){
				this.push.apply(this, arrproto.map.call(lst,D));
			}
	}})();
	__JQ.prototype = Object.create(Array.prototype);

function qq() {
	var selector=arguments[0],par=arguments[1]
	if(selector && typeof(selector)=="object" && (selector.nodeType || selector===window)){
		par=selector;
		selector=arguments[1]
	}

	if (!selector) {
		if(par && $d(par)){
			return new __JQ([$d(par)])
		}
		return []
	}
 	return new __JQ(null,selector, par)
}
$.extend(qq, _query)
	$d.qq=qq
self.$$=qq
})();;;(function(){
    $.Event=function(type ){
        return {
            type:type
        }
    };
    $.event={special:{}};

$.extend($d,{

        trigger: function(e, type, dat, options) {
            function copyProps(inst, d, opns) {
                ["x", "y", "pageX", "pageY", "touches", "changedTouches"].concat(Object.keys(inst)).forEach(
                    function(k) {
                        if (k == "type") {
                            return
                        }
                        var v = null
                        if (k in d) {
                            v = d[k]
                        } else if (k in opns && opns[k]) {
                            v = opns[k]
                        }
                        if (v && /element|target/i.test(k)) {
                            var dm = $d(v)
                            v = dm ? dm.el : null
                        } else {
                            if (!v || typeof(v) == "function" || v === inst[k]) {
                                v = null
                            }
                        }
                        if (v == null) {
                            return
                        }
                        try {
                            inst[k] = (typeof(v) == "object" && "length" in v) ? [].slice.call(v) : v
                        } catch (e) {}
                    }
                );
                if (opns.originalEvent) {
                    inst.originalEvent = opns.originalEvent
                } else if (data.originalEvent) {
                    inst.originalEvent = data.originalEvent
                }
            }


            var el = $d.toEl(e),
                data = {};
            if(type && typeof(type)=="object"){
                options=type
                type=options.type;
            }
            if (!options && dat && dat.options) {
                options = dat.options;
                delete dat.options
            }
            if (dat && dat.data) {
                options = dat;
                data = dat.data
                delete options.data;
            } else {
                data = dat || {}
            }
            data = data || {}
            options = options || {}

            if (!$.isPlain(data)) {
                data = {
                    data: data
                }
            }
            var id
            type = String(type).toLowerCase()
            if(type.indexOf(".")>0){
                var arr=type.split(".")
                type=  arr.shift()
                id=arr.join(".");
            }
            var evnt,view=document.defaultView,ctor=null,ctorname,intprops={
                'view': view,
                'bubbles': options.bubbles==null?true:options.bubbles,
                'cancelable': options.cancelable==null?true:options.cancelable
            };
            if (/^mouse/i.test(type)||type=="click") {
                ctorname="MouseEvents"
                 if(typeof(MouseEvent)=="function"){
                    ctor=MouseEvent;
                }

            }
            if (/^key/i.test(type)) {
                var character = data ? (data.data || data.key || data|| data.keyCode||"") : " "
                if (character && typeof(character) == "number") {
                    character = String.fromCharCode(character)
                 } else if(typeof(character)!="string"){character=""}
                ctorname="KeyboardEvent"
                if(typeof(KeyboardEvent)=="function"){
                    ctor=KeyboardEvent;
                }
                intprops.key=character
            } else if (("on"+type) in el) {
                ctorname="Event"
                if(typeof(Event)=="function"){
                    ctor= Event;
                }
             }  else {
                ctorname="CustomEvent";
                if(typeof(CustomEvent)=="function"){
                    ctor= CustomEvent;
                }
            }
            if(ctor){
                evnt= new ctor(type,intprops)
            } else{
                evnt = document.createEvent(ctorname);
                var initfn="init"+ctorname
                if(typeof(evnt[initfn])!="function"){
                    initfn="init"+ctorname.replace(/s$/,"")
                }
                if(typeof(evnt[initfn])=="function"){
                    evnt[initfn](type,intprops)
                }
            }
            if(evnt && !evnt.isDefaultPrevented){
                evnt.isDefaultPrevented=function(){return false;}
            }
            if(evnt) {
                copyProps(evnt, data, options)
                evnt.data = data
                el.dispatchEvent(evnt);

            } else{
                if (el.fireEvent) { // ie
                     el.fireEvent("on" + type);
                }
            }


            return evnt
        },
		__SpecialEventHandlers: (function() {
            var sp=null
            function registerSpecial(ev,setup,clear){
                $.event.special[ev]={setup:setup,clear:clear}
            }
            function _setup() {
                sp = $.event.special
                registerSpecial("wheel", function () {
                    var el = $d(this.delegate)
                    $d.addWheelListener(el, function (ev) {
                        $d(el).getEmitter().fire("wheel", ev)
                    });
                }, function () {
                    $d.addWheelListener(this.delegate, null)
                });
                registerSpecial("inview", function (ev) {
                    var _check = function _check(ev) {
                        var el = $d(this.delegate)
                        if (el && el.isVisible()) {
                            $d.watchMutation(el, false);
                            el.getEmitter().fire("inview", ev)
                            var hiddenanc = $d.data(el, "hiddenanc")
                            if (hiddenanc) {
                                $d.watchMutation(hiddenanc, false);
                                $d.data(el, "hiddenanc", null)
                            }
                            return true
                        }
                    }.bind(this)
                    if (_check()) {
                        return;
                    }
                    var el = $d(this.delegate)
                    $d.watchMutation(el, "offsetHeight style", _check);
                    var hiddenanc = $d.ancestors(el).find(function (a) {
                        return a.style.display == "none" || a.style.visibility == "hidden"
                    })
                    if (hiddenanc) {
                        $d.data(el, "hiddenanc", hiddenanc)
                        $d.watchMutation(hiddenanc, "display visibility", function (ev) {
                            if (!this.isVisible()) {
                                return
                            }
                            _check()
                        });
                    }

                }, function () {
                    var el = this.delegate
                    if(! $d(el)){return}
                    $d.watchMutation(el, false);
                    if ($d.data(el, "hiddenanc")) {
                        $d.watchMutation($d.data(el, "hiddenanc"), false);
                        $d.data(el, "hiddenanc", null)
                    }
                });

                registerSpecial("overflow", function () {
                    var el = this.delegate,emitter=this,isoverflow=false;
                    function _check( ){
                        var ev= {type:"overflow",data:{},target:el}
                        var nu=!!(el && el.scrollWidth>(el.offsetWidth+10) )
                        if(nu!==isoverflow){
                            isoverflow=nu;
                            ev.data.overflow=isoverflow;
                            emitter.fire(  ev)
                        }
                    }
                     $d.addResizeListener(el, _check);
                    _check();
                }, function () {
                    $d.removeResizeListener(this.delegate)
                });
                registerSpecial("resize", function () {
                    var el = this.delegate,emitter=this;
                    $d.addResizeListener(el, function (ev) {
                        emitter.fire("resize", ev)
                    });
                }, function () {
                    $d.removeResizeListener(this.delegate)
                });
                if (!document.body["onmouseleave"]) {
                    var dochandle = null,
                        lst = [];
                    (function () {
                        function h1(nm) {
                            var ths = this,
                                el = $d(this.delegate),
                                elem = el.el,
                                type = nm
                            if (!el || el.data("hover_handle")) {
                                return
                            }

                            function handle(ev) {
                                var target = ev.target,
                                    rel = ev.relatedTarget;
                                if (elem.contains(target) && (rel && !elem.contains(rel))) {
                                    if (!el.data("_entered")) {
                                        el.data("_entered", 1)
                                        ths.fire("mouseenter", ev)
                                    }
                                } else if (rel == elem && !elem.contains(target) && el.data("_entered")) {
                                    el.data("_entered", null)
                                    ths.fire("mouseleave", ev)
                                }
                            }

                            if (!dochandle) {
                                dochandle = function (ev) {
                                    for (var i = 0, ln = lst.length; i < ln; i++) {
                                        lst[i].call(this, ev)
                                    }
                                }
                                document.addEventListener("mouseover", dochandle)
                            }
                            lst.push(handle)
                            el.data("hover_handle", handle)
                        }

                        function h2(nm) {
                            var el = $d(this.delegate),
                                elem = el.el,
                                type = nm
                            if(!el){return}
                            var handle = el.data("hover_handle")
                            el.data("hover_handle", null)
                            var idx = lst.indexOf(handle)
                            if (idx >= 0) {
                                lst.splice(idx, 1)
                            }
                            if (dochandle && !lst.length) {
                                document.removeEventListener("mouseover", dochandle);
                                dochandle = null
                            }

                        }

                        registerSpecial("mouseleave", h1, h2)
                        registerSpecial("mouseenter", h1, h2)
                    })();
                }

                registerSpecial("transitionend", function (ev) {
                    if(!$d(this.delegate)){return}
                    $d(this.delegate).onTransiotionEnd(
                        (function () {
                            $d(this.delegate).getEmitter().fire("transitionend", ev)
                        }).bind(this)
                    )


                }, function () {
                })

                registerSpecial("visible", function (ev, optns) {
                    optns = optns || {}
                    var oldtimer = $d.data(this.delegate, "visiblitytimer")
                    if (oldtimer) {
                        oldtimer.cancel();
                    }

                    var timer
                    var pt = document.elementFromPoint.bind(document);

                    function isvis(memo) {
                        var e = memo.el ;
                        if (e && $d.isVisible(e, !optns.checkz)) {
                            return true
                        }
                        return false
                    }

                    function cancel(memo) {
                        var eltimer = memo.timer
                        if (eltimer) {
                            try{eltimer.cancel();} catch(e){}
                        }
                        memo.timer = null
                    }

                    var memo = {el: this.delegate}
                    function _check(memo) {
                        if (!(memo.el && $d.isAttached(memo.el))) {
                            if (!memo.visibility) {
                                cancel(memo);
                                return true
                            }
                        }
                        if (isvis(memo) === memo.visibility) {
                            $d(memo.el).getEmitter().fire("visible", {
                                type: "visible",
                                target: memo.el,
                                data: {visible: memo.visibility}
                            })
                            if (!optns.once ) {
                                memo.visibility = !memo.visibility

                            } else {
                                cancel(memo)
                                return true
                            }
                        }
                    }
                    if(optns.checktoggle){
                        memo.visibility = !isvis(memo)
                    }
                    else{
                        memo.visibility = true
                        optns.once=true;
                    }
                    if(!optns.checktoggle){optns.once=true}
                    setTimeout(function(){
                        if(!_check(memo)){
                            memo.timer = $.timer.until(500,_check , function end(res, memo) {
                                cancel(memo)
                            }, memo)
                            memo.timer && memo.timer.start()
                        }
                    },100)


                }, function (memo) {
                    cancel(memo)
                });
                registerSpecial("searchcancel",
                    function(ev, optns0){
                        if(this.delegate && this.delegate.type!=="search"){return }
                        $d.on(this.delegate,"click.searchcancel", function (ev) {
                            var el = this.delegate
                            var b=$d.bounds(el)
                            if(ev.x && ev.x < b.right && (b.right - ev.x) < 20){//clicked on clear link
                                ev.stopImmediatePropagation()
                            }
                            this.fire("searchcancel", ev )
                        }.bind(this));
                    },
                    function (fn) {if(!$d(this.delegate)){return}
                        this.off("click", "searchcancel")
                    }
                );
                registerSpecial("focusin",
                    function (ev, optns0) {
                        var fn= $.throttle(function(ev){
                            this.fire("focusin", ev )
                        }.bind(this ),{topEnd:true})
                        $d.onAttach(this.delegate,function( el){
                            el.data("focus_handle",fn)
                            el.el.addEventListener( "focus",fn );  el.el.addEventListener( "focusin",fn ); el.el.addEventListener( "DOMFocusIn",fn );

                        })

                    },
                    function (fn) {
                        if(!(this.delegate && this.delegate.el)){return}
                        var fn=this.delegate.data("focus_handle"),el=this.delegate.el
                        if(fn && el){
                             el.el.removeEventListener( "focus",fn );  el.el.removeEventListener( "focusin",fn ); el.el.removeEventListener( "DOMFocusIn",fn );
                        }
                     });
                registerSpecial("focusout",
                    function (ev, optns0) {
                        var fn= $.throttle(function(ev){
                            this.fire("focusout", ev )
                        }.bind(this ),{topEnd:true})
                        $d.onAttach(this.delegate,function( el){
                            el.data("focus_handle",fn)
                            el.el.addEventListener( "blur",fn );  el.el.addEventListener( "focusout",fn ); el.el.addEventListener( "DOMFocusOut",fn );

                        })

                    },
                    function (fn) {
                        if(!(this.delegate && this.delegate.el)){return}
                        var fn=this.delegate.data("focus_handle"),el=this.delegate.el
                        if(fn && el){
                            el.el.removeEventListener( "focus",fn );  el.el.removeEventListener( "focusin",fn ); el.el.removeEventListener( "DOMFocusIn",fn );
                        }
                    });
                registerSpecial("enter",
                    function (ev, optns0) {
                        $d.on(this.delegate,"keydown.enter", function (ev) {
                            (ev.keyCode==13) && this.fire("enter", ev );
                        }.bind(this));
                    },
                    function (fn) {
                        this.off("keydown", "enter")
                    });
                registerSpecial("esc",
                    function (ev, optns0) {
                        $d.on(this.delegate,"keydown.esc", function (ev) {
                            (ev.keyCode==27) && this.fire("esc", ev );
                        }.bind(this));
                    },
                    function (fn) {
                        this.off("keydown", "esc")
                    });
                registerSpecial("attrmodified",
                    function (ev, optns0) {
                        var optns = (optns0 || {}).mutation || optns0
                        $d.watchMutation(this.delegate, optns, function (rec) {
                            if (!rec) {
                                return
                            }
                            $d(this).getEmitter().fire("attrmodified", ev, rec)
                        })
                    },
                    function (fn) {if(!$d(this.delegate)){return}
                        var rec = $d(this.delegate).data("_mutation")
                        rec.remove(fn)
                    });

                registerSpecial("attach",
                    function (ev, optns0) {
                        var optns = (optns0 || {}).mutation || optns0
                        var selector=optns.selectortocheck||optns.selector
                        $d.onAttach(this.delegate,selector,function(el){
                            $d(el).getEmitter().fire("attach", {target:el} )
                        })
                    },
                    function (fn) {  });

                function genmobileev( nm) {
                    registerSpecial(nm, function () {
                        if (!$d.__pointerEvents) {
                            //$d._setupPointerEvents();
                            $d.__pointerEvents=true;
                        }
                        var handle = $d.data(el, nm + "_handle")
                        if (handle) {
                            return
                        }
                        var ths = this,
                            el = ths.delegate
                        handle = function (ev) {
                            if (ev && ev.target && !el.contains(ev.target.el || ev.target)) {
                                return
                            } else {
                                ths.fire(nm, ev)
                            }
                        }
                        document.addEventListener(nm, handle)
                        $d.data(el, nm + "_handle", handle)
                    }, function () {
                        var handle = $d.data(el, nm + "_handle")
                        $d.data(el, nm + "_handle", null)
                        document.removeEventListener(nm, handle)

                    })

                };
                ["swipe", "swipeleft", "swiperight", "swipeup", "swipedown", "tap", "dbltap"].forEach(
                    function (k) {
                        genmobileev( k)
                    }
                )
            }
            return function (){
                if(!sp){_setup()}
                return sp;
            }

        })(),



        _pointerEvent: function _pointerEvent(e, ev, fn, cap) {
            var el = $d(e),
                evmap = {
                    mousedown: "touchstart",
                    mouseup: "touchend",
                    mousemove: "touchmove",
                    mouseleave: "touchleave",
                    click: "tap"
                }
            if (!el) {
                return
            }
            if (window.isTochDevice == null) {
                window.isTochDevice = !!($.browser && ($.browser.isTouchDevice || $.browser.touch || $.browser.mobile))
            }
            if (!(window.isTouchDevice && evmap[ev])) {
                return $d.on(e, ev, fn)
            }
            ev = evmap[ev]

            if (typeof(fn) === "function" && ev == "tap") {
                var elem = el.el
                elem.addEventListener(evmap.mousedown, function c(ev) {
                    var t = ev.target;
                    this.addEventListener(evmap.mouseup, function mup(ev1) {
                        this.removeEventListener(evmap.mouseup, mup)
                        if (ev1.target === t) {
                            var data = {
                                originalEvent: ev1
                            }
                            Object.keys(ev1).forEach(function(k) {
                                if (k != "type" && ev1[k] && typeof(ev1[k]) != "function") {
                                    data[k] = ev1[k]
                                }
                            })
                            el.trigger("tap", {
                                custom: true,
                                data: data
                            })
                        }
                    })
                }, !!cap)
            }
            if (fn === false) {
                el.el.removeEventListener(ev)
            } else {
                var f = function(ev) {
                    var t = (ev.touches || [])[0],
                        x = ev.x,
                        y = ev.y
                    if (!t && ev.changedTouches && ev.changedTouches.length) {
                        t = ev.changedTouches[0]
                    }
                    var nutarget
                    if (t && t.pageX) {
                        ev.x = t.pageX
                        nutarget = t.target
                        ev.y = t.pageY
                    }
                    if (!nutarget && ev.originalEvent) {
                        if (ev.originalEvent.target) {
                            nutarget = ev.originalEvent.target
                        }
                    }
                    if (nutarget) {
                        ev.target = nutarget
                    }
                    var evt = ev
                    if (nutarget && ev.target != nutarget) {
                        evt = $.clone(ev);

                        evt.stopPropagation = ev.stopPropagation.bind(ev)
                        evt.stopImmediatePropagation = ev.stopImmediatePropagation.bind(ev)
                        evt.preventDefault = ev.preventDefault.bind(ev)
                        evt.target = nutarget;
                    }
                    fn.call(this, evt)
                }
                el.el.addEventListener(ev, f, !!cap)
            }
            return el
        },
        pointerselect: function pointerselect(e, fn, cap) {
            return $d._pointerEvent(e, "click", fn, cap)
        },
        pointerenter: function pointerenter(e, fn, cap) {
            return $d.on(e, "mouseenter", fn, cap)
        },
        pointerleave: function pointerleave(e, fn, cap) {
            return $d.on(e, "mouseleave", fn, cap)
        },
        pointerdown: function pointerdown(e, fn, cap) {
            return $d._pointerEvent(e, "mousedown", fn, cap)
        },
        pointerup: function pointerup(e, fn, cap) {
            return $d._pointerEvent(e, "mouseup", fn, cap)
        },
        pointermove: function pointermove(e, fn, cap) {
            return $d._pointerEvent(e, "mousemove", fn, cap)
        },
        pointerover: function pointerenter(e, fn, cap) {
            return $d._pointerEvent(e, "mouseover", fn, cap)
        },
        off: function _off(el0, ev, fn, id) {
            var el = $d(el0),
                emitter
            if (!el) {
                return
            }
            emitter = $d.getEmitter(el)
            if (emitter) {
                if (typeof(ev) == "string" && ev.indexOf(".") > 0) {
                    var arr = ev.split(/\./)
                    ev = arr.shift()
                    id = arr.join(".")
                }
                if (typeof(fn) == "string") {
                    emitter.off(ev, fn)
                } else {
                    emitter.off(ev, fn, id)
                }
            }
            return el
        },
        outside:function(el ,optns){
            var elem = $d(el)
            if (!elem) {
                return
            }
            optns=optns||{}
            if(typeof(optns)=="function"){
                optns={callback:optns}
            };

            return (function(elem,options){
                var chk=function(){return true}
                if( typeof(options.test)=="function"){
                    chk=options.test
                }
                var cleared=false
                function mup(ev){
                    if(!elem.contains(ev.target) && chk.call(elem,ev.target,ev)){
                        clearEvents( )
                    }
                }
                function kup(ev){
                    if(ev && !(ev.target && ev.target.type) && ev.keyCode==27 && chk.call(elem,ev.target,ev)){
                        clearEvents( )
                    }
                }
                function clearEvents( noev){
                    document.removeEventListener("mousedown",mup)
                    document.removeEventListener("keydown",kup)
                    if(options.callback && noev!==true ){
                        options.callback.call(elem,noev)
                        options.callback=null;
                    }
                    cleared=true;
                }
                setTimeout(function(){
                    clearEvents( true);
                    cleared=false;
                    if( options.esc!==false) {
                        document.addEventListener("keyup", kup)
                    }
                    if(options.ignoreblur!==true) {
                        document.addEventListener("mousedown",mup)
                    }
                },1);
                return {
                    cancel: function(){
                        if(this._cancelled){return}
                        this._cancelled=true
                        clearEvents(true);
                    } ,
                    el:elem
                }


            })(elem,optns);

        },
    _on: (function _on() {

        var keyM=null,_curry=null,_supportsMouseXY=false;
        var filters={
            mousepos:function( ev){
                if(!("x" in ev)){
                    $d.util.mousePos(ev,null)
                } else {
                    _supportsMouseXY=true
                }
                return true
            },
            lclick:function(ev){
                return !((ev.which && ev.which == 3) || (ev.button && ev.button == 2))
            },
            selector:function(selector,ev){
                return $d.selfOrUp(ev.target,selector)||null
            },
            kbdkey:function(selector,ev){
                if (ev && ev.keyCode == 16) {
                    return true
                }
                keyM||(keyM = $.eventUtil);
                if (keyM.is(ev, selector)) {
                    return true
                } else {
                    ev.preventDefault && ev.preventDefault();
                    return false
                }
            }
        }
        function _parseEv(ev,options){
            var arrsel = ev.split(/::/),
                selector="",
                id, evnm, arr,once,evlist
            ev = arrsel.shift();
            options=options||{}
            if(typeof(options)=="string"){options={selector:options}}
            if(typeof(options)=="boolean"){options={once:options}}
            if(!$.isPlain(options)){
                options={}
            }
            if(/[\s\,]/.test(ev)){
                evlist=ev.split(/[\s\,]/).map(function(a){return a.trim()})
            } else{
                selector = arrsel.join("::");
                arr = ev.split(/\./);
                evnm = arr.shift();
                id = arr.join(".");
                arr = evnm.split(/!/);
                evnm = arr.shift();
                if(arr.length ){
                    if(arr[0]=="once"){options.once=true}
                    else {options.async=true}
                }
            }


            if(selector){options.selector=selector}
            if(id){options.id=id}
            options.ev=evlist||evnm
            var evfilters=[]
            if(evlist){options.islist=true;evnm=evlist.join(",")}
            if(/^key/i.test(evnm)){
                options.keyboard=true
            } else if(/mouse|click/i.test(evnm)){
                options.mouse=true
                _supportsMouseXY || evfilters.push( filters.mousepos )
                if(!(evnm=="rightclick" || evnm=="rclick") && /mousedown|mouseup|click/i.test(evnm)){
                    evfilters.push( filters.lclick)
                }
            }
            if( options.selector){
                _curry||(_curry=$.fn.curry);

                if(options.keyboard ){
                    evfilters.push(_curry(filters.kbdkey,options.selector))
                }
                else {
                    evfilters.push(_curry(filters.selector,options.selector))
                }
            }
            if(evfilters.length){
                options.filters=evfilters;
            }
            return options
        }

        function _process(e, ev, fn, optns,scopeddelegate) {
            var elem = $d(e);
            if (!elem) {
                return
            }
            if($.isPlain(ev)){
                $.each(function(val,key){
                    _process(e,key,val,optns,scopeddelegate)
                })
                return elem;
            }
            var fun = $.fnize(fn,{scope:elem}), options = _parseEv(ev, optns)
            if(typeof(fun)!="function"){return}
            var emitter = elem.getEmitter( )
            if(!emitter){return}
            if (options.islist) {
                options.scopeddelegate=scopeddelegate
                options.ev.forEach(function (evnm) {
                    emitter.on(evnm, fun, options);
                })
            } else {options.scopeddelegate=scopeddelegate
                emitter.on(options.ev, fun, options);
            }
        }


        return function(el0, ev, fn, optns,scopeddelegate) {
            if (Array.isArray(el0)) {
                el0.forEach(function(e) {
                    _process(e, ev, fn, optns,scopeddelegate)
                })
            } else {
                _process(el0, ev, fn, optns,scopeddelegate)
            }

            return Array.isArray(el0) ? el0 : $d(el0 )
        }

    })()
    ,
    one: function on(e, ev, fn, optns,scopeddelegate) {
        optns=optns||{}
        optns.once=true;
       return  $d.on( e, ev, fn, optns,scopeddelegate)
    },
        on: function on(e, ev, fn, optns,scopeddelegate) { //events [, selector ] [, data ], handler )
            var options={},handler=fn
            if(typeof(scopeddelegate)=="function"){
                handler=scopeddelegate;
                scopeddelegate=null;
                options.data=optns
                optns=null;
            }

            if(typeof(optns)=="function"){
                handler=optns;
            }
            if(typeof(fn)=="string"){
                options.selector=fn;
            }
            if(typeof(optns)=="string"){
                options.selector=optns;
            }
            if($.isPlain(optns)){
                $.extend(options,optns)
            }
            if(!(scopeddelegate && typeof(scopeddelegate)=="object")){
                scopeddelegate=null
            }
            if(typeof(ev)=="string" && ev.indexOf(":")>0){
                var arr=ev.split(":")
                options.selector=arr[1];
                ev=arr[0];
            }
            return   $d._on(e, ev, handler, options,scopeddelegate)
        },
        getEmitter:(function(){
            var customEvs=[
                "removed","attached"
            ]
            function _emitter(e){
                this.delegate=e;
                this.listeners={};
            }
            _emitter.prototype={
                on:function(ev,fn,opts){
                    var elem=$d(this.delegate)
                    if(!elem){return}
                    opts=opts||{};
                    var listeners=this.listeners[ev]||(this.listeners[ev]={type:ev,list:[]}),l=listeners.list,ln=listeners.list.length,sp_events=$d.__SpecialEventHandlers()
                    if(ln){
                        var id=opts.id
                        for(var i= 0 ;i<ln;i++){
                            if((id && l[i].opts.id==id) || l[i].fn==fn){return l[i]}
                        }
                    }
                    var data={opts:opts,fn:fn};
                    if(customEvs[ev] || opts.custom){listeners.custom=true}
                    listeners.list.push(data)
                    if(sp_events&&sp_events[ev]&&sp_events[ev].setup){
                        sp_events[ev].setup.call(this,ev,opts)
                        listeners.sp_event=sp_events[ev];
                    } else{
                         if( !listeners._domhandler && !listeners.custom){
                             elem.el.addEventListener(ev,listeners._domhandler=this.fire.bind(this));

                        }
                    }

                },
                removeAll:function(){
                    var dlg=$d(this.delegate);
                    if(!dlg){return}
                    var listeners=this.listeners,el=dlg.el;
                     for(var i= 0,l=Object.keys(this.listeners),ln= l.length;i<ln;i++){
                        var k=l[i],listener=this.listeners[k]
                        if(!listener ){continue}
                        listener._domhandler && el.removeEventListener(k,listener._domhandler);
                         if(listener.sp_event && listener.sp_event.clear){
                            listener.sp_event.clear.call(this)
                        }
                        delete this.listeners[k];
                    }
                    return
                },
                off:function(ev,fn){
                    var dlg=$d(this.delegate);
                    if(!dlg){return}
                    if(ev===null ){
                        return this.removeAll();
                    }
                    var el=dlg.el,alllisteners=this.listeners,listeners=alllisteners[ev];
                    if(!listeners){//if not ev but id
                        for(var i= 0,l=Object.keys(alllisteners),ln= l.length;i<ln;i++){
                            var k=l[i],listener=alllisteners[k]
                            if(!(listener && listener.list && listener.list.length)){continue}
                            for(var list=listener.list,j= list.length-1;j>=0;j--){
                                if(list[j] && list[j].opts && list[j].opts.id===ev){
                                    list.splice(j,1)
                                }
                            }
                        }
                    } else {
                        var list=listeners.list,ln=list.length,torem=[]
                        if(ln){
                            var id=typeof(fn)=="string"?fn:null
                            for(var i= 0;i<ln;i++){
                                if((id && list[i] && list[i].opts.id===id) || list[i].fn===fn ){
                                    torem.push(list[i]);
                                }
                            }
                            while(torem.length){
                                var i=list.indexOf(torem.shift())
                                i>=0 && list.splice(i,1)
                            }
                        }
                        if(listeners.sp_event && listeners.sp_event.clear){
                            listeners.sp_event.clear.call(this)
                        }
                        if(!list.length && list._domhandler  ){
                            dlg.el.removeEventListener(ev,listeners._domhandler );
                            delete this.listeners[ev];
                        }
                    }
                },
                destroy:function(){
                   this.removeAll(null)
                    delete this.delegate
                },
                fireAsync:function(ev){
                    setTimeout(this.fire.bind(this,ev),1);
                },
                fire:function(ev){
                    var elem=$d(this.delegate);
                    if(!elem || !ev){return}
                    var res,ennm,l,ln,torem=[]
                    if(typeof(ev)=="string"){
                         ev={type:ev,target:elem.el}
                    }
                    ennm=ev.type;
                    if(this.listeners[ennm]){
                        l=this.listeners[ennm].list
                        ln=l.length


                        for(var i= 0;i<ln;i++){
                            var ret=null,options=l[i].opts,fn=l[i].fn
                            if(options.filters){
                                for(var i1= 0,l1=options.filters,ln1= l1.length;i1<ln1;i1++){
                                    ret=l1[i1](ev);
                                    if(!ret){return;}
                                }
                            }
                            if(ret && typeof(ret)=="object"){
                                res= fn.call(options.scopeddelegate||elem,ev,ret)
                            }
                            else{res=  fn.call(options.scopeddelegate||elem,ev)}
                            if(res===false || options.once) {
                                torem.push(l[i])
                            }

                        }
                    }
                    while(torem.length){
                        var i= l.indexOf(torem.shift())
                        i>=0 && l.splice(i,1)
                    }
return res;
                }
            }

            function getEmitterInstance(el,onlyifexists){
                if(!el) {return}
                 var emitter = el.data("_emitter")
                if (!emitter && !onlyifexists) {
                    el.data("_emitter", emitter = new _emitter(el))
                }
                return emitter
            }
            return function (el0,onlyifexists){
                 return  getEmitterInstance($d(el0),onlyifexists)

            }
        })(),
    focusin: function(e, enter, exit, selector) {

    },
    focusout: function(e, enter, exit, selector) {

    },
		hover: function(e, enter, exit, selector) {
            var el = $d(e);
            if (!el) {
                return
            }
            var h = [enter, exit].map(function(fn) {
                return (typeof(fn) != "function") ? function() {} : fn
            });
            if (selector && typeof(selector) == "string") {
                var curr = null;
                el.on("mousemove", function(ev) {
                    var t = $d.up(ev.target, selector);
                    if (!t) {
                        return
                    }
                    if (curr && (curr.el.contains(t.el))) {
                        return
                    }
                    if (el.contains(t) && $d.matches(t, selector)) {
                        if (curr) {
                            h[1].call(this, ev, curr)
                        }
                        curr = t;
                        h[0].call(this, ev, $d(t))
                    } else if (curr) {
                        h[1].call(this, ev, $d(curr))
                        curr = null;
                    }
                });
                el.on("mouseleave", function(ev) {
                    if (this.contains(ev.target)) {
                        return
                    }
                    if (curr) {
                        h[1].call(this, ev, $d(curr))
                        curr = null;
                    }
                });
                return el;
            }
            el.on("mouseenter", h[0]);
            el.on("mouseleave", h[1])
            return el
        }
		});
})();		
		//} end;
(function(){
var positions = {
                append: 1,
                before: 2,
                after: 2,
                prepend: 1,
                content: 1,
                below: "after",
                refresh: "content",
                beforebegin: "before",
                afterstart: "prepend",
                afterend: "after",
                beforeend: "append",
                insert: "append",
                top: "prepend",
                bottom: "append",
                replace: 3,
                wrap: 3,
                wrapall: 3,
                wrapainner: 3,
                copychildren: 3,
                movechildren: 3
            };
	function _renderDomContent(cntnt0,el,pos,memo){
            var worker, cntnt;
            memo=memo||{}
            var istag,tagattribs=""
            if (typeof(cntnt0) == "string") {
                if(/^\<[\w\-]+\/?\>$/.test(cntnt0)){
                    istag=cntnt0.substr(1,cntnt0.length-2)
                } else if(/^[\w]+\.[\w\.\-]+$/.test(cntnt0)){
                    var arr=cntnt0.split(".")
                    istag=arr.shift();tagattribs=" class='"+arr[0]+"'"
                }
                if ($d._util.isValidTagName(cntnt0)) {
                    istag = cntnt0
                }
                if(istag){
                    cntnt = "<" + istag + ( tagattribs) + "></" + istag + ">"
                } else {
                    var op
                    if (/^\^?[+\-]\$?\s+/.test(cntnt0)) {
                        op = cntnt0.substr(0, cntnt.indexOf(" ") + 1).trim()
                        cntnt = cntnt0.substr(op.length).trim()
                    }
                    var c = cntnt || cntnt0
                    if (c.indexOf("<") != 0 && (c.indexOf("$") >= 0 || c.indexOf(">") >= 0 || c.indexOf("Z!") == 0)) {
                        cntnt = $d.template(cntnt || cntnt0).html()
                    } else {
                        if (el && !el.firstChild && (!pos )) {
                            $d.html(el, c)
                            if (el && el.childElementCount == 1) {
                                memo.done=true
                                return $d(el.firstElementChild)
                            }
                            memo.done=true
                            return el;
                        } else {
                            cntnt = c
                        }
                    }
                }
                worker = document.createElement("div")
                cntnt = (cntnt || cntnt0).trim()
                var firsttag = ""
                if (cntnt.indexOf("<") == 0) {
                    if (cntnt.indexOf("<tr") == 0) {
                        firsttag = "tr";
                        cntnt = "<table>" + cntnt + "</table>"
                    } else if (cntnt.indexOf("<tbody") == 0) {
                        firsttag = "tbody";
                        cntnt = "<table>" + cntnt + "</table>"
                    } else if (cntnt.indexOf("<thead") == 0) {
                        firsttag = "thead";
                        cntnt = "<table>" + cntnt + "</table>"
                    } else if (cntnt.indexOf("<tfoot") == 0) {
                        firsttag = "tfoot";
                        cntnt = "<table>" + cntnt + "</table>"
                    } else if (cntnt.indexOf("<caption") == 0) {
                        firsttag = "caption";
                        cntnt = "<table>" + cntnt + "</table>"
                    } else if (cntnt.indexOf("<td") == 0) {
                        firsttag = "td";
                        cntnt = "<table><tr>" + cntnt + "</tr></table>"
                    } else if (cntnt.indexOf("<th") == 0) {
                        firsttag = "th";
                        cntnt = "<table><tr>" + cntnt + "</tr></table>"
                    }
                }

                if (op && el) {
                    var s = el.innerHTML
                    if (op == "+$" || op == "+") {
                        el.innerHTML += cntnt
                    }
                    if (op.charAt(0) == "^") {
                        el.innerHTML = cntnt + s
                    }
                    if (op.indexOf("-") >= 0) {
                        var re = RegExp.escape(s);
                        if (op.indexOf("^") == 0) {
                            s = "^(" + s + ")"
                        };
                        if (op.indexOf("$") == op.length - 1) {
                            s = "(" + s + ")$"
                        };
                        el.innerHTML = s.replace(RegExp.escape(re, [op.indexOf("*") >= 0 ? "g" : "", op.indexOf("i") >= 0 ? "i" : ""].join("")), "")
                    }
                    memo.done=true
                    return $d(el)
                }

                worker.innerHTML = cntnt?cntnt.trim():"";
                if (worker.firstChild && worker.firstChild === worker.lastChild) {
                    cntnt = worker.firstChild
                } else if (firsttag) {
                    cntnt = worker.querySelector(firsttag)
                } else {
                    cntnt = document.createDocumentFragment()
                    while (worker.firstChild) {
                        cntnt.appendChild(worker.removeChild(worker.firstChild))
                    }
                }
                if (!cntnt) {
                    worker = document.createElement("div")
                    worker.innerHTML = String(cntnt0).trim()
                    if (worker.firstChild && worker.firstChild === worker.lastChild) {
                        cntnt = worker.firstElementChild
                    } else {
                        cntnt = document.createDocumentFragment()
                        while (worker.firstChild) {
                            cntnt.appendChild(worker.firstChild)
                        }
                    }

            }
            } else if (cntnt0 && typeof(cntnt0) == "object") {
                if (cntnt0 instanceof Node || (!cntnt0.el && cntnt0.nodeType == 1) || cntnt0.nodeType == 11) {
                    cntnt = cntnt0
                } else if (cntnt0.isDomWrap || (cntnt0.el && cntnt0.el.nodeType)) {
                    cntnt = cntnt0.el
                    if (cntnt.el && cntnt.el.nodeType) {
                        cntnt = cntnt.el
                    }
                } else if (Object.keys(cntnt0).length) {
                    cntnt = document.createElement(cntnt0.tag || cntnt0.tagName || "div")
                    memo.props = cntnt0;
                    delete memo.props.tag;
                    delete memo.props.tagName;
                }
            }
            if (!(cntnt && cntnt.nodeType)) {
                return null
            }
            return cntnt
        } 
		
	$.extend($d,{
		insert: (function() {
            
            function insertAt(el,data,pos){
                var res ,cntnt=data,container=el,
                    before = null,
                    origpos = pos
                if (!pos) {
                    pos = "append"
                }
                if (pos == "content") {
                    $d.clear(container);
                    pos = "append"
                }
                if (pos == "copychildren") {

                     while (data.firstChild) {
                         container.appendChild(data.firstChild)
                    }
                    res=container
                } else if (pos == "movechildren") {
                    while (data.firstChild) {
                        container.appendChild(data.removeChild(data.firstChild))
                    }
                    res=container
                } else if (pos == "after") {
                    container = el.parentNode;
                    before = el.nextSibling
                } else if (pos == "wrap" || pos == "replace" || pos == "before") {
                    container = el.parentNode;
                    before = el
                } else if (pos == "wrapinner" || pos == "prepend") {
                    before = el.firstChild
                }
                if (!res) {
                    var cntntel = cntnt.el || cntnt
                    if (before) {
                        container.insertBefore(cntntel, before)
                        res = before.previousSibling
                    } else {
                        if (container.firstChild && container.firstChild.nodeType == 3 && container.firstChild.nodeValue == ".") {
                            container.removeChild(container.firstChild)
                        }
                        res = container.appendChild(cntntel);
                        if (cntntel.nodeType == 11) {
                            res = container.lastElementChild
                        }
                    }

                    if (res) {
                        cntntel = el.el || el
                        if (origpos == "replace" && cntntel.parentNode) {
                            cntntel.parentNode.removeChild(cntntel)
                        } else if (origpos == "wrap") {
                            res.appendChild(cntntel.parentNode.removeChild(cntntel))
                        } else if (origpos == "wrapinner") {
                            while (res.nextSibling) {
                                var p = res.parentNode
                                res.appendChild(p.removeChild(res.nextSibling))
                            }
                        }
                    }
                }
                return res;
            }
            return function(el0, cntnt0, pos, props) {
                if (!el0) {
                    el0 = document.body
                }
                if (el0 === document || el0.el === document) {
                    el0 = document.body
                }
                var worker, cntnt, el = $d.toEl(el0);
                if (!el) {
                    return
                }

                if (Array.isArray(cntnt0)) {
                    for (var i = 0, ln = cntnt0.length; i < ln; i++) {
                        $d.insert(el0, cntnt0[i], pos, props)
                    }
                    return $d(el);
                }

                if (pos) {
                    if (typeof(pos) == "object") {
                        props = pos;
                        pos = null;
                    } else if (typeof(pos) == "string") {
                        if (positions[pos.toLowerCase()]) {
                            if (typeof(positions[pos.toLowerCase()]) == "string") {
                                pos = positions[pos.toLowerCase()]
                            }
                        } else {
                            props = pos;
                            pos = "append"
                        }
                    }
                }
                pos = pos || "append"
                if (!(props && typeof(props) == "object")) {
                    if (typeof(props) == "string") {
                        props = {
                            value: props
                        }
                    } else props = null;
                }

                var memo = {}
                cntnt =  _renderDomContent(cntnt0, el, (!pos || positions[pos] == 1) ? null : pos, memo)

                if (memo.done) {
                    //if(cntnt && cntnt.nodeType==11){cntnt=cntnt.firstChild}
                    return $d(cntnt)
                }
                if (!(cntnt && cntnt.nodeType)) {
                    return null
                }
                props = memo.props || props

                var nu=insertAt(el,cntnt,pos)

                var res = $d(nu ? nu : el);
                if (res && props) {
                    var items
                    if (Array.isArray(props)) {
                        items = props;
                        props = null
                    }
                    if (props) {
                        if (props.elements) {
                            items = props.elements;
                            delete props.elements
                        }
                        if (props.items) {
                            items = props.items;
                            delete props.items
                        }
                        $d.prop(res, props)
                    }
                    if (items && items.length) {
                        var tag = "span"
                        if (res.tagName == "UL" || res.tagName == "OL") {
                            tag = "li"
                        } else if (res.tagName == "SELECT") {
                            tag = "option"
                        } else if (res.tagName == "TR") {
                            tag = "td"
                        }
                        tag = "<" + tag + "/>"
                        var list = items.slice();
                        while (list.length) {
                            res.insert(tag, list.shift())
                        }
                    }
                }
                //if(res && res.nodeType==11){res=res.firstChild}
                return $d(res)
            }
        })(),

        detach: function detach(e, selector) {},
        replaceWith: function replaceWith(e, content) {
            return $d.insert(e, content, "replace")
        },
        unwrapEl: function unwrapEl(e) {
            return $d
        },
        wrapEl: function wrapEl(e, html) {
            return $d.insert(e, html, "wrap")
        },
        wrapAll: function wrapAll(e, html) {
            var el = $d.toEl(e);
            if (!el) {
                return
            }
            [].slice.call(el.children).forEach(function(it) {
                $d.insert(it, html, "wrap")
            })
            return $d(el)
        },
        wrapInner: function wrapInner(e, html) {
            $d.insert(e, html, "wrapinner")
        },
        replaceAll: function replaceAll(e, content) {
            $d.insert(e, content, "replace")
        },

        compile: function(e, model) {
            var el = $d(e);
            if (!el) {
                return
            }
            return model.compile(el)
        },

        appendTo: function appendTo(e, target) {
            var el = $d.toEl(e);
            if(!el){return null}
            return $d.insert(target, el) || $d(el)
        },
        append: function append(e, content) {
            var el = $d(e);
            return el.insert(content, "append") || el;
        },
        before: function before(e, content) {
            return $d(e).insert(content, "before")
        },
        after: function after(e, content) {
            return $d(e).insert(content, "after")
        },
        prepend: function prepend(e, content) {
            return $d(e).insert(content, "top")
        }
	})
})();		
;(function() {
    var CACHES = {
        fnCache: Object.create(null),
        cssvalueCache: Object.create(null),
        cssruleCache: Object.create(null),
        cssruleGroupCache: Object.create(null)
        //elCache: new WeakMap()
    }



    var _css = $.__css($d, CACHES)
    var _klass = (function() {
        var opmap = {

            addClass: "a",
            removeClass: "r",
            hasClass: "h",
            "Klass": "t",
            "toggleClass": "t",
            "+": "a",
            "-": "r"
        }
        function _proc(op,args){
            var res = null,
                el, klss
            if(op=="t" && typeof(args[args.length-1])=="boolean"){
                op=args.pop()?"a":"r"
            }
            var elem = $d(args.shift())
            klss = args.length <= 1 ? args[0] : args
            if(!elem){return}
            el=elem.el
            if(typeof(klss)=="function"){
                klss=klss.call(elem,elem)
            }
            if(typeof(klss)=="string"){
                klss=klss.split(/\s+/)
            }

            var ln=klss.length,CL=el.classList;
			if(!CL){return}
            if (!op) {
                return [].slice.call(CL);
            }
            if (op == "r" && klss && typeof(klss) == "object" && (klss instanceof RegExp)) {
                [].slice.call(CL).forEach(function(a){klss.test(a) && CL.remove(a)})
            }
            if(Array.isArray(klss) && ln) {

                if (op == "a") {
                    for (var i = 0; i < ln; i++) {
                        CL.add(klss[i])
                    }
                } else if (op == "r") {
                    for (var i = 0; i < ln; i++) {
                        var kls = klss[i];
                        if (typeof(kls) == "string") {
                            CL.remove(kls)
                        } else if (kls && typeof(kls) == "object" && (kls instanceof RegExp)) {
                            [].slice.call(CL).forEach(function (a) {
                                kls.test(a) && CL.remove(a)
                            })
                        }
                    }

                } else if (op == "h") {
                    var  contains = true
                    for (var i = 0; i < ln; i++) {
                        if (!CL.contains(klss[i])) {
                            contains = false
                        }
                    }
                    return contains
                } else if (op == "t") {
                    for (var i = 0; i < ln; i++) {
                        CL.toggle(klss[i])
                    }

                }
            }
            return elem;
        }
        function toret(){
            return _proc("",[].slice.call(arguments))
        }
        toret.add=function(){
            return _proc("a",[].slice.call(arguments))
        }
        toret.remove=function(){
            return _proc("r",[].slice.call(arguments))
        }
        toret.toggle=function(){
            return _proc("t",[].slice.call(arguments))
        }
        toret.has=function(){
            return _proc("h",[].slice.call(arguments))
        }
        return toret
    })();

    var _prop = (function() {
        var _aliasMap = {
                value: "val",
                "style": "css"
            },
            _pending = [],
            inbatch = 0
        var _mutators = [],
            booleans=["appear","disappear","visible","readonly","disabled","checked","visibility","hidden","focus","selected"];
        var map= null,inloop= 0,
            _nameMap={
                readonly:"readOnly"
            },
            _html= function(el) {
                var a1 = arguments[1],
                    outer = a1 === true,
                    toadd = (a1 == null || typeof(a1) === "boolean") ? null:a1
                if (toadd != null) {
                    if (toadd == ".") {
                    }
                    el.innerHTML = String(toadd)
                } else {
                    var ret
                    if (outer) {
                        if ("outerHTML" in el) {
                            ret = el.outerHTML
                        } else {
                            if (el.parentNode && el.parentNode.childElementCount == 1) {
                                ret = el.parentNode.innerHTML
                            } else {
                                var d = document.createElement("div")
                                ret = d.appendChild(el.cloneNode(true))
                                ret = d.innerHTML
                                d.innerHTML = ""

                            }
                        }
                    } else {
                        ret = el.innerHTML
                    }
                    return ret;
                }

                return el
            },
            _toBoolean=function(val) {
                if (val && !(val == "0" || val == "false")) {
                    return true
                }
                return false
            }
            ,
            _isUndef=function(val){
                return val==undefined
            },
            _domAttr=function(el,nm,val){
                if(el && el.getAttribute){
                     if(val===null || val=="-delete-"){
                        el.removeAttribute?el.removeAttribute(nm):el.setAttribute(nm,null);
                    }
                    else if(!_isUndef(val)){
                         el.setAttribute(nm,val)
                    } else{
                         if($.isPlain(nm)){
                             $.each(nm,function(v,k){
                                 el.setAttribute(k,v)
                             });
                             return el;
                         }
                        return el.getAttribute(nm)
                    }
                }
                return el;
            },
            _val=function(el ,val){
                var origval=val,type=String(el.type||"").toLowerCase(),tagName=String(el.tagName).toLowerCase(),
                    isip=((type||tagName.indexOf("select")==0 || tagName=="textarea") && ("value" in el) && tagName!="button" && type !="button"&& type !="img")
                if( val && typeof(val)=="object"){
                    if(val instanceof Date ){
                        if(val.getFullYear()<1971 && val.toLocaleTimeString){
                            val=val.toLocaleTimeString()
                        } else if(!val.getMinutes() && (val.getHours()==12 || !val.getHours()) && val.toLocaleDateString){
                            val=val.toLocaleDateString()
                        } else{
                            val=val.toLocaleString?val.toLocaleString():val.toString();
                        }

                    } else if(val.hasOwnProperty("toString")){
                        val=val.toString()
                    } else{
                        if(val.label!=null){
                            val=val.label
                        } else if(val.value!=null){
                            val=val.value
                        } else if(val.newValue!=null){
                            val=val.newValue
                        } else  {
                            val=JSON.stringify(val)
                        }
                    }
                }
                if(isip){
                    var isDate=(type.indexOf("date")>=0 || type.indexOf("time")>=0)
                    if(_isUndef(val)){
                        if( tagName.indexOf("select") == 0){
                            return  el.selectedIndex >= 0 ? ( el.options[ el.selectedIndex] || {}).value : null
                        }
                        if(el.type=="checkbox" || el.type=="radio" ){
                            //if(el.value && el.checked){return el.value}
                            return !!el.checked
                        }
                        if(isDate && el.valueAsDate){
                            return el.valueAsDate;
                        } else if(type.indexOf("number")>=0 && el.valueAsNumber !=null){
                            return el.valueAsNumber;
                        }
                        return el.value;
                    }
                    else {
                        var cntu=true
                        if(val==null){
                             if(el.type=="checkbox" || el.type=="radio" ){
                                el.checked=false
                            } else{el.value="";}
                            cntu=false
                        }

                        if(cntu && isDate && origval    ){
                            var dt=origval instanceof Date?origval: $.date(origval)
                            if(dt && dt.toNative){
                                dt=dt.toNative()
                            }
                            if(dt && ("valueAsDate" in el)) {
                                el.valueAsDate = dt;
                                cntu=false
                            }
                        }

                        if(cntu){
                            if( tagName.toLowerCase().indexOf("select") == 0){
                                 var  opts=el.options||[],selIndex=-1
                                for(var i= 0,ln=opts.length;i<ln;i++){var value=opts[i].value;if(value==null){value=""}
                                    if(value==val || opts[i].text==val){selIndex=i;break;}
                                }
                                if(selIndex>=0 && selIndex!=el.selectedIndex){
                                    el.selectedIndex=selIndex;
                                 }
                            } else  {
                                if(el.type=="checkbox" || el.type=="radio" ){
                                    if(el.value!=null && el.value==val){val=true}
                                     el.checked=_toBoolean(val);
                                }
                                else{
                                    el.value=val;
                                }
                            }

                        }

                    }
                } else {
                    if( type=="img" || tagName=="img"){
                        if(!val){
                            return el.src
                        }
                        if(val && val!==el.getAttribute("src") && val!=el.src) {
                            el.src = val;
                        }
                    } else {
                        if(_isUndef(val)){
                            return el.childElementCount?el.innerHTML:el.textContent
                        }
                        if(val==null){val=""}
                        if(typeof(val)=="string" && val.indexOf("<")==0){
                            el.innerHTML=val
                        } else{
                            el.textContent=val
                        }

                    }
                }
                return el;
            },
            _data=function(el,nm,val){
                if(!el.dataset){return}
                if(typeof(nm)=="string"){
                    if(nm.indexOf("data-")==0){nm=data.substr("data-".length)}
                    if(_isUndef(val)){
                        return el.dataset[nm];
                    }
                    else{
                        el.dataset[nm]=val;
                    }
                }
                return el;
            }
        return function prop(e , name) {
            var el ,a = [].slice.call(arguments);
            if(e && e.nodeType && e.nodeType===3){e= e.parentNode}
            if ( e && !e.nodeType && (Array.isArray(e) || (typeof(e) == "object"   && ("length" in e)))) {
                var res = []
                a.shift()
                for (var i = 0, l = e, ln = l.length; i < ln; i++) {
                    res.push(prop.apply(this, [l[i]].concat(a)))
                }
                return res;
            }
            el=$d.toEl(e)
            if (!el ) {
                return
            }
            var D = $d
            if (!el) {
                return
            }
            inloop=1
            if(map===null){
                map={
                    "klass":_klass,"class":_klass,"className":_klass,"classname":_klass,
                    "addclass":_klass.add,"removeclass":_klass.remove,"toggleclass":_klass.toggle,"hasclass":_klass.has,
                    "css":_css,"style":_css,"styles":_css,
                    "val":_val,"text":_val,"value":_val,
                    "attr":_domAttr,
                    "data":_data,
                    html:_html
                }
            }

            var mthd  ,
                val = arguments[2],
                hasval = arguments.length > 2,
                addtnl = [].slice.call(arguments, 3)
            if ($.isPlain(name)) {
                var p = prop
                for (var i = 0, l = $.keys(name), ln = l.length; i < ln; i++) {
                    p(el, l[i], name[l[i]])
                }
                return el
            } else if ($.isArray(name)) {
                var res = {}
                var p = prop,args= a.slice(2)
                for (var i = 0, l = name, ln = l.length; i < ln; i++) {
                    res[l[i]] = p.apply(null, [el,l[i]].concat(args))
                }
                return res
            }
            if (typeof(name)!='string'){return null}
            name=_nameMap[name]||name;
            var  ret=null,lc=name.toLowerCase()
            if (!map[lc] && lc.indexOf("remove") == 0 && lc.length > 6) {
                var nm1 = name.substr(6).toLowerCase();
                if (nm1 == "attr" || nm1 == "prop" || nm1 == "class" || nm1 == "data") {
                    a.push(null);
                    val=null;
                    lc=name = nm1
                }
            }
            var isbool
            if ( booleans.indexOf(lc)>=0) {
                isbool=(lc=="readonly"||lc=="disabled"||lc=="checked")
                val=_toBoolean(val)
                if (name.indexOf("visib") >= 0) {
                    name = "visibility"
                    mthd = val ? D.show : D.hide
                } else if (lc == "toggle") {
                    mthd = $d.isVisible(el,true) ? D.hide:D.show;
                } else if (lc == "disappear") {
                    mthd = val ? D.disAppear : D.appear
                } else if (lc == "appear") {
                    mthd = val ? D.appear : D.disAppear
                } else if (lc.indexOf("hidden") >= 0) {
                    mthd = val ? D.hide : D.show
                } else if (lc == "selected") {
                    if ( type == "radio" ||  type == "checkbox") {
                         name = "checked"
                    }
                }
                if (name == "focus" || name == "blur") {
                    mthd = name;
                }
                if(mthd){
                    a.splice(1, 1);
                }
            }
            if(!mthd && typeof(map[name]||map[lc])=="function"){
                mthd = map[name]||map[lc];
                a.splice(1, 1);
             }
            if (val && typeof(val) == "function" && name.indexOf("on")!=0 ) {
                val = val.apply($d(el), [].slice.call(arguments, 2))
            }
            if(!mthd){
                if(_isUndef(val)){hasval=false}
                if (typeof(D[name]) == "function"){
                    mthd = D[name]
                    a.splice(1, 1);
                }
                 else if (map.css.isStyle(name)) {
                    ret=map.css.apply($d, a)

                } else if (name in el  || isbool) {
                     if(hasval){
                        el [name]=val
                       ret=el;
                    } else{
                        ret =  el[name];
                     }
                 } else{
                    ret = map.attr(el,name,val)
                }
            }
            if(mthd && typeof(mthd)=="function"){
                ret = mthd.apply($d, a)
            }
            if  ( ret==el || (ret||{}).el==el ) {
                return $d(el)
            }
            if(ret && ret.nodeType) {
                return $d(ret)
            }
            return ret;
            /*  if (typeof(propname) == "string") {
				  if(propname=="attr"){

				  }

				  var nm = name
				  var lc = nm.toLowerCase(),
					  nm1,
					  mthd ;//= map[nm]||map[lc]
				  if(nm.indexOf("on")==0){
					  if(typeof(val)=="function"){
						  el[nm] = val;
					  }
					  return el[nm];
				  }
				  if(map[nm]||map[lc]){
					  // mthd=map[nm]||map[lc];
					  //if (mthd && typeof(mthd) == "string") {
					  //     mthd=$d[mthd]
					  // }
				  }
				  if (!mthd && val != null && (typeof(val) == "boolean" || String(val) == "1" || String(val) == "0" || String(val) == "true" || String(val) == "false")) {
					  if(!(val == "1" || val == "true"|| val === true)){val=false}
					  else{val=!!val}
					  if (typeof(nm) == "string" && booleans.indexOf(lc)>=0) {
						  if (nm.indexOf("visib") >= 0) {
							  nm = "visibility"
							  mthd = val ? D.show : D.hide
						  } else if (lc == "disappear") {
							  mthd = val ? D.disAppear : D.appear
						  } else if (lc == "appear") {
							  mthd = val ? D.appear : D.disAppear
						  } else if (nm.indexOf("hidden") >= 0) {
							  mthd = val ? D.hide : D.show
						  } else if (nm == "selected") {
							  if (elem.type == "radio" || elem.type == "checkbox") {
								  val = _toBoolean(val);
								  nm = "checked"
							  }
						  }
						  if (nm == "focus" || nm == "blur") {
							  mthd = nm;
						  }
					  }

				  }
				  if (!mthd) {
					  if (lc.indexOf("remove") == 0 && lc.length > 6) {
						  nm1 = nm.substr(6).toLowerCase();
						  if (nm1 == "attr" || nm1 == "prop" || nm1 == "data") {
							  a.push(null);
							  lc=nm = nm1
						  }
					  }
					  if(lc=="readonly"||lc=="disabled"){
						  if(hasval){
							  val=val?lc:null
							  a[a.length-1]=val;
						  }
					   }
					  if (lc.indexOf("visib") == 0 && (val === null||val === false)) {
						  val = "hidden"
					  }
					  if (lc.indexOf("class") >= 0 || lc.indexOf("klass") >= 0) {
						  mthd = _klass;
						  a.splice(1, 1);
						  a.unshift(nm)
					  } else if (nm == "css" || nm1 === "css" || nm1 === "style" || nm1 === "styles") {
						  mthd = _css;
						  a.splice(1, 1)
					  } else if (nm == "attr") {
						  mthd = _attr;
						  a.splice(1, 1)
					  } else if (typeof(D[nm]) == "function") {
						  mthd = D[nm];
						  a.splice(1, 1)
					  } else if (_css.isStyle(nm)) {
						  mthd = _css;
					  } else if ((nm in elem)) {
						  mthd = ""
					  } else if (!(nm in elem)) {
						  mthd = _attr;
					  }
					  if (mthd == "prop" || mthd === D.prop) {
						  mthd = ""
					  }
				  }

				  if (mthd && typeof(mthd) == "function") {
					  return mthd.apply(D, a)
				  } else {
					  if (hasval) {

						  el[nm] = val;
						  if(el.getAttribute(nm)!=val){el.setAttribute(nm,val)}
						  return el
					  }
					  return el[nm]
				  }*/
            }

    })();


    _prop.curryMethod = function(mthd) {
        var a = mthd;
        return function(el) {
            var ln = arguments.length
            if (ln === 1) {
                return _prop(el, a)
            } else if (ln === 2) {
                return _prop(el, a, arguments[1])
            } else if (ln === 3) {
                return _prop(el, a, arguments[1], arguments[2])
            }
            var args = [el, a]
            for (var i = 1; i < ln; i++) {
                args.push(arguments[i])
            }
            return _prop.apply(this, args)
        }
    }


        $d.val= function(e ) {
            var elem = $d(e);
            if (!elem) {
                return
            }
            var v=arguments[1]
            if(typeof(elem.__valHandle)=="function"){
                return elem.__valHandle.call(elem,v)
            }
            return $d.prop(elem,"value",v)
        }

        $d.html=  _prop.curryMethod("html")
        $d._val=  _prop.curryMethod("val")
        $d.text= _prop.curryMethod("text")
        $d.klass= _klass
        $d.removeClass=  _prop.curryMethod("removeClass")
        $d.addClass=  _prop.curryMethod("addClass")
        $d.hasClass=  _prop.curryMethod("hasClass")
        $d.toggleClass=  _prop.curryMethod("toggleClass")
        $d.prop= _prop
        $d.css= _css
        $d.attr= _prop.curryMethod("attr")
        $d.removeAttr=_prop.curryMethod("removeAttr")

        $d.removeData= function removeData(e, name) {
            return this.data(e, name, null);
        }
        $d.removeProp= function removeProp(e, name) {
            return this.prop(e, name, null);;
        }
        $d.isValidAttrName= function(e, k) {
            var el = e;
            if (arguments.length == 1 && typeof(e) == "string") {
                k = e; el = document.body
            }
             return ((el && typeof(k) == "string") && (
                    (el.hasAttribute && el.hasAttribute(k))||(el.getAttribute && el.getAttribute(k)!=null)
                    ||
                    ((k in el) || k == "id" || k == "name"|| ["readonly","disabled"].indexOf(k.toLowerCase())>=0)
                )
            )  ;
        }

		 $d.data= function(e) {
            var el = $d(e );
            if (!el) {
                return
            }
            if(!el.__expando){
                el.__expando = $.expando(el,"data",function(nm,val){
                    if (this.el && this.el.dataset) {
                        if((val==null || (typeof(val)!="object"  && typeof(val)!="function")) && typeof(this.el.dataset[nm])!="undefined"){
                            if(val!=null){this.el.dataset[nm]=val;return;}
                            return this.el.dataset[nm]
                        }
                    }
                    return false;
                }.bind(this))
            }
            return el.__expando.apply(el, [].slice.call(arguments, 1));
        }
        $d.domdata= function(e, k, v) {
            var el = $d.toEl(e);
            if (!el) {
                return
            }
            if (el.dataset) {
                if (typeof(v) == "undefined") {
                    return el.dataset[k]
                } else {
                    el.dataset[k] = v
                }
            }
            return $d(el)
        }
		
})();		; ;(function() {

	var fx = [],
		defrule, _hooks = {}

	function canAnim(k) {
		return ($d.css.isStyle(k) || k == "scroll" || getHook(k))
	}
	 function addHook(name, handle){
			 _hooks[name]= handle

	 }

	 function getHook(nm){if(!nm){return}
		 return _hooks[nm]||_hooks[String(nm).toLowerCase().replace(/_/g,"")]
	 }
	var speedmap = {
		slow: 600 ,
		fast: 200,
		medium: 400
	}

	var quproto = Object.create([])
	quproto.next = function() {
		var nu, _que = this
		if (this._active && !this._active.isDone()) {
			if (!this._active.isBusy()) {
				this._active.start()
			}
			return this
		}
		while (nu = _que.shift()) {
			if (nu.isDone && nu.isDone()) {
				nu = null
			} else if (nu) {
				break;
			}
		}
		this._active = null;
		if (nu) {
			this._active = nu;
			nu.start()
		}
		return this
	}
	quproto.hasPending = function() {
		return this.length > 0
	}
	quproto.add = function(a) {
		this.push(a);
		return this
	}
	quproto.remove = function(a) {
		if (a == this._active) {
			this._active = null
		}
		var i = this.indexOf(a);
		if (i >= 0) {
			this.splice(i, 1)
		}
		return this;
	}
	quproto.active = function() {
		return this._active
	}
	quproto.clear = function() {
		this._active = null;
		this.length = 0;
		return this
	}

	function _queue(el) {
		this.el = $d(el)
		this.el.data("animation_qu", this)
	}
	_queue.prototype = quproto;
	_queue.getOrMake = function(el) {
		if(!el){return}
		var qu = $d(el.el).data("animation_qu")
		if (!(qu && qu.push)) {
			qu = new _queue(el)
		}
		return qu;
	}
	var defaultConfig = JSON.stringify({
		delay: 0,
		duration: 1000,
		easing: null,
		rules: {},
		fxclass: "fxtx",
		callbacks: {
			end: []
		},
		state: {
			_prepped: 0,
			_busy: 0,
			_done: 0
		}
	});
	var _animCtor=null
	 function parseClipOptions( options) {
		 var optns = {}, el = this, args = [].slice.call(arguments, 1);
		 if (!el) {
			 return
		 }
		 if(options  && options.rules && options.rules.clip){
			 optns=options.rules.clip;
		 }
		 else {
			 if (typeof(options) == "string") {
				 optns.a = options
			 }
			 else if ($.isPlain(options)) {
				 optns = options
			 }
			 if (typeof(args[args.length - 1]) == "function") {
				 optns.end = optns.end || []
				 optns.end.push(args.pop())
			 }
			 if (typeof(args[args.length - 1]) == "boolean") {
				 optns.reverse = args.pop()
			 }
			 if (typeof(args[args.length - 1]) == "function") {
				 optns.end = optns.end || []
				 optns.end.push(args.pop())
			 }
		 }
		 if (!el.isVisible(true)) {
			 el.show();
		 }
		 var bnds = el.bounds()

		 var h = optns.height || bnds.height;
		 var w = optns.width || bnds.width || el.width()
		 var start = {
			 l: 0, t: 0, r: 0, b: 0
		 };
		 var inc = {
			 r: 0, b: 0, l: 0, t: 0
		 };
		 var end = {
			 l: 0, t: 0, r: w, b: h

		 };
		 if($.isPlain(optns.start) && $.isPlain(optns.end)){
			 start=optns.start;
			 end=optns.end
		 } else {
			 var anchor = String(optns.a || optns.anchor || "").replace(/left/i, "l").replace(/top/i, "t").replace(/right/i, "r").replace(/bottom/i, "b").replace(/center/i, "c");
			 if (!anchor) {
				 anchor = "t"
			 }
			 if (anchor.length > 1 && anchor[1] == "c") {
				 anchor = anchor.split("").reverse().join("")
			 }

		;

			 //starts with anchored pos
			 if (anchor == "c") {
				 start.r = start.l = w / 2
				 start.b = start.t = h / 2
			 }
			 else if (anchor == "l" || anchor == "r") {
				 start.b = h;
				 if (anchor == "r") {
					 start.l = start.r = w
				 }
			 }
			 else if (anchor == "t" || anchor == "b") {
				 start.r = w;
				 if (anchor == "b") {
					 start.t = start.b = h
				 }
			 }

			 //centerleft
			 else if (anchor == "cl" || anchor == "cr") {
				 start.t = start.b = h / 2
				 start.l = anchor == "cr" ? w : 0
			 }
			 else if (anchor == "ct" || anchor == "cb") {
				 start.l = start.r = w / 2
				 start.t = anchor == "cb" ? h : 0
			 }
			 else if (anchor == "tr") {
				 start.r = start.l = w
			 }
			 else if (anchor == "br") {
				 start.r = start.l = w
				 start.t = h
			 } else if (anchor == "bl") {
				 start.t = h
			 }
		 }
		 var duration = Number(optns.duration) || 1000
		 var incUnit = duration / 16;

		 inc.t = (end.t - start.t) / incUnit
		 inc.r = (end.r - start.r) / incUnit
		 inc.b = (end.b - start.b) / incUnit
		 inc.l = (end.l - start.l) / incUnit
		 var que = [], rnng = $.extend(start), arr = ["top", "right", "bottom", "left"], prior = ""
		 var counts = Math.ceil(Math.max.apply(Math, arr.map(function (K) {
			 var k = K.charAt(0)
			 return (inc[k] ? ((end[k] - start[k]) / inc[k]) : 0) || 0
		 })));
		 for (var i = 0; i < counts; i++) {
			 var val = []
			 for (var j = 0; j < 4; j++) {
				 var k = arr[j].charAt(0)
				 rnng[k] = rnng[k] + inc[k]
				 rnng[k] = inc[k] < 0 ? Math.max(end[k], rnng[k]) : Math.min(end[k], rnng[k])
				 if (rnng[k]) {
					 val.push(rnng[k].toFixed(2).replace(/\.00$/, "") + "px")
				 } else {
					 val.push("0")
				 }
			 }
			 var v = val.join(", ")
			 if (v === prior) {  continue  }
			 prior = v;
			 que.push(val.slice())
		 }
		 if(optns.reverse){
			  que.reverse();
		 }
		 return {duration:duration,easing:optns.easing,rule:{anchor:anchor,start:start,end:optns.end,inc:inc,que:que}}
	 }
	 function clipAnim(  config,rule ){
		 var animoptns=$.extend({},config,rule)
		 var promise=Promise.deferred(),el=this
		 //var animoptns=parseClipOptions.apply(this,arguments),currentvis
		 if(!animoptns){return}
		 var currentvis=el.css("visibility")
		 var pos = el.css("position"),target=el
		 if (!(pos == "absolute" || pos == "fixed")) {
			 target = $d.absolutize(el,{fixed:true,clone:true})
			 target.style.zIndex = 100;
			 target.addClass("is-clone")
			 el.css("visibility", "hidden")
		 }
		 ;
		 el.data("_animoptions",JSON.stringify(animoptns));
		 function onEnd( optns) {
			 if (this != el) {
				 if (!currentvis  ) {
					 el.el.style.removeProperty("visibility");
				 }
				 else {
					 el.el.style.visibility = currentvis;
				 }
				 $d(this).remove();
			 }
			 if(Array.isArray(optns.end)){
				 while(optns.end.length){
					 var f=optns.end.shift()
					 if (typeof(f) == "function") {
						 f.call(el)
					 }
				 }
			 }
			 else if (typeof(optns.end) == "function") {
				 optns.end.call(el)
			 }
			 promise.resolve(el)
		 };

		 (function (EL, animoptns,callback) {
			 var Q=animoptns.que, dur=animoptns.duration,easing=animoptns.easing

			 var elem = EL.el,  last = Q[Q.length - 1], DELIM = null,transitionprop=$d.__transitionprop||"transition";
			 easing=easing||"ease-out"
			 function onend() {
				 applyStyle(last, true)

				 if (typeof(callback) == "function") {
					 callback.call(EL,animoptns)
				 }
			 }

			 function applyStyle(v, fin) {
				 if (fin === true) {
					 elem.style.removeProperty("clip")
				 } else {
					 var val
					 if (!DELIM) {
						 var curr = String(EL.css("clip") || "")
						 if (curr.indexOf("rect") >= 0) {
							 DELIM = curr.indexOf(",") == -1 ? " " : ", "
						 }
					 }
					 if (!v) {
						 return
					 }
					 val = "rect(" + v.join(DELIM || ", ") + ")"
					 elem.style["clip"] = val
				 }
			 }
			 elem.style.removeProperty(transitionprop);
			 applyStyle(Q.shift());
			 //if supports transition
			 var supportstransition = true
			 if (supportstransition) {
				 setTimeout(function () {
					 EL.css(transitionprop, "clip " + ((dur / 1000).toFixed(2).replace(/\.00/, "")) + "s "+easing)
					 setTimeout(function () {
						 applyStyle(Q.pop());
						  setTimeout(onend, dur + 50)
					 }, 1)
				 }, 0)

			 } else {var fr = $d.util.animframe
				 function doframe() {
					 if (Q.length) {
						 applyStyle(Q.shift());
						 fr(doframe)
					 } else {
						 setTimeout(onend, 20);
					 }
				 }
				 fr(doframe)
			 }


		 })(target, animoptns, onEnd );
		 return promise
	 }
	var ctor = function(el, config) {
		if(!_animCtor){
			_animCtor=function(el){
				this.__el=el;
				this.config = this._config = JSON.parse(defaultConfig)
			}
			var proto={}
			proto.element = function() {
				return $d(this.__el);
			}
			proto._dispatch = function _dispatch(nm, data) {
				var l = this._config.callbacks[nm || "end"];
				if(typeof(this._config[nm])=="function"){
					if(!l){l=[ ]}
					 if(l.indexOf(this._config[nm])==-1){l.push(this._config[nm])}
				}
				if ($.isArray(l)) {
					while (l.length) {
						var fn = l.shift()
						typeof(fn) == "function" && fn.call(this , data);
					}
				}
			}
			proto.isCleared = function() {
				return this._config.cleared;
			}
			proto.clear = function() {
				this._config = JSON.parse(defaultConfig)
				this._config.cleared = true
				this.getQueue().clear();
				return this
			}
			proto.getQueue = function() {
				return _queue.getOrMake(this.element())
			}
			proto.hasQueue = function(v) {
				return this.getQueue().hasPending()
			}
			proto.isDone = function(v) {
				return this._config.state._done
			}
			proto.isBusy = function(v) {var C=this._config
				if (C.state._busy && ((Date.now() - C.state._busy) > C.duration * 1.5)) {
					C.state._busy = 0
				}
				return C.state._busy
			}
			proto.delay = function(v) {
				if (v == null) {
					return this._config.delay
				}
				this._config.delay = $.toNumber(v, 0);
				return this
			}
			proto.easing = function(v) {
				if (v == null) {
					return this._config.easing
				}
				this._config.easing = v;
				return this
			}
			proto.duration = function(v) {
				if (v == null) {
					return this._config.duration
				}
				if (typeof(v) == "string") {
					if (!isNaN(v)) {
						v = Number(v)
					} else if (speedmap[v]) {

						v = speedmap[v]

					}
				}
				this._config.duration = $.toNumber(v, 0) || 400 ;
				return this
			}

			proto.rule = function(p, v) {
				if (v === undefined) {
					return
				}
				if (canAnim(p)) {
					this._config.rules[p] = v
				} else {
					if (p == "delay") {
						this.delay(v)
					} else if (p == "duration") {
						this.duration(v)
					} else if (p == "easing") {
						this.easing(v)
					} else if (typeof(v) == "function") {
						var k = String(p).replace(/^on/i, "").toLowerCase();
						if (k == "after" || k == "complete") {
							k = "end"
						}
						if (k == "before" || k == "beforestart") {
							k = "start"
						}
						this._config.callbacks[k] || (this._config.callbacks[k] = [])
						this._config.callbacks[k].push(v)
					} else {
						this._config[p] = v
					}
				}
				return this
			}

			proto.rules = function(ro) {
				var r = ro
				$.each(ro, function(v, k) {
					this.rule(k, v)
				}, this);
				return this
			}
			proto.prep = function(reset,rules) {var el=this.element()
				rules=rules||this._config.rules;
				$.each(rules, function(v, k) {
					if (v == null) {
						v = {}
					}
					if (typeof(v) != "object") {
						v = {
							to: v
						}
					}
					if ($d.css.isStyle(k) && (!("from" in v) || reset === true)) {
						v.from = $d.css(el, k)
					}
					this._config.rules[k] = v;
				}, this);
				this._config.state._prepped = 1
				if (this._dispatch (  "start") === false) {}
			}
			proto.restore = function(pt) {
				pt = pt || "_def"
				if (this.getQueue().mark && this.getQueue().mark[pt]) {
					$.extend(this._config, this.getQueue().mark[pt])
				}
				return this
			}
			proto.mark = function(pt) {
				pt = pt || "_def"
				this.getQueue().mark || (this.getQueue().mark = {})
				this.getQueue().mark[pt] = $.clone(this._config)
				return this
			}
			proto.reverse = function() {
				var nurules = {}
				if (!this._config.state._prepped) {
					this.prep()
				}
				$.each(this._config.rules, function(v, k) {
					nurules[k] = {
						from: v.to,
						to: v.from
					}
				})
				this.then(nurules)
				return this;
			}
			proto.resume = function() {
				if (this._config.state.paused) {
					this._config.state._done = 0;
					this._config.state._busy = 0;
					this._config.state.paused = 0
					this.prep(true)

				}
				return this;
			}
			proto.pause = function() {
				this.stop()
				this._config.state.paused = true
			}
			proto.stop = function(complete) {
				return this.end(true,complete)
			}
			proto.end = function(nonext,complete) {
				if (this.isDone()) {
					return this
				}
				if(this._pendingPromise){
					this._pendingPromise.then(function(nonext,complete,a){
						this._pendingPromise=null;
						this.end(nonext,complete);
					}.bind(this,nonext,complete))
				}
				var el=this.element()
				this._config.state._done = 1;
				this._config.state._busy = 0;
				$d.__isanimating = false
				$d.removeClass(el, ["animating", this._config.fxclass]);
				$d.data(el, "_lastanim_", this)
				$d.data(el, "_anim_", null)
				this._dispatch (  "end")
				if(complete===true){
					$.each(this._config.rules, function(v, p) {
						if (p == "rotate") {
							$d.rotation(el, v.to)
						} else {
							$d.css(el, p, v.to);
						}
					});
				}
				if (nonext !== true) {
					this.getQueue().remove(this).next()
				}
				return this
			}
			proto.doAnim = function(rules) {
				var _config=this._config,
					el=this.element()
				rules=rules||_config.rules
				if (isNaN(_config.duration) || !(_config.duration > 10)) {
					_config.duration = speedmap.medium;
				}
				var onend = this.end.bind(this)
				if(!Object.keys(rules).length) {
					if(this._pendingPromise){
						this._pendingPromise.then(onend)
					}
					return;
				}

				$.each(rules, function (v, p) {
					if (p == "rotate") {
						$d.rotation(el, v.from)
					} else {
						$d.css(el, p, v.from);
					}
				});
					_config.fxclass = $d._util.addFxRule(_config.duration, _config.easing)
					$d.removeClass(el, ["animating", _config.fxclass]);


					setTimeout(function () {
							el.onTransiotionEnd(function () {
								setTimeout(onend, 1)
							}, true)
						}, 1
					);
					setTimeout(function () {
						$d.addClass(el, ["animating", _config.fxclass]);
						$.each( rules, function (v, p) {
							if (p == "rotate") {
								$d.rotation(el, v.to)
							} else {
								$d.css(el, p, v.to);
							}
						});
					}, 1);

			}
			proto._start = function() {var _config=this._config
				var  props = Object.keys(_config.rules),ruleslocal=$.clone(_config.rules)
				if (!props.length) {
					return this
				}
				this.getQueue()._active = this

				_config.duration = _config.duration || speedmap.medium
				for(var i=0;i<props.length;i++){
					var hook = getHook(props[i]),nm=props[i]
					if(!(hook && typeof(hook.prep)=="function")){continue}
					delete ruleslocal[nm]
					var nuconfig = hook.prep.call(this, _config),nm=props[i]

					if ($.isPlain(nuconfig)) {
						var clone= $.clone(nuconfig)
						if($.isPlain(clone.rule)){
							if(!clone.rule[nm]){
								_config.rules[nm]=clone.rule;
							}
							else{
								$.extend(_config.rules,clone.rule)
							}
							delete clone.rule;
						}
						$.extend(_config, clone)

					}
				}
				this.prep(false,ruleslocal)
				_config.state._prepped = 1
 				$d.__isanimating = true

				var onend = this.end.bind(this)

				var promises=[]
				ruleslocal=$.clone(_config.rules)
				for(var i=0;i<props.length;i++){
					var hook = getHook(props[i]),nm=props[i]
					if(!(hook && (typeof(hook.anim)=="function"||typeof(hook)=="function"))){continue}
					delete ruleslocal[nm]
					var res=(hook.anim||hook).call(this, _config, _config.rules[nm])
					if(res && res.isPromise){
						promises.push(res)
					}
				}
				 if(promises.length){
					 this._pendingPromise=Promise.all(promises)
				 }
				if(Object.keys(ruleslocal).length) {
					setTimeout(function () {
						$d.__isanimating = false
						if (!this.isDone()) {
							onend()
						}
					}.bind(this), _config.duration * 2)
 				}
				this.doAnim.call(this,ruleslocal)
				return this
			}
			proto.start = function() {var _config=this._config
				if (this.isBusy() || this.isDone() || this.element().isAnimating()) {
					return
				}
				var hook, props = Object.keys(_config.rules)
				if (!props.length) {
					return
				}
				_config.state._busy = Date.now();

				if (_config.delay >= 1) {
					var dl = _config.delay;
					_config._delay = _config.delay;
					delete _config.delay
					setTimeout(this._start.bind(this), dl)
					return this
				}
				return this._start(this)
			}
			proto.then = function() {var _config=this._config
				var a = [].slice.call(arguments);
				if (a[0] == "reverse") {
					a[0] = function() {
						this.reverse()
					}
				}
				if (typeof(a[0]) == "function") {
					_config.callbacks["end"].push(a[0]);
					if (_config.state._done) {
						this._dispatch( "end");
					}
					return this
				}

				a.unshift("chain");
				a.unshift(this);
				var nu = anim.apply(this, a)||this
				nu._config.duration = nu._config.duration || this._config.duration
				return nu
			}
			_animCtor.prototype = proto
		}

		return new _animCtor(el);
	}


	function anim(e) {
		var el = $d(e.el || e),
			auto = true,
			reverse = false,
			chain
		if(!el){
			if(this && typeof(this.element)=="function"){el=this.element()}
			else{
				return
			}
		}

		var a = [].slice.call(arguments, 1)

		var anm = $d.data(el, "_anim_"),
			last = $d.data(el, "_lastanim_")
		if(last && !last.element()){
			last=null;
			$d.data(el, "_lastanim_",null)
		}
		if (!a.length) {
			return anm || last
		}

		if (a.length == 1 && a[0] === false) {
			if (anm) {
				anm.stop();
				return anm;
			}
		}
		var c,clipoptions

			if (a.length == 1 && (a[0] === true || a[0] === "reverse")) {
				reverse = true;
				a.pop();
			}

		if (reverse) {
			c = last
		} else {
			c = ctor(el);
		}
		if (!c) {
			return this
		}
		if(clipoptions){
			$.extend(c.config, clipoptions);
			a=[];
		}
		if (a.length) {
			if (a[0] == "chain") {
				chain = true;
				a.shift()
			}
			if (typeof(a[a.length - 1]) == "boolean") {
				auto = a.pop()
			}
			if (typeof(a[0]) == "boolean") {
				reverse = a.shift()
			}

			if ($.isPlain(a[0])) {
				if (a[0].a || a[0].anchor|| a[0].iterations || a[0].duration) {
					$.extend(c.config, a.shift());
				}
			}
			if (a[0] && typeof(a[0]) == "object") {
				c.rules(a.shift())
			}
			while (a[0] && typeof(a[0]) == "string") {
				if (getHook(a[0])) {
					var nm=a.shift()
					c.rule(nm, "")
					if(getHook(nm).init){
						getHook(nm).init.apply(this,a);
					}
				} else if (a[0].indexOf("ease") == 0) {
					c.easing(a.shift())
				} else if (speedmap[a[0]]) {
					c.duration(a.shift())
				} else if (a[0] == "rules") {
					a.shift();
					c.rules(a.shift())
				} else {
					c.rule(a.shift(), a.shift())
				}
			}

			if($.isPlain(a[0])){
				$.extend(c.config, a.shift());
			}
			if(c.config.method ){
				var nm=c.config.method,hook=getHook(c.config.method)
				if(hook) {
					c.rule(nm, "")
					if (hook.init) {
						hook.init.apply(this, a);
					}
				}

			}
			if (typeof(a[0]) == "number" && c.duration() == null) {
				c.duration(a.shift())
			}
			if (typeof(a[0]) == "number") {
				c.delay(a.shift())
			}
			if (typeof(a[0]) == "function") {
				c.then(a.shift())
			}
			if (typeof(a[0]) == "function") {
				c.then(a.shift())
			}
		}
		if (!chain && $d.isAnimating(el) && anm) {
			return anm
		}
		if (c.config.auto == null) {
			c.config.auto = true
		}

		c.config.reverse = reverse
		if (c.config.auto) {
			c.getQueue().add(c).next()
		}
		$d.data(el, "_anim_", c)
		return c
	}
	anim.addHook = function(name, handle) {
		addHook(name, handle)
	}
	anim.hasHook = function(name) {
		return getHook(name)
	}
	function scrollTop(config,rule){
		var onend = this.end.bind(this),el=this.element(),af=$d.util.animframe
		var toscroll=Number(rule.to)||0,curr=el.scrollTop,step=Number(rule.step)||10,max=el.scrollHeight-el.offsetHeight
		if(curr>toscroll){
			step=0-step
			toscroll=Math.max(0,Number(toscroll))
		} else{
			toscroll=Math.min(toscroll,max)
		}
		function fn() {
			var nu=el.scrollTop+step,endit=0
			if((step<0 && nu >=toscroll) || (step>0 && nu <= toscroll)){
				el.scrollTop=nu
				if(el.__scrollTop!=null && el.__scrollTop==el.scrollTop) {
					endit=1
				}
				el.__scrollTop=el.scrollTop
			} else {endit=1}
			if(endit){
				delete el.__scrollTop
				onend();
				return
			}
			af(fn);
		}
		af(fn);
	}
	anim.addHook("scrollTop", {
		anim:scrollTop
	});
	anim.addHook("scroll", {
		anim:scrollTop
	});
	 anim.addHook("clip", {
		 prep:function(config){
 			 return parseClipOptions.call(this.element(),config)
		 },
		 anim: function(config,rule){
			 return clipAnim.call(this.element(), config,rule )

		 }
	 })
	anim.addHook("scrollLeft", {
		anim: function(config,rule){
			var onend = this.end.bind(this),el=this.element(),af=$d.util.animframe
			var toscroll=Number(rule.to)||0,curr=el.scrollLeft,step=rule.step||10,max=el.scrollWidth-el.offsetWidth
			if(curr>toscroll){
				step=0-step
				toscroll=Math.max(0,Number(toscroll))
			} else{
				toscroll=Math.min(toscroll,max)
			}
			function fn() {
				var nu=el.scrollLeft+step,endit=0
				if((step<0 && nu >=toscroll) || (step>0 && nu <= toscroll)){
					el.scrollLeft=nu
					if(el.__scrollLeft!=null && el.__scrollLeft==el.scrollLeft) {
						endit=1
					}
					el.__scrollLeft=el.scrollLeft
				} else {endit=1}
				if(endit){
					delete el.__scrollLeft
					onend();
					return
				}

				af(fn);
			}
			af(fn);

		}

	});
	anim.addHook("hide", {
		prep: function(config) {
			var r = config.rules || (config.rules = {});
			delete r.hide;
			r.opacity = {
				from: 1,
				to: .01,
				duration: 500
			}
			this.then(function() {
				this.element().hide()
			});
		}
	});
	anim.addHook("show", {
		prep: function(config) {
			var r = config.rules || (config.rules = {});
			delete r.hide;
			r.opacity = {
				from: .1,
				to: 1,
				duration: 500
			}
		}
	});
	anim.addHook("toggle", {
		prep: function(config) {
			var r = config.rules || (config.rules = {});
			delete r.hide;

			if (!this.isVisible() || this.opacity() < .2) {
				r.opacity = {
					from: .1,
					to: 1,
					duration:  speedmap.medium
				}
			} else {
				r.opacity = {
					from: 1,
					to: .1,
					duration: speedmap.medium
				}
			}
		}
	});
	anim.addHook("fill", {
		prep: function(config) {
			var r = config.rules || (config.rules = {});
			delete r.fill;
			this.element().absolutize();
			var parel=this.element().parent(),
				p = {height:parel.innerHeight(),width:parel.innerWidth()},
				curr = this.element().offset();
			r.top = {
				to: p.top,
				from: curr.top
			}
			r.left = {
				to: p.left,
				from: curr.left
			}
			r.height = {
				to: p.height,
				from: curr.height
			}
			r.width = {
				to: p.width,
				from: curr.width
			}
		}
	});
	function animScroll(dir,rule){
		var dim=dir.charAt(0).toUpperCase()+dir.substr(1)
		var scrollProp="scroll"+dim;
		var curr=this[scrollProp],max=this[scrollProp]-this["offset"+dim];
		if(Math.abs(max)<=1){return}
		if(isNaN(rule.from)){rule.from=curr}
		if(rule.from!=curr){this[scrollProp]=rule.from}
		if(isNaN(rule.to)){
			if(Math.abs(max-rule.from)<=2){
				rule.to=0
			} else {rule.to=max}
		}
		var blk=this.element().el,_to=Math.abs(rule.to),inc=Math.round(Math.max(Math.abs(_to-rule.from)/50,2));
		var steps=Math.ceil(Math.abs(_to-rule.from)/inc)+1
		if(_to<rule.from){inc=0-inc}
		var onend = this.end.bind(this)
		$d.util.animframe(function anim(){
			var curr=blk[scrollProp];
			if(steps>=0 && Math.abs(_to-curr)>inc) {
				blk[scrollProp] = curr+inc
				steps--;
				$d.util.animframe(anim)
			} else {
				blk[scrollProp] = _to;
				onend()
			}
		});

	}
	anim.addHook("scrollLeft2", {
		anim:function(config,rule){
			animScroll.call(this,"left",rule)
		}
	});
	anim.addHook("scrollTop2", {
		anim:function(config,rule){
			animScroll.call(this,"top",rule)
		}
	});
	$d.anim=anim
})();
;/**
 * Created by Atul on 8/15/2015.
 */
$d.watchMutation=(function() {
	var support = {
		attrModified: null,
		input: null
	}
	var mutobserver = window.MutationObserver || (window.MutationObserver = window.WebKitMutationObserver),vphandle=null,_cache=[];
	var dataobserver = {
		__map: {}
	}


	function isDOMAttrModifiedSupported() {
		if (support.attrModified === null) {
			var p = document.body.appendChild(document.createElement('p'))
			support.attrModified = false
			p.addEventListener('DOMAttrModified', function() {
				support.attrModified = true
			}, false);
			p.setAttribute('id', 'target');
			setTimeout("document.body.removeChild(p)", 0)
		}
		return support.attrModified;
	}

	function isInputEventSupported() {
		if (support.input === null) {
			var ip = document.body.appendChild(document.createElement('input'))
			support.input = ("oninput" in ip) ? "input" : (("ontextinput" in ip || "ontextInput" in ip) ? "textInput" : false)
			document.body.removeChild(ip)
		}
		return support.input;
	}

	function attachMutationEvents(el ,ops,callback,asset){
		ops=ops||{}
		function domattrHandlefn(ev) {
			if (!(('attrChange' in ev) || ('attributeName' in ev) || ('propertyName' in ev) || ('timed' in ev))) {
				return
			}
			var rec={name:ev.attributeName || ev.attrName||ev.propertyName,oldValue :ev.oldValue || ev.prevValue,value : ev.value || ev.newValue,type:ev.type,target:ev.target}
			callback(rec);
		}

		function attachMutEvent(elem,optns,domattrHandle,attrModified,asbatch) {
			var observer
			if (mutobserver) {
				//childList,attributeFilter,characterData,characterDataOldValue
				var config={
					attributes: !(optns.attributes===false),
					attributeOldValue:!(optns.attributes===false),
					subtree: optns.bubbles||optns.subtree||optns.childList
				}
				config.childList=config.subtree
				observer = new mutobserver(function(mutations) {
					if(asbatch){attrModified(mutations)}
					else{mutations.forEach(attrModified);}
				});
				observer.observe(elem, config);
			} else {
				if (isDOMAttrModifiedSupported()) { //Opera Mutation Events but the performance is no good
					elem.addEventListener('DOMAttrModified', domattrHandle);
					observer = {
						disconnect: function() {
							this.el && this.el.removeEventListener('DOMAttrModified', domattrHandle);
						}.bind(el)
					}
				} else if ('onpropertychange' in document.body) { //works only in IE
					elem.attachEvent('onpropertychange', domattrHandle);
					observer = {
						disconnect: function() {
							this.el && this.el.detachEvent('onpropertychange', domattrHandle);
						}.bind(el)
					}
				} else {
					var memo = {},
						timer = $.timer.until(100, function chk(memo) {
							attrModified()
						}, function end(memo) {}, memo = {
							rec: record
						})
					memo.timer = timer
					observer = {
						timer: timer,
						disconnect: function() {
							this.timer.cancel()
						}.bind(memo)
					}
				}

			}
			return observer;
		}
		return attachMutEvent(el ,ops,domattrHandlefn,callback,asset);
	}
	var domModel=function(elem){
		this._data={};
		this._observer=null;
		this._descripts={};
		this._elem=$d(elem).id
		_cache.push(this)
	}
	domModel.prototype={
		addPropertyToMonitor:function(nuprops,options,callback0){
			if (typeof(nuprops) == "string") {
				nuprops = nuprops.trim().split(/\s+/)
			}
			var elem = this._elem ?this._elem.nodeType?this._elem:document.getElementById(this._elem):null
			if(!elem){return}
			nuprops = Array.isArray(nuprops) ? nuprops : [nuprops]
			if(nuprops[0]==="subtree" || nuprops[0]==="childList" ){
				options=options||{}
				options.childList=true;
				options.attributes=false
				if(!this._descripts.childList && this._observer){
					this._observer=null;
				}
				this.add("childList",{
					name: "childList",  value: {}, val: {value:function(){return null}}, callback: typeof(callback0) == "function" ? callback0 : null
				})

			} else {


				var resa = {}, el = $d(elem), stl = document.defaultView.getComputedStyle(elem);
				for (var i = 0, l = nuprops || [], ln = l.length, k; k = l[i], i < ln; i++) {
					if (!(k && typeof(k) == "string") || this._data[k]) {
						continue
					}
					var descript
					if (k == 'style') {
						for (var i1 = 0, v, l1 = Object.keys(stl) || [], ln1 = l1.length, k1; k1 = l1[i1], i1 < ln1; i1++) {
							k1 && k1 !== "cssText" && k1 !== "length" && isNaN(k1) && (v = stl[k1]) && (typeof(v) == "string" || typeof(v) == "number") &&
							this.add(k1, {
								name: k1,
								value: v,
								isstyle: true,
								val: $d.css.getRecord(null, k1),
								callback: typeof(callback0) == "function" ? callback0 : null
							})
						}
						;
					}
					else if (k != "content" && k != "value" && $d.css.isStyle(k)) {
						descript = {name: k, value: stl[k], isstyle: true, val: $d.css.getRecord(null, k)}
					} else {
						if (k === "content") {
							k = $d.isFormInput(elem) ? "value" : "textContent"
							descript = {
								name: k,
								value: el.prop(k),
								isprop: true,
								val: {
									getValue: function (el, nm) {
										return el[nm]
									}
								}
							}
						} else {
							descript = {
								name: k, value: el.prop(k), isprop: true, val: {
									getValue: function (el, nm) {
										if (el && nm in el) {
											return el[nm]
										}
										return el && el.getAttribute && el.getAttribute(nm)
									}
								}
							}
						}
					}
					if (descript && descript.val && descript.isstyle && typeof(descript.val.getValue) != "function") {
						descript.val = function (el, nm) {
							return $d.css(el, nm)
						}
					}
					if (descript) {
						if (typeof(callback0) == "function") {
							descript.callback = callback0
							this.add(k, descript);
						}
					}

				}
			}
			if(!this._observer){
				this._observer=attachMutationEvents(elem,options,function(mutations){

					var  mod = null,el =  $d(this._elem),torefresh=[];
					if (!el || el.__dragging) {
						return
					}

					if (!mutations) {
						this.refresh();
					} else {
						var childList
						mutations = Array.isArray(mutations) ? mutations : [mutations]
						for (var i = 0, ln = mutations.length; i < ln; i++) {


							var mutation = mutations[i] || {}
							if(mutation.type=="childList" && ((mutation.addedNodes && mutation.addedNodes.length) || (mutation.removedNodes && mutation.removedNodes.length))){
								childList||(childList={target:mutation.target,addedNodes:[],removedNodes:[]});
								for(var i2= 0,l2=mutation.addedNodes||[],ln2=l2.length;i2<ln2;i2++){
									childList.addedNodes.push(l2[i2])
								}
								for(var i2= 0,l2=mutation.removedNodes||[],ln2=l2.length;i2<ln2;i2++){
									childList.removedNodes.push(l2[i2])
								}

							} else{
								var name = mutation.attributeName || mutation.attrName||mutation.propertyName,
									value = mutation.value || mutation.newValue
								if (name !== null) {
									if (!(name == "style" || this._descripts[name])) {
										continue
									}
									if (name != "style" && value != null) {
										mod||(mod={});
										mod[name] = value;
									} else {
										torefresh.indexOf(name)==-1 && torefresh.push(name);
									}
								}
							}

							/*var rec={name:mutation.attributeName || ev.attrName||ev.propertyName,oldValue :mutation.oldValue || ev.prevValue,value : mutation.value || mutation.newValue,
							 type:mutation.type,target:mutation.target}*/

						}
						if(childList){
							this._data.childList=childList;
						}
						if(torefresh.length){
							this.refresh(torefresh);
						}
						if(mod){
							this.update(mod);
						}
					}

				}.bind(this),true )
			}
			if(!this._observing){
				this._observing=true
				Object.observe(this._data,function(recs){
					var el=$d(this._elem),D=this._descripts
					for(var i= 0,ln=recs.length|| 0,rec;rec=recs[i],i<ln;i++){
						if(rec && rec.name && D[rec.name] && D[rec.name].callback){
							var R={name:rec.name,type:rec.type,newValue:rec.newValue,object:rec.object,oldValue:rec.oldValue,el:el}
							if(!R.newValue && R.object){R.newValue=R.value=R.object[R.name]}
							D[rec.name].callback.call(el,R)
						}
					}
				}.bind(this), ["update"] )
			}
		},
		refresh:function(list){
			var DS=this._descripts,el=document.getElementById(this._elem),D=this._data;
			if(!list){
				list=Object.keys(DS)
			}
			for (var i = 0, ln = list.length|| 0,nm;nm=list[i], i < ln; i++) {
				if(nm == "style"){
					for(var k in DS){
						if(DS[k] && DS[k].isstyle){
							D[k]=DS[k].val.getValue(el,k)
						}
					}
					continue;
				} else if(nm == "dim"){
					if(this._hasdim) {
						for (var k in DS) {
							if (k == "height" || k == "width" || k == "top" || k == "left" || k == "offsetHeight" || k == "offsetWidth") {
								D[k] = DS[k].val.getValue(el, k)
							}
						}
					}
					continue;
				}
				nm && DS[nm] && (D[nm]=DS[nm].val.getValue(el,nm));
			}

		},
		add:function(name,descript){var k=name
			if(k=="height"||k=="width"||k=="top"||k=="left"||k=="offsetHeight"||k=="offsetWidth"){
				this._hasdim=true
				if(!vphandle){
					$.viewport.on(vphandle=function(rec){
						for(var i= 0,l=_cache,ln= l.length;i<ln;i++){
							if(l[i] && l[i]._hasdim){
								_cache[i].refresh([rec.name])
							}
						}
					})
				}
			}
			this._descripts[name]=descript
			this._data[name]=descript.value

		},
		update:function(data){
			var DS=this._descripts ,D=this._data;
			for (var i = 0, l=Object.keys(data),nm,ln = l.length||0; nm=l[i],i < ln; i++) {
				nm && DS[nm] && (D[nm]=data[nm]);
			}
		},
		remove:function(){

		}
	}
	function createModel(elem,options ){
		var model=$d.data(elem,"mutationmodel")
		if(!model){
			model=new domModel(elem);
			$d.data(elem,"mutationmodel",model)
		}
		return model;
	}
	return function(e, optns0, callback0) {
		if(optns0===false){
			var currmodel=$d.data(e ,"mutationmodel")
			if(!currmodel){return}
			var DS=currmodel._descripts ;
			var hasfn=typeof(callback0)==="function"
			for (var i = 0, l=Object.keys(DS),nm,ln = l.length||0; nm=l[i],i < ln; i++) {
				if(!(nm && DS[nm] )){continue}
				if(!hasfn || (hasfn && (callback0===DS[nm].callback))){
					delete DS[nm];
				}
			}
			if(!Object.keys(DS).length){
				currmodel._observer && currmodel._observer.disconnect && currmodel._observer.disconnect()
				$d.data(e ,"mutationmodel",null)

			}

			return;
		}
		var model=createModel(e, optns0)
		var props=[]
		if(optns0) {
			if (typeof(optns0) == "string" || Array.isArray(optns0)) {
				props = optns0;
				optns0 = {}
			}
			if (typeof(optns0) == "object") {
				if(optns0.props || optns0.properties){
					props = (optns0.props || optns0.properties);
				}

			}
		} else{optns0={}}
		model.addPropertyToMonitor(props,optns0, callback0)
		return model
	}

})() ;
;
if (!document.registerElement) {
    (function(e, t, n, r) {
        "use strict";

        function z(e, t) {
            for (var n = 0, r = e.length; n < r; n++) Y(e[n], t)
        }

        function W(e) {
            for (var t = 0, n = e.length, r; t < n; t++) r = e[t], U(r, p[V(r)])
        }

        function X(e) {
            return function(t) {
                b.call(A, t) && (Y(t, e), z(t.querySelectorAll(d), e))
            }
        }

        function V(e) {
            var t = e.getAttribute("is"),
                n = e.nodeName,
                r = m.call(h, t ? f + t.toUpperCase() : a + n);
            return t && -1 < r && !$(n, t) ? -1 : r
        }

        function $(e, t) {
            return -1 < d.indexOf(e + '[is="' + t + '"]')
        }

        function J(e) {
            var t = e.currentTarget,
                n = e.attrChange,
                r = e.prevValue,
                i = e.newValue;
            t.attributeChangedCallback && e.attrName !== "style" && t.attributeChangedCallback(e.attrName, n === e.ADDITION ? null : r, n === e.REMOVAL ? null : i)
        }

        function K(e) {
            var t = X(e);
            return function(e) {
                t(e.target)
            }
        }

        function Q(e, t) {
            var n = this;
            M.call(n, e, t), j.call(n, {
                target: n
            })
        }

        function G(e, t) {
            k(e, t), q ? q.observe(e, D) : (B && (e.setAttribute = Q, e[i] = I(e), e.addEventListener(u, j)), e.addEventListener(o, J)), e.createdCallback && (e.created = !0, e.createdCallback(), e.created = !1)
        }

        function Y(e, t) {
            var n, r = V(e),
                i = "attached",
                s = "detached"; - 1 < r && (R(e, p[r]), r = 0, t === i && !e[i] ? (e[s] = !1, e[i] = !0, r = 1) : t === s && !e[s] && (e[i] = !1, e[s] = !0, r = 1), r && (n = e[t + "Callback"]) && n.call(e))
        }
        if (r in t) return;
        var i = "__" + r + (Math.random() * 1e5 >> 0),
            s = "extends",
            o = "DOMAttrModified",
            u = "DOMSubtreeModified",
            a = "<",
            f = "=",
            l = /^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,
            c = ["ANNOTATION-XML", "COLOR-PROFILE", "FONT-FACE", "FONT-FACE-SRC", "FONT-FACE-URI", "FONT-FACE-FORMAT", "FONT-FACE-NAME", "MISSING-GLYPH"],
            h = [],
            p = [],
            d = "",
            v = t.documentElement,
            m = h.indexOf || function(e) {
                    for (var t = this.length; t-- && this[t] !== e;);
                    return t
                },
            g = n.prototype,
            y = g.hasOwnProperty,
            b = g.isPrototypeOf,
            w = n.defineProperty,
            E = n.getOwnPropertyDescriptor,
            S = n.getOwnPropertyNames,
            x = n.getPrototypeOf,
            T = n.setPrototypeOf,
            N = !!n.__proto__,
            C = n.create || function Z(e) {
                    return e ? (Z.prototype = e, new Z) : this
                },
            k = T || (N ? function(e, t) {
                    return e.__proto__ = t, e
                } : S && E ? function() {
                    function e(e, t) {
                        for (var n, r = S(t), i = 0, s = r.length; i < s; i++) n = r[i], y.call(e, n) || w(e, n, E(t, n))
                    }
                    return function(t, n) {
                        do e(t, n); while (n = x(n));
                        return t
                    }
                }() : function(e, t) {
                    for (var n in t) e[n] = t[n];
                    return e
                }),
            L = e.MutationObserver || e.WebKitMutationObserver,
            A = (e.HTMLElement || e.Element || e.Node).prototype,
            O = A.cloneNode,
            M = A.setAttribute,
            _ = t.createElement,
            D = L && {
                    attributes: !0,
                    characterData: !0,
                    attributeOldValue: !0
                },
            P = L || function(e) {
                    B = !1, v.removeEventListener(o, P)
                },
            H = !1,
            B = !0,
            j, F, I, q, R, U;
        T || N ? (R = function(e, t) {
            b.call(t, e) || G(e, t)
        }, U = G) : (R = function(e, t) {
            e[i] || (e[i] = n(!0), G(e, t))
        }, U = R), L || (v.addEventListener(o, P), v.setAttribute(i, 1), v.removeAttribute(i), B && (j = function(e) {
            var t = this,
                n, r, s;
            if (t === e.target) {
                n = t[i], t[i] = r = I(t);
                for (s in r) {
                    if (!(s in n)) return F(0, t, s, n[s], r[s], "ADDITION");
                    if (r[s] !== n[s]) return F(1, t, s, n[s], r[s], "MODIFICATION")
                }
                for (s in n)
                    if (!(s in r)) return F(2, t, s, n[s], r[s], "REMOVAL")
            }
        }, F = function(e, t, n, r, i, s) {
            var o = {
                attrChange: e,
                currentTarget: t,
                attrName: n,
                prevValue: r,
                newValue: i
            };
            o[s] = e, J(o)
        }, I = function(e) {
            for (var t, n, r = {}, i = e.attributes, s = 0, o = i.length; s < o; s++) t = i[s], n = t.name, n !== "setAttribute" && (r[n] = t.value);
            return r
        })), t[r] = function(n, r) {
            w = n.toUpperCase(), H || (H = !0, L ? (q = function(e, t) {
                function n(e, t) {
                    for (var n = 0, r = e.length; n < r; t(e[n++]));
                }
                return new L(function(r) {
                    for (var i, s, o = 0, u = r.length; o < u; o++) i = r[o], i.type === "childList" ? (n(i.addedNodes, e), n(i.removedNodes, t)) : (s = i.target, s.attributeChangedCallback && i.attributeName !== "style" && s.attributeChangedCallback(i.attributeName, i.oldValue, s.getAttribute(i.attributeName)))
                })
            }(X("attached"), X("detached")), q.observe(t, {
                childList: !0,
                subtree: !0
            })) : (t.addEventListener("DOMNodeInserted", K("attached")), t.addEventListener("DOMNodeRemoved", K("detached"))), t.addEventListener("readystatechange", function(e) {
                z(t.querySelectorAll(d), "attached")
            }), t.createElement = function(e, n) {
                var r = _.apply(t, arguments),
                    i = m.call(h, (n ? f : a) + (n || e).toUpperCase()),
                    s = -1 < i;
                return n && (r.setAttribute("is", n = n.toLowerCase()), s && (s = $(e.toUpperCase(), n))), s && U(r, p[i]), r
            }, A.cloneNode = function(e) {
                var t = O.call(this, !!e),
                    n = V(t);
                return -1 < n && U(t, p[n]), e && W(t.querySelectorAll(d)), t
            });
            if (-2 < m.call(h, f + w) + m.call(h, a + w)) throw new Error("A " + n + " type is already registered");
            if (!l.test(w) || -1 < m.call(c, w)) throw new Error("The type " + n + " is invalid");
            var i = function() {
                    return t.createElement(v, u && w)
                },
                o = r || g,
                u = y.call(o, s),
                v = u ? r[s].toUpperCase() : w,
                b = h.push((u ? f : a) + w) - 1,
                w;
            return d = d.concat(d.length ? "," : "", u ? v + '[is="' + n.toLowerCase() + '"]' : v), i.prototype = p[b] = y.call(o, "prototype") ? o.prototype : C(A), z(t.querySelectorAll(d), "attached"), i
        }
    })(window, document, Object, "registerElement");
};$d.util=$d._util={
    tagNames:'html head meta head  link  title base  body style  nav header footer main aside article section h1 h2 h3 h4 h5 h6 hgroup h1 h6 div p pre blockquote hr ul ol li ul ol dl dt dd span a em strong b i u s mark small del ins del sup sub dfn code  var samp kbd q cite ruby rt ruby rp ruby br wbr bdo bdi table caption tr td th thead tfoot tbody colgroup col colgroup img figure figcaption map area video audio source video audio   track script noscript  object param object embed iframe canvas abbr  address meter progress time form button input textarea select option select optgroup label fieldset legend keygen command datalist menu output details summary acronym abbr applet embed object bgsound audio basefont big  center dir ul font  frame frameset noframes strike s tt code samp xmp pre'.split(/\s+/),
    _fx:[], defrule:"",cloadiv:null,_currentmousePos:{x:0,y:0},__hiddenprop:null,
    animframe : window.requestAnimationFrame.bind(window),
	nativeMethods : {
        "string": "anchor  big  blink  bold  charAt  charCodeAt  concat  fixed  fontcolor  fontsize  indexOf  italics  lastIndexOf  link  localeCompare  match  replace  search  slice  small  split  strike  sub  substr  substring  sup  toLowerCase  toLocaleLowerCase  toLocaleUpperCase  toUpperCase".split(/\s+/),
        "number": "toExponential toFixed toPrecision".split(/\s+/),
        "math": "abs  acos  asin  atan  atan2  ceil  cos  exp  floor  log  max  min  pow  random  round  sin  sqrt  tan".split(/\s+/),
        "date": "getDate  getDay  getMonth  getFullYear  getHours  getMilliseconds  getMinutes  getSeconds  getTime  getTimezoneOffset  getUTCDate  getUTCDay  getUTCFullYear  getUTCHours  getUTCMilliseconds  getUTCMinutes  getUTCMonth  getUTCSeconds  getYear  setDate  setFullYear  setHours  setMilliseconds  setMinutes  setMonth  setSeconds  setTime  setUTCDate  setUTCFullYear  setUTCHours setUTCMilliseconds  setUTCMinutes  setUTCMonth  setUTCSeconds  setYear  toDateString  toISOString  toLocaleDateString  toLocaleString  toLocaleTimeString  toTimeString  toUTCString".split(/\s+/),
        "boolean": []
    },
    getHiddenProp : function() {
        if ($d._util.__hiddenprop) {
            return $d._util.__hiddenprop
        }
        var prefixes = ['webkit', 'moz', 'ms', 'o'],
            doc = document;
        if ('hidden' in doc) {
            $d._util.__hiddenprop = 'hidden';
        } // if 'hidden' is natively supported just return it
        else { // otherwise loop over all the known prefixes until we find one
            for (var i = 0; i < prefixes.length; i += 1) {
                if ((prefixes[i] + 'Hidden') in doc) {
                    $d._util.__hiddenprop = prefixes[i] + 'Hidden';
                }
            }
        }
        // otherwise it's not supported
        return $d._util.__hiddenprop;
    },
    storeCurrentPos:function(ev){
        var p=$d._util._currentmousePos||($d._util._currentmousePos={});
        if(ev&&ev.x!=null){
            p.x=ev.x;
            p.y=ev.y;
        }
        if(ev && ev.target && ev.target!=document && ev.target!=document.body){
            $d._util._currentmousePos.target=ev.target.id||ev.target
        }
    },
    createScopedDollar : function(elprop,base) {
        return (function(prop,root){
            var rootEl=root
            return function(selector) {
                var parent=null,scoped
                if(rootEl){parent=$d($.resolveProperty(this,rootEl))}
                if(parent){
                    scoped=parent.q(prop);
                } else{
                    scoped=$d(prop? $.resolveProperty(this,prop):this)
                }
                 if (!scoped) {
                    return null
                }
                var el=selector ? scoped.q(selector) : scoped
                if(!el){return}
                var scopeddomele=$.objectMap.getOrCreate(this,"scopeddomele")
                if(!scopeddomele){scopeddomele={}}
                if(!selector){selector="."}
                var ret,wr=scopeddomele[selector]
                if(wr && wr.el && wr.el.el===el.el){
                    ret=wr.el
                }
                if(!ret){
                    ret=Object.create(el,{
                        on:{value:$.fn.partial(el.on,"_","_","_",this)} //rcurry scoped delegate
                    })
                    //ret.on= $.fn.partial(el.on,"_","_","_",ret)
                    scopeddomele[selector]={id:el.id,el:ret}
                }

                return ret
            }
        })(elprop,base)
    },
    parseMatrix:function parseMatrix (matrixString) {
    var c = String(matrixString).replace(/matrix|\)|\(/g, "").split(/\s*,\s*/),
        matrix;

    if (c.length === 6) {
        // 'matrix()' (3x2)
        matrix = {
            m11: +c[0], m21: +c[2], m31: 0, m41: +c[4],
            m12: +c[1], m22: +c[3], m32: 0, m42: +c[5],
            m13: 0,     m23: 0,     m33: 1, m43: 0,
            m14: 0,     m24: 0,     m34: 0, m44: 1
        };
    } else if (c.length === 16) {
        // matrix3d() (4x4)
        matrix = {
            m11: +c[0], m21: +c[4], m31: +c[8], m41: +c[12],
            m12: +c[1], m22: +c[5], m32: +c[9], m42: +c[13],
            m13: +c[2], m23: +c[6], m33: +c[10], m43: +c[14],
            m14: +c[3], m24: +c[7], m34: +c[11], m44: +c[15]
        };

    } else {
        // handle 'none' or invalid values.
        matrix = {
            m11: 1, m21: 0, m31: 0, m41: 0,
            m12: 0, m22: 1, m32: 0, m42: 0,
            m13: 0, m23: 0, m33: 1, m43: 0,
            m14: 0, m24: 0, m34: 0, m44: 1
        };
    }
    return matrix;
},
    _mousePos :(function() {
        var d = null,   de = null,   b = null
        return function _mousePos(e,p ) {
            p = p||{};
            if (d === null) {
                d = document;  de = document.documentElement;  b = document.body
            }
            if (!(e || (e = window.event))) {
                return
            }

            if (e.pageX || e.pageY) {
                p.x = e.pageX;  p.y = e.pageY;
            } else if (e.clientX || e.clientY) {
                p.x = e.clientX + (b.scrollLeft || 0) + (de.scrollLeft || 0);
                p.y = e.clientY + (b.scrollTop || 0) + (de.scrollTop || 0);
            } else {
                if (e.touches || String(e.type).toLowerCase().indexOf("touch") == 0) {
                    var  ev = e,
                        target = (ev.changedTouches||[])[0]||(ev.targetTouches||[])[0]||(ev.targetTouches||[])[0];
                    if (target) {
                        if (target.pageX || target.pageY) {
                            p.x = target.pageX;
                            p.y = target.pageY;
                        } else if (target.clientX || target.clientY) {
                            p.x = target.clientX + (b.scrollLeft || 0) + (de.scrollLeft || 0);
                            p.y = target.clientY + (b.scrollTop || 0) + (de.scrollTop || 0);
                        }
                    }
                }
            }
            return p
        }
    })(),
    scrollPage:function scrollPage(el,scrollDuration,onend) {
        if(typeof(el)=="function"){
            onend=el;
            el=document.body
        }
        if(typeof(scrollDuration)=="function"){
            onend=scrollDuration;
            scrollDuration=0
        }
        if(typeof(onend)!=="function"){
            onend=function(){}
        }
        scrollDuration=scrollDuration||500
        var end=-1;
        if(el && el.nodeType){
            var bounds=el.getBoundingClientRect();
             end=Math.max(el.offsetTop,bounds.top<0?(start+bounds.top):bounds.top) ;
        } else if(typeof(el)=="number"){
            end=el;
        }

        var start = window.scrollY,
            maxOffset= 5,
            scrollStep = Math.PI / ( scrollDuration / 15 ),
            cosParameter = Math.max(end,start ) / 2,
            scrollCount =  0,
            maxIter=10000,//to avoid runaway loop
            running=start,
            inc=start>end?-1:1;
            if(end<0 || Math.abs(running - end) < maxOffset){
                onend();
                return;
            }
        function isDone (endnow) {
            if ( endnow || Math.abs(running - end) < maxOffset || !maxIter) {
                setTimeout(onend,50);
                return true
            }
        }
        requestAnimationFrame(step);
        function step () {
            maxIter--;
            if(isDone ()){return}
            scrollCount = scrollCount + 1;
            var scrollMargin = cosParameter - cosParameter * Math.cos( scrollCount * scrollStep),
                nu=start + (scrollMargin * inc),
                endnow=false;
            if((inc<0 && (nu>running || nu < end)) || (inc>0 && (nu<running|| nu > end))){
                endnow=true; nu=end;
            }
            running=nu;
            window.scrollTo( 0, running );
            if ( !isDone (endnow) ) {
                requestAnimationFrame(step);
            }
        }

    },
    mousePos :function(e,p) {
         if (e && ("x" in e && "y" in e)){
            if(p===null || p===e){return e}
            if(p){
                p.x= e.x;p.y= e.y
                return p
            }
            return {x: e.x,y: e.y}
        }
         return $d.util._mousePos(e,p)
        },
    getActiveElement:function(container){
        var active=$d($d.util._currentmousePos.target||document.activeElement)
        if(active && container && container.nodeType && !container.contains(active.el)){
            active=null
        }
        return  active
    },
    getHoverElement:function(container){
        var activeEls=[].slice.call(document.querySelectorAll(":hover"))
        if(container && container.nodeType){
            activeEls=activeEls.filter(function(a){return container.contains(a)})
        }
        return activeEls.pop()
    },
    isValidTagName:function(a){
        return a && typeof(a)=="string" && (this.tagNames.indexOf(a.toLowerCase())>=0 || (!/[^a-z\-]/i.test(a)  && a.indexOf("-")>0))
    },
    cloak:function(options){
        options=options||{}
        var cloakdiv=$d(document.body.appendChild(document.createElement("div")))
        if(!options.behind){
            cloakdiv.toFront()
        }
        cloakdiv.addClass("cloak")
        cloakdiv.style.cssText="position:fixed;top:0;left:0;width:100vw;height:100vh;background-color:#A2C5E5;opacity:.1;transition:opacity .2s ease"

        cloakdiv.setZ=function() {
            var options=this.data("options")||{}
            if(options.behind && $d(options.behind)) {
                var z = Number($d(options.behind).css("zIndex") || 0),thsZ=(+this.css("zIndex"))||0
                if(z <= thsZ){alert(z)
                    this.css("zIndex", z - 1)
                }


            }
        }
        cloakdiv.setMessage=function setMessage(message,messagestyle){
            var msg=this.q(".cloak-msg")
            if(!(msg && message)){return}
            if(!msg){
                msg=this.append("div.cloak-msg")
            }
            if(messagestyle){
                msg.css(messagestyle)
            }
            if(typeof(message)=="function"){
                msg.html(message(this))
            } else {
                msg.html(String(message||""))
            }
        }
        cloakdiv.resetPos=function(){
            var options=this.data("options")||{}
            var target=options.target?$d(options.target):null,bounds=target?target.bounds():null
            if(bounds){
                this.el.style.height=bounds.height+"px"
                this.el.style.width=bounds.width+"px"
                this.el.style.top=bounds.top+"px"
                this.el.style.left=bounds.left+"px"
            }
        }

        cloakdiv.data("options",$.clone(options))
        cloakdiv.on("click",function(){
            var options=this.data("options")||{}
            if(options.onclick){
                options.onclick.call($d(this))
            }
            if(!options.nodestroy){
                this.remove()
            }
        })
        cloakdiv.style.opacity=options.opacity||.6
        cloakdiv.resetPos()
        $.viewport.on(function(){
            cloakdiv.resetPos()
        })
        cloakdiv.setZ()
            setTimeout(function(){
                cloakdiv.setZ()
            },500)

        return cloakdiv
    },
    documentVisibility:(function(callback){
        var hidden, visibilityChange,callbacks=[];
        function _setup(){
            if (typeof document.hidden !== "undefined") { // Opera 12.10 and Firefox 18 and later support
                hidden = "hidden";
                visibilityChange = "visibilitychange";
            } else if (typeof document.mozHidden !== "undefined") {
                hidden = "mozHidden";
                visibilityChange = "mozvisibilitychange";
            } else if (typeof document.msHidden !== "undefined") {
                hidden = "msHidden";
                visibilityChange = "msvisibilitychange";
            } else if (typeof document.webkitHidden !== "undefined") {
                hidden = "webkitHidden";
                visibilityChange = "webkitvisibilitychange";
            }
            function _dispatch(){
                var isvis=!document[hidden]
                callbacks.forEach(function(fn){
                    fn(isvis);
                })
            }
            if(visibilityChange){
                document.addEventListener(visibilityChange,_dispatch, false)
            }

            window.addEventListener("unload", function(){
                setTimeout(_dispatch,10)
            });
        }
        return function(callback){
            if(!visibilityChange){_setup()}
            if(typeof(callback)=="function" && callbacks.indexOf(callback)==-1){
                callbacks.push(callback)
            }
        }


    })(),

    parseAnimOptions:function parseAnimOptions(options) {
        var opts={}
        if($.isPlain(options)){opts=options}
        else if(typeof(options)=="number"){opts.duration=options}
        else if(typeof(options)=="string" && options.indexOf("eas")==0){opts.easing=options}
        if(typeof(opts.duration)!=="number"){
            opts.duration=opts.duration=="fast"?200:(opts.duration=="slow"?1000:500)
        }
        if(!opts.duration){opts.duration=500}
        if(!opts.easing){opts.easing="ease"}
        return opts
    },
    addFxRule:function addcssrule(duration, ease,prop) {
        var fx=this._fx,ths=this,defrule=this.defrule;
        if (!fx.length) {
            try {
                var CSSStyleRuleCtor = typeof(CSSStyleRule) != "undefined" ? CSSStyleRule : null
                var re = /^\s*fxtx/
                for(var i= 0,l=$.makeArray(document.querySelectorAll("link[type='text/css']")),ln= l.length;i<ln;i++){
                    var sh=l[i]
                    if (!(sh.sheet && sh.sheet.cssRules)) {
                        continue;
                    };
                    [].slice.call(sh.sheet.cssRules).forEach(function(it) {
                        if (CSSStyleRuleCtor && !(it instanceof CSSStyleRule)) {
                            return
                        }
                        if ((it.cssText + "").indexOf("fxtx") >= 0) {
                            if (!defrule) {
                                var sel = it.cssText.split("{")
                                fx.push(sel.shift().trim())
                                ths.defrule=defrule = sel.join("").replace(/}\s*$/, "").replace(/\s+\ds\s+/g, " SECSs ").trim()
                            } else {
                                fx.push(it.cssText.split("{")[0].trim())
                            }
                        }

                    });
                }
            } catch (e) {
                console.log("addcssrule", e)
            }
        }

        var fxclass = "fxtx",
            ky
        if(!defrule){defrule="transition: all SECSs ease-in !important;"}
        if (duration && !(duration == 1000 && !ease)) {
            var d = duration / 1000;
            if (d < 1) {
                d = "_" + Math.round(d * 10)
            } else {
                d = String(d).replace(/\./g, "_")
            }
            fxclass = (fxclass + (prop || "") + d + (ease || "")).trim()

            if (fx.indexOf("." + fxclass) < 0) {
                var nurule = defrule.replace(/SECS/g, String(d).replace(/^_/, "0.").replace(/_/g, "."))
                if (ease) {
                    nurule = nurule.replace(/ease[\w\-]*/g, ease)
                }
                if (prop) {
                    nurule = nurule.replace(/:/g, ": ").replace(/\s+all\s+/g, " "+prop+" ")
                }

                $d.css.addRule("." + fxclass, nurule.trim());
                fx.push("." + fxclass)
                // console.log("rule",optns.fxclass,nurule)
            }
        }
        return fxclass
    }

};
	
(function(){
    document.addEventListener("mousedown", $d._util.storeCurrentPos);
    document.addEventListener("keydown", $d._util.storeCurrentPos);

})();
$.eventUtil = function() {
    function a(a) {
        if (!e) {
            e = Object.keys(h).reduce(function(a, b) {
                return a[h[b]] = b, a
            }, {});
            for (var b = 65; 90 >= b;) e[h[b] = String.fromCharCode(b)] = b, e[h[b + 32] = String.fromCharCode(b + 32)] = b + 32, b++
        }
        return "number" == typeof a ? a : null != a ? e[a] : e
    }

    function b(a, b) {
        $.each(a, function(a, c) {
            c in b || ("function" == typeof a ? b[c] = Function("var nm='" + c + "';return this.origEvent&&typeof(this.origEvent[nm])=='function'&&this.origEvent[nm].apply(this.origEvent,arguments)") : Object.defineProperty(b, c, {
                get: Function("return this.origEvent && this.origEvent['" + c + "']"),
                set: Function("v", "return this.origEvent && (this.origEvent['" + c + "']=v)")
            }))
        })
    }

    function c(a) {
        var c = a.constructor.name,
            d = k[c],
            e = k.eventproto,
            f = function() {};
        e || (k.eventproto = e = function(a) {
            this.origEvent = a
        }, b(Event.prototype || {}, e.prototype), e.prototype._kmfns = j, $.each(j, function(a, b) {
            e.prototype[b] || "function" != typeof a || (e.prototype[b] = Function("a", "var nm='" + b + "';return this.origEvent && this._kmfns[nm]&&this._kmfns[nm].call(this._kmfns,this.origEvent,a)"))
        }), Object.defineProperties(e.prototype, {
            element: {
                get: function() {
                    return this.origEvent ? $d(this.origEvent.target) : null
                },
                set: f
            }
        }), e.prototype.stop = function(a, b) {
            this.origEvent && (this.origEvent.stopPropagation(), a && this.origEvent.stopImmediatePropagation && this.origEvent.stopImmediatePropagation(), (b || 2 === a) && this.origEvent.preventDefault && this.origEvent.preventDefault())
        }, e.prototype.find = function(a) {
            return $d.selfOrUp(this.target, a)
        }, e.prototype.trigger = function(a, b) {
            if (a && a.nodeType) {
                var c = document.createEvent("Event"),
                    d = {};
                for (var e in this) "function" == typeof this[e] || e in d || "type" == e || "target" == e || (c[e] = c[e]);
                return b && (c.data = b), c.target = a, a.dispatchEvent(c), c
            }
        }), d || (d = k[c] = function(a) {
            this.origEvent = a
        }, d.prototype = new e(null), b(a, d.prototype));
        var g = new d(a);
        return g.target && 3 == g.target.nodeType && (g.target = g.target.parentNode), "x" in g || (g.x = a.pageX || a.clientX + bdy.scrollLeft + docel.scrollLeft, g.y = a.pageY || a.clientY + bdy.scrollTop + docel.scrollTop), g
    }

    function d(a, b, d) {
        if (a && "object" == typeof a && a instanceof Event) return c(a);
        if (a && "string" == typeof a) {
            var e = a,
                f = d || {}, g = document.createEvent("Event");
            if (!d && b && "object" == typeof b && (f = b), g.initEvent(e, "bubbles" in f ? f.bubbles : !0, "cancelable" in f ? f.cancelable : !0), b && "object" == typeof b)
                for (var h in b) "type" != h && "target" != h && (g[h] = b[h]);
            return g
        }
    }
    var e, f = function() {
        var a = [],
            b = $.makeArray(arguments);
        return 2 != b.length || isNaN(b[0]) || isNaN(b[1]) || (b = [
            [b[0], b[1]]
        ]), b.forEach(function(b) {
            var c, d, e = [];
            b.length ? (c = b[0], d = b[1]) : c = d = b;
            for (var f = Math.max(d, c), g = c > d, h = Math.min(d, c); f >= h;) g ? e.unshift(h) : e.push(h), h++;
            [].push.apply(a, e)
        }), a
    }, g = function() {
        var a = arguments[0],
            b = f.apply(this, $.makeArray(arguments, 1));
        return b.indexOf(a) >= 0
    }, h = {
        0: "nill",
        8: "backspace",
        9: "tab",
        13: "enter",
        16: "shift",
        17: "ctrl",
        18: "alt",
        19: "break",
        20: "capslock",
        27: "escape",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "insert",
        46: "delete",
        48: "0",
        49: "1",
        50: "2",
        51: "3",
        52: "4",
        53: "5",
        54: "6",
        55: "7",
        56: "8",
        57: "9",
        65: "a",
        66: "b",
        67: "c",
        68: "d",
        69: "e",
        70: "f",
        71: "g",
        72: "h",
        73: "i",
        74: "j",
        75: "k",
        76: "l",
        77: "m",
        78: "n",
        79: "o",
        80: "p",
        81: "q",
        82: "r",
        83: "s",
        84: "t",
        85: "u",
        86: "v",
        87: "w",
        88: "x",
        89: "y",
        90: "z",
        91: "windowkeyleft",
        92: "windowkeyright",
        93: "select",
        96: "numpad0",
        97: "numpad1",
        98: "numpad2",
        99: "numpad3",
        100: "numpad4",
        101: "numpad5",
        102: "numpad6",
        103: "numpad7",
        104: "numpad8",
        105: "numpad9",
        106: "multiply",
        107: "add",
        109: "subtract",
        110: "decimal",
        111: "divide",
        112: "f1",
        113: "f2",
        114: "f3",
        115: "f4",
        116: "f5",
        117: "f6",
        118: "f7",
        119: "f8",
        120: "f9",
        121: "f10",
        122: "f11",
        123: "f12",
        144: "numlock",
        145: "scrolllock",
        186: "semicolon",
        187: "equal",
        188: "comma",
        189: "dash",
        190: "period",
        191: "forwardslash",
        192: "graveaccent",
        219: "openbracket",
        220: "backslash",
        221: "closebraket",
        222: "singlequote"
    }, i = {
        op: "isArithmaticOperator",
        sep: "isSep",
        punc: "isPunc",
        alphanum: "isAlphaNum",
        num: "isNum",
        nav: "isNav",
        "char": "isChar",
        id: "isValidIdentifierPart"
    }, j = {
        getKeyNamesMap: a,
        isSep: function() {
            return 0
        },
        isPunc: function() {
            return 0
        },
        isNav: function(a) {
            return a = a.keyCode || a, g(a, 33, 40) ? a : null
        },
        getKeyName: function(a) {
            var k=a.keyCode || a
            return h[k]
        },
        isNum: function(a) {
            return a = a.keyCode || a, 48 == a || 96 == a ? "0" : g(a, [48, 57], [96, 105]) ? a : null
        },
        isChar: function(a) {
            return a = a.keyCode || a, g(a, [65, 90], [97, 122]) ? a : null
        },
        isValidIdentifierPart: function(a) {
            return a = a.keyCode || a, g(a, [48, 57], [97, 122], [65, 90], 36, 95) ? a : null
        },
        isAlphaNum: function(a) {
            return a = a.keyCode || a, this.isChar(a) || this.isNum(a) ? a : null
        },
        isArithmaticOperator: function(a) {
            return a = a.keyCode || a, g(a, [106, 111]) ? a : null
        },
        is: function(b, c) {
            var d = c,
                e = "string" == typeof c ? String(c).split("-") : [];
            if (b && "object" == typeof b && (d = c.keyCode), e.length > 1) return e.every(function(a) {
                return this.is(b, a)
            }, this);
            if (b && "object" == typeof b && c + "Key" in b) return b[c + "Key"] ? c : null;
            var f = b && "object" == typeof b && null != b.keyCode ? b.keyCode : b;
            return "string" == typeof c && i[c] ? this[i[c]](f) : a(c) == f ? f : null
        },
        hasModifier: function(a) {
            return a && a.target && a.type ? a.ctrlKey || a.shiftKey || a.altKey : g(a, [16, 18]) ? a : null
        },
        isCtrlKey: function(a) {
            return a && a.target && a.type ? a.ctrlKey : this.is(a, "ctrl")
        },
        isAltKey: function(a) {
            return a && a.target && a.type ? a.altKey : this.is(a, "alt")
        },
        isShiftKey: function(a) {
            return a && a.target && a.type ? a.shiftKey : this.is(a, "shift")
        },
        isEnter: function(a) {
            return this.is(a, "enter")
        },
        isEsc: function(a) {
            return this.is(a, "escape")
        },
        isRightClick: function(a) {
            return a && a.target && a.type ? a.which && 3 == a.which || a.button && 2 == a.button : null
        }
    }, k = {};
    return $.extend(d, j), d.augment = c, d.trigger = d.fire = function(a, b, c, d) {
        var d = d || {}, e = document.createEvent("Event");
        if (e.initEvent(b, "bubbles" in d ? d.bubbles : !0, "cancelable" in d ? d.cancelable : !0), c && "object" == typeof c)
            for (var f in c) "type" != f && "target" != f && (e[f] = c[f]);
        return e.target = a, a.dispatchEvent(e), e
    }, d
}(),
 $d.toFront = function(a, b) {
    var c = $d(a),
        d = c ? c.el : null;
    if (d) {
        var e = d.getBoundingClientRect();
        if (!e.height) {
            if (!b) return c;
            c.show()
        }
        var f = document.elementFromPoint(e.left + e.width / 2, e.top + e.height / 2),
            g = document.elementFromPoint(e.left + 1, e.top + 1);
        if (d.contains(f) && d.contains(g)) return c;
        if (!$d._maxZ || b===true) {
            var h = [],vw=document.defaultView,mx=0;
            for( var i=0,l=document.body.querySelectorAll("*"),ln=l.length,z;i<ln;i++){
                z=(+vw.getComputedStyle(l[i])["z-index"])||0;z>mx && (mx=z)
            }
            $d._maxZ = mx+1

        }
        if((Number(d.style.zIndex)||0) <= $d._maxZ){
            $d._maxZ=$d._maxZ+1
            d.style.zIndex = $d._maxZ
        }

        return c
    }
}, $d.cloneLayout = function(a, b) {
    b || (b = document.body.appendChild(document.createElement("div")));
    var c = a.style.display;
    a.style.display = "";
    var d = a.getBoundingClientRect();
    return b.style.cssText = $d.css.getComputed(a).cssText, a.style.display = c, b.style.position = "absolute", ["top", "left", "height", "width"].forEach(function(a) {
        b.style[a] = d[a] + "px"
    }), b
}, $d.alias = function(a) {
    return Object.keys($d).reduce(function(a, b) {
        return a[b] = $d[b], a
    }, a)
}, $d.template = function() {
    function _tokenize(a) {
        var b = String(a).replace(/\$\{([^\}]+)\}/g, "`$1`").replace(/\{\{(.*?)}}/g, "`$1`").match(/([\w][\w\$@-]*)|([\^]+)|([#\{\}+\=\-\!\*\(\)\]\.\[>])|`[^`]+`|./g) || [];
        return b
    }

    function _parse(a, b, c) {
        var d = b || {
                    tag: "root",
                    c: []
                }, e = d,
            f = function(b) {
                var d;
                return "root" == b ? d = {
                    id: ++_idcntr,
                    c: [],
                    tag: b,
                    par: e
                } : "(" == b ? (d = h(), d && (d.par = e, d.isGroup = !0, e.c.push(d))) : e.c.push(d = {
                    id: ++_idcntr,
                    txt: "",
                    c: [],
                    klass: [],
                    tag: b || "div",
                    tagadded: !! b,
                    props: {},
                    par: e
                }), d ? (util.checkrepeats(d, a, c), util.parseattrib(a, d, c), e = d, d) : void 0
            }, g = function(b) {
                if (!markers.el[b] || !isstr(b)) return e;
                if ("^" == b) e = e.par || e;
                else {
                    var c, d = "+" == b ? e.par : e,
                        h = abbr[a[0]] || a[0];
                    ("(" == h || alltags.indexOf(h) >= 0) && (c = h, a.shift()), c = c || ("+" == b ? e.tag : tagMap[e.tag]), e = d, f(c)
                }
                isstr(a[0]) && markers.el[a[0]] && g(a.shift())
            }, h = function() {
                var b, d = util.untilblockEnd(a, "(");
                if (d && d.length) {
                    for (b = _parse(d, null, c); b && b.par;) b = b.par;
                    "root" == b.tag && b.c && 1 == b.c.length && (b = b.c[0]), b.tagadded && "div" == String(b.tag).toLowerCase() && b.klass.push("ignoretag"), b.isGroup = !0
                }
                return b
            };
        for (a.slice(); a.length;) {
            var i = a.shift(),
                j = alltags.indexOf(i);
            i && "`" != String(i).charAt(0) && (isarr(i) ? i.length && (e = _parse(i, e, c), e.ignoretag = !0) : (j >= 0 || "(" == i ? (f(i), markers.el[a[0]] && g(a.shift())) : g(i), util.checkrepeats(e, a, c)))
        }
        return d
    }

    function _apiHolder(a) {
        return a.render = function() {
            this._html = this.fn.apply(null, arguments)
            this._fragment = this._el = null
            return this
        }, a.html = function() {
            return this._html || this.render.apply(this, arguments), this._html
        }, a.appendTo = function(a, b) {
            var c = $d(a || document.body);
            if (!c) return null;
            var d = c.el.appendChild(this.fragment);
            return b ? $d(d) : c
        }, $.defineProperty(a, "fragment", function() {
            if (worker || (worker = document.createElement("div")), !this._fragment)
                for (this._fragment = document.createDocumentFragment(), worker.innerHTML = this.html(); worker.firstChild;) this._fragment.appendChild(worker.removeChild(worker.firstChild));
            return this._fragment
        }), $.defineProperty(a, "el", function() {
            return this._el ? this._el : (this._container || (this._container = document.body), this._el = $d.append(this._container, this.fragment))
        }), a._html = null, a._el = null, a._fragment = null, a._container = null, a
    }

    function domtemplate(a) {
        /[a-z]/i.test(a) ? /^<[a-z]+>$/i.test(a) && (a = "<" + a.replace(/\W/g, "") + "></" + a.replace(/\W/g, "") + ">") : a = "<" + a + "></" + a + ">", a = String(a).replace(/<([^><]+?)>/g, function(a, b) {
            if (0 == b.indexOf("/") || /\s/.test(b)) return a;
            var c = {}, d = [];
            /\[/.test(b) && (b = b.replace(/\[([^\]]+)\]/g, function(a, b) {
                return b.split(";").forEach(function(a) {
                    var b = a.split(/[\:\=]/);
                    c[b[0]] = b[1]
                }), " "
            })), /\S\.\S/.test(b) && (b = b.replace(/\.([\S]+)/g, function(a, b) {
                return [].push.apply(d, b.split(/\./)), ""
            }));
            var e = ["<" + b];
            return $.each(c, function(a, b) {
                e.push(b + "='" + String(null == a ? b : a).replace(/^'|'$/g, "") + "'")
            }), d.length && e.push("class='" + d.join(" ") + "'"), e.push("input" == b || "img" == b || "hr" == b || "br" == b ? "/>" : ">"), e.join(" ")
        });
        a=a.replace(/\{\{(.*?)}}/g, "\${$1}");
        var b; - 1 == a.indexOf("$") ? (b = function(a) {
            return function() {
                return a
            }
        }(a), b.fn = b) : b = $.template(a);
        var c = _apiHolder(b);
        return c
    }

    function tmplm(a, b) {
        b = b || {};
        var c, d = String(a).trim(),
            e = null;
        if (b && b.nodeType && (b = {
                container: b
            }), b && b.container && (e = $d(b.container)), "<" == d.charAt(0)) {
            if (c = domtemplate(d), e) {
                var f = e.append(c(b.data));
                c = e.id == f.id ? e.lastElementChild : e
            }
            return c
        }
        var g = $.clone(b),
            h = _parse(_tokenize(d), null, g);
        c = new util.wrapApi("root" != h.tag ? {
            c: [h],
            tag: "root"
        } : h, b);
        var i = c.render(b.data),
            j = i.html();
        if (/\$\{[\w\.]+\}/.test(j) || /\$[\w\.]+/.test(j)) return j = j.replace(/\$\{([a-z][\w\.]+)?\}/g, function(a, b) {
            return "$" + b
        }), c = domtemplate(j);
        var k = function(a) {
            return this.render(a).html()
        }.bind(c);
        return Object.keys(c).forEach(function(a) {
            k[a] = "function" == typeof c[a] ? c[a].bind(c) : c[a]
        }), k
    }
    var markers = {
            el: {
                ">": 1,
                "^": 1,
                "+": 1
            },
            pr: {
                ".": 1,
                "#": 1,
                "[": 1,
                "{": 1,
                "}": 1
            }
        }, tagMap = {
            ul: "li",
            tr: "td",
            em: "span"
        }, alltags = "section article header footer ip lbl b a abbr acronym address area b i tt sub sup  big small, hr base bdo big blockquote body br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5, and h6 head html i img input ins kbd label legend li link map meta noscript object ol optgroup option p param pre q samp select small span strong style sub sup table tbody td textarea tfoot th thead title tr tt ul var".split(/\s+/),
        abbr = {
            "pos:a": "position:absolute",
            abs: "position:absolute",
            rel: "position:relative",
            "t:d": "type=date",
            "t:n": "type=number",
            "pos:r": "position:relative",
            "o:a": "overflow:auto",
            bgc: "background-color",
            bg: "background",
            "d:b": "display:block",
            "d:ib": "display:inline-block",
            r: "right",
            b: "bottom",
            t: "top",
            l: "left",
            w: "width",
            h: "height",
            "b:1": "border:1px solid #ccc",
            "t:h": "type:hidden",
            ip: "input",
            lbl: "label",
            fs: "fieldset"
        }, abbrkeys = {
            mrg: "margin",
            pd: "padding",
            bg: "background",
            bgc: "background-color"
        }, abbrvalues = {}, defvalues = {}, blocktags = {
            "(": ")",
            "[": "]",
            "{": "}"
        }, isstr = function(a) {
            return "string" == typeof a
        }, isarr = function(a) {
            return Array.isArray(a)
        }
    var util = {
            parseProps: function(a, b, c) {
                var d = (c ? c.abbr : {}) || {};
                return a.split(/\s*;\s*/).map(function(a) {
                    return String(d[a] || abbr[a] || a).trim().split(/\s*[:=]\s*/)
                }).reduce(function(a, b) {
                    var c = d[b[0]] || abbr[b[0]] || abbrkeys[b[0]] || b[0],
                        e = 1 == b.length ? defvalues[c] || c : d[b[1]] || abbrvalues[b[1]] || b[1];
                    return $d.css.isStyle(c) ? (a.style || (a.style = {}), !isNaN(Number(e)) && 0 != c.indexOf("line") && /top|left|right|bottom|height|width/i.test(c) && (e += "px"), a.style[c] = e) : a[c] = e, a
                }, b || {})
            },
            untilblockEnd: function a(b, c, d) {
                var e, f = [],
                    g = blocktags[c];
                if (!g) return [];
                for (; b.length && (e = b.shift()) != g;) f.push(d || e != c ? e : a(b, c));
                return f
            },
            resolveExpr: function(x, op) {
                return /\W/.test(x) ? function(__c, expr) {
                    with(__c) return eval(expr)
                }(op, x) : x
            },
            resolveValue: function(a, b, c, d) {
                var e = c + 1;
                return a && "string" == typeof a && isNaN(a) ? /^[a-z][\w\-]+$/i.test(a) ? a : (a && "string" == typeof a && (a.indexOf("$") >= 0 || a.indexOf("`") >= 0) && (/\$[\w_]+\.n/.test(a) && (a = a.replace(/(\$[\w_]+)\.n/g, "$1." + c)), a = a.replace(/\$([a-z][\w\-\.]*)|`([^`]+)`/gi, function(a, f, g) {
                    var h = f || g;
                    if (/^\d?n\s*([\+\-]\s*\d)?$/.test(h)) return (1, eval)(h.replace(/(\d)n/g, "$1 * n").replace(/\bn\b/g, e + ""));
                    if (null != d.context) {
                        if ("it" == h && "object" != typeof d.context) return d.context;
                        if (null != d.context[h]) return d.context[h];
                        if (!/^[a-z][\w_\.]*$/i.test(h) && d.context) return util.resolveExpr(h, d.context || {})
                    }
                    return "n" == h ? c + 1 : b ? b(h, d.memo) : a
                })), d.abbr && (a = d.abbr[a] || a), a && "string" == typeof a && isNaN(a) ? abbr[a] || abbrvalues[a] || a : a) : a
            },
            parseattrib: function(a, b, c) {
                for (var d; a && a.length && markers.pr[d = a[0]];)
                    if (a.shift(), "." == d) b.klass.push(a.shift());
                    else if ("{" == d) b.txt = util.untilblockEnd(a, d, !0).join("");
                    else if ("[" == d) util.parseProps(util.untilblockEnd(a, d, !0).join(""), b.props, c);
                    else {
                        if ("#" != d) break;
                        b.props.id = a.shift()
                    }
                return b
            },
            checkrepeats: function(a, b, c) {
                if (b && "*" == b[0]) {
                    b.shift();
                    var d = b.shift();
                    a.repeats = isNaN(d) ? d : Number(d), util.parseattrib(b, a, c)
                }
            },
            renderProps: function(a, b, c, d, e) {
                var f = util.resolveValue;
                a.klass.length && a.klass[0] && a.klass.forEach(function(a) {
                    var c = a;
                    /^[\w\-]+$/.test(a) || (c = f(a, null, -1, d)), c && b.classList && b.classList.add(c)
                }), Object.keys(a.props).forEach(function(g) {
                    if (g) {
                        var h = g,
                            i = a.props[h];
                        if ("style" == h) {
                            var j = {};
                            [].concat(i).forEach(function(a) {
                                var b = "";
                                if ("string" == typeof a) b = a.split(/\s*;\s* /).forEach(function(a) {
                                    if (abbr[a]) return abbr[a];
                                    a.split(/\s*:\s* /).map(function(a) {
                                        return f(a, e, c, d)
                                    })
                                });
                                else if ("object" == typeof a) {
                                    var c = -1;
                                    b = $.each(a, function(a, b) {
                                        j[b] = f(a, e, ++c, d)
                                    })
                                }
                            }), $d.css(b, j)
                        } else if (b && b.dataset && /^(data)?\-/.test(h)) h = h.substr("-" == h[0] ? 1 : "data-".length), b.dataset[h.replace(/\-\w/g, function(a) {
                            return a.substr(1).toUpperCase()
                        })] = f(i, e, c, d);
                        else if (b && b.setAttribute) try {
                            b.setAttribute(h, f(i, e, c, d))
                        } catch (k) {
                            console.error(k,"error" )
                        }
                    }
                }), a.txt && (b.textContent = f(a.txt, e, c, d))
            },
            render: function b(a, c) {
                c = c || 0;
                var d, e = this.resolver,
                    f = this.optns;
                if (a.el || ("root" == a.tag || a.ignoretag ? (a.el = document.createDocumentFragment(), a.el.asroot = !0) : (a.el = document.createElement(a.tag || "div"), a.el.asroot = !0)), d = a.el, a.c.length && a.c.map(b, this).forEach(function(a) {
                        var b = a.el;
                        b && d.appendChild(b)
                    }), "root" != a.tag && (util.renderProps(a, a.el, c, f, e), a.repeats)) {
                    var g = 0,
                        h = document.createDocumentFragment();
                    if (a.repeats > 0)
                        for (; g < a.repeats;) {
                            var i = a.el.cloneNode(!0);
                            util.renderProps(a, i, g, f, e), h.appendChild(i), g++
                        } else if (this.optns.context) {
                        var j = this.optns.context[a.repeats] || this.optns.context;
                        Array.isArray(j) && j.forEach(function(b, c) {
                            var d = a.el.cloneNode(!0);
                            util.renderProps(a, d, c, {
                                context: b
                            }, e), h.appendChild(d), g++
                        })
                    }
                    a._fragment = h, a.el = h
                }
                return a
            },
            wrapApi: function(a, b) {
                var c = this,
                    d = null;
                return c.Root = a, c._optns = c.optns = b || {}, c.el || (c.el = document.createDocumentFragment()), Object.defineProperty(c, "fragment", {
                    get: function() {
                        return this._fragment || this.el || this.render(), this._fragment || this.el
                    },
                    set: function() {}
                }), c.getFragment = function() {
                    return this.fragment
                }, c.replace = function(a, b) {
                    if (a) {
                        this._fragment || this.render();
                        var c, d = a,
                            e = this.fragment;
                        if (e && d.nodeType) return d = d.el || d, d.parentNode && (c = d.parentNode.appendChild(e), d.parentNode.insertBefore(c, d), d.parentNode.removeChild(d)), $d(b ? c : d)
                    }
                }, c.appendTo = function(a, b) {
                    if (a) {
                        this._fragment || this.render();
                        var c, d = a,
                            e = this.fragment;
                        if (e && d.nodeType) return d = d.el || d, d.appendChild && (c = d.appendChild(e)), $d(b ? c : d)
                    }
                }, c.html = function() {
                    if (this._fragment || this.render(), !d) {
                        var a = this.appendTo(document.createElement("div"));
                        d = a.innerHTML
                    }
                    return d = d.replace(/`([^`]+)?`/g, "${$1}")
                }, c.renderList = function(a, b) {
                    this.render(b)
                }, c.render = function(a) {
                    a && (this.optns || (this.optns = {}), this.optns.context = a, this.resolver = util.makeResolver(this.optns)), d = this.el = this._fragment = null, util.render.call(this, this.Root, 0);
                    var b = this._fragment = this.Root.el;
                    return b && 11 == b.nodeType && (b.childElementCount && 1 != b.childElementCount || (b = b.firstElementChild || b.firstChild)), this.el = b, this
                }, c.__wrapped = !0, c
            },
            makeResolver: function(a) {
                return function(a) {
                    if ("function" == typeof a) return a;
                    if (a && "object" == typeof a) {
                        if ("function" == typeof a.resolver) return a.resolver;
                        Array.isArray(a) && (a = {
                            context: a
                        });
                        var b = a.context || a.scope;
                        if (b) {
                            var c = a;
                            return function(a, b) {
                                var d = c.context || c.scope;
                                if (null == a) return "";
                                if (!/^[a-z][\w\._]*$/i.test(String(f).trim())) return util.resolveExpr(a, d);
                                var e = String(a).split("."),
                                    f = e.shift(),
                                    g = "it" == f ? d : d[f],
                                    h = "function" == typeof g ? g(b) : g;
                                if (e.length) {
                                    var i = e.pop();
                                    e.length && (h = e.reduce(function(a, b) {
                                        return a[b] || {}
                                    }, h)), h = h[i]
                                }
                                return h
                            }
                        }
                    }
                    return function(a) {
                        return a
                    }
                }(a)
            }
        }, _idcntr = 0,
        _api = null,
        worker = null;
    return tmplm
}();

$.partialview = $.fragmentview = Klass("$.fragmentview", {
    dom: null,
    _domwrap: null,
    model: null,
    url: null,
    fragment: null,
    _compiled: null,
    scripts: null,
    styles: null,
    scopeid: null,
    init: function() {
        var a = arguments[0];
        this.url || "string" != typeof a || (this.url = a)
    },
    promisify: function(a) {
        return this._pr = a || Promise.deferred(), this.then = function(a, b) {
            "string" == typeof a && "function" == typeof this[a] && (a = this[a]);
            var c = this._pr ? this._pr.then(a.bind(this), b) : null;
            return delete this._pr, c
        }.bind(this), this
    },
    load: function() {
        return this._loadPr || (this._loadPr = Promise.deferred(), this.fragment ? this._loadPr.resolve(this.fragment) : this.loadFragment().then(function(a) {
            this.fragment = a, this._loadPr.resolve(this.fragment)
        }.bind(this), function(a) {
            this._loadPr.reject(a)
        }.bind(this))), this.promisify(this._loadPr)
    },
    digest: function(a) {
        return a && (this.model = a), a = this.model, a && this.dom && a.digest(this.dom), this
    },
    compile: function(a) {
        return a && (this.model = a), a = this.model, this._compiled || this.dom && (this._compiled = a.compile(this.dom)), this
    },
    setDom: function(a) {
        $d(a) && (this.dom = $d(a).addClass(this.scopeid))
    },

    replace: function(a) {
        return this.load().then(function(b) {
            var c, d = a.el || a;
            d.parentNode && (c = $d.append(d.parentNode, b), d.parentNode.insertBefore(c.el, d), d.parentNode.removeChild(d)), this.setDom(c), this.digest()
        }.bind(this))
    },
    appendTo: function(a) {
        return !this.dom || a && !this.dom.parent().is(a) ? this.load().then(function(b) {
            return this.setDom($d.append(a, b)), this.digest(), this.dom
        }.bind(this)) : this.promisify()
    },
    scopeStyle: function(a, b, c) {
        var d = a.cssText;
        if (c = c || new RegExp("^\\." + sc + "[\\s\\>\\.\\[:]"), 1 == a.type && d) {
            d = d.replace(/scope__ph/g, b);
            var e = d.indexOf("{"),
                f = d.substr(0, e).replace(/[\n\r]/g, " ").trim(),
                g = $d.css.applyVars(d.substr(e));
            f = f.split(/\s*,\s*/).map(function(a) {
                return a = a.trim().replace(/^&/g, b).trim(), (c.test(a + " ") ? "" : b + " ") + a
            }).join(", "), d = f + g
        }
        return d
    },
    processStyles: function(a) {
        var _chkCalcs= $d.css.checkCalcs;
        for (var b = this.scopeStyle.bind(this), c = 0, d = "STYLE" == a.tagName ? [a] : a.querySelectorAll("style"); c < d.length; c++) {
            var e = document.body.appendChild(d[c].parentNode ? d[c].parentNode.removeChild(d[c]) : d[c]);
            if (e) {
                var f;
                if (e.sheet && e.sheet.cssRules && -1 == String(e.className).indexOf("no-scope") && e.getAttribute("scoped")) {
                    var g = [],
                        h = e.getAttribute("scoped") || "",
                        i = h;
                    i && 0 != i.indexOf(".") && (i = "." + i);
                    for (var j = new RegExp("^\\." + h + "[\\s\\>\\.\\[:]"), k = 0, l = e.sheet.cssRules, m = l.length; m > k; k++) {
                        var n = l[k];
                        if (4 == n.type && n.cssRules && n.media) {
                            for (var o = [], p = 0, q = n.cssRules, r = q.length; r > p; p++) {
                                var s = q[p];
                                s && 1 == s.type && o.push(b(s, i, j))
                            }
                            o.map(_chkCalcs)
                            g.push("@media " + (n.media.mediaText || "") + " {" + o.join("\n") + "\n}")
                        } else {
                            var txt=""
                            if(1 == n.type){
                                txt=b(n, i, j)
                            } else {
                                txt=n.cssText
                            }
                            _chkCalcs(txt)
                            g.push(txt)
                        }
                    }
                    f = g.join("\n")
                }
                if (f) try {
                    var t = document.body.appendChild(document.createElement("style"));
                    t.textContent = f, e.parentNode.removeChild(e)
                } catch (u) {
                    console.error(u)
                }
            }
        }
    },
    processScripts: function(a) {
        for (var b = 0, c = a.querySelectorAll("script:not([src])"); b < c.length; b++)
            if (c[b]) {
                var d = c[b].textContent || c[b].innerText;
                if (d) try {
                    (1, eval)(d), c[b].parentNode.removeChild(c[b])
                } catch (e) {
                    console.error(e)
                }
            }
    },
    processContent: function(a, b) {
        if(!b){return}
        var c = [],
            d = null,
            e = this;
        if (b = b.replace(/Xcr ipt/g,"script").replace(/\@include\s*\(?(["'\w\.\-]+)\s*\)?/g, function(a, b) {
                var d = b.replace(/['"]/g, "").trim();
                return c.push(d), "<span class='load-place-holder' data-name='" + d + "'></span>"
            }).replace(/\{{\s*\>\s*([\w\.\-_]+)\s*}}/g, function(a, b) {
                var d = b.trim();
                return c.push(d), "<span class='load-place-holder' data-name='" + d + "'></span>"
            }), b.trim().indexOf("<style") >= 0) {
            var f = b.indexOf("<style"),
                g = b.indexOf("</style>", f);
            if (g > f) {
                var h = b.substr(f, g - f),
                    i = "scope__ph";
                h = h.replace(/\&/g, i)
                h = $d.css.applyVars(h)
                b = b.substr(0, f) + h + b.substr(g)
            }
        }
        var j = document.createElement("div")
        j.innerHTML=b;
        $d.clearWhiteSpace(j, !0);
        var k = c.map(function(a) {
            var b, c = a.split(".");
            1 == c.length && c.push("html");
            var d = c.pop();
            "js" != d && "html" != d && "htm" != d && "partial" != d && "template" != d && "css" != d && "json" != d ? (c.push(d), c.push("html")) : c.push(d), d = c.pop(), a = c.join("."), b = a.split("/");
            var e, f = j.querySelector('.load-place-holder[data-name="' + a + '"]');
            if ("html" == d) {
                1 == b.length && b.unshift("app", "data");
                var g = Promise.deferred(),
                    h = b.join("/") + "." + d,
                    i = $.partialview(h);
                return i.replace(f).then(function() {
                    g.resolve()
                }), g
            }
            if ("css" == d) {
                1 == b.length && b.unshift("app", "theme");
                var h = b.join("/") + "." + d;
                return e = ResURL.from(h), e.insert({
                    type: d,
                    replace: f
                })
            }
            if ("js" == d) {
                if (1 == b.length || 0 == a.indexOf("app") ? b.unshift("modules") : 2 == b.length && b.unshift("app", "js"), b.indexOf("module") > 0) {
                    {
                        var g = Promise.deferred(),
                            k = this;
                        ZModule.get("app." + a, null, {
                            asexports: !0,
                            url: b.join("/") + "." + d,
                            callback: function() {
                                k[a] ? ($d.remove(f), g.resolve(k[a])) : g.reject(a + " not found  " + location.href + "  " + location.hostname + "  " + (document.querySelector("script[src]") || {}).src)
                            }
                        })
                    }
                    return g
                }
                var h = b.join("/") + "." + d;
                return e = ResURL.from(h), e.insert({
                    type: d,
                    replace: f
                })
            }
        }).filter(function(a) {
            return a
        });
        d = k.length ? Promise.all(k) : Promise.resolve(" ")
        d.then(function() {
            e.processStyles(j), e.processScripts(j);
            for (var b = document.createDocumentFragment(); j.firstChild;) b.appendChild(j.removeChild(j.firstChild));
            a.resolve(b)
        })
    },
    loadFragment: function() {
        var a = Promise.deferred(),
            b = this.url;
        return this.scopeid || (this.scopeid = this.model ? this.model.scopeid : ""), this.scopeid || (this.scopeid = "scoped_" + $.UUID(this.model)), b && 0 == b.indexOf("<") ? this.processContent(a, b) :
            app.getResource(b, this.processContent.bind(this, a)), a
    }
});
$.partialview.scopeStyle=function(rule,scklass,re){
    var text=rule.cssText
    re=re||new RegExp("^\\."+sc+"[\\s\\>\\.\\[:]")
    if (rule.type == 1 && text) {
        text=text.replace(/scope__ph/g,scklass)
        var idx=text.indexOf("{")
        var sstext = text.substr(0,idx).replace(/[\n\r]/g, " ").trim(),styles=$d.css.applyVars(text.substr(idx))

        sstext = sstext.split(/\s*,\s*/).map(function (a) {
            a=a.trim().replace(/^&/g, scklass).trim()
            return (re.test(a +" ")?"": (scklass + " ")) + a
        }).join(", ");
        text=sstext+styles
    }
    return text;
}
$.partialview.processScopedStyles=function(container){
    var scopeStyle=$.partialview.scopeStyle ;
    for(var i= 0,l=container.tagName=="STYLE"?[container]:container.querySelectorAll("style");i< l.length;i++){
        var  el=document.body.appendChild(l[i].parentNode?l[i].parentNode.removeChild(l[i]):l[i])
        if(el){
            var scr
            if( el.sheet && el.sheet.cssRules && String(el.className).indexOf("no-scope")==-1&&el.getAttribute("scoped")) {

                var arr=[],sc = el.getAttribute("scoped")||"",scklass=sc;
                if(scklass && scklass.indexOf(".")!=0){scklass="."+scklass}
                var re=new RegExp("^\\."+sc+"[\\s\\>\\.\\[:]");
                for(var j= 0,rules=el.sheet.cssRules,ln= rules.length;j<ln;j++){
                    var rule=rules[j]
                    if(rule.type==4&&rule.cssRules&&rule.media){
                        var arr1=[]
                        for(var ii= 0,rules2=rule.cssRules,ln2= rules2.length;ii<ln2;ii++){
                            var rule2=rules2[ii]
                            if(rule2 && rule2.type==1){
                                arr1.push(scopeStyle(rule2,scklass,re))
                            }
                        }
                        arr.push("@media "+(rule.media.mediaText||"")+" {"+ arr1.join("\n")+"\n}")
                    } else if(rule.type==1){
                        arr.push(scopeStyle(rule,scklass,re))
                    } else{
                        arr.push(rule.cssText)
                    }
                }
                scr=arr.join("\n")
            }
            if(scr){
                try {
                    var style=document.body.appendChild(document.createElement("style"))
                    style.textContent=scr;
                    el.parentNode.removeChild(el)
                } catch(e){
                    console.error(e)
                }
            }
        }
    }

}

$.DataCollection = Klass("$.DtaaCollection", {
    dom: null,
    items:null,
    itemodel: null,
    itemtemplate: null,
    parsed: null,
    container: null,
    init: function() {
        this.items=List.create(this.list||[])
        this.template && (this.parsed = $.template(this.template))
    },
    render: function() {
        var a;
        return this.parsed && (a = this.parsed(this.model)), this.fragment ? this.fragment.html(a) : this.fragment = $d.createFragment(a), this
    },
    insertAt: function(a) {
        a = a || this.selector;
        this.render();
        return this.selector = a, this.dom && this.dom.remove(), a && this.container.q(a) ? (this.container.q(a).html(""), this.dom = this.fragment.appendTo(this.container.q(a))) : this.dom = this.fragment.appendTo(this.container), this
    },
    appendTo: function() {
        return this.insertAt("append")
    },
    replaceWith: function(a) {
        return this.insertAt(a)
    }
});
$.DataView = Klass("$.DataView", {
    dom: null,
    model: null,
    template: null,
    parsed: null,
    container: null,
    init: function() {
        if (this.model) {
            var a = this;
            this.model.on(function() {
                a.render()
            })
        }
        this.template && (this.parsed = $.template(this.template))
    },
    render: function() {
        var a;
        return this.parsed && (a = this.parsed(this.model)), this.fragment ? this.fragment.html(a) : this.fragment = $d.createFragment(a), this
    },
    insertAt: function(a) {
        a = a || this.selector;
        this.render();
        return this.selector = a, this.dom && this.dom.remove(), a && this.container.q(a) ? (this.container.q(a).html(""), this.dom = this.fragment.appendTo(this.container.q(a))) : this.dom = this.fragment.appendTo(this.container), this
    },
    appendTo: function() {
        return this.insertAt("append")
    },
    replaceWith: function(a) {
        return this.insertAt(a)
    }
});
$.dataview = Klass("$.dataview", {
    dom: null,
    _domwrap: null,
     model: null,
    _selectors: {},
    config: {},
    elementTemplate: null,
    elements: null,
    url: null,
    template: null,
    templatefn: null,
    init: function() {
         var a;
        a = arguments[0] && "object" != typeof arguments[0] ? arguments[0] : this.template, !this.url && "string" == typeof a && 0 != a.indexOf("<") && a.indexOf("/") > 0 && -1 == a.indexOf("$") ? this.url = a : a && this.parse(a), this.elements = List.create(), this.config.watchElements && (List.plugin.emitter(this.elements), this.elements.on("change", function() {
            this.renderElements()
        }.bind(this)))
    },
    renderElement: function() {},
    addElements: function(a) {
        for (var b = 0, c = [].concat(a || []); b < c.length; b++) null == c[b] || this.elements.indexOf(c[b]) >= 0 || this.elements.add(c[b]);
        return this
    },
    addElement: function(a) {
        return this.addElements([a])
    },
    parse: function(a) {
        var b = this;
        return b.tmplt = "", "function" == typeof a ? (b.templatefn = a, a) : null == a ? "function" == typeof b.templatefn ? b.templatefn : null : (b.tmplt = a && "object" == typeof a && a.nodeType ? $d.html(a, !0) : String(a), b.tmplt = b.tmplt.trim().replace(/^['"]|['"]$/g, "").trim(), b.templatefn = $d.template(b.tmplt), "function" != typeof b.templatefn && "string" == typeof a && (b.templatefn = function() {
            return a
        }), b.templatefn && b.templatefn.vars && $.each(b.templatefn.vars, function(a) {
         }), b._parsed = "function" == typeof b.templatefn, this)
    },
    clear: function() {
        return this.dom && $d.clear(this.dom), this
    },
    updateScope: function() {
     },
    appendTo: function(a, b, c) {
        null != b && "object" != typeof b && (c = !! b, b = null), c === !0 && $d(a).clear();
        var d = $d(a).append(this.getElement(b));
        return  this.dom = $d(d)
    },
    clone: function() {
        var a = $.dataview(this.templatefn);
        $.each(this._selectors, function(b, c) {
            a.addSelector(c, b)
        });
        return a
    },
    html: function(a) {
        (a || !this._domwrap) && this.render(a)
        return $d.html(this._domwrap)
    },
    getFragment: function(a) {
        return this.render(a, !0)
    },
    getElement: function(a) {
        return (!this.dom || a) && this.render(a), this.dom
    },
    addSelector: function(a, b) {
        return 1 == arguments.length && a && "object" == typeof a ? $.each(function(a, b) {
            this.addSelector(b, a)
        }, this) : "string" == typeof a && ("string" == typeof b ? this._selectors[a] = Function("var d=this.dom||this._domwrap;return  d?$d.q(d,'" + b + "'):null") : "function" == typeof b && (this._selectors[a] = b),
            this.properties.addProperty(a, {descriptor:true,
            get: this._selectors[a],
            set: function() {}
        })), this
    },
    on: function() {},
    renderElements: function(a) {
        if (this.elementTemplate && this.elements && this.elements.length) {
            "string" == typeof this.elementTemplate && (this.elementTemplate = $.dataview(this.elementTemplate));
            var b = this.elementswrap || a || this.dom;
            $d(b).clear(), this.elements.each(function(a) {
                if (a) {
                    var c = this.elementTemplate.appendTo(b, a);
                    a.__elem = c, c && ($d.addClass(c, "-dataview-element-"), $d.data(c, "_listelemid", $.UUID(a)))
                }
            }, this);
            var c = this;
            $d.on(b, "click.pointerclick", function(a, d) {
                if (d) {
                    $d(b).st(".active").removeClass("active"), $d.addClass(d, "active"); {
                        c.elements.select(d.data("_listelemid"))
                    }
                }
            }, ".-dataview-element-"), List.plugin.selectionModel(this.elements)
        }
        return this
    },
    rerender: function(model, domcontainer) {
        var f = this.templatefn(model);
        if(domcontainer){
            $d.html(domcontainer,f||"");
            this.dom=domcontainer
        }
        return this
    },
    render: function(a, b, c) {
        var d, e = $d(b);
        if (a ){this._domwrap = null}
        if (!this._domwrap) {
            var f = this.templatefn(a);
            this._domwrap = document.createElement("div")
            this._domwrap.innerHTML = f.trim()
         }
        if (b === !0 ? e = document.createDocumentFragment() : e && c && e.clear(), e) {
            for (d = this._domwrap.cloneNode(!0); d.firstChild;) e.appendChild(d.removeChild(d.firstChild));
            return this.dom = $d(d), e && 1 == e.nodeType && this.model && this.model.scan(e), this.renderElements(e), e
        }
        var g = (this._domwrap.firstChild === this._domwrap.lastChild ? this._domwrap.firstChild : this._domwrap).cloneNode(!0);
        this.dom = g
        this.model && this.model.scan(g)
        this.renderElements(g)
        return  g
    }
});

$d.clearSelections = function() {
    var a = window.getSelection();
    if (!a.isCollapsed) {
        var b = a.getRangeAt(0);
        a.removeAllRanges(), document.designMode = "on", a.addRange(b), a.removeAllRanges(), document.designMode = "off"
    }
};
$d.builder = function() {
    function a(a, b, c, d, e) {
        return "string" == typeof c && "class" != e && (String(c).indexOf("$") >= 0 || String(c).indexOf("@") >= 0) && (c = $.parseExpr(c, {
            context: b
        })(a || b)), ("number" == typeof c || "string" == typeof c && !isNaN(Number(c))) && /top|left|height|width|top|bottom/i.test(d) && -1 == d.indexOf("line") && (c += "px"), c
    }

    function b(b, c, d) {
        if ("string" == typeof d[d.length - 1]) {
            var f = d.pop();
            c[/INPUT|SELECT|TEXTAREA/i.test(c.tagName) ? "value" : "innerHTML"] = a(b, c, f, "text", "value")
        }
        for (; d.length;) {
            var g = d.shift(),
                h = typeof g;
            "string" == h ? c.setAttribute("id", g) : g && "object" == h && Object.keys(g).forEach(function(d) {
                d in e.style ? c.style[d] = a(b, c, g[d], d, "css") : "klass" == d ? String(g[d]).split(/\s*,\s*/).forEach(function(a) {
                    c.classList.add(a.trim())
                }) : 0 == d.indexOf("-") || 0 == d.indexOf("data-") ? c.dataset[d.replace(/^data/, "").replace(/^\-/, "")] = g[d] : d && "string" == typeof d && c.setAttribute(d, a(b, c, g[d], d, "attr"))
            })
        }
    }

    function c() {
        e || (e = document.createElement("div"));
        var a, c = document.createElement("root"),
            f = c,
            g = null,
            h = function(c) {
                if (g) {
                    var d = $.makeArray(arguments),
                        e = g.slice();
                    return g = null, e.forEach(function(a) {
                        var b = d.slice();
                        b.push(a), h.apply(this, b)
                    }, this), this
                }
                var i = $.makeArray(arguments, 1),
                    j = this.el = f.appendChild(document.createElement(c));
                return b.call(this, a, j, i), this
            };
        return this.root = c, this.data = function() {
            return g = $.makeArray(arguments), this
        }, this.add = function() {
            if (f = this.el, arguments.length) {
                var a = $.makeArray(arguments),
                    b = a[0];
                b && "string" == typeof b && -1 != d.indexOf(b.toUpperCase()) || (b = "UL" == f.tagName || "OL" == f.tagName ? "LI" : "TR" == f.tagName ? "TD" : "TBODY" == f.tagName ? "TR" : "COLSET" == f.tagName ? "COL" : "SPAN", a.unshift(b)), h.apply(this, a)
            }
            return this
        }, d.forEach(function(a) {
            this[a] = h.bind(this, a)
        }, this), this
    }
    var d = "A ABBR ACRONYM ADDRESS BDO BLOCKQUOTE BR BUTTON CAPTION CITE CODE COL COLGROUP DD DEL DFN DIV DL DT EM FIELDSET FORM H1 H2 H3 H4 H5 H6 HR IMG INPUT INS KBD LABEL LEGEND LI LINK OBJECT OL OPTGROUP OPTION P PARAM PRE SAMP SCRIPT SELECT SPAN STRONG STYLE TABLE TBODY TD TEXTAREA TFOOT TH THEAD TR UL".split(/\s+/),
        e = null;
    return c
}() ;

;(function(scope){
    var transitionprop=null
    var callbacks=null,objTemplate;
    function getflowcb(fn,type){
        if(!(type=="over"||type=="under")){type=null}
        var  flow = type == 'over';

        return function(e){
            if (!type || type=="all" || (e.type == (type + 'flow') ||
                ((e.orient == 0 && e.horizontalOverflow == flow) ||
                (e.orient == 1 && e.verticalOverflow == flow) ||
                (e.orient == 2 && e.horizontalOverflow == flow && e.verticalOverflow == flow))
                )) {
                e.flow = type;
                return fn.call(this, e);
            }
        }
    }

    function addInnerObject(element, callback){
        var elem=element.el||element
        var currlistener=elem.querySelector(".resize-listener-object")
        if(currlistener && currlistener.parentNode==elem){elem.removeChild(currlistener)}
         var listener=document.createElement("object")
        listener.style.cssText="position:absolute;top:0;left:0;height:1%;width:1%;display: block;z-index:-1;background:transparent;overflow: hidden;pointer-events: none;";

        listener.type = 'text/html';
        listener.data = 'about:blank';
        listener.className="resize-listener-object"
       // var listener=objTemplate.cloneNode(true),
        var timer= 0,_saved=[0,0],_pending=0
        listener.__resizeElement__=$d(element).id
        listener.onload=function (){
            this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;
            this.contentDocument.defaultView.addEventListener('resize', function(){
                     callback(this.__resizeTrigger__)
             });
        }
        elem.appendChild(listener)

    }
    function addFlowListener2(element, type , fn){
        if(typeof(type)=="function"){fn=type;type=null}
        if(!type && !('OverflowEvent' in window)){
            addFlowListener2(element, "under", fn)
            addFlowListener2(element, "over", fn)
            return
        }
        var   callback,el=$d(element);
        type=type||"all"
        var ev='OverflowEvent' in window ? 'overflowchanged' : type + 'flow'
        if(fn==null){
            callback=el.data("flowListener"+ev)
            if(callback){el.el.removeEventListener(ev, callback);}
            return;
        }
        callback=getflowcb(fn,ev)
        el.data("flowListener"+type,callback)
        el.el.addEventListener(ev, callback, false);

    };
    function addTransitionListener(el,callback){
        if(!transitionprop){
            transitionprop="transition"
            var bdyprop=$d.css.getComputed(document.body)||{},csseprfx=$.browser.css3pr||""
            if(bdyprop[transitionprop]==null&&bdyprop[csseprfx+transitionprop]!=null){
                transitionprop=csseprfx+transitionprop
            }
            $d.__transitionprop=transitionprop
        };
        $d.onTransiotionEnd(  el,function(ev){
            if(ev.target&&ev.target.style){ev.target.style.removeProperty(transitionprop)}
            if(callback(this)===false){return}

            setTimeout(function(){addTransitionListener(el,callback)},200);
        } ,true);
        $d.css(el,transitionprop,"all  .01s")
    }

    function _getTarget(elem){
        return (elem===document || elem ===document.body ||(elem.parentNode===document.body&&elem.style.position!="absolute"&&elem.style.position!="fixed") )?window:elem;
    }

    var winresizefn=null;
    function windowResizeListener( el,onlyresize){

        if(!winresizefn){
            winresizefn=[]
            winresizefn.remove=function(id){
                if(!id){return}
                var idx=winresizefn.indexOf(id.id||id)
                idx>=0 && winresizefn.splice(idx,1);
            }
            $.viewport.on(
                function(data){
                    var rem=[]
                    for(var i= 0,ln=winresizefn.length;i<ln;i++){
                        var target=winresizefn[i] ;
                        if(callbacks.dispatch({type:"resize",target:target})===false){
                            rem.push(winresizefn[i])
                        }
                    }
                    while(rem.length){
                        winresizefn.remove(rem.shift())
                    }
                })
        }
        winresizefn.push( el )
    }

    function addBoundsListener(element, fn,optns){
        optns=optns||{}
        var minoffset=optns.minoffset;
        if(!(typeof (minoffset)=="number" && minoffset>=1)){
            minoffset=2
        }
        if(!callbacks){
            callbacks= $.callbacks(null,null,{defaultFilter:function( ctx  ,fnargs,o){
                var ev=fnargs[0];
                if(ev && ev.target===window){return true}
                if(o && ctx && ev && ev.target && ev.target.id===ctx.id){

                    var targetel=ev.target
                    if(!$d.data(targetel,"_boundslistener")){return false}
                    var b=targetel.getBoundingClientRect();
                    o.cached||(o.cached=[]);
                    if(Math.abs(o.cached[0]-b.width)<=minoffset && Math.abs(o.cached[1]-b.height)<=minoffset){
                        if(o.onlyresize===true){
                            return
                        }
                        if(Math.abs(o.cached[2]-b.left)<=minoffset && Math.abs(o.cached[3]-b.top)<=minoffset){
                            return
                        }
                    }

                    o.cached[0]=ev.width=b.width;
                    o.cached[1]=ev.height=b.height;
                    o.cached[2]=ev.left=b.left;
                    o.cached[3]=ev.top=b.top;
                    return true
                }
                return
            }});
        }
        if(element===window || element===document){
            windowResizeListener(window)
            callbacks.add(fn,{ctx :window,onlyresize:true})
            return
        }
        var  el=$d(element)
        if(!el){
            $d.onAttach(element,function(el){
                addBoundsListener(el,this.fn,this.optns);
                setTimeout(function(){
                    if(!el.offsetHeight){
                        return;
                    }
                    callbacks.dispatch({type:"resize",target:el})
                },10);
            }.bind({fn:fn,optns:optns}));
            return;
        }
        var ellisteners=el.data("_boundslistener");
        if(!ellisteners){el.data("_boundslistener",ellisteners=[])}
        ellisteners.push(fn)
        callbacks.add(fn,{ctx :el,onlyresize:!!optns.onlyresize });

        if(el.el.tagName=="IFRAME"||el.el.onresize){
            el.el.onresize= function(){_
                if(callbacks.dispatch({type:"resize",target:this})===false){
                    this.onresize=null;
                }
            }
            return
        }
        windowResizeListener(el);
        if(optns && optns.noInnerObject!==true){
            addInnerObject(el,function(target){
                if(typeof(target)=="string"){target=document.getElementById(target)}
                if(target && callbacks.dispatch({type:"resize",target:target})===false){
                    var listener=target.querySelector(".resize-listener-object")
                    if(listener && $d(listener) && $d(listener).parent() && $d(listener).parent().is(target)){$d(listener).remove()}
                }
            });
        }else {

            addTransitionListener(el, function (target) {
                if (typeof(target) == "string") {
                    target = document.getElementById(target)
                }
                if (callbacks.dispatch({type: "resize", target: target}) === false) {
                    return false
                }
            });

            /*  addFlowListener2(el,null,function(){
             var target=this;
             if(callbacks.dispatch({type:"resize",target:target})===false){
             addFlowListener2(target);
             return false
             }
             });*/

            if (optns && optns.timer) {
                setTimeout(function _to(el) {
                    var target = el;
                    if (callbacks.dispatch({type: "resize", target: target}) === false) {
                        return
                    }
                    setTimeout(_to, 5000, el)
                }, 2000, el)
            }
        }
        addFlowListener2(el,null,function(){
            var target=this;
            if(callbacks.dispatch({type:"resize",target:target})===false){
                addFlowListener2(target);
                return false
            }
        });
    }
    function removeBoundsListener(element, fn){
        $d.data(element,"_boundslistener",null)
    };
    scope.addBoundsListener=addBoundsListener//(myElement, myResizeFn);
    scope.removeBoundsListener=removeBoundsListener//(myElement, myResizeFn);

})($d);
(function(scope,window,document) {

    var prefix = "", _addEventListener, onwheel, support;

    // detect event model
    if ( window.addEventListener ) {
        _addEventListener = "addEventListener";
    } else {
        _addEventListener = "attachEvent";
        prefix = "on";
    }

    // detect available wheel event
    support = "onwheel" in document.createElement("div") ? "wheel" : // Modern browsers support "wheel"
        document.onmousewheel !== undefined ? "mousewheel" : // Webkit and IE support at least "mousewheel"
            "DOMMouseScroll"; // let's assume that remaining browsers are older Firefox

    scope.addWheelListener = function( elem, callback, useCapture ) {
        if(callback==null){
            var listene=$d.data(elem,"_wheellistener");
            if(listene){
                $d(elem).el.removeEventListener(prefix + eventName,listene);
                $d.data(elem,"_wheellistener",null);
            }
        }
        _addWheelListener( elem, support, callback, useCapture );

        // handle MozMousePixelScroll in older Firefox
        if( support == "DOMMouseScroll" ) {
            _addWheelListener( elem, "MozMousePixelScroll", callback, useCapture );
        }
        $d.data(elem,"_wheellistener",callback);
    };

    function _addWheelListener( elem, eventName, callback, useCapture ) {
        if(!elem[ _addEventListener ]){return}

        elem[ _addEventListener ]( prefix + eventName, support == "wheel" ? callback : function( originalEvent ) {
            !originalEvent && ( originalEvent = window.event );
            // create a normalized event object
            var event = {
                // keep a ref to the original event object
                originalEvent: originalEvent,
                target: originalEvent.target || originalEvent.srcElement,
                type: "wheel",
                deltaMode: originalEvent.type == "MozMousePixelScroll" ? 0 : 1,
                deltaX: 0,
                deltaZ: 0,
                preventDefault: function() {
                    originalEvent.preventDefault ?
                        originalEvent.preventDefault() :
                        originalEvent.returnValue = false;
                }
            };

            // calculate deltaY (and deltaX) according to the event
            if ( support == "mousewheel" ) {
                event.deltaY = - 1/40 * originalEvent.wheelDelta;
                // Webkit also support wheelDeltaX
                originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );
            } else {
                event.deltaY = originalEvent.detail;
            }
            return callback.call( scope(elem),event );

        }, useCapture || false );
    }

})($d,window,document); //$d.addWheelListener

$d.addResizeListener=function(el,fn){ $d.addBoundsListener(el,fn,{onlyresize:true})}//(myElement, myResizeFn);
$d.removeResizeListener=function(el,fn){ $d.removeBoundsListener(el,fn )};


(function(a) {
        function b() {
            this.fake = !0, this.boundary = "--------FormData" + Math.random(), this._fields = []
        }
        a.FormData || (b.prototype.append = function(a, b) {
            this._fields.push([a, b])
        }, b.prototype.toString = function() {
            var a = this.boundary,
                b = "";
            return this._fields.forEach(function(c) {
                if (b += "--" + a + "\r\n", c[1].name) {
                    var d = c[1];
                    b += 'Content-Disposition: form-data; name="' + c[0] + '"; filename="' + d.name + '"\r\n', b += "Content-Type: " + d.type + "\r\n\r\n", b += d.getAsBinary() + "\r\n"
                } else b += 'Content-Disposition: form-data; name="' + c[0] + '";\r\n\r\n', b += c[1] + "\r\n"
            }), b += "--" + a + "--"
        }, a.FormData = b)
})(self);

document.registerElement("time-input", {
    prototype: Object.create(HTMLElement.prototype, {
        date: {
            set: function(a) {
                if ("Invalid Date" == a && (a = null), !(this.__date == a || this.__date && a && +this.__date == +a)) {
                    this.__date = a;
                    var b = document.createEvent("Event");
                    b.initEvent("change", !0, !0), this.dispatchEvent(b), "function" == typeof this.onchange && this.onchange(b)
                }
            },
            get: function() {
                return this.__date
            }
        },
        onchange: {
            value: null,
            writable: !0
        },
        value: {
            set: function(a) {
                var b, c = $.date.asTime(a);
                if (!c || "Invalid Date" == c) return this.elhr = this.elmin = this.elap = "", void(this.date = null);
                b = c.getHours();
                var d = c.getMinutes(),
                    e = 15 - (d + 15) % 15;
                45 >= d && e && 15 != e && (d += e), d > 45 && (b++, d = 0), this.elhr.value = 12 == b ? "12" : String(b % 12), this.elmin.value = d, this.elap.value = b >= 12 ? "pm" : "am", this.date = c
            },
            get: function() {
                return this.date
            }
        },
        createdCallback: {
            value: function() {
                this.classList.add("time-input"), this.innerHTML = '<select class="hr" ><option value="1" >01:</option><option value="2" >02:</option><option value="3" >03:</option><option value="4" >04:</option><option value="5" >05:</option><option value="6" >06:</option><option value="7" >07:</option><option value="8" >08:</option><option value="9" >09:</option><option value="10" >10:</option><option value="11" >11:</option><option value="12" >12:</option></select><select class="mins" ><option value="0" >00</option><option value="15" >15</option><option value="30" >30</option><option value="45" >45</option></select><select class="ap" ><option value="pm" >PM</option><option value="am" >AM</option></select>', this.elhr = this.firstElementChild, this.elmin = this.elhr.nextElementSibling, this.elap = this.elmin.nextElementSibling, this.elhr.onchange = this.elmin.onchange = this.elap.onchange = function(a) {
                    var b = a.target.parentNode,
                        c = b.date;
                    "Invalid Date" == c && (c = null);
                    var d = c ? new Date(+c) : new Date;
                    d.setHours(Number(b.elhr.value || 0) + ("am" == b.elap.value ? 0 : 12)), d.setMinutes(Number(b.elmin.value)), d.setSeconds(0), d.setMilliseconds(0), b.date = d
                }
            }
        },
        detachedCallback: {
            value: function() {}
        },
        attributeChangedCallback: {
            value: function() {}
        }
    })
});
document.registerElement(
    'combo-box', {
        prototype: Object.create(
            HTMLElement.prototype,

            {
                value: {
                    get: function() {
                        return this.ip && this.ip.value
                    },
                    set: function(v) {
                        return this.ip && (this.ip.value = v);
                    }
                },
                onchange: {
                    get: function() {
                        return this.ip && this.ip.onchange
                    },
                    set: function(v) {
                        return this.ip && (this.ip.onchange = v);
                    }
                },
                config: {
                    value: null,
                    writable: true,
                    enumerable: true,
                    configurable: true
                },
                positionList: {
                    value: function() {
                        if(!$d.isVisible(this,true) && !$d.isVisible(this.firstElementChild,true)){
                            this.hideList();
                            return
                        }

                        var listel = this.config.lookupview
                        if (!listel ||  !listel.scrollHeight ) {
                            return
                        }
                        var b = this.ip.getBoundingClientRect()
                        listel.style.top = b.bottom + "px";
                        listel.style.left = b.left + "px";
                        listel.style.width = b.width + "px";
                        setTimeout(function() {
                            var listel = this.config.lookupview
                            if (!listel || !listel.scrollHeight) {
                                return
                            }
                            var b = listel.getBoundingClientRect(),winDims=$.viewport||{height:window.innerHeight,width:window.innerWidth}
                            var ht = Math.max(30,  b.height, listel.scrollHeight, listel.offsetHeight )
                            if (ht > 10) {
                                listel.style.height = ht + "px";
                            }
                            ht= listel.offsetHeight;
                            var diff = winDims.height - (10 + ht + b.top)
                            if (diff < 0) {
                                listel.style.height =(ht+diff)+"px"
                                listel.style.overflowY ="auto";
                                    //listel.style.top = (b.top + diff) + "px";
                            } else{
                                listel.style.overflowY ="visible";
                                listel.style.height ="auto"
                            }
                            diff = winDims.width - (10 + b.width + b.left)
                            if (diff < 0) {
                                listel.style.left = (b.left + diff) + "px";
                            }
                        }.bind(this))
                    }
                },
                populateList: {
                    value: function(recs){
                        var lookupview = this.config.lookupview
                        if (typeof(lookupview) == "function") {
                            lookupview = lookupview(recs);
                        }
                        if (lookupview && lookupview.show) {
                            if (recs && recs.length) {
                                lookupview.show(recs)
                            } else {
                                lookupview.hide()
                            }
                        }
                    }
                },
                hideList:{
                    value: function() {
                        this.config.currentValue="";
                        if(this.config.lookupview){
                            this.config.lookupview.hide()
                        }
                }},
                setTrigger:{
                    value: function(dom) {
                        this.config.trigger=dom
                        if(dom){
                            $d.on(dom,"click.combotrigger",function(){
                                this.resetList( );
                            }.bind(this))
                        }

                    }},
                displayList:{
                    value: function() {
                    if(this.config.lookupview){
                        var listel=this.config.lookupview
                        listel.style.display = "block";
                        listel.style.opacity = "1";
                        listel.style.overflowY = "auto";
                        this.positionList();
                    }
                }},
                resetList: {
                    value: function() {
                        var config = this.config || (this.config = {});
                        var recs, val =  arguments[0] ,
                            ip = this.ip,ev,
                            currval = config.currentValue
                        if (!arguments.length || typeof(arguments[0]) != "string") {
                            if(arguments[0] && arguments[0].type && arguments[0].target){
                                ev= arguments[0]
                            }

                            if (ev && ev.keyCode === 27) {
                                val = null;
                                ip.value = ""
                            } else if (val !== null) {
                                val = ip ? ip.value : null
                            }
                        }
                        if(ev && String(ev.type).indexOf("key")==0 && ev.keyCode== 13){
                            currval="";
                        }
                        if (val!=null && currval != val) {

                            config.currentValue = String(val)
                            if (val != null && (this.config.min && String(val).length <= this.config.min)) {
                                return
                            }
                            if (this.config.callback) {
                                recs = this.config.callback(val, this,ev)
                            }
                        } else {
                            if (!val) {
                                this.hideList();
                            }
                            return
                        }
                        var cnfg = config,
                            thisel = this
                        var lookupview = config.lookupview
                        if (!lookupview) {
                            var el = document.body.appendChild(document.createElement("div"));
                            el.classList.add("fxtx_height")
                             el.style.cssText = "z-index:20;position:fixed;width:" + ip.offsetWidth + "px;overflow:hidden;overflow-y:auto;max-height:200px;border:1px solid #888;box-shadow:2px 2px 4px #ccc;background-color:white;"
                             el.show = function(recs) {
                                if(config.docClickListener){
                                    document.removeEventListener("click",config.docClickListener)
                                    document.removeEventListener("keyup",config.docClickListener)
                                }
                                 thisel.__records=[];
                                var datarecs = recs || []
                                var b = ip.getBoundingClientRect()
                                var html = ["<ul style='display:block;list-style:none;padding:0;margin:0'>"]
                                for (var i = 0, l = datarecs, ln = l.length; i < ln; i++) {
                                    var id, label
                                    if (typeof(l[i]) == "string" || typeof(l[i]) == "number") {
                                        label = id = l[i]
                                    } else {
                                        id = String(l[i].id == null ? "" : l[i].id) || String(l[i].key == null ? "" : l[i].key) || l[i].value || "";
                                        label = l[i].label || id || "";
                                    }
                                    html.push('<li style="display:block;" class="list-item" data-index="' + i + '" data-key="' + id + '">' + label + "</li>")
                                }
                                 thisel.__records = datarecs.slice();
                                html.push("</ul>")
                                this.innerHTML = html.join("");
                                 thisel.displayList()
                                setTimeout(function(){
                                    document.addEventListener("click",config.docClickListener)
                                    document.addEventListener("keyup",config.docClickListener)
                                },10)


                            }
                            config.docClickListener = config.docClickListener||function docClickListener(ev) {
                                var dohide = true,
                                    doclear;

                                if (ev && ev.type == "keyup") {
                                    if (ev.keyCode == 27||ev.keyCode == 13) {
                                        if (ev.keyCode == 27) {
                                            doclear = true;
                                            ev.stopPropagation()
                                            ev.stopImmediatePropagation()
                                        } else {
                                             return
                                        }
                                    }
                                } else if (ev && ev.target && ($d.up(ev.target,".list-item")||$d.is(ev.target,ip))) {
                                    return
                                }
                                 thisel.hideList()


                            }
                            el.hide = function(ev) {
                                this.style.height = "1px";
                                this.style.width = "1px";
                                 this.style.opacity = ".01";
                                this.style.overflowY = "hidden";

                                document.removeEventListener("click", config.docClickListener)
                                document.removeEventListener("keyup", config.docClickListener)
                                //config.docClickListener(ev);
                            }


                            el.addEventListener("click", function(ev) {
                                var target=$d.up(ev.target,".list-item")
                                if (!target) {
                                    return
                                }
                                ev.stopImmediatePropagation()
                                var key, index = null
                                key = target.getAttribute("data-key")
                                index = Number(target.getAttribute("data-index"))

                                var records=thisel.__records,hideit=true
                                if (records && key && index != null && !isNaN(index) && index >= 0) {
                                    var rec = records[index]
                                    if (config.onselect) {
                                        if(config.onselect.call(ip, rec, records)===false){
                                            hideit=false
                                        };
                                    }

                                }
                                if(!hideit){return}
                                setTimeout(function() {
                                    thisel.hideList();
                                }.bind(this), 100);
                            });
                            window.addEventListener("scroll", this.positionList.bind(this))
                            config.lookupview = lookupview = el;
                            //this.config.lookupview=View.lookupList({ anchor: ip, minHeight: 200 })
                        }
                        if(!recs){return}
                        if(recs.isPromise){
                            recs.then(this.populateList.bind(this) )
                        } else {
                            this.populateList(recs)
                        }

                    }
                },
                createdCallback: {
                    value: function() {
                        this.classList.add("combo-box")
                        this.config = {}
                        this.ip = this.insertBefore(document.createElement("input"), this.firstElementChild);
                        this.ip.type = "search";
                        this.ip.style.display = "block";
                        if (this.getAttribute("placeholder")) {
                            this.ip.setAttribute("placeholder", this.getAttribute("placeholder"))
                        }
                        if (this.getAttribute("min")) {
                            this.config.min = Number(this.getAttribute("min")) || 0
                        }
                        var thisel=this,ip = this.ip,
                            _match = function(v1, v2) {
                                return v1 && v1.toLowerCase().indexOf(v2) == 0
                            },
                            _clearList = function() {
                                this.resetList(null)
                            }.bind(this),
                            _timer = 0,
                            _resetListThrottled = function(ev) {
                                if(this.config.trigger){return}
                                if (ev && ev.keyCode === 27) {
                                    if (_timer) {
                                        clearTimeout(_timer)
                                    }
                                    _timer = 0;
                                    this.resetList(ev);
                                    return;
                                };
                                if (_timer) {
                                    return
                                }

                                _timer = setTimeout(function(ev) {
                                    _timer = 0;
                                    this.resetList(ev);
                                }.bind(this), 100,ev);
                            }.bind(this)
                        ip.addEventListener("click", function(ev){
                            if(this.config.trigger){return}
                            var b=$d.bounds(ev.target)
                            if(ev.x && ev.x < b.right && (b.right - ev.x) < 20){//clicked on clear link
                                _clearList();
                                ev.stopImmediatePropagation()
                            } else {
                                if($d.val(this)){
                                    _resetListThrottled()
                                }

                            }
                        }.bind(this));
                        ip.addEventListener("paste", _resetListThrottled);
                        ip.addEventListener("cut", _resetListThrottled);
                        //ip.addEventListener("blur", _clearList);
                        //ip.addEventListener("focusout", _clearList);
                        ip.addEventListener("keyup", _resetListThrottled);
                        ip.addEventListener("focus", _resetListThrottled);
                        ip.addEventListener("focusin", _resetListThrottled);
                    }
                }
            }
        )
    });

document.registerElement("time-duration", {
    prototype: Object.create(HTMLElement.prototype, {
        onchange: {
            value: null,
            writable: !0
        },
        recalc: {
            value: function(a, b) {
                this.duration = a || this.elduration.value
                this.durationType = b || this.eldurationType.value
                this.value = this.duration + " " + this.durationType
            }
        },
        value: {
            set: function(a) {
                if (this.__value__ != a && !this.__loop__) {
                    this.__loop__ = 1;
                    try {
                        if("string" == typeof a && /^\d/.test(a.trim())){
                            this.elduration.value = String(a).replace(/[^\d\.]/g, "").trim()
                            this.eldurationType.value = String(a).replace(/[\s\d\.]/g, "").trim().charAt(0)||"h"
                            this.__value__ = a;
                        }
                        var b = document.createEvent("Event");
                        b.initEvent("change", !0, !0)
                        this.dispatchEvent(b)
                        "function" == typeof this.onchange && this.onchange(b)
                    } finally {
                        this.__loop__ = 0
                    }
                }
            },
            get: function() {
                return this.__value__
            }
        },
        createdCallback: {
            value: function() {
                this.classList.add("time-duration"), this.duration = 1, this.durationType = "h";
                for (var a = [
                    [.5, "&half;"],
                    [1, "1"]
                ], b = 2; 24 >= b; b++) a.push([b, b + ""]);
                this.style.paddingLeft="0"
                this.style.border="none"
                this.innerHTML = '<select class="val val-duration" value="1"  style="width:4rem">' + a.map(function(a) {
                        return '<option value="' + a[0] + '">' + a[1] + "</option>"
                    }).join("") + '</select><select class="val val-duration-type" style="width:6rem"><option value="h" selected="">Hr(s)</option><option value="d">Day(s)</option><option value="m">Mnth(s)</option></select>',
                this.elduration = this.firstElementChild
                this.eldurationType = this.elduration.nextElementSibling
                this.elduration.value = String(this.duration)
                this.eldurationType.value = this.durationType
                this.elduration.onchange = function() {
                    this.parentNode.recalc(this.value)
                }
                this.eldurationType.onchange = function() {
                    this.parentNode.recalc(null, this.value)
                }
            }
        },
        detachedCallback: {
            value: function() {}
        },
        attributeChangedCallback: {
            value: function() {}
        }
    })
});
document.registerElement("layout-element", {
    prototype: Object.create(HTMLInputElement.prototype, {
        createdCallback: {
            value: function() {}
        },
        attachedCallback: {
            value: function() {}
        },
        detachedCallback: {
            value: function() {}
        }
    })
});
document.registerElement("date-time-input", {
    prototype: Object.create(HTMLElement.prototype, {
        date: {
            set: function(a) {
                if ("Invalid Date" == a && (a = null), !(this.__date == a || this.__date && a && +this.__date == +a)) {
                    this.__date = a, this.render();
                    var b = document.createEvent("Event");
                    b.initEvent("change", !0, !0), this.dispatchEvent(b), "function" == typeof this.onchange && this.onchange(b)
                }
            },
            get: function() {
                return this.__date
            }
        },
        onchange: {
            value: null,
            writable: !0
        },
        value: {
            set: function(a) {
                var b = $.date.asTime(a);
                b && "Invalid Date" != b && (this.date = b)
            },
            get: function() {
                return this.date
            }
        },
        pointerHandle: {
            value: function(a) {
                if ($.eventUtil.isRightClick(a)) return void a.stopPropagation();
                var b = a.target && a.target.dataset && a.target.dataset.key;
                if (b) {
                    var PopupView=$.require("PopupView")
                    var c = $d.data(a.target, "lookuplist");
                    c || (c = new PopupView($.date.lookuplist(b), {
                        anchor: a.target,destroyonhide:true
                        , callback: function (a, b) {
                            this.date && (this.date.update(a, b), this.render())
                        }.bind(this, b)
                    })),
                    c.config.defaultValue = function(a) {
                        var b = this.date[a];
                        return Number(b) || b
                    }.bind(this, b)
                    c.show();
                    $d.data(a.target, "lookuplist", c)
                    c.show()
                }
            }
        },
        render: {
            value: function() {
                var a = this.getAttribute("format") || "mm/dd/yyyy",
                    b = this.date;
                if (b) {
                    this.formatTemplate && this.formatTemplate.format === a || (this.formatTemplate = $.date.getFormatTemplate(a));
                    var c = this.formatTemplate.getTemplateData(b),
                        d = this.style.display,
                        e = this.querySelectorAll(".date-part"),
                        f = 0;
                    e.length || (f = 1, this.innerHTML = this.formatTemplate.resolve(b), e = this.querySelectorAll(".date-part"), this.addEventListener("mousedown", this.pointerHandle)), this.style.display = "none";
                    for (var g, h = 0, i = e.length; g = e[h], i > h; h++)
                        if (g && g.dataset) {
                            var j = g.dataset.key;
                            j && "text" != j && "sep" != j && (f && (g.tabIndex = h + 1), g.innerHTML = null == c[j] ? j : c[j])
                        }
                    this.style.display = d
                }
            }
        },
        activateEdit: {
            value: function(a) {
                var b = a.target,
                    c = b.dateset.key
            }
        },
        deActivateEdit: {
            value: function() {}
        },
        createdCallback: {
            value: function() {
                this.classList.add("date-time-input"), this.date = this.date || $.date();
                var a = this.getAttribute("format"),
                    b = this.date;
                a || (a = (b ? b._defaultFormat : "") || "mm/dd/yyyy", this.__ignorenext = "format", this.setAttribute("format", a)), this.render()
            }
        },
        detachedCallback: {
            value: function() {}
        },
        attributeChangedCallback: {
            value: function(a) {
                return this.__ignorenext === a ? void delete this.__ignorenext : void("format" == a && this.render())
            }
        }
    })
});
/*
function clipper(el){
    if(el&&el.style){
        this.el=el;
    }

    this.inner=[0,0,0,0]



    Object.defineProperties(
        this,{
            "right":{set:function(a){this.inner[this.R]=a},get:function(){return this.inner[this.R]},enumerable:true},
            "width":{set:function(a){this.inner[this.R]=a},get:function(){return this.inner[this.R]},enumerable:true},
            "bottom":{set:function(a){this.inner[this.B]=a},get:function(){return this.inner[this.B]},enumerable:true},
            "height":{set:function(a){this.inner[this.B]=a},get:function(){return this.inner[this.B]},enumerable:true},
            "left":{set:function(a){this.inner[this.L]=a},get:function(){return this.inner[this.L]},enumerable:true},
            "x":{set:function(a){this.inner[this.L]=a},get:function(){return this.inner[this.L]},enumerable:true},
            "top":{set:function(a){this.inner[this.T]=a},get:function(){return this.inner[this.T]},enumerable:true},
            "y":{set:function(a){this.inner[this.T]=a},get:function(){return this.inner[this.T]},enumerable:true},

        }
        );
    this.update(el);

}
clipper.prototype={
    T:0,    R:1,    B:2,    L:3,
    applyCss:function(){
        if(!this.el){return}
        this.el.style.clip='rect('+this.inner.map(function(a){return a && !isNaN()?(a+"px"):a}).join(", ")+")" ;
    },
    fromString:function(val){
        return String(val).replace(/rect|\(|\)/g,"").split(/\s+|,/).map(function(a){
return (a=="0px"?0:a.trim())||0})
    },
    fromCss:function(el){
        el=el||this.el
        if(el&&el.style){
            return this.fromString(document.defaultView.getComputedStyle(el)["clip"]||"")
        }
    },
    getCurrent:function(){
        return this.fromCss(this.el)
    },
    update:function(el){
        if(el==null){return  this}
        var val=el
        if(arguments.length>1){
            val=[].slice.call(arguments)
        }

        var curr=this.getCurrent()||[];
        if(el&&el.style){
            val=this.fromCss(el)
        }
        if(typeof(val)=="string"){
            val=this.fromString(val)
        } else if(typeof(el)=="number"){
            val=[el,el,el,el]
        } else if(!Array.isArray(val) && typeof(val)=="object"){
            "top left height width right bottom x y".split(" ").forEach(
                function(k){
                    if(el[k]!=null){this[k]=el[k]}
               },this
          )
        }

        if(Array.isArray(val)){
            for(var i=0;i<Math.min(val.length,4);i++){
                curr[i]=val[i]
            }
        }
        for(var i=0;i<4;i++){
                this.inner[i]=curr[i]||0;
            }
        return this
    }
}

 */;self.appFactory = function() {


    function _init() {

        ctor = Klass("appklass", {
            user: {},
            router: null,
            name: null,
            dependancies: [],
             templates: null,
            modules: [],
            messages:{msg01:"test message"},
            entitFies: {},
            contextPath: null,
            routerPath: null,
            init: function(a, b, c) {
                this.docReadyPromise = Promise.deferred()
                this.params = String(location.search).replace(/^\?/, "").split("&").reduce(function(a, b) {
                    var c = b.indexOf("=");
                    return -1 == c ? a[b] = !0 : a[b.substr(0, c)] = b.substr(c + 1), a
                }, {})

                c && $.extend(this, c), this.observer.register("ready", {
                    sticky: !0
                })
                this.user=this.user||{}
                this.user.appversion=window.APPVERSION
                this.observer.register("initapp", {
                    sticky: !0
                })
                this.on("ready", function() {
                    var  b = Promise.deferred();
                    Promise.all([a , this.docReadyPromise]).then(function() {
                        this.fire("init")
                     }.bind(this))
                    var router=$.require("$.router")
                    if( router){
                        this.router =  router(this)
                        this.router.watchHashChange()
                        b.resolve(this.router)
                    }
                    else{
                        alert("router not av")
                    }
                })
                this.on("viewready", function() {
                    try {
                        this.scanBindings()
                    } catch (a) {}
                    if (this.router) {
                        var b = this.router.getHash();
                        /*if (b) {
                            var c = String(b).split(/\./);
                            this.modules.indexOf(c[0]) >= 0 && this.loadModule(c.shift(), c)
                        }*/
                    }
                })
                this.dependancies.length ? ZModule.get(this.dependancies).then(function() {
                    this.observer.fireAsync("ready")
                }.bind(this)) : this.observer.fireAsync("ready")
            },
            resolveMessage:function(message) {
                if(!this.messages){return message}
                var msgid = message instanceof Array ? message[0] : message;
                var lookup = this.messages[msgid] || msgid;

                if (message instanceof Array) {
                    for (var i = 1; i < message.length; i++) {
                        lookup = lookup.replace('$' + i, message[i]);
                    }
                }

                return lookup;             
            },
            bootstrap: function(build,rooturl,contextpath,serviceurl,resourcelib) {
                window.CLIENTID=Math.random().toString(36).substr(2)
                document.cookie="x-clientid=" + window.CLIENTID + ";expires=0;"
                if(contextpath=="ROOT"){contextpath=""}
                if(self.ResURL){
                     self.ResURL.setRoot(rooturl||"",contextpath||"")
                 }
                this.resourcelib=resourcelib
                this.setUser({ appversion:window.APPVERSION,build:"{BUILD}","contextpath":rooturl||"","servicepath":serviceurl||""})
                this.docReadyPromise.resolve();
                this.fire('initapp');

            },
            loadModule: function(a, b) {
                var pr2=Promise.deferred()
                var ns=[a+"/" + a,a,"app." + a].filter(function(k){return $.getBootstrapData(k,"modules");})[0]
                var module=$.require(ns)

                typeof(b)=="function" && pr2.finally(b)
                if(!module){
                    pr2.reject()
                } else if(module.isPromise){
                    module.finally(function(a){pr2.resolve(a)})
                } else {
                    pr2.resolve(module)
                }
                /*if(module){
                    this.getResource(a,function(template){
                        if(template && $.partialView){
                            $.partialView(template)
                        }
                        if(module){
                            pr2.resolve(module)
                        }
                    });
                }*/


                return pr2
            },

        onRemote:function(type,callback){
            if($.webSocket){
                $.webSocket.on(type ,callback);
            }


        },
            remoteDirective:function(cmd,args,callback,callbackerr){
                if(args && args.args && Object.keys(args).length==1){args=args.args}
                if(!args){args={}}
                //if local then donot apply time zone offset
                args.tmzoffset=(location.href.indexOf("localhost")>=0 || location.href.indexOf("127.0.0.1")>=0)?0: (new Date()).getTimezoneOffset()/60
                var pr=$.xhr.get(app.servicePath,{cmd:cmd,args:args })
                    pr.then(
                    function(data){
                        if(data && data.error){app.splashError(data.error)}
                        typeof(callback)=="function" && callback(data)
                        return data
                    },
                    function(data){
                        var error=data?(data.error||data):"An error occurred"
                        if(typeof(callbackerr)=="function"){
                            callbackerr(error);
                        } else{
                            app.splashError(error)
                        }
                    }
                );
                return pr;
            },
            getEntity: function(a, b, c) {
                 null != b && "object" != typeof b && (c = c || 1 === b || b === !0, b = null);
                var  e = String(a).toLowerCase();
                if (a) {this.entities||(this.entities={});
                    var f = this.entities[e]|| (this.entities[e] = {
                            promise: Promise.deferred(),
                            entity: null
                        });
                    if (!f.entity) {
                        f.entity = 0;
                        var g = this;
                        Data.defineEntity(a, b, {
                            nocache: c
                        }).then(function(a) {

                            if(a && a.name && g.entities[e]){

                                g.entities[e].entity = a
                                g.entities[e].promise.resolve(a)
                            }
                        }, function() {
                            g.entities[e] && g.entities[e].promise.reject("")
                        })
                    }
                } else Promise.reject("invalid name");
                return f.promise
            },
            defineView:function(id,props,proto){
                if($.isPlain(id)){
                    proto=props
                    props=id;
                    id=props.id;
                }
                var SimpleView=$.require("SimpleView")
                var klass=SimpleView;
                if(!$.is.emptyOrPrimitive(proto)){
                    klass=SimpleView.extend(proto)
                }
                return $.lazyInit(klass,props);
            },
            addModule: function(a, b, c) {
                var d = "function" == typeof b ? b(this) : b;
                return this.properties.set(a, d), c !== !0 && ZModule.register("app." + a, d), this[a] && this.observer.fireAsync("moduleaavailable", this[a]), this
            },
            activate: function() {},
            showMessage: function(a) {
                var b = $d(document.querySelector(".app-message")) || $d("<div>").css({
                        position: "absolute",
                        t: -10,
                        left: "50%",
                        w: 400,
                        h: 1,
                        borderRadius: "5px",
                        marginLeft: "-200px",
                        opacity: .1,
                        fontSize: "140%",
                        border: "1px solid #ccc",
                        bgc: "yellow",
                        textAlign: "center",
                        paddingTop: "12px",
                        color: "black"
                    }).addClass(["fxtx", "app-message", "nowrap"]);
                b.removeClass("fxtx").css("opacity", .8).toFront().html(a).css({
                    h: 50
                }).addClass("fxtx"), setTimeout(function() {
                    b.css({
                        opacity: 0,
                        height: "1px"
                    })
                }, 5e3)
            },
            scanBindings: function() {
                return
            },

            isLoggedIn: function() {if(!this.user){return}
                if(this.user.loggedIn && !this.user.id){
                    this.user.loggedIn=false
                }

                return this.user.loggedIn
            },
            clearUserInfo: function(path, callback) {
                var storage= window.localStorage//:window.sessionStorage
                if("undefined" != typeof storage){
                    storage.setItem("sessionuser", "{}");
                    storage.setItem("sessionuser", null)
                }
                Data.Cookie.set("_lid_",null)
            },
            restoreUserInfo: function(path, callback) {
                var storage= window.localStorage//:window.sessionStorage
                if (typeof(storage) != "undefined") {
                    var u = storage.getItem("sessionuser")
                    if (u) {
                        try {
                            u = JSON.parse(u)
                            return u;
                        } catch (e) {
                            $.handleEx("storage:sessionuser", e);
                        }
                    }
                }
            },
            saveUserInfo: function(path, callback) {
                var storage= window.localStorage//:window.sessionStorage
                if (this.user && this.user.id && typeof(storage) != "undefined") {
                     storage.setItem("sessionuser", JSON.stringify(this.user))
                }
            },
            hasResource: function(path) {
                if(-1 == path.indexOf("/")){
                    path = "app/data/" + path
                }
                /\.\w+$/.test(path) || (path += ".html");
                return $.getBootstrapTemplate(path )||$.getBootstrapTemplate(path.replace(/^app/,"theme") );
            },
            getResource: function(path, callback) {
                var result  = this.hasResource(path);
                if(!result){
                    result=$.xhr.get(path ,{contenttype:"html",sync:true},callback)
                } else{
                    callback && callback(result)
                }
                return result
            },

            setUpSession: function(user ) {
                if(!user ){
                    user  = this.user||(this.user={});
                }
                if(!(user  && user .id)){return}

                if(this.contextpath){
                    user .contextpath = this.contextpath
                }
                if(!self.CLIENTID){
                    self.CLIENTID = Math.random().toString(36).substr(2)
                }

                if(!this.user || (this.user && this.user !== user) ){
                    this.setUser(user )
                    document.cookie = "x-clientid=" + self.CLIENTID + ";expires=0;"
                }
                this.user.appversion=window.APPVERSION||"0"
                if (this.user.id) {
                    this.saveUserInfo()
                    if(app.userDetails){
                        if ( app.userDetails.__loaded!== this.user.id) {
                            app.userDetails.update( this.user);
                            app.userDetails.load( this.user.id)
                            app.userDetails.__loaded= this.user.id
                        }
                        app.userDetails.whenAvailable(function(){
                            this.user.fullname=app.userDetails.fullname
                            this.saveUserInfo()
                        }.bind(this))
                     }
                }
                return Promise.resolve()
            },
            promptNewAccount: function(callback) {
                var PopupView=$.require("PopupView")
                var popupView=new PopupView({centered:true,title:"New Account",hideonblur:false,showcancellink:true,destroyonhide:true})
                this.getResource("useraccount",function(c){
                    popupView.el.addClass("useraccount-form")
                    popupView.setContent(c)
                    popupView.el.css("position","fixed")
                    popupView.show()
                    var form=popupView.el.q("form")
                    form.action=app.servicePath+"?newaccount=1"
                     var submit=form.q("button")
                    var callbackurl=form.q("#callbackurl")
                    if(callbackurl){
                        callbackurl.val(app.contextPath)
                    }
                    var loginip=$d(".app-auth #auth_loginid");
                    form.el.onsubmit = function (ev) {
                         var invalids,pw=this.elements.pw
                        if(String(pw.value||"").trim().length<6 ){
                             pw.value=this.elements.confirmpw.value="";
                        }
                        if(this.elements.confirmpw.value!=pw.value){
                            this.elements.confirmpw.value="";
                        }
                        invalids=[].filter.call(this.elements,function(a){return a.checkValidity && a.checkValidity()?null:a})
                        if(invalids && invalids.length){
                            form.addClass("show-error");
                            form.on("input",function onip(){form.removeClass("show-error");form.off("input",onip)})
                             return  false;
                        };
                        app.observer.once("response_newaccount",function(data){
                            if(data && data.result){
                                data=data.result.data||data.result
                            }

                            if(loginip && data.loginid){loginip.value=data.loginid;}
                            app.splash("An Account has been created.<br/>Please login to your account.");
                            popupView.hide()
                            if(typeof(callback)=="function"){
                                callback(data);
                            }
                        })
                    }
                })
            },
            _promptLogin: function(dom,callback,currlogonid) {
                var pr,b=dom
                if (b) {
                    b.show();
                    var form = b.down(".app-auth-form"),
                        loginid = b.down(".app-auth-loginid"),
                        pw = b.down(".app-auth-pw"),
                        btn = b.down(".app-auth-enter"),
                        link = b.down("#auth__link"),
                        msg = b.down(".login-msg");
                    //  form.el.action=app.user.servicepath+"?newaccount=1"
                    form.onsubmit=function(ev){ev.preventDefault();return false;}
                    if(currlogonid){
                        loginid && loginid.val(currlogonid)
                    }
                    if (form.data("_setup")) return;
                    var ths = this;
                    function setup() {
                        form.data("_setup",1)
                        form.css("display", "block")
                        //this.hide()
                        loginid.value=(Data.Cookie.get("_lid_")||"").replace(/null|undefined/g,"").trim();
                        loginid.el.focus();
                        loginid.on("input", function() {
                            msg && msg.clear()
                        });
                        btn.on("click", function() {
                            pr = Promise.deferred();
                            var _id=String(loginid.val() || "").trim(),_pw=String(pw.val() || "").trim()
                            Data.Cookie.set("_lid_",_id||"")
                            if ( _id && _pw) {
                                ths.authenticate(_id, _pw, pr)
                                pr.then(callback.bind(ths), function(a) {
                                    msg && msg.html(a || "Invalid id or password")
                                })
                            }
                        })
                    }
                    if(link){
                        link.on("click",setup )
                    } else{
                        setup()
                    }


                }
                return pr;
            },
            promptLogin: function(callback,aspopup,currlogonid) {
                callback = callback || function() {};
                var vw=null,b = $d(".app-auth");
                if(aspopup || !(b && b.isVisible(true))){
                    this.getResource("appauth",function(html){
                        var vw=$.require("PopupView").newInstance({
                            top:1,width:280, destroyonhide:true
                        })
                        vw.setContent(html);
                        vw.show()
                        vw.el.addClass("center-horizontal")
                        b = vw.el.q(".app-auth")
                        var app=this
                        this._promptLogin(b,function(data){
                            vw.hide()
                            callback.call(app,data)
                        })
                    }.bind(this));
                    return
                }
                return this._promptLogin(b,callback,currlogonid);
                

            },
            signOut: function(hash) {
                this.clearUserInfo()

                var path=this.contextPath
                $.xhr.jsonp(app.servicePath + "?resetsession=1", function(data) {

                })
                if(path && hash){
                    //path=path+"#"+hash
                }
                path && window.location.reload(true)
            },
            authenticateSession: function(token) {
                var promise = Promise.deferred();
                $.xhr.jsonp(app.servicePath + "?sessiontoken=" + token  + "&authenticatesession=1", function(data) {
                    data && data.response && (data = data.response);
                    data = data.data || data;
                    if(data && data.id > 0 ){
                        app.setUpSession(data);
                        promise.resolve(data||"")
                    }
                    else{
                        app.signOut();
                        promise.reject("Invalid session token .. signing out")
                    }
                });
                return promise
            },
            authenticate: function(uid, pw, c, d) {
                var promise, f = this;
                if (c && c.isPromise) {
                    promise = c;
                }
                else {
                    promise = Promise.deferred();
                    var g = "function" == typeof c ? c : function() {}, h = "function" == typeof d ? d : function() {};
                    promise.then(g, h)
                }
                $.xhr.jsonp(app.servicePath + "?auth_loginid=" + uid + "&auth_pw=" + (pw || "") + "&authenticate=1", function(a) {
                    a && a.response && (a = a.response);
                    var b = a.data || a;
                    if(b && b.id > 0 ){
                        f.setUpSession(b)
                        promise.resolve(b||"")
                    }
                    else{
                        promise.reject("Invalid id or password")
                    }
                })
                return promise
            },
            createUser: function(a) {
                return delete a.pw2, a[""] && delete a[""], $.xhr.get(this.servicePath + "?newaccount=" + JSON.stringify(a), function(a) {
                 })
            },
            route: function(a, b) {
                this.router && this.router.route(a, b)
            },
            loadFragment: function(a) {
                var b = Promise.deferred();
                return -1 == a.indexOf("/") && (a = "app/data/" + a), -1 == a.indexOf(".html") && (a += ".html"), this.getResource(a, function(a) {
                    for (var c = $d('<div>').html(a), d = 0, e = c.querySelectorAll("style"); d < e.length; d++)
                        if (e[d]) {
                            var f = e[d].textContent || e[d].innerText;
                            if (f) try {
                                var g = document.body.appendChild(document.createElement("style"));
                                g.textContent = f, e[d].parentNode.removeChild(e[d])
                            } catch (h) {
                             }
                        }
                    for (var d = 0, e = c.querySelectorAll("script:not([src])"); d < e.length; d++)
                        if (e[d]) {
                            var f = e[d].textContent || e[d].innerText;
                            if (f) try {
                                (1, eval)(f), e[d].parentNode.removeChild(e[d])
                            } catch (h) {
                             }
                        }
                    b.resolve(c)
                }), b
            },
            getUser: function() {
                return this.user
            },
            setUser: function(a) {
                 if (null === a) {
                    this.user && (this.user = {}, Data.Cookie.set("user", null));
                    this.user.appversion=window.APPVERSION||"0"
                }
                else {
                     if(!this.user){
                         this.user=$.extend({}, a)}
                     else{
                         $.extend(this.user, a)
                     }
                    this.user.appversion=window.APPVERSION||"0"
                     if(this.user.id){
                         this.user.loggedIn = !0
                         Data.Cookie.set("user", this.user.id)
                     }


                     a.servicepath && (this.servicePath = a.servicepath)
                     if (null != a.contextpath) {

                        var c = ResURL.setRoot(a.contextpath);
                        this.contextURI = c
                         this.contextPath = c.build();
                         if(!/\/$/.test(this.contextPath)){
                             this.contextPath = this.contextPath + "/"
                         };
                         /*if(this.contextpath){
                             var cx=this.contextpath.replace(/[\/\\]$/,"")
                             var arr=cx.split("/")
                             if(arr.pop()==contextpath){
                                this.contextpath=arr.join("/")
                             }
                         }*/
                            this.routerPath = this.contextPath + "router";
                         this.servicePath || (this.servicePath = this.routerPath);
                    }
                    this.fire("user", this.user)
                }
            },
            showMessage: function(a, b,nocache) {
                var c = this,vw=c.messagevw;
                b = b || {}
                if(nocache===true || !vw){
                    var defcss={textAlign:"center",borderRadius:"5px",padding:"10px"};
                    var PopupView=$.require("PopupView")
                    vw = new PopupView({
                        klass:"app-message",resizable:true,showcancellink:true,modal:true,centered:true,minWidth:300,offset:1,
                        animateShow:{anchor:"c"},
                        minHeight:50,
                        css: b.css?Object.assign(defcss, b.css):defcss});
                    if(nocache!==true){
                        c.messagevw=vw
                    }
                }



                if(b.title){vw.config.options.title=b.title };
                vw.setContent(typeof(a)=="string"?a: (a.message||a))
                vw.show();
                return vw
            },
            notify: function(msg, mode) {
                if(!this._notifydiv){
                    this._notifydiv=document.createElement("div")
                    this._notifydiv.innerHTML="<div style='position:absolute;top:0;padding:10px;left:0;width:100%;height:100%'></div>"
                    this._notifydiv.style.cssText="z-index:10;position:fixed;bottom:0;right:0;text-align:center;min-width:80px;background:#111;opacity:.7;color:white;width:auto;max-width:100px;height:1px;overflow:hidden;display:none;"
                    this._notifydiv.className="fxtx_25"
                    document.body.appendChild(this._notifydiv)
                }
                if(msg){
                    this._notifydiv.firstElementChild.innerHTML=msg
                    this._notifydiv.style.display="block";
                    setTimeout(function(){
                        this._notifydiv.style.height="40px";
                    }.bind(this),5)
                    setTimeout(function(){
                        this._notifydiv.style.height="1px";
                        setTimeout(function(){
                            this._notifydiv.style.display="none";

                        }.bind(this),500)
                    }.bind(this),1500)
                } else{
                    this._notifydiv.firstElementChild.innerHTML=""
                }
            },
            splashWarning: function(a, b) {
                var config={mode:"warn"}
                if($.isPlain(b)){
                    Object.assign(config,b);
                    b=null
                }
                app.splash(a, b,config)
            },
            splashInfo: function(a, b) {
                var config={mode:"info"}
                if($.isPlain(b)){
                    Object.assign(config,b);
                    b=null
                }
                app.splash(a, b,config)
            },
            splashError: function(a, b) {
                var config={mode:"error"}
                if($.isPlain(b)){
                    Object.assign(config,b);
                    b=null
                }
                app.splash(a, b,config)
             },
            splash: function(message, timeout,opts) {
                if(!message){return}
                var options={}
                if(arguments.length==2 && timeout && typeof(timeout)!="number"){
                    opts=timeout;
                    timeout=null
                }
                if(opts==true){
                    options.mode="error";
                } else if($.isPlain(opts)){
                    Object.assign(options,opts)
                }

                if(typeof(timeout)=="number"){
                    options.timeOut=timeout
                }
                var PopupView=$.require("PopupView")
                if(!message){
                     return
                }
                if(message && typeof(message)=="object") {

                    if (message instanceof Array) {
                        message = message.join(" ");
                    } else {
                        message = message.message||message;
                        if(message && typeof(message)=="object"){
                            message=JSON.stringify(message);
                        }
                    }
                }
                message=this.resolveMessage(message)
                return PopupView.splash(message,options);
            }
        })
    }
    var ctor = null;
    return {
        create: function(a, b) {
            ctor || _init();
            var c = new ctor(a, b);
            return c
        }
    }
}();

window.addEventListener("message",function iframemsg(e){
    var data= e.data,cntinue=false
    if(e.origin && typeof(app)!="undefined" ){
        var path=app.servicePath||(app.user && app.user.servicepath)
         if(path && path.toLowerCase().indexOf(e.origin.toLowerCase())!=-1){
             cntinue=true
         }
    }
    if(!cntinue){
        return
    }
    if(typeof(data)=="string"){
        try {
            data = eval("(" + data + ")")
        } catch(e){data={}}
    }


    if(!data.type){
        return
    }
    if(data.status=="error"){
        var msg=(data.result&&data.result.message)||data.result
        app.splash("<div style='color:red;'>Error</div>"+ (msg||"Unknown error"));
    } else {
      app.observer.fireAsync("response_"+data.type,data)
    }
    //window.removeEventListener("message",iframemsg);
});
;(function(){
function num(v){
    if(v==null){return 0}
    if(typeof(v)=="number"){return Number(v)}
    if(typeof(v)=="string"){
        return Number(v.replace(/[^\d\.\-]/g,""))||0;
    }
    return 0;
}

function _parseArgs(a){
    var r=[]
    for(var i= 0,ln= a.length,v;v=a[i],i<ln;i++){
        if(v && typeof(v)=="object"&&({}).toString.call(v).indexOf("Arguments")>=0){
            [].push.apply(r,_parseArgs(v))
        }else{
            r.push(v)
        }
    }
    var ln=r.length
    while(ln>0){
        if(typeof(r[ln-1])=="undefined"){
            r.pop()
            ln=r.length
        } else{break;}
    }
    return r


}
function  _parse( ) {

    var args=_parseArgs(arguments),p={left:0,top:0,bottom:0,right:0};
    if(args.length==2&& typeof(args[1])=="object"){p=args.pop();}

    if(args.length==1 && typeof(args[0])=="object"){
        var frst= args[0] ||{},el=frst.nodeType?frst:frst.el
        if(frst.__bounds__){return frst}
        if(el&&el.getBoundingClientRect) {
            frst= el.getBoundingClientRect();
        }else if(frst.type && String(frst.type).indexOf("mouse")>=0){
            var d=document,de=d.documentElement ,dbd=d.body;
            var e=args[0];frst={};
            frst.left=(e.pageX!=null) ? e.pageX : e.clientX + (de.scrollLeft ? de.scrollLeft : dbd.scrollLeft);
            frst.top = (e.pageY!=null) ? e.pageY : e.clientY + (de.scrollTop ? de.scrollTop : dbd.scrollTop);
            //if(e.target){frst.height=num(e.target.offsetHeight);frst.width=num(e.target.offsetWidth)}
        }else if(frst.target&&frst.target.getBoundingClientRect){
            frst= frst.target.getBoundingClientRect();
        }
        if(frst.length){//TRBL
            frst[0]!=null && (p.top=  num(frst[0]));
            frst[1]!=null && (p.right=  num(frst[1]));
            frst[2]!=null && (p.bottom=  num(frst[2]));
            frst[3]!=null && (p.left=  num(frst[3]))
        } else {
            var left=  frst.x||frst.left ,
                top=  frst.y||frst.top ;
            frst.left!=null &&(p.left=   num(left));
            frst.top!=null &&(top>=0.1||top<=-0.1 ) &&(p.top=    num(top) );
            frst.height!=null &&(frst.height>=0.1) &&(p.height=   num(frst.height)) ;
            frst.width !=null&&(frst.width>=0.1 ) &&(p.width=   num(frst.width));
            frst.right !=null&&(frst.right>0.1||frst.right<=-0.1   ) &&(p.right=   num(frst.right));
            frst.bottom !=null&& (frst.bottom>=0.1||frst.bottom<=-0.1 ) &&(p.bottom=   num(frst.bottom));
        }
    } else{
        p.y= p.top =  num(args.shift());
        p.right =  num(args.shift());
        p.bottom =  num(args.shift());
        p.x=p.left =  num(args.shift());
    }
    p.__bounds__=1;
    return p;
}

function getDim(ctx,prop){

}
function resolver(ctx,prop,fn,val){
    if(fn=="val" || fn=="px"){return num(val)}
    if(!ctx.delegate){return 0}
    if(fn=="perc"){
        var par=$d.parent(ctx.delegate)
        if(par){
            var u=prop.charAt(0).toUpperCase()+prop.substr(1)
            if(par["offset"+u]!=null){
                return par["offset"+u]*val
            }
            return num(par.css(prop))*val
        }
        return 0
    }


    if(prop=="attr"){
        return  ctx.delegate?num($d.prop(ctx.delegate,prop)):0;
    }
    val=num(val)
    if(fn=="vh"){ return $.viewport.height*val}
    if(fn=="vw"){ return $.viewport.width*val}
    if(fn=="vmax"){ return Math.max($.viewport.height,$.viewport.width)*val}
    if(fn=="vmin"){ return Math.min($.viewport.height,$.viewport.width)*val}
     var worker=ctx.statics.domworker
    if(!worker){
        worker=document.body.appendChild(document.createElement("div"))
        worker.style.position="fixed" ;
        worker.style.height="1px"; worker.style.width="1px"
        worker.style.overflow="hidden"
        ctx.statics.domworker=worker
    }
    //worker.style.display=""
    $d.css(worker,prop,val+fn);
    var ret= num($d.css(worker,prop));
    worker.style.height="1px"; worker.style.width="1px";
    return ret
 }
var exprhandle=function(a,nm){
    if(/([\-\+\*\/])/.test(a)){return a};
    if(/^([\d\.]+)(rem|rm|px|\%|in|vh|vw|vmax|vmin)?$/.test(a)){
        return a.replace(/^([\d\.]+)(rem|rm|px|\%|in|vh|vw|vmax|vmin)?$/,function(a,b,c){c=c||"val";return "_(this,'"+nm +"','"+(c=="%"?"perc":c)+"',"+b+")"})
    }
    return "_('attr','"+a+"')"
}
function parseExpr(nm,expr){
    expr=expr.trim().replace(/^calc\s*\(|\)$/g,"").trim()
    return Function("_"," return "+expr.replace(/([\-\+\*\/])/g," $1 ").split(/\s+/).map(function(val){return exprhandle(val,nm)}).join(" "))
}
var Gproto={
    addCalc:function(nm,fn){
        this.__exprs ||(this.__exprs={});
        if(typeof(fn)=="string"){
            fn=parseExpr(nm,fn)
        }
        if(typeof(fn)!="function"){return}
        this.__exprs[nm]=fn;
    },
    getAt:function(nm,raw,noexpr){if(!this.__instance){return}
        var val=this.get(nm)
        if(!noexpr && this.__exprs && this.__exprs[nm]){
            val=this.__exprs[nm].call(this,resolver)
            this.set(nm,val);
        }
        else {
            val=this.get(nm)
        }
        if(val==null && !raw){
            val=this.computeVal(nm )
        }
        return val;
    },
    applyConstrains:function(){
        if(this.__constrains){
            $.each(this.__constrains,function(v,k){
                var curr=this.get(k)
                if(!curr ){return}
                var nu=this.preprocess(k,curr,curr)
                if(nu && nu!==curr){
                    this.set(k,nu )
                }
            },this)
        }
    },
    setConstrain:function(nm,fn){
        if(fn==null){
            if($.isPlain(nm)){
                $.each(nm,function(v,k){this.setConstrain(k,v)},this)
            }
            return this
        }
        this.__constrains||(this.__constrains={});
        if(typeof(fn)=="object" && this.__constrains[nm] && typeof(this.__constrains[nm])=="object"){$.extend(this.__constrains[nm],fn)}
        else{
            this.__constrains[nm]=fn
        }
        return this
    },
    preprocess:function(nm,val,curr){
        if(!this.__instance){return}
         if(val==null){
            if(curr==null){return val}
        }
        else {val=num(val)}
        var preprocessers =this.statics.preprocessers
        if(preprocessers !=null && preprocessers[nm]){
            val=preprocessers[nm](val)
        }
        if(val==null){return val}
        if(this.__constrains && this.__constrains[nm]){
            var c=this.__constrains[nm]
            if(typeof(c)=="number") {//min
                val=Math.max(c,val)
            } else if(typeof(c)=="function"){
                val=c.call(this,val)
            } else if(c.max && typeof(c.max)=="number"){
                val=Math.min(c.max,val)
            } else if(c.min && typeof(c.min)=="number"){
                val=Math.max(c.min,val)
            }
        }
        if(val==null || typeof(val)!="number"){return}
        return val
    },
    setAt:function(nm,val){if(!this.__instance){return}
         return this.set(nm,val)

    },
    relativeTo:function(){
        var b=_parse.apply(this,arguments)
        if(b) {
            if(b.top){this.setAt("top",this.get("top") - b.top)}
            if(b.left){this.setAt("left",this.get("left") - b.left)}
        }
        return this
    } ,
    uuid:function(){
        var vals=[]
        for(var i= 0,l=this.statics.dims,ln= l.length;i<ln;i++){
            vals.push(this.get(l[i])||"!");
        }
        if(this.__constrains){vals.push(JSON.stringify(this.__constrains).replace(/"/g,""))}
        return vals.join(" ")
    },
    minus:function(a,b){
        return this.plus.apply([].slice.call(arguments).concat([true]))
    },
    add:function(v){
        var mutate=true,reverse=false,args=[].slice.call(arguments)
        if(args.length>1 && args[args.length-1]===true){reverse=args.pop()}

        if(typeof(v)==="boolean"){mutate=v;v=args[1]}
        if(typeof(v)=="number"){v={top:v,left:v}}
        if(!(v && typeof(v)=="object")){return this}
        var o=this
        for(var i= 0,l=this.statics.dims,ln=l.length;i<ln;i++){
            var k=l[i];
            if(k in v){
                o.setAt(this.get(k,true)+(num(v[k])*(reverse?-1:1)))
            }
        }
        return o
    },
    update:function(){
        var p=_parse(arguments),k;
        if(!p){return this}
        for(var i= 0,l=this.statics.dims,ln= l.length;i<ln;i++){
            k=l[i];
            if(p[k]==null){continue}
            this.setAt(k,p[k]);
        }
        return this
    } ,
    toMap:function(nocomputed,nonull,nocopy){
        var ret={},inner=this._ensureInner?this._ensureInner():null
        if(this.__savedMap && this.__lastmodcount!=null && this.__lastmodcount===inner.modcount){
            ret= nocopy?this.__savedMap:Object.assign({},this.__savedMap )
        }
        if(inner ){
            ret= (nocopy?inner.data:Object.assign({},inner.data))||{}

        } else{
            for(var i= 0,l=this.statics.dims,ln= l.length;i<ln;i++){
                var v=this.getAt(l[i], nocomputed,true);
                if(!(v==null && nonull)){
                    ret[l[i]]=v
                }
            }
            nonull=false;
        }

        this.__lastmodcount=inner.modcount;
        this.__savedMap=ret;
        return ret;
    },
    computeVal:function(nm ){if(!this.__instance){return}
        var map=this.toMap(true),val;
        if(nm=="height" ){
            val= Math.max((map.bottom||0)-(map.top||0),0)
        } else if(nm=="width"){
            val= Math.max((map.right||0)-(map.left||0),0)
        } else if(nm=="right"){
            val= (map.width||0)-(map.left||0)
        } else if(nm=="bottom"){
            val= (map.height||0)-(map.top||0)
        }

        return val;
    },
    reset:function(data){
        for(var i= 0,l=this.statics.dims,ln=l.length;i<ln;i++){
            if(this.getAt(l[i],true)){this.setAt(l[i],0,true)}
        }
        if(data){this.update(data)}
    },
    getCss:function(el,align){
        var css={}
        for(var i= 0,l=this.statics.dims,ln=l.length;i<ln;i++){
            var v=this.get(l[i])
            if(v!=null){
                css[l[i]]=v
            }
        }
        if(align=="br"){
            delete css.top
            delete css.left
        }
        else if(align=="b"){
            delete css.top
        }
        if(align=="r"){
            delete css.left
        }
        if(align==null || align=="tl"){
            delete css.bottom
            delete css.right
        }

        return css
    },
    overlaps:function(rect){
        return (rect.top<this.bottom && rect.bottom>this.top && rect.left<this.right && rect.right>this.left)
    },
    applyCss:function(el){
        var css=this.getCss(el)
        $d.css(el,css);
    }
}
Gproto.plus=Gproto.add
$.G=$.createClass(function(){this.__instance=true
    this.update.apply(this,arguments);
    //if(arguments[0] )
},Gproto,$.observable,{
    dims:"top left bottom right height width".split(/\s+/),
    preprocessers:{height:function(a){
        return Math.max(0,Number(a)||0)},
        width:function(a){return Math.max(0,Number(a)||0)}
    }
 });
Object.defineProperties($.G.prototype,{
    "top":{get:function(){return this.getAt("top",true);},set:function(v){return this.setAt("top",v);},enumerable:true},
    "y":{get:function(){return this.getAt("top",true);},set:function(v){return this.setAt("top",v);},enumerable:true},
    "right":{get:function(){return this.getAt("right",true);},set:function(v){return this.setAt("right",v);},enumerable:true},
    "bottom":{get:function(){return this.getAt("bottom",true);},set:function(v){return this.setAt("bottom",v);},enumerable:true},
    "left":{get:function(){return this.getAt("left",true);},set:function(v){return this.setAt("left",v);},enumerable:true},
    "x":{get:function(){return this.getAt("left",true);},set:function(v){return this.setAt("left",v);},enumerable:true},
    "height":{get:function(){return this.getAt("height",true);},set:function(v){return this.setAt("height",v);},enumerable:true},
    "width":{get:function(){return this.getAt("width",true);},set:function(v){return this.setAt("width",v);},enumerable:true}
});
})();
!function geometry(ns,factory){
    self[ns]||(self[ns]={});
     self.UI||(self.UI={});
    factory(self,self[ns],$);
    if(typeof(ZModule)!="undefined"){ZModule.getWrapper(ns).resolve(null)}
 }("geometry", function(scope,context,$){
    var LOCS=["top","right","bottom","left"]
    function num(v){
        if(isNaN(v)){
            v= /^\d/.test(String(v))?v.replace(/[^\d\.]/g,""):"0";
        }
        return Number(v)||0;
    }
    scope.num=num;
    function  _bounds( ) {

        var args=[].slice.call(arguments),p={left:0,top:0,bottom:0,right:0};
        if(args.length==2&& typeof(args[1])=="object"){p=args.pop();}

        if(args.length==1 && typeof(args[0])=="object"){
            var frst= args[0] ||{},el=frst.nodeType?frst:frst.el
            if(frst.__bounds__){return frst}
            if(el&&el.getBoundingClientRect) {
                frst= el.getBoundingClientRect();
            }else if(String(frst.type).indexOf("mouse")>=0){
                var d=document,de=d.documentElement ,dbd=d.body;
                var e=args[0];frst={};
                frst.left=(e.pageX!=null) ? e.pageX : e.clientX + (de.scrollLeft ? de.scrollLeft : dbd.scrollLeft);
                frst.top= (e.pageY!=null) ? e.pageY : e.clientY + (de.scrollTop ? de.scrollTop : dbd.scrollTop);
                //if(e.target){frst.height=num(e.target.offsetHeight);frst.width=num(e.target.offsetWidth)}
            }else if(frst.target&&frst.target.getBoundingClientRect){
                frst= frst.target.getBoundingClientRect();
            }
            if(frst.length){//TRBL
                p.top=  num(frst[1]);p.right=  num(frst[1]);p.bottom=  num(frst[2]);p.left=  num(frst[3])
            } else {

                var left=  num(frst.x||frst.left)||0,top=  num(frst.y||frst.top)||0;
                (left>=0.1||left<=-0.1)                 &&(p.left=   left);
                (top>=0.1||top<=-0.1 )                  &&(p.top=    top );
                (frst.height>=0.1)                      &&(p.height=   num(frst.height)) ;
                (frst.width>=0.1 )                      &&(p.width=   num(frst.width));
                (frst.right>0.1||frst.right<=-0.1   )   &&(p.right=   num(frst.right));
                (frst.bottom>=0.1||frst.bottom<=-0.1 )  &&(p.bottom=   num(frst.bottom));

            }
        } else{
            p.y= p.top=  num(args.shift());
            p.right=  num(args.shift());
            p.bottom=  num(args.shift());
            p.x=p.left=  num(args.shift());
        }
        p.__bounds__=1;
        return p;
    }
    function  mousePos(e,p) {p=p||{};
        if (!e) var e = window.event;
        if (e.pageX || e.pageY) 	{
            p.x = e.pageX;
            p.y = e.pageY;
        }
        else if (e.clientX || e.clientY) 	{
            p.x = e.clientX + document.body.scrollLeft
                + document.documentElement.scrollLeft;
            p.y = e.clientY + document.body.scrollTop
                + document.documentElement.scrollTop;
        }
        return p
    }
    function _parseArgs(a){
        var r=[]
        for(var i= 0,ln= a.length,v;v=a[i],i<ln;i++){
            if(v && typeof(v)=="object"&&({}).toString.call(v).indexOf("Arguments")>=0){
                [].push.apply(r,_parseArgs(v))
            }else{
                r.push(v)
            }
        }
        var ln=r.length
        while(ln>0){
            if(typeof(r[ln-1])=="undefined"){
                r.pop()
                ln=r.length
            } else{break;}
        }
        return r


    }
    function  XY(e,p) {p=p||{};
        if(e && e.__xy__){return e}
        if(!e){return p}
        return _bounds(e,p);

    }
    function _cleanObj(){return Object.create(null);}
    function _addFields(proto,list){
        proto.__props=[].slice.call(list)
        proto.__unit={}
        for(var i= 0,l=list,ln= l.length;i<ln;i++){
            var nm=l[i],nm1=l[i].charAt(0).toUpperCase()+l[i].substr(1);
            var accessors={get:Function("return this.getAt('"+nm+"')"),set:Function("v","return this.setAt('"+nm+"',v)")}
            $.defineProperty(proto,nm,{get:accessors.get,set:accessors.set,enumerable:true});
            proto["set"+nm1]=accessors.set
            proto["add"+nm1]=Function("v","var k='"+nm+"';return this.set"+nm1+"(this.get"+nm1+"()+this.toNum(v))")
            proto["get"+nm1]=accessors.get
        };
        proto._init=function(){
            (function($this){
                var _innervals=_cleanObj(),props=$this.__props;$this.hooks||($this.hooks={});
                for(var i= 0;i<props.length;i++){_innervals[props[i]]=0}
                $this.clear=function(){
                    for(var i= 0;i<props.length;i++){_innervals[props[i]]=0}
                }
                $this.getAt=function(loc,ignorehooks){
                    var h=(ignorehooks===true)?null:this.hooks;
                    return (h&&loc in h&&h[loc].get)?h[loc].get.call(this,_innervals[loc]):_innervals[loc]
                }
                $this.setAt=function(loc,v,ignorehooks){
                    if((loc=="left" && this.rightAligned) || (loc=="top" && this.bottomAligned)){ return}

                    if(typeof(v)=="string"){
                        if(/^[^\d\.]/.test(v)){
                            if(/^([+*%\/]|(- ))/.test(v)){v=$this.getAt(loc,false)+" "+ v}
                            try{v=eval(v);} catch(e){$.handleEx("error eval:"+v+" "+e)}
                        } else if(/[\D]+$/.test(v)){var u;
                            v=Number(v.replace(/[\D]+$/,function(a){u=a;return ""}))||0;
                            u && ($this.__unit[loc]=u);
                        }
                    }
                    var val=num(v),j= 1,h=(ignorehooks===true)?null:this.hooks,old=_innervals[loc];
                    if(val && this._valOffsets && this._valOffsets[loc]){val-=this._valOffsets[loc]}
                    if(!val||old==val){ return}

                    if(h&&loc in h&&h[loc].set){
                        h[loc].set.call(this,val,_innervals[loc])
                    } else{
                        _innervals[loc]= val
                    }

                    //  if(!(ignorehooks===true)&&this.hooks[loc]&&this.hooks[loc].set){this.hooks[loc].set.call(this,val,_innervals[loc]);j=1}
                    //  else{(loc in _innervals)&&(_innervals[loc]= val);j=1; }
                    if(this._listeners&&!this._paused){
                        this.dispatch(loc,val,old)
                    }
                    return this;}
            })(this);
        }
        proto.setValOffsets=function(vals){this._valOffsets||(this._valOffsets=Object.create(null));Object.keys(vals).forEach(function(k){this._valOffsets[k]=Number(vals[k])||0},this)}
        proto.getValOffsets=function(){return this._valOffsets }
        proto.toJSON=function(){return JSON.stringify(this.toObject())  }
        proto.toString=function(){var nm=this.constructor?this.constructor.name:"Props",
            obj={};obj[nm]=this.toObject();
            return JSON.stringify(obj)
        }
        proto.toNum=function(v){ if(isNaN(v)){
            v= /^\d/.test(String(v))?v.replace(/[^\d\.]/g,""):"0";
        }
            return Number(v)||0;
        }
        proto.toMap=proto.toObject=function(ignorehooks){ var ret={},l=this.__props;ignorehooks=!!ignorehooks
            for(var i= 0,ln= l.length;i<ln;i++){ret[l[i]]=this.getAt(l[i],ignorehooks)}
            return ret;
        }
        proto.hasUnit=function(k){ return this.__unit[k]!=null},
            proto.isPerc=function(k){ return this.__unit[k]=="%"},
            proto.getWithUnit=function(k0,par){var k=String(k0).toLowerCase()
                if(this.isPerc(k)&&par&&!isNaN(par[k])) {
                    return par[k]*(this.getAt(k,true)/100)
                }
                return this.getAt(k,true)+(this.hasUnit(k)?this.__unit[k]:0);
            }
        proto.clone=function(){
            var ret={},l=this.__props,data=this.toObject(true),al=this.getAlignment?this.getAlignment():null;

            var nu=new this.constructor(),a2
            if(al){nu.setAlignment(al)      ;a2=al.toLowerCase();
                if(a2.indexOf("r")>=0){delete data.left}
            }
            nu.update(data);
            if(al){  if(nu.right!=data.right){nu.right=data.right}
            }
            return nu;
        }
        proto.minus=function(a,b){
             return this.plus.apply([].slice.call(arguments).concat([true]))
        }
        proto.add=proto.plus=function(v){
            var mutate=true,reverse=false,args=[].slice.call(arguments)
            if(args.length>1 && args[args.length-1]===true){reverse=args.pop()}
            if(typeof(v)==="boolean"){mutate=v;v=args[1]}
            if(typeof(v)=="number"){v={top:v,left:v}}
            var o=mutate?this:this.clone()
            for(var i= 0,l=o.__props,ln=l.length;i<ln;i++){var k=l[i];if(k in v){o.setAt(this.getAt(k,true)+(num(v[k])*(reverse?-1:1)))}}
            return o
        }
        proto.div=function(v){var mutate=true
            if(typeof(v)==="boolean"){mutate=v;v=arguments[1]}
            if(typeof(v)=="number"){v={top:v,left:v}}
            var o=mutate?this:this.clone()
            for(var i= 0,l=o.__props,ln=l.length;i<ln;i++){var k=l[i];if(k in v && v[k]){o.setAt(this.getAt(k,true)/num(v[k]))}}
            return o
        }
        proto.mul=function(v){var mutate=true
            if(typeof(v)==="boolean"){mutate=v;v=arguments[1]}
            if(typeof(v)=="number"){v={top:v,left:v}}
            var o=mutate?this:this.clone()
            for(var i= 0,l=o.__props,ln=l.length;i<ln;i++){var k=l[i];if(k in v){o.setAt(this.getAt(k,true)*num(v[k]))}}
            return o
        }
        proto.relativeTo=function(rect ){var b=_bounds.apply(this,arguments)
            if(b) {
                if(b.top){this.addTop(0- b.top)}
                if(b.left){this.addLeft(0- b.left)}
            }
            return this
        }
        proto.hash=function(){return this.toJSON().replace(/["'\}\{\[\]\s]/g,"")}
        proto.equals=function(o){
            var ctor=this.constructor
            var other=new ctor(o)
            return other.hash()==this.hash()
        }
        proto.reset=function(data){
            "_listeners" in this && (this._listeners.length=0);
            for(var i= 0,l=this.__props,ln=l.length;i<ln;i++){if(this.getAt(l[i],true)){this.setAt(l[i],0,true)}}
            if(data){this.update(data)}
        },
            proto.empty=function(){
                "_listeners" in this && (this._listeners.length=0);
                this.element&&(this.element=null);
                this._paused=!0;
                for(var i= 0,l=this.__props,ln=l.length;i<ln;i++){if(this.getAt(l[i],true)){this.setAt(l[i],0,true)}}
                "insets" in this && (this.insets.destroy());
                "outsets" in this && (this.outsets.destroy());
                this._paused=!1;
            }
        /*proto.reset=function(data,keeplisteners){
            this.clear();
            !keeplisteners&& ("_listeners" in this) && (this._listeners.length=0);
            if(data){this.update(data)}
            return this
        },
            proto.empty=function(){
                for(var i= 0,l=this.__props,ln=l.length;i<ln;i++){if(this.getAt(l[i],true)){return false}}
                return true
            }
        proto.clear=function(){
            this._paused=!1;
            for(var i= 0,l=this.__props,ln=l.length;i<ln;i++){if(this.getAt(l[i],true)){return false}}
            "insets" in this && (this.insets.destroy());
            "outsets" in this && (this.outsets.destroy());
            this._paused=!0;
            return this
        }*/
        proto.destroy=function(){
            this.empty();
            (this.constructor.__cache||(this.constructor.__cache=[])).push(this);

        }
        //ret.width=this.getWidth();ret.height=this.getHeight();
        proto.update=function(){
            var args=[].slice.call(arguments),l=this.__props;;
            if(args.length>1){
                for(var i= 0,ln= l.length;i<ln;i++){
                    if(args[i]>0) this.setAt(l[i],args[i]||0)}
            } else if(args.length==1){
                if((Number(args[0])>0 || typeof(args[0])=="number")&&(args[0] instanceof Offset)){
                    var v=Number(args[0])
                    for(var i= 0,ln= l.length;i<ln;i++){
                        if(l[i]>0)this.setAt(l[i],v)
                    }
                }  else{
                    var b=_bounds(args[0])   ;
                    for(var i= 0,ln= l.length;i<ln;i++){
                        if(l[i] in b){num(b[l[i]]) && this.setAt(l[i],num(b[l[i]])||0)}
                    }
                }
            }
            return this
        }
        proto.on=function(fn,dim0){var dim=dim0?String(dim0).split(/[\s,]+/).map(function(it){return it.trim()}):[]
            if(typeof(fn)!="function"){return}
            if(!this._listeners){this._listeners=[]} ;

            this._listeners.push(function(f,dim,d,val,old){
                if(!dim.length || dim.indexOf(d)>=0 ){f.call(this,d,val,old)
                }
            }.bind(this,fn,dim))
            return this;
        }
        proto.fire=proto.dispatch=function(k,v,old){
            !this._paused&&this._listeners && this._listeners.length && this._listeners.forEach(
                function(it){  it(k,v,old)  },this)
            return this;
        }
    }
    function Point(){    if(!(this instanceof Point)){return new Point(arguments[0],arguments[1],arguments[2])}
        var d=Point.parse.apply(null,arguments)
        Object.defineProperties(this,{
            id:{value:String(d.id),writable:!!d.mutable,enumerable:true,configurable:false},
            x:{value:num(d.x),writable:!!d.mutable,enumerable:true,configurable:false},
            y:{value:num(d.y),writable: !!d.mutable,enumerable:true,configurable:false}
        });
    }
    Point.parse=function(){
        var ln=arguments.length,x=arguments[0],y=arguments[1],id=arguments[2]
        var mutable=false
        if(x===true){mutable=true;x=y;y=id;id=arguments[3]}
        if( x&&typeof(x)=="object"){
            var o=x;
            if(typeof(y)=="string"){id=y}
            if(o.type ){
                var p=mousePos(o);x= p.x;y= p.y;
            } else if(o.nodeType){
                var b=o.getBoundingClientRect?o.getBoundingClientRect():{top:o.offsetTop,left:o.offsetLeft}
                x= b.left;y=b.top
            }else {x= typeof(o.x)=="number"? o.x:num(o.left|| o.width);y=typeof(o.y)=="number"? o.y:num(o.top|| o.height)}
        }
        return {mutable:mutable,x:x,y:y,id:id}
    }
    Point.prototype||(Point.prototype={});
    Object.defineProperties(Point.prototype,
        {"p":{
            get:function(){return Math.sqrt(this.x*this.x + this.y*this.y)},
            set:function(){},
            enumerable:true
        }
        })

    Point.prototype.within=function(o){if(!o){return}
        var r= Rect.from(o);if(!r){return}
        return (r.top<=this.y&& r.bottom>=this.y&&r.left<=this.x&& r.right>=this.x)
    }
    Point.prototype.add=Point.prototype.plus=function( ){ var d=Point.parse.apply(null,arguments) ;
        if(d.x!=null){this.x+= d.x}
        if(d.y!=null){this.y+= d.y}
        return this;
    }
    Point.prototype.restore=function( ){
        if(this._saved){this.x=this._saved[0];this.y=this._saved[1];this._saved=null}
        return this;
    }
    Point.prototype.save=function( ){ this._saved=[this.x,this.y]
        return this;
    }
    Point.prototype.minus=function( ){ var d=Point.parse.apply(null,arguments) ;
        if(d.x!=null){this.x-= d.x}
        if(d.y!=null){this.y-= d.y}
        return this;
    }
    Point.prototype.update=function( ){ var d=Point.parse.apply(null,arguments) ;
        if(d.x!=null){this.x= d.x}
        if(d.y!=null){this.y= d.y}
        return this;
    }
    Point.prototype.applyCss=function(el) {
        if (el && el.style) {
            el.style.top = this.y + "px";
            el.style.left = this.x + "px"
        }
        return this;
    }
    Point.prototype.closest=function(o){
        var p=this.p;
        return [].concat(o).map(function(it){return  new  Point(it);}).sort(function(a,b){var dif=Math.abs(a.p-p)- Math.abs(b.p-p);return !dif?0:dif>0?1:-1})
    }

    Point.prototype.equals=function(o){
        var r=new  Point(o);
        return (r.x==this.x&& r.y==this.y)
    }
    Point.prototype.constructor=Point
    Point.from=function(a,c,d,e){
        if(a && typeof(a)=="object"&&a instanceof Point){return a}
        return new Point(a,c,d,e)
    }

    function Offset(init0){   if(!(this instanceof Offset)){return new Offset(init0)}
        this._init();
        this.update(init0); this.constructor=Offset
    }
    Offset.prototype={ }
    _addFields(Offset.prototype,LOCS.slice());
    Offset.prototype.constructor=Offset;

    function SimpleRect(init0){   if(!(this instanceof SimpleRect)){return new SimpleRect(init0)}
        this._init();
        this.update(init0); this.constructor=SimpleRect
    }
    SimpleRect.prototype={ }
    _addFields(SimpleRect.prototype,["top","left","height","width"]);
    SimpleRect.prototype.constructor=SimpleRect;
    function Rect(){
        if(!(this instanceof Rect)){return new Rect(arguments)}
        var alignment="",a=_parseArgs(arguments)
        if(typeof(a[a.length-1])=="string"){alignment= a.pop()}
        this._init();
        this.constructor=Rect
        this._alignment="";

        if(alignment){
            if(String(alignment).length<=2){
                this.bottomAligned=/b/i.test(String(alignment))
                this.rightAligned=/r/i.test(String(alignment))
            } else {
                this.bottomAligned = /bottom/i.test(String(alignment))
                this.rightAligned = /right/i.test(String(alignment))
            }
        }
        this.insets=this.padding=new Offset();
        this.outsets=this.margins=new Offset();

        this._paused=true
        var init=null
        if(a.length==1){
            init= a.shift()
        }
        if(a.length && a.every(function(a){return typeof(a)=="number"})){
            var b={},ln= a.length;
            ["top","right","bottom","left"].forEach(function(it,i){b[it]=i<ln?Number(a[i]):0});
            //if(b.bottom &&  b.top){b.height= b.bottom- b.top;delete b.bottom}
            //if(b.right &&  b.left){b.width= b.right- b.left;delete b.right}
            init=b;
        }
        if(init && init.nodeType){this.element=init}
        else if(init ){
           // if(this.bottomAligned){delete init.top} else {delete init.bottom}
            //if(this.rightAligned){delete init.left} else {delete init.right}
        }
        this.update(init);
        this._paused=false
    }
     Rect.prototype={  element:null,
        hooks:{bottom:{get:function(val){return val?val:(this.getAt("top",true)+this.getAt("height",true))}},
            right:{get:function(val){  return val?val:(this.getAt("left",true)+this.getAt("width",true))}},
            width:{  get:function(val){return val?val:this.getAt("right",true)-this.getAt("left",true)}},
            height:{  get:function(val){return val?val:this.getAt("bottom",true)-this.getAt("top",true)} }
        },
        addWidth :function(val){return this.setAt("width",this.getWidth()+num(val))},
        addHeight:function(val){return this.setAt("height",this.getHeight()+num(val));},
        getBounds:function( ){  return this.toObject(); },
        update:function(){
            var l=this.__props,b=_bounds.apply(this,arguments)  , r,b ;
            for(var i= 0,ln= l.length;i<ln;i++){ var v,nm=l[i];
                if(nm in b && (v=num(b[v]))){
                    if(!v){continue}
                    if(nm=="right"){r=v;}
                    else if(nm=="bottom"){b=v;}
                    else{this.setAt(nm,v)}
                }
            }
            if(r>1&&!this.getAt("left",true)){this.right=r}
            if(b>1&&!this.getAt("top",true)){this.bottom=b}
        },
      relativeTo:function(rect,offsets,nomutate ){
          if(typeof(offsets)=="boolean"){nomutate=offsets;offsets=[0,0]}
          if(typeof(offsets)=="number"){offsets=[offsets,offsets]}
          if(!Arrat.isArray(offsets)){offsets=[0,0]}
          var cont=Rect.from(rect),bounds=nomutate?this:this.clone()
          offsets[1]=offsets[1]||0
          offsets[0]=offsets[0]||0
          bounds.top=Math.max(offsets[1],bounds.top-cont.top)
          bounds.left=Math.max(offsets[0],bounds.left-cont.left)
          bounds.bottom = Math.min(cont.height-offsets[1],bounds.top + bounds.height)
          bounds.right = Math.min(cont.width-offsets[0],bounds.left + bounds.width);

         return bounds
        },
        setBounds:function( ){ return this.update.apply(this,arguments); },
        getBB:function(margins){
            var l=this.__props
            margins=margins||this.margins||{}
            if(!margins){
                for(var i= 0;i< l.length;i++){margins[l[i]]=num(margins[l[i]])}
            }

            var ret=this.getBounds();
            ret.top-=margins.top;ret.left-=margins.left;
            ret.right+=margins.right ;ret.bottom+=margins.bottom;
            ret.width=ret.right-ret.left;ret.height=ret.bottom-ret.top;
            return ret;
        },
        getContentbox:function(){
            var ret=new Rect(this.getInnerBounds())
            return ret;

        },
        setAlignment:function(a){//if(a){
            var aa=String(a).toLowerCase();
            //["top","left","right","bottom"].forEach(function(it){aa=aa.replace(it,it.charAt(0))}); this._alignment=aa}
            this._alignment=aa
        },
        getAlignment:function(){return this._alignment},
        getInsets:function(offsets){
            offsets=offsets||this.padding||this.insets||new Offset()
            if(!isNaN(offsets)){
                offsets=new Offset({top:offsets,left:offsets,right:offsets,bottom:offsets})
            }
            return offsets;
        },
        getInnerBounds:function(offsets){
            var offsets=this.getInsets( );
            var b=this,ret=b.toMap();
            ret.top =offsets.top;ret.left =offsets.left;
            //ret.right = offsets.right ;ret.bottom =offsets.bottom;
            ret.width= ret.width- (offsets.right+offsets.left);ret.height= ret.height- (offsets.bottom+offsets.top);
            return ret;
        },
        moveTo:function(x,y,alignment){alignment=String(alignment||"").toLowerCase();
            if(arguments.length==1&& x&&typeof(x)=="object"){
                y= x.y||x.top;x= x.x||x.left
            }
            if(alignment.indexOf("right")>=0){ this.setAt("right",x )}
            else{this.setAt("left",x);}
            if(alignment.indexOf("bottom")>=0){this.setAt("bottom",y+this.height)}
            else{this.setAt("top",y);}
            return this;
        },
        moveBy:function(x,y){
            if(arguments.length==1&& x&&typeof(x)=="object"){
                y= x.y||x.top;x= x.x||x.left
            }
            this.addLeft(x);
            this.addTop(y);      return this;
        },
        resizeBy:function(x,y){
            if(arguments.length==1&& x&&typeof(x)=="object"){
                y= x.y||x.top;x= x.x||x.left
            }
            this.addHeight(y);
            this.addWidth(x);    return this;
        },
        resizeTo:function(x,y){
            if(arguments.length==1&& x&&typeof(x)=="object"){
                y= x.y||x.height;x= x.x||x.width
            }
            this.setWidth(num(x));
            this.setHeight(num(y));       return this;
        },
        getPoints:function(){
            var rect=this;
            var ret=[new Point(rect.top,rect.left,"TL" ),
                new Point(rect.top,rect.right,"TR"),
                new Point(rect.bottom,rect.right,"BR"),
                new Point(rect.bottom,rect.left ,"BL")
            ];
            ret.TL=ret[0];ret.TR=ret[1];
            ret.BL=ret[3];ret.BR=ret[2];
            return ret;
        },
         isPoint:function(){
           var ln=arguments.length,first=arguments[0],secnd=arguments[1]
             if(first && typeof (first)=="object" && first instanceof UI.Point){return first}
             if(ln==2 && Number.isNumber(first)&& Number.isNumber(arguments[1])){
                 return UI.Point(first,secnd)
             } else if(ln==1 && first && typeof (first)=="object" && first.x!=null && first.y!=null&& ($.keys(first).length==2 ||(first.width==null && first.height==null) )){
                 return UI.Point(first.x,first.x)
             } else if(ln==1 && $.isArray(first) && Number.isNumber(first[0]) && Number.isNumber(first[1])){
                 return UI.Point(first[0],first[1])
             }
         },
        overlaps:function(rect){
            return (rect.top<this.bottom && rect.bottom>this.top && rect.left<this.right && rect.right>this.left)
        },
        within:function(r,offset){

            offset=Math.max(Number(offset)||0,0)+1
            var rect=Rect.from(r,true);
            return (rect.top<=(this.top+offset) && rect.bottom>=(this.bottom-offset) && rect.left<=(this.left+offset) && rect.right>=(this.right-offset))
        },
         containsPoint:function(r,offset){
             var pt=this.isPoint(r),offset=this.isPoint(offset)||{x:0,y:0}
             if(pt){offset.x=num(offset.x);offset.y=num(offset.y)
                 return ((pt.x - offset.x)>=this.left && (pt.y-offset.y) >=this.top && (pt.x + offset.x) <=this.getAt("right")&& (pt.y+offset.y) <=this.getAt("bottom"))
             }
         },
        contains:function(r,offset){
            var pt=this.isPoint(r)
            if(pt){
                return this.containsPoint(r,offset)
            }
            var rect=Rect.from(r,true);
            return rect.within(this,offset)
        },
        refresh:function(){  if(this.element){this.update(this.element)}},
        applyPositionCss:function(el,aln) {
             $d(el).css(this.getPositionCss(el,aln));
            return this
        },
         getPositionCss:function(el,aln,holder) {if(typeof(aln)!="string"){aln=""}
             el = el || this.element
             if(!(el&&el.nodeType)){return  this}
             var ret=holder||{}  , al=aln||this.getAlignment(), l, r, b,t;
             if(!al) {
                 al = "";
                 if (el.style.right && el.style.right != "auto") {
                     al = al + "right"
                 }
                 if (el.style.bottom && el.style.bottom != "auto") {
                     al = al + "bottom"
                 }
             }
             l=this.__props
             al=al.replace(/right/i,"r").replace(/left/i,"l").replace(/top/i,"t").replace(/bottom/,"b").replace(/center/,"c")
             b=al.indexOf("b")>=0?Math.abs(this.getAt("bottom",true)):0
             r=al.indexOf("r")>=0?Math.abs(this.getAt("right")):0;
             // for(var i= 0;i< l.length;i++){ret[l[i]]=this.getAt(l[i])+"px"}
             if(b){
                 var p="bottom",v=this.getAt(p);
                 ret[p]=Math.abs(v)<=0.2?0:(v)
                 ret["top"]=null
             }
             else{
                 var p="top",v=this.getAt(p);
                 if(v){
                     if(!(Math.abs(v)<=0.2&&el.style.display=="relative")){
                         ret[p]=Math.abs(v)<=0.2?0:(v)
                     }
                 }
                 ret["bottom"]=null
             }
             if(r){
                 var p="right",v=this.getAt(p)

                 ret[p]=Math.abs(v)<=0.2?"0":(v)

                 ret["left"]=null
             }
             else{var p="left",v=this.getAt(p);
                 if(v){
                     if(!(Math.abs(v)<=0.2&&el.style.display=="relative")){
                         ret[p]=Math.abs(v)<=0.2?0:(v)
                     }
                 }
                 ret.right=null
             }
             return ret;
         },
         getDimensionCss:function(el,holder) {
             el=el||this.element
            var ret=holder||{}
             var p="width",v=this.getAt(p,true);
             if(v&&Math.abs(v)>0.2){
                 ret[p]=v
             }
             var p="height",v=this.getAt(p,true);
             if(v&&Math.abs(v)>0.2){
                 ret[p]=v
             }
             return ret;
         },
        applyDimensionCss:function(el) {
           $d(el).css(this.getDimensionCss(el ));
            return this

        },
        applyCss:function(el,aln){
            return  this.applyPositionCss(el,aln).applyDimensionCss(el,aln);
        },
         getCss:function(el,aln){
             var holder={};
             this.getPositionCss(el,aln,holder)
              this.getDimensionCss(el,holder);
             return holder;
         }
    }

    _addFields(Rect.prototype,LOCS.concat(["width","height"]));
    Rect.prototype.constructor=Rect
    Rect.from=Rect.create=function(data,nocache){
        if(data &&typeof(data)=="object"&&data instanceof Rect){return data}
        if(typeof(data)=="boolean"){nocache=data;data=null}
        if(nocache!==true && Rect.__cache && Rect.__cache.length){
            return Rect.__cache.shift().update(data);
        }
        return new Rect(arguments);
    }
    Rect.fromBounds= function(el){
        if(el&&el.getBoundingClientRect){
            var b=el.getBoundingClientRect()
            return new Rect(el)
        }else if(el&&"top" in el){var b=el;
            return new Rect(b.top,b.right,b.bottom,b.left)
        }
    }
    Rect.fromClip= function(el){
        var b=null,mp={"top":0,"right":0,"bottom":0,"left":0}
        if(el&&el.nodeType){
            b=$d.css(el,"clip")
        }else if(typeof(el)=="string"){b=el; }

        if(typeof(b)=="string"){b= b.trim();
            if(b.indexOf("rect")==0){b= b.replace(/rect|[\(\)]/g,"").trim()}
            if(b=="auto"||b=="initial"||b=="inherit"){b=""}
            var arr=["top","right","bottom","left"];
            b.split(/[\s,]/).forEach(function(it,i){
                mp[arr[i]]=Number(it.replace(/[^\d\.]+$/g,"")||0)
            })
        }
        return new Rect(mp)
    }
    Rect.mergeBounds=function(){
         var bounds=arguments.length==1?arguments[0]:[].slice.call(arguments)
        var boundsList=List.from(bounds)
         var outerbounds={
             top:boundsList.collect("top").min()||0,
             left:boundsList.collect("left").min()||0,
             bottom:boundsList.collect("bottom").max()||0,
             right:boundsList.collect("right").max()||0
         }
        outerbounds.height=outerbounds.bottom-outerbounds.top
        outerbounds.width=outerbounds.right-outerbounds.left
        //outerbounds.height=outerbounds.bottom-outerbounds.top;
        //outerbounds.width=outerbounds.right-outerbounds.left
        return new Rect(outerbounds)
     }

    var Visitable={
        accept:function(visitor,memo){
            visitor.visit(this,memo);
        }
    }
    function Visitor(context){
        this.ctx=context;
        this.visit=function(visitable,memo){

        }
    }
     context.Rect=UI.Rect=Rect;
    context.Offset=UI.Offset=Offset;
    context.Point=UI.Point=Point;
    context.SimpleRect=UI.SimpleRect=SimpleRect
    scope.Visitable=Visitable;
});/**
 * Created by Atul on 11/23/2014.
 */
self.ResURL= (function(){
         var root = null,loc = null,isstore=false
        function remSlash( path,which){ //0 - both, 1 = left, 2 - right
            if(!path){return ""}
            var re=/^\/|\/$/g
            if(which){re=which==1?/^\//:/\/$/}
            return String(path).replace(re,"")
        }
    function _decode(v){if(!v){return ""}
        return String(v).replace(/%3D/g,"=").replace(/%26/g,"&").replace(/%3F/g,"?").replace(/%7B/g,"{").replace(/%7D/g,"}").replace(/%3A/g,":").replace(/%22/g,'"').replace(/%20/g,' ')
            .replace(/^"|"$/g,"").replace(/^"|"$/g,"").trim()
    }
    function _encode(v){if(!v){return ""}
        return  v
    }
    function parseString(o,data){
        return _decode(o).split("&").reduce(function(m,a){var arr= a.split("=")
            if(arr.length>1){m.push(a)}
            return m
        },data)
    }
    function toQStr(o,deep){
        if(!o){return ""}
        var dat=(o)  ,data=[];
        if(dat&&typeof(dat)=="object"){

            Object.keys(dat).forEach(function(k){
                if(String(k).indexOf("promise")>=0){return}
                var d=dat[k]
                if(d!=null&&!isNaN(+d)){d=  +d }
                if(d && typeof(d)=="object"&& d instanceof Date){
                    d=+d
                }
                if(!d||typeof(d)!="object"){d= String(d)}
                if(d.toJson||d.toJSON){d= (d.toJson||d.toJSON)()}
                else{
                    var mp=d.toMap?d.toMap(true):d
                    d= deep?_ser(mp):JSON.stringify(mp)
                }
                data.push(k+"="+_encode(d ));
            })
        }  else{
            if(typeof (dat)=="string"){
                parseString(dat,data)
            }
         }
        return  data.join("&");
    }
    var _cache={}
    var _ctxProps=["scheme","protocol","port","host","hostname","isfile","contextPath","contextUrl","isCrossSite","origin","hostip"];
    var _nonctxProps=["path","file","search","search","hash"],
        keys = ['source', 'scheme', 'host', 'userInfo', 'user', 'pass', 'hostname', 'port',
            'relative', 'pathname', 'directory', 'file', 'query', 'hash'
        ];
    var  parser = {
        strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
        loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/\/?)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/ // Added one optional
    };
    function _parse(url){
        var query
        if(!/^(http|file)/i.test(url)){
            url=remSlash(url)
            if(root){
                if(root.contextPath && url.indexOf(root.contextPath)==0){
                    url=remSlash(url.substr(root.contextPath.length))
                }
                url=root.contextPath?[root.hostname,remSlash(root.contextPath),url].join("/"):[root.hostname,url].join("/")
            }
        }
        var parts=parser["loose"].exec(url) , uri = {}, i = 14;

        while (i--) {
            if (parts[i]) {
                uri[keys[i]] = parts[i];
            }
        }
        query = uri[keys[12]] || '';
        uri.args={}
        query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(a, nm, val) {
            if (nm) {
                uri.args[nm] = val;
            }
        });
        if(!uri.hostname && root){
            uri.hostname=root.hostname
            uri.port=root.port
            uri.scheme=root.scheme
            uri.contextPath=root.contextPath
            uri.contextUrl=root.contextUrl
        }
        if(uri.hostname){
            if(uri.port){
                uri.host=uri.hostname+":"+uri.port
            } else{uri.host=uri.hostname}
            if(/\d{2,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/.test(uri.hostname)){
                uri.hostip=uri.hostname;
            }
        }
        if( uri.scheme){
            uri.protocol=uri.scheme+":"
        }
        uri.path=remSlash(uri.pathname||"")
        uri.host=remSlash(uri.host||"")
        if(uri.host){
            uri.origin=uri.protocol+"//"+uri.host
        }
        delete uri.source;
        return uri;
    }
        function ctor(str1,ctx ){
            Object.defineProperty(this,"hash", {
                get:function(){
                    return this.__hash||(this.__hash="");
                },
                set:function(val) {
                    if(val && typeof(val)=="string"){
                        if(val.charAt(0)=="#"){val=val.substr(1)}
                        this.__hash=val
                    }
                },enumerable:true,configurable:true
            });
             Object.defineProperty(this,"search", {
                get:function(){
                    return this.__search=this.args?toQStr(this.args):"";
                },
                set:function(val) {
                    this.updateArgs(val);
                 },enumerable:true,configurable:true
        });
            Object.defineProperty(this,"path",{
                get:function(){return this.__path||(this.__path="");},
                set:function(val){
                    var str1 = remSlash(val)
                    str1 = str1.replace(/\\/g, "/")
                    var lastisslash = str1[str1.length - 1] == "/"
                    str1 = remSlash(str1)
                    var arr=[],str=str1;
                    if(str1.indexOf("//")>=0){
                        arr = str1.split(/\/\//)
                        str = arr.pop();
                        this.scheme = arr[0] || ""
                    }
                    if(str1.indexOf("#")>=0) {
                        arr = str.split("#");
                        str = arr.shift();
                        this.hash = arr.join("#");
                    }
                    if(str1.indexOf("?")>=0) {
                        arr = str.split(/\?/);
                        str = arr.shift();
                        this.search = arr.join("?")
                    }

                    var path=remSlash(str),host,p=remSlash(str)
                    if(/^\w[\w\.:]+\/?$/.test(str)) {
                       host = str
                    } else if(!this.host){
                        arr= p.split("/")
                        host = arr.shift() || "";
                        path = remSlash(arr.join("/"))
                    }


                    if(this.host && path.toLowerCase().indexOf(this.host.toLowerCase())==0){
                        path=path.substr(this.host.length)
                    }
                    else if(host && !this.host){
                        this.host=remSlash(host);
                    }
                    if (!lastisslash && path) {
                        arr = path.split("/");
                        this.file = remSlash(arr.pop());
                        path = arr.join("/")
                    }
                    if(path && root){
                        var first= path.split("/")[0]
                        if(root.contextPath && this.host==root.host && first==root.contextPath){
                            var arr=path.split("/");arr.shift()
                            path=arr.join("/")
                            if(!root.contextUrl){
                                root.contextUrl=root.host+"/"+(root.contextPath?(remSlash(root.contextPath)+"/"):"")
                            }
                            this.contextUrl=root.contextUrl
                        }

                    }


                    this.__path=remSlash(path);
                },
                enumerable:true,configurable:true
            })
            this.init(str1,ctx)

        }

        ctor.prototype={
            scheme: null, host: null, contextPath: null, contextUrl:null,search: null,hash: null,isCrossSite:null,"file":null,args:null,
            hostname: null,url:null,pathname: null,port: null,protocol: "http:",hostip:null,origin:null,
            init:function(str1,ctx){
                if(ctx){this.contextPath=remSlash(ctx)}
                this.url=str1||""
                 this.hash=this.search=this.scheme=this.host=this.path=this.file="";
                this.args={};
                this.url=str1||""
                if(str1===false){return}


                this.inspect()
            },

            inspect:function(){
                var str1=this.url;
                var parts=_parse(str1)
                for(var k in parts){
                    if(k in this && typeof(parts[k])!=="function"){
                        this[k]=parts[k]
                    }
                }
                this.args=this.args||{};

                if(str1 && !root&&str1.toLowerCase().indexOf("file:")>=0){
                    this.isfile=true
                    //if(location.href.indexOf("index.html")>0){
                    var path=location.href.split("/")
                    path.pop();
                    this.host=path.join("/")
                    //}
                    return
                }
                 if(root&&this.origin!=root.origin){
                     if(this.hostip && !(this.hostip==root.hostip && this.port==root.port)){
                         this.isCrossSite=true
                     } else if(!this.hostip){
                         this.isCrossSite=true
                     }
                  }
             },
            update:function(obj){
                if(obj&&typeof(obj)=="object"){
                    for(var k in obj){
                        if(obj.hasOwnProperty(k)&&k in this&&typeof(this[k])!="function"){
                            if(k=="args"){this.updateArgs(obj[k])}
                            else{this[k]=obj[k]}
                        }
                    }
                } else if (typeof obj =="string"){
                    this.inspect(obj)
                }
                return this;
            },
            updateArgs:function(val,extnd){
                if(!extnd || val===false){this.args={}}
                 if (!val) { return}

                this.args=this.args||{};
                if (typeof val=="string") {
                     if(val.charAt(0)=="#"){val=val.substr(1)}
                      String(val).split("&").reduce(function (m, it) {
                        if (it) {
                            var ar = it.split("=");
                            m[ar.shift()] = decodeURIComponent(ar[0] || "")
                        }
                        return m;
                    }, this.args)
                } else if (typeof val=="object") {var args=this.args;
                    if(Array.isArray(val)){
                        val.forEach(function(k){args[k]=""})
                    }
                    else{
                        for(var k in val){
                            if(typeof(k)=="string"&&val.hasOwnProperty(k)){
                                if(k.indexOf("promise")==-1&& val[k]&&typeof(val[k])=="object"&&(Object.getPrototypeOf(val[k])!=Object.prototype||val[k].promise)){continue}
                                if(val[k]==null){continue}
                                args[k]=val[k]
                            }
                        }
                    }
                } else if (typeof val=="number") {
                    this.args.id=val;
                }

                return this
            },
            isFile:function(){
                return this.isfile
            },
            toString:function(){
                 return this.isfile?(this.contextUrl +this.path):(this.protocol+"//"+this.contextUrl +this.path)
            },
            cache:function(){_cache[this.toString()]=this },
            restorePath:function(){this.path=this.originalpath||this.path;return this },
            savePath:function(){
                if(this.originalpath==null){this.originalpath=this.path};return this
            },
            appendPath:function(part){
                var arr=[]
                if(arguments.length>1){arr=[].slice.call(arguments)}
                else{arr=[].concat(arguments[0]||[])}
                arr=arr.filter(function(a){return a.trim()})
                if(arr.length==1 && arr[0].indexOf("/")>=0){
                    arr=arr[0].aplit("/")
                }
                var thspath=(this.path||"").split("/");
                if(arr.length){
                    if(arr[0]=="."){arr.shift()}
                    while(arr[0]==".."){
                        arr.shift();
                        thspath.pop();
                    }
                }
                this.path=thspath.concat(arr).filter(function(k){return k.trim()}).join("/")
                return this
            },
            buildAbsPath:function(rootpath){ //this.contextPath+"/"
                if(this.isfile){return (this.contextUrl||"")+remSlash(this.buildPath(true,true))}
                return remSlash(rootpath)+"/"+remSlash(this.buildPath(true,true))
            },
            buildPath:function(noscheme,nohost){
                var res= [nohost===true?"":remSlash(this.contextUrl||this.host) ,remSlash(this.path),this.file].filter(function(it){return it &&it.trim()}).join("/")
                if(noscheme!==true && this.protocol && res.indexOf(this.protocol)!=0){
                    res=this.protocol+"//"+res
                }
                return res

            },
            build:function( force){
                if(force!==true && this.url && this.isFrozen){return this.url}
                var p=this.buildPath(),search
                var q=[]
                if(this.args&&Object.keys(this.args).length){
                    if(this.args && this.args.args){
                        var a=this.args.args;delete this.args.args;
                        if($.isPlain(a)){
                            $.extend(this.args,a)
                        }

                    }
                    for(var k in this.args){
                        if(k=="_userid"||k=="_clientid"){continue}
                        if(this.args.hasOwnProperty(k)){var v=this.args[k]||""
                            if(typeof(v)=="object"){
                                if(v instanceof Date){
                                    v=+v
                                } else{
                                    if(Object.keys(v).length){v=JSON.stringify(v)}
                                    else {continue}
                                }

                            }
                            q.push(k+"="+_encode( v))
                        }
                    }

                 };
                var arr= p.split("/"),ln=arr.length
                if(arr[ln-1]==arr[ln-2]){arr.pop();p=arr.join("/")}
                search=q.length?q.join("&"):""
                if(search){
                     p= p.replace(/\?+$/,"")+"?"+search
                }

                if(this.hash){p=p+"#"+this.hash}
                this.url=p;
                return p
            },

            copyContextProps:function(nu){if(!nu){return}
                for(var l=_ctxProps,ln=l.length,i=0;i<ln;i++){
                     if(this[l[i]]){nu[l[i]]=this[l[i]]}
                }
                return nu
            },
            isSame:function(nu) {
                if(!nu){return}
                var cnt=0
                for(var l=[].concat(_ctxProps,_nonctxProps),ln=l.length,i= 0,k;k=l[i],i<ln;i++){
                     if(k && k in nu ){
                        var v=String(nu[k]||"")
                        if(k=="search"&&v&v.charAt(0)=="?"){v= v.substr(1)}
                        if(v!=this[k]){return}
                    } else{cnt++}
                }
                return cnt>0;
            },
            copyPropsOf:function(nu){if(!(nu&&(typeof nu=="object"))){return}
                for(var l=[].concat(_ctxProps,_nonctxProps),ln=l.length,i= 0,k;k=l[i],i<ln;i++){
                    if(k && k in nu ){
                        var v=String(nu[k]||"")
                        if(k=="search"&&v&v.charAt(0)=="?"){v= v.substr(1)}
                        else if(k=="hash"&&v&v.charAt(0)=="#"){v= v.substr(1)}
                        if(v){this[k]=v}
                     }
                }

                return this
            },
            copyProps:function(nu){if(!nu){return}

                for(var l=_nonctxProps,ln=l.length,i=0;i<ln;i++){
                     nu[l[i]]=this[l[i]]
                }
                return nu
            },
            clone:function(full){
                var nu=new ctor(false);
                this.copyContextProps(nu)
                    if(full){this.copyProps(nu)}
                return nu
            },
            relativeURL:function(path){
                var url=path;
                if(!/^(http|file)/i.test(url)){
                    url=remSlash(url)
                    url=this.savePath().appendPath(url).build(true)
                    this.restorePath()
                  }
                return url;

            },
            parent:function(mutate){
                var nu=mutate===true?this:this.clone()
                if(nu.path){var arr=nu.path.split('/');arr.splice(-1,1);nu.path=arr.join("/")}
                return nu
            },
            resolve:function(part){
                var nu,lastisslash
                if(!part||part=="."){ return this}
                if(part.indexOf("//")==0){part=this.protocol+part}
                if(/^\w[\w\.:]+\/?$/.test(part)){
                    part="http://"+part
                }
                if(part.indexOf("http")==0){
                    nu=new ctor(part)
                    var first=nu.path.split("/")[0]
                    if(this.contextPath&&first==this.contextPath){
                        var arr=nu.path.split("/");arr.shift()
                        nu.path=arr.join("/")
                        this.copyContextProps(nu)

                    }
                    if(nu.host!=this.host ){
                        nu.isCrossSite=true
                    } else{nu.isCrossSite=false}
                } else {
                    nu=this.clone()
                    var path=remSlash(part)
                    if(this.contextPath && path.split("/")[0]==this.contextPath){path=this.contextPath}
                    var nupart=path||"",ctxarr=String(this.path||"").split(/\//)
                    while(nupart.indexOf("..")==0){
                        ctxarr.pop()
                        nupart=remSlash(nupart.substr(2) )
                    }
                    if(nupart.indexOf(".")==0){nupart=nupart.substr(1)}
                    nu.path=remSlash(remSlash(ctxarr.join("/") )+"/"+nupart.trim())

                  }
                if(nu.isCrossSite&&(nu.host==this.host||(ResURL.getRoot()&&nu.host==ResURL.getRoot().host))){
                    nu.isCrossSite=false
                }
                return nu
            },
            load:function(callback,options){
                var opts={}
                if(callback&&typeof(callback)!="function"){options=callback;callback=null}
                if(options===true){opts.sync=true}
                else if(options&&typeof(options)=="object") {opts=options}
                opts.onerror=function(){ }
                return $.xhr.get(this ,opts,callback)
                //return $.xhr.jsonp(this ,opts,callback)
            },
            fixUrl:function(u){
                var url=u||this.build()
                if(location.href.indexOf(url)>=0&&self.app&&self.app.contextPath&&url.indexOf(app.contextPath)==0){
                   // url=url.substr(app.contextPath.length).split("?")[0]
                }
                var urlarr=url.split("#")
                if(!/\.\w{2,5}/.test(urlarr[0])){var p=urlarr[0]
                    var uid="",cid=window.CLIENTID
                    if(typeof(app)!="undefined" && app.user){uid=app.user.id}
                    if(uid || cid) {
                        if (p.indexOf("&") > 0||p.indexOf("?") > 0) {
                            p = p + "&_clientid=" +cid+ "&_userid=" +uid
                        }
                         else {
                            p = p + "?_clientid=" + cid + "&_userid=" + uid
                        }
                        urlarr[0]=p
                    }
                    url=urlarr.join("#");
                }

                return url
            },
            setDom:function(dom){
                var t=String(dom.nodeName||dom.tagName).toLowerCase() ,url=this.fixUrl()
                if(dom instanceof CSSStyleDeclaration){  dom.backgroundImage="url("+url+")"  }
                else if("href" in dom){dom.href=url}
                else if("src" in dom){dom.src=url}
                if(t=="img"||t=="script"||t=="iframe"){dom.src=url}
                else if(t=="link"){dom.href=url}
                if(t=="script"){dom.type=dom.type||"text/javascript"}
                else if(t=="link"||t=="css"){dom.type=dom.type||"text/css";dom.rel=dom.rel||"stylesheet"}
                if(dom&&dom.tagName)
                    return this
            },
            freeze:function(){
                if(this.isFrozen){return}
                Object.freeze&&Object.freeze(this)
                this.isFrozen=true
                return this;
            },
            restore:function(name,savecurr){
                if(!this._log){return}
                var entry;
                if(name){
                    var idx
                    for(var l=this._log,ln= l.length,i=ln- 1,lg;lg=l[i],i>=0;i--){
                        if(lg && lg.name==name){
                            entry=lg;
                            idx=i;
                            break;
                        }
                    }
                    if(idx>=0){this._log.splice(idx,1)}
                } else {
                    entry=this._log.pop();
                }

                if(entry){
                    if(savecurr){
                        this.save()
                    }
                    this.copyPropsOf(entry.data)
                }

                return entry;
            },
            toMap:function(full){
                var map={};
                full?this.copyProps(map):this.copyContextProps(map)
                map.url=this.build()
                return map;
            },
            save:function(name,memo){
                this._log=this._log||[]
                var map=this.toMap()
                name=name||map.url;
                var entry={name:name,data:map,memo:memo}
                this._log.push(entry)
                return entry
            },
             insert:function(optns){
                var promise,url=this.fixUrl(),nocache=false
                 var config={}
                 if(optns!=null) {
                     if (typeof(optns) == "boolean") {
                         config.nocache = optns;
                     }
                     else if (typeof(optns) == "string") {
                         config.type = optns;
                     }
                     else if (typeof(optns) == "function") {
                         config.callback = optns;
                     }
                     else if (typeof(optns) == "object") {
                         $.extend(config,optns);
                     }
                 }
                var type=config.type||this.type
                if(!config.nocache&&_cache[url]){
                    promise=_cache[url]
                    typeof(config.callback) =="function"&&promise.then(config.callback)
                    return promise
                }

                promise=Promise.deferred();
                typeof(config.callback) =="function"&&promise.then(config.callback)
                var tag= "script"
                if(!type){
                    if(!this.ext){
                        if(this.file){
                            this.ext=this.file.split(/\./).pop();
                        }
                    }
                    if(this.ext){
                        type=this.ext
                        this.type=this.type||this.ext
                        if(this.ext=="htm"){this.type="html"}
                    }

                }
                if(type=="html"||(this.ext=="html")){tag="html"}
                else if(type=="css"||(this.ext=="css")){tag="link"}
                else if(type=="js"||(this.ext=="js")){tag="script"}
                if(tag=="html"){
                    this.load(tag,function(r){
                        if(r&&dom&&dom.appendChild){
                            r=dom.appendChild(r)
                        }
                        promise.resolve(r)
                    },true)
                }
                else{
                    var nu,par=document.head||document.querySelector("head")||document.body
                    if(config.before||config.replace){
                        par=$d.parent(config.before||config.replace)||par
                     }
                    nu=par.appendChild(document.createElement(tag))
                     nu.onload=function(){promise.resolve()}
                    this.setDom(nu);
                }
                _cache[url]=promise;
                return promise;
            }
        }

        var api= {
            parse:_parse,
            make:function(u,base,forroot){
                if(!forroot && !root){
                    /*if(location.href.toLowerCase().indexOf("file://")>=0){
                        root=new ctor(location.href)
                    }*/
                    if(self.app&&self.app.contextPath){
                        var p=self.app.contextPath.substr(self.app.contextPath.indexOf("//")+2).split(/\//)
                        root=this.make(self.app.contextPath,p[0]||"",true)
                    } else{

                    }

                }
                if(u&&typeof(u)=="object") {
                    if (u instanceof ctor) {
                        return u
                    } else{var url=u.href||u.src||u.url
                       var nu= new ctor(url)
                        if(!url){nu.copyPropsOf(u);}
                        nu.inspect()
                        return nu;
                    }
                }

                if(!u || u=="/"){return root}
                if(u && _cache[u]){
                    return _cache[u]
                }

                if(root ){

                     return root.resolve(u)
                }
                return new ctor(u,base)
            },
            isURI:function(u){return (u&&typeof(u)=="object" && u instanceof ctor)},
            getRoot:function(){
                //if(root && root.isFile && !root.contextPath)
                return root
            },
            getWinLocation:function(){
                if(!loc && self.location){loc=api.from(location);}
                return loc
            },
            setRoot:function(path,ctx){
                if(root&&root.isFile()){
                    return root
                }

                root=this.make(path,ctx,true)
                if(!root.contextPath){
                    if(root.file && root.file.indexOf(".")==-1){
                        root.contextPath=root.file;
                        root.file="";

                    }
                }
                if(loc){
                    if(loc.host!=root.host){
                        var contextPath=root.contextPath,contextUrl=root.contextUrl
                        loc.copyContextProps(root);
                        root.contextPath=contextPath;
                    }
                }
                if(root.contextPath){
                    var rt=remSlash(root.host),cx=remSlash(root.contextPath);
                    if(rt.split("/").pop()==cx){
                        var arr=rt.split("/");arr.pop();
                        rt=arr.join("/")
                    }
                    root.contextUrl=rt+"/"+cx+"/"
                }

                root.freeze();
                return root
            }
        }
        api.from=api.make
   /* if(location.href.toLowerCase().indexOf("file:")>=0){
        root=new ctor(location.href)
    }*/
    api.ResourceURL= function(url){ return api.from(url).build()}
    loc=api.from(location);
    loc.freeze();
    if(typeof(ZModule)!="undefined"){ZModule.ResourceURL=api.ResourceURL}
    return api

})();;/**
 * Created by atul on 3/9/14.
 * history.replaceState()
 * window.onpopstate
 * history.pushState(stateObj, "page 2", "bar.html");
 */
!function(ns,factory){

  if(typeof(ZModule)!="undefined"){
      ZModule.getWrapper(ns).resolve(factory())
  }

}("$.router",function(){
        var _listeners=null,currenturl=null,baseUrl=null,useHistory=false//typeof(self.history)!="undefined"
        function _getBaseUrl(){
            if(self.app){baseUrl=self.app.contextPath}
            if(!baseUrl){
                var ori=location.origin||(location.protocol+"://"+location.hostname+(location.port?(":"+location.port):""))
                baseUrl=ori+"/"+location.pathname.substr(1).split("/").shift()  +"/"
            }
            return baseUrl
        }
        function _resolveUrl(url0){
            var url=String(url0)
            if(!url||url=="/"||url=="root"){url=_getBaseUrl()}
                else if(url.indexOf("#")==0){
                    return location.href.split(/\#/).shift()+url
                } else{var basenoproto=_getBaseUrl().toLowerCase().replace(/^http[s]?:\/\//i,"")
                    var urlnoproto=url.toLowerCase().replace(/^http[s]?:\/\//i,"")
                    if(urlnoproto.indexOf(basenoproto)>=0){
                        url=_getBaseUrl()+urlnoproto.substr(basenoproto.length)
                    } else{if(url.indexOf("/")==0){url=ur.substr(1)}
                        url=_getBaseUrl()+url
                    }

                }
            return url
        }
        function _getHash(){
            return _fix(location.hash)
        }
        function _setHash(s0){
            var s=_fix(s0)
            if(s==_getHash()){return}
            location.hash=s
        }
    function _dispatch(h){
        if(currenturl===location.href){
            return
        }
        currenturl=location.href

         _listeners.dispatch(h) ;
    }
    function _onHashChange(fn){
        if(!_listeners){
            _listeners= $.callbacks()
            var ths=this
             window.addEventListener("hashchange",
                function(){
                    setTimeout(function(){
                        var h=_getHash()
                        _dispatch(h)
                    },10)
                })
            window.onpopstate =function(ev){
               var data=ev.state
                if(!(data&&data.name)){return}
                setTimeout(function(){_dispatch(data.name||data.url)},10);
            }
         }
        if(typeof(fn)=="function"){_listeners.add(fn)}
    }
        function _fix(s){
                return String(s).replace(/^#[\/]?/,"").trim()
        }

    return function(ctx){
         var routes={},currenthash=null,_ctx=ctx||null;
         var api={
             _locationHashChanged:function locationHashChanged(hash0) {
                 var h=_fix(hash0)
                 if(currenthash==h){return}
                 this.route(h)
            },
             hasPath:function(nm){
                 return routes[String(nm).toLowerCase()];
             },
            getCurrentPath:function(){
                  return currenthash;
            },
            getLocationArgs:function(){
                var srch=location.search,args={};
                if(srch){
                    args=srch.replace(/^\?/,"").trim().split("&").reduce(function(m,k){
                        if(k){
                            var arr=k.split("=")
                            m[arr.shift()]=arr.pop()||"";
                        }
                        return m
                    },{})
                }
                return args
            },
            add:function(path,handle0,data){var handle=handle0
                if(arguments.length==1){
                     if(path){data=path;}
                    path=data.name||data.url
                }
                data=data||{}
                if(handle0&&typeof(handle0)=="object"){data=handle0}
                else if( handle0 ){data.handle=handle0}
                data.name=path;
                 if(path&&typeof(path)=="string" ){
                     routes[path.toLowerCase()]=data
                 }
                 return this
             },
             watchHashChange:function(){
                 _onHashChange(this._locationHashChanged.bind(this))
             },
             getHash:function(){
                return _getHash()
            },
             normaiseHash:function(path){
                 return String(path||"").replace(/^\#[\/]?/,"")
             },
             pushState:function(data,nonav){
                 var path
                 if(typeof(data)=="string"){
                     path=data;
                     data=null;
                 } else if(data){
                     path=data.path||data.name||data.url
                 }

                 if(!path||path=="undefined"){
                     return
                 }

                 var curr=this.hasPath(path)
                 if(curr){
                     if(this.getHash()==path){
                         return
                     }
                     if(data && typeof(data)=="object" ){
                         $.extend(curr,data);
                     }
                 }
                 else {data=data||{}
                     data.name=path
                     data.url=_resolveUrl (data.url||path)
                 }
                 if(!useHistory){
                     path=_fix(path)
                    // if(path.indexOf("#")!=0){path="#"+path}
                       if(nonav===true){currenthash= path }
                     _setHash(path)
                 }
                 if(!curr){
                     this.add(data )
                 }
                 if(useHistory && history.pushState){
                     if(history.state&&history.state.url===data.url){return}
                     history.pushState(data, data.title||data.name, data.url);
                 }
             },
             setHash:function(s){
                 _setHash(s)
             },
             sync:function( ){
                 if(currenthash!=this.getHash()){
                    this.route(this.getHash())
                 }
             },
             on:function(fn){_listeners.add(fn)},
             isCurrent:function(p){
                  return (p&&p==this.getHash())
             },
             route:function(path){
                 var a=[].slice.call(arguments,1),ret
                if(path=="back" && typeof(history)!="undefined"){
                    history.back()
                    return
                }
                 var p=this.hasPath(path)
                 if(p) {
                     var hash=_fix(p.name)
                     if(!p||(currenthash == hash)||(p.url&&p.url === currenturl)) {
                         return  this
                     }
                     currenthash=hash;
                     //if(typeof(p.handle)=="function"){
                     if(this.getHash()!=hash){
                         this.setHash(hash)
                     }
                     if(p.url){
                         currenturl= p.url;
                     }
                     if(p&&typeof(p.handle)=="function") {
                         if(a.length) {
                             p.handle.apply (_ctx, a)
                         }else {
                             p.handle.call (_ctx)
                         }
                     } else if(p&&p.handle=="load") {
                         $.xhr.get(p.url,{responseType:"html"})
                      }
                     if(_ctx&&_ctx.emitter&&typeof(_ctx.emitter.fireAsync)=="function"){
                         _ctx.emitter.fireAsync("viewchange",hash)
                     }
                     //}
                 }
                 this.fire(String(path) ,p||{name:path})



                 return this
             }
          }
        api.register=api.add

            $.emitter(api,true)
            return api
        }
    }
) ;

;/**
 * Created by atul on 12/21/13.
 */

self.Util||(self.Util={});


Util.multiLine=function(f){
    if(typeof(f)=="function"){
        return f.toString().trim().replace(/^([^\{]+\{\s*\/\*\s*)|(\*\/\s*\})$/gm,"").trim()
    }
}
Util.showErrors=function(){
    fff=ttt
}
//check if there is connectivity
Util.hostReachable=function hostReachable() {
    // Handle IE and more capable browsers
    var xhr = new ( window.ActiveXObject || XMLHttpRequest )( "Microsoft.XMLHTTP" );
    var status;
    // Open new request as a HEAD to the root hostname with a random param to bust the cache
    xhr.open( "HEAD", "//" + window.location.hostname + "/?rand=" + Math.floor((1 + Math.random()) * 0x10000), false );
    // Issue request and handle response
    try {
        xhr.send();
        return ( xhr.status >= 200 && (xhr.status < 300 || xhr.status === 304) );
    } catch (error) {
        return false;
    }

}
Util.exportToExcel=function( config){config=config||{}
     if(typeof(config)=="string"){config={filename:config}}
    function _getContent( config){
        var ret={rows:config.rows||[],columns:[]}
        if(config.rows && config.columns){
            return config
        }
        var cols = [],ele=$d(config.el)
        var coltmplt = $.simpleTemplate('<Column ss:Index="$idx" ss:StyleID="$stl"   ss:Width="$wd"/>')
        if(ele) {
            var firstrow = ele.down("tbody tr.currentrow") ||
                ele.qq("tbody tr").filter(function (it) {
                    return it.offsetHeight > 10
                })[0];
             if (firstrow) {
                firstrow.qq("td").each(function (it, i) {
                    cols.push({
                        idx: (i + 1),
                        wd: it.offsetWidth,
                        stl: (it.css("textAlign") == "right" ? "numstyle" : "genstyle")
                    })
                })
            }
            var rowidx = 0

            ret.rows = [].slice.call(ele.selfOrDown("table").qq('tr')).map(
                function (it, i) {
                    return [].slice.call(it.children).map(function (it) {
                        return String($d.val(it) || '').trim()
                    })
                }
            )
        } else if(config.cols){
            cols=config.cols||[]
        }
        if(cols && cols.length) {
            ret.columns = cols.map(function (it) {
                return coltmplt(it)
            })
        }
        ret.rows=ret.rows||[]
        return ret
     }
    //<ss:Font ss:Bold="1"/>
    function _gen(config){
        var data=_getContent(config)
        var defstyle,numstyle,genstyle,rowstyle
        if(!config.style){
            defstyle='<Style ss:ID="Default" ss:Name="Normal"><Alignment ss:Vertical="Bottom"/><Borders/><Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="11" ss:Color="#000000"/><Interior/><NumberFormat/><Protection/></Style>'
            numstyle='<Style ss:ID="numstyle"><Alignment ss:Horizontal="Right" ss:Vertical="Bottom"/><Font ss:FontName="Arial"/><NumberFormat/></Style>'
            genstyle='<Style ss:ID="genstyle"><Font ss:FontName="Arial"/></Style>'
            rowstyle='<Style ss:ID="rowstyle"><Font ss:FontName="Arial"/></Style>'
            config.style=[defstyle,numstyle,genstyle,rowstyle].join("")
        }

        var worksheet_template = '<?xml version="1.0"?>'+
            '<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40">'+
            '<ExcelWorkbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"></ExcelWorkbook>'+
            '<Styles>'+config.styles+'</Styles>'+
            '<Worksheet ss:Name="Sheet1">'+
            (config.table || '<Table>') +
            data.columns.join("\n") +
            '^ROWS^'+
            '</Table>'+
            '</Worksheet></Workbook>';
        var  celltemplate='<Cell><ss:Data ss:Type="String">$val</ss:Data></Cell>';
         if(!config.toprow && config.cols && config.cols.some(function(it){return it.label})){
            data.rows.unshift(config.cols.map(function(it){return it.label}))
            config.toprow=true
        }
        var rowidx= 1,rows =data.rows.map(
            function(row,i){
                return  row.map(function(it){
                    return celltemplate.replace(/\$val/,String( it ||'')).trim()
                }).join("")
            }
        ).map(function(itcells){
                rowidx++;
                return itcells?('<Row ss:Height="20" '+((rowidx==1 && config.toprow)?' ss:StyleID="toprow" ':'')+'>'+itcells +'</Row>'):""
            }).join("\n");


        var worksheet = worksheet_template.replace(/\^ROWS\^/, rows);
        return worksheet
    }
    var filename=config.filename||"excel_export.xls"
    var content=_gen(config);
    Util.download( content, filename,"data:application/vnd.ms-excel")

    //$con.log(worksheet)
    //var newWin= window.open('data:application/vnd.ms-excel,'+worksheet);
    //window.open('data:application/vnd.ms-excel,'+worksheet);
}
Util.download=(function( ){
    window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder ||
        window.MozBlobBuilder || window.MSBlobBuilder;
    window.URL || (window.URL = window.webkitURL);
    window.saveAs || ( window.saveAs = (
            window.navigator.msSaveBlob ? function(b,n){ return window.navigator.msSaveBlob(b,n); } : false) ||
        window.webkitSaveAs || window.mozSaveAs || window.msSaveAs || (function(){
            // URL's

            if(!window.URL){ return false;  }
            return function(b,name,type){type=type||'text/text'
                var url;
                if(typeof(BlobBuilder)!="undefined"){
                    var bb = new BlobBuilder();
                    bb.append('body { color: red; }');
                    var blob = bb.getBlob(type);

                    url = URL.createObjectURL(blob); // Test for download link support
                }   else{
                    url='data:' + type + ';base64,' + self.btoa(b);
                }


                if( "download" in document.createElement('a') ){
                    var a = document.createElement('a');
                    a.setAttribute('href', url);
                    a.setAttribute('download', name);
                    var clickEvent = document.createEvent ("MouseEvent");// Create Click event
                    clickEvent.initMouseEvent ("click", true, true, window, 0,
                        clickEvent.screenX, clickEvent.screenY, clickEvent.clientX, clickEvent.clientY,
                        clickEvent.ctrlKey, clickEvent.altKey, clickEvent.shiftKey, clickEvent.metaKey,
                        0, null);
                    a.dispatchEvent (clickEvent);// dispatch click event to simulate download
                }
                else{ window.open(url, '_blank', ''); // fallover, open resource in new tab.
                }
            };

        })() );
    return window.saveAs
})();

$.worker=(
    function _wrkr ( ){
        var cnt= 0
        var callbacks=[],baseWorker
        function _setup(callback,baseworker){

            if(typeof(workerBoilerplate)!="undefined"){
                if(!baseWorker){
                    baseWorker=workerBoilerplate.makeworker()
                }
                var nu
                if(baseworker===true){nu=baseWorker}
                else{
                    nu=workerBoilerplate.makeworker()
                }
                typeof(callback)=="function" && callback(nu)
                return nu;
            }
        }


        return {
            setup:_setup,
            baseWorker:baseWorker,
            build:function(nm,fn,onmsg){
                if(typeof(nm)=="function"){onmsg=fn;fn=nm;nm=fn.name||fn._name;}
                var nu=$.worker.setup(function(wrkr){
                    if(typeof(fn)=="function"){wrkr.define(nm,fn) ;}
                    if(typeof(onmsg)=="function"){wrkr.on(onmsg)}
                })

                return nu
            },
            fromModule:function(nm){
                //return an api
                $.worker.baseWorker.load(nm,function(res){
                    if(res.response){

                        var txt=res.response.trim()

                        var api=(1,eval)("(function(){ "+res.response+" })()")
                        if(api){

                        }
                    }

                })
                return $.worker.build(nm,fn,onmsg)
            },
            fromFn:function(nm,fn,onmsg){
                return $.worker.build(nm,fn,onmsg)
            },
            fromScript:function(scr,onmsg){
               return (function(url,callback){
                 var w=new Worker(ResURL.from(url).build());
                var pr=Promise.deferred()
                var counter= 0,callbacks={}
                if(!w) {return}
                     try {
                        w.postMessage(["PING"])
                    } catch (e) {
                    }

                 w.sendMessage=function(data,callback){
                     var tosend=data
                     if(typeof(callback)=="function"){
                         tosend._msgid= ++counter;
                         callbacks[tosend._msgid]=callback
                     }

                    if(this._structuredCloningSupport){this.postMessage(tosend)}
                    else{
                        this.postMessage(JSON.stringify(tosend))
                    }
                }
                w.__callback=function(){}
                if(typeof(callback)=="function"){
                    w.__callback= callback
                }
                w.onMessageReceived=function(ev){
                    var res, data = ev.data
                    if (data.structuredCloningSupport != null || (data.data && data.data.structuredCloningSupport != null)) {
                        this._structuredCloningSupport = !!(data.data?data.data.structuredCloningSupport:data.structuredCloningSupport)
                     }
                     if(!this._structuredCloningSupport && typeof (ev.data)=="string"){
                        data=JSON.parse(ev.data)
                    }
                    if(data && data._msgid && callbacks[data._msgid]){
                        var fn=callbacks[data._msgid];
                        delete callbacks[data._msgid];
                        fn.call(this,data);
                    }
                    w.__callback(data);
                }


                w.addEventListener("message",w.onMessageReceived)
                return w;

            })(scr,onmsg);
        }}
    }
)();





$.tracer=function(onend,maxdelay){
    var _log=[],done=0
    function flatten(args){var res=[]
        for(var i= 0,l=args,val;val=l[i],i<l.length;i++){
            if(val==null){ continue}
            var t=typeof(val)
            if(t=="object" && ({}).toString.call(val)=="[object Arguments]"){
                [].push.apply(res,flatten(val))
            } else {
                res.push(val)
            }
        }
        return res
    }
    var api={
        log:function(){if(done){return}
            var val= flatten(arguments);
            val.unshift(_log.length)
            _log.push(val.join(", "))
            return this
        },
        getTrace:function(){
            return _log
        },
        end:function(m){if(done){return}
            api.log(m);
            onend(api.getTrace())
            done=true
            return this
        }
    }
    if(maxdelay){
        setTimeout(function(){ api.end("Timed out")},maxdelay)
    }
    return api

}



$.webSocket=(function(){
    var io,channels={},_pending=null
    function ensureIO(){
        io||(io=$.websocketio);
        if(io &&io.isAvailable() && _pending){
            Object.keys(_pending).forEach(function(k){
                if(Array.isArray(_pending[k])){
                    while(_pending[k].length){io.on(k,_pending[k])}
                }
            });
            _pending=null;
        }
        return io
    }
    var api= {
        isState:function(state){
            return ensureIO()&&io.getState()===state
        },
        isAvailable:function(){
            return ensureIO()&&io.isAvailable()
        },
        isClosed:function(){ return this.isState(3) },
        isOpenOrBusy:function(){ return !this.isState(-1) },
        isOpen:function(){ return this.isState(1) },
        getState:function(){
             return ensureIO()&&io.getState()
        },
        send:function(data){
            ensureIO()&&io.dispatch.apply(io,arguments)
        },
        close:function(data){
            ensureIO()&&io.close()
        },
        channel:function(nm,fn){

            if(nm.indexOf("channel:")!=0){nm="channel:"+nm}
            if(!channels[nm]){
                channels[nm]=(function(str,s){
                    var name=(str.indexOf("channel:")!=0?"channel:":"")+str
                    return {defcallback:null,
                        send:function(data){s.send({type:name,message:data})},
                        off: function(){s.send({type:"unregisterchannel",channel:name})},
                        on: function(fn){
                            var c;
                            if(typeof(fn)!="function"){
                                c=this.defcallback
                            } else{
                                c=function(f,a){
                                    var dd=a.data||a,msg=dd.message||{};
                                    f(msg)
                                }.bind(this,fn)
                                if(!this.defcallback){this.defcallback=c}
                            }

                            if(c){s.on("channel:"+name,c)}
                        }
                    }
                })(nm,$.webSocket);
                if(!fn){fn={}}
                if( typeof(fn)=="object"){
                    $.webSocket.send("registerchannel",{name:nm,mode:fn.mode})
                    if(typeof(fn.callback)=="function"){
                        hannels[nm].on( fn.callback)
                    }
                } else if(typeof(fn)=="function"){
                    channels[nm].on(fn)
                }
            }
            if(typeof(fn)=="function"){
                channels[nm].on(fn)
            }
            return channels[nm]
        },
        onOpen:function(fn){  this.on("open",fn)  },
        onClose:function(fn){ this.on("close",fn)  },
        onError:function(fn){  this.on("error",fn)  },
        off:function(ev,fn){ensureIO()&&io.off(ev,fn) },
        on:function(ev,fn){
            if(ensureIO() ){io.on(ev,fn)}
            else{
                _pending||(_pending={});
                _pending[ev]||(_pending[ev]=[]);
                _pending[ev].push(fn)
            }
        }
    }
    api.dispatch=api.send
    return api
})();

Util.fireBug={
    activate: function () {
        this.__activated=true;
        if(typeof(firebug)!="undefined"&&firebug.win){firebug.win.show();return}
        var scr = document.createElement('script');
        scr.setAttribute('src', 'http://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js');
        document.body.appendChild(scr);
        (function () {
            if (window.firebug && window.firebug.version) {
                firebug.init();
            } else {
                setTimeout(arguments.callee);
            }
        })();
        void(scr);
    },
    deActivate:function(){if(typeof(firebug)!="undefined"&&firebug.win){firebug.win.hide();return}}
};
Util.screenShare=function(){
    Util.injectScript("//cdn.WebRTC-Experiment.com/getScreenId.js",function(){

    })


}
document.addEventListener("keyup",function(ev){
    if(ev.altKey&&ev.keyCode==71){
        if(!Util.fireBug.__activated) {
            Util.fireBug.activate()
        }
    }
})
/*options - maxIterations, start, end, useAnimFrame , noauto , maxduration cancelOn callback delay dur memo context args
 callback gets memo as single arg

 start
 defer
 until
 when
 every
 queue
 */
$.timer = function () {
    function makeCheck(cb) {
        var callback = cb;
        if (typeof cb == "function") {
            callback = function (e) {
                return !cb(e)
            }
        } else if (typeof cb == "string") {
            callback = function () {
                try {
                    return !(1, eval)(cb)
                } catch (e) {
                }
                return true
            }
        } else if (cb && typeof cb == "object") {
            var o = cb;
            if ($.isArray(cb)) {
                o.container = o[0];
                o.member = o[1]
            }
            if (o.container && typeof o.container == "object" && o.member && typeof o.member == "string") {
                callback = function () {
                    return !!(typeof o.container[o.member] == "undefined")
                }
            }
        }
        return callback
    }

    function resVal(e) {
        if (typeof e == "function") {
            return e()
        }
        return e
    }

    function num(e, t) {
        t == null && (t = -1);
        if (typeof e == "number" || typeof e == "string" && typeof +e == "number") {
            return +e
        }
        return t
    }

    function _parseArgs() {
        var e = $.makeArray(arguments), t = {};
        if (e[0] && typeof e[0] == "object") {
            t = e.shift();
            t.dur = num(resVal(t.dur || t.duration), 0);
            t.delay = num(resVal(t.delay), 0);
            t.auto = resVal(t.auto);
            t.noauto = t.auto === false;
            t.onend = t.end || t.onend;
            t.maxduration = Number(t.maxduration) || 0;
            if (t.maxduration <= 1) {
                t.maxduration = 0
            }
            if (typeof t.onend !== "function") {
                t.onend = null
            }
            t.cancelOn = t.cancelOn === undefined ? t.cancelon : t.cancelOn;
            t.useAnimFrame = t.useAnimFrame || t.useanimframe
        }
        if (e.length) {
            if (e[e.length - 1] && typeof e[e.length - 1] == "object") {
                t.memo = e.pop()
            }
            if (num(e[0]) >= 0) {
                t.dur = +e.shift()
            }
            if (num(e[0]) >= 0) {
                t.delay = +e.shift()
            }
            if (typeof e[0] == "function") {
                t.callback = e.shift()
            }
            if (typeof e[0] == "function") {
                t.onend = e.shift()
            }
            if (e.length && t.dur == null) {
                if (num(e[0]) >= 0) {
                    t.dur = e.shift()
                }
                if (t.delay == null && num(e[0]) >= 0) {
                    t.delay = e.shift()
                }
            }
            if (typeof e[0] == "boolean") {
                t.noauto = e.shift()
            }
            if (typeof t.cancelOn == "undefined") {
                t.cancelOn = e.pop()
            }
        }
        t.delay = Number(t.delay) || 0;
        t.dur = num(t.dur, 0);
        if (t.cancelOn === undefined) {
            t.cancelOn = false
        }
        t.memo || (t.memo = {});
        if (t.memo.maxIterations && !t.maxIterations) {
            t.maxIterations = t.memo.maxIterations
        }
        return t
    }

    var nw = Date.now, _timers = {}, _to = setTimeout, _holder = function (e) {
        var t = [[nw(), 0, 0, "Start"]], n = e;
        return {
            entries: t, record: function () {
                var n = nw();
                _timers[e] && t && t.push([n, n - t[0][0], n - t[t.length - 1][0]].concat($.makeArray(arguments)));
                return this
            }, end: function (n) {
                if (!_timers[e]) {
                    return t
                }
                var r = nw();
                t.push([r, r - t[0][0], r - t[t.length - 1][0], "End"]);
                var i = t.slice();
                delete _timers[e];
                if (typeof n == "function") {
                    n(i)
                }
                return this
            }, toString: function () {
                var e = t.length - 1, n = t.slice();
                return "Total time:" + n[e][1] + "(Milliseconds)\n	" + n.map(function (e, t) {
                        return t == 0 ? "Start:" + (new Date(e[0])).toString() : ["From Start:" + e[1], "From prior:" + e[2], e.slice(3).join(", ")].join("	")
                    }).concat([""]).join("\n	") + ("End:" + (new Date).toString())
            }
        }
    };
    if (!window.requestAnimationFrame) {
        window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {
                window.setTimeout(e, 1e3 / 60)
            }
    }
    var api = {
        start: function (e) {
            if (_timers[e]) {
                return _timers[e]
            }
            return _timers[e] = _holder(e)
        }, defer: function (e, t) {
            t = Math.max(Number(t), 0);
            if (t < 10) {
                t = t * 1e3
            }
            return setTimeout(e, t)
        }, after: function () {
            var e = _parseArgs.apply(this, arguments);
            e.maxIterations = 1;
            if (e.dur && !e.delay) {
                e.delay = e.dur;
                e.dur = 0
            }
            return this.run(e)
        }, until: function () {
            var e = _parseArgs.apply(this, arguments);
            e.callback = makeCheck(e.callback);
            return this.run(e)
        }, when: function (e, t, n) {
            n = n || {};
            n.cancelOn = false;
            n.callback = function (t) {
                return !e(t)
            };
            n.onend = t;
            var r = _parseArgs.call(this, n);
            return this.run(r)
        }, fixed: function () {
            var e = _parseArgs.apply(this, arguments), t = e.dur, n = e.callback, r = e.memo;
            if (r && r.useAnimFrame) {
                n = function () {
                    window.requestAnimationFrame(callback)
                }
            } else {
                t = Math.max(100, t)
            }
            var i = {};
            i.cancel = function () {
                this.handle && clearInterval(this.handle)
            }.bind(i);
            i.handle = 0;
            if (e.delay) {
                setTimeout(function () {
                    i.handle = setInterval(n, t, r)
                }, e.delay)
            }
            return i
        }, run: function () {
            var e = _parseArgs.apply(this, arguments);
            e.context = e.context || self;
            e.args = e.args || [];
            return function (e) {
                var t = e, n = t.memo || {};
                var r = 0, i = 0, s = null, o = 0, u = "maxIterations";
                if (typeof t.callback != "function") {
                    return
                }
                var a = {}, f = typeof t.cancelOn === "function";
                a.cancel = function (e) {
                    var t = this.config;
                    r && clearTimeout(r);
                    r = 0;
                    if (typeof n.end === "function") {
                        t.onend = n.end
                    }
                    if (typeof t.onend == "function") {
                        t.onend(e || s, n)
                    }
                }.bind(a);
                r = 0;
                n = n || {};
                a.pause = function (e) {
                    i = 1;
                    r && clearTimeout(r);
                    r = 0;
                    if (e && typeof e.then == "function") {
                        e.then(function () {
                            this.resume()
                        }.bind(this))
                    } else if (typeof e == "number") {
                        _to(function () {
                            this.resume()
                        }.bind(this), e)
                    }
                    return this
                }.bind(a);
                a.resume = function (e) {
                    if (!i) {
                        return
                    }
                    i = 0;
                    var t = this.config.dur;
                    _to(function () {
                        r = _to(l, t)
                    }, Number(e) || 0)
                }.bind(a);
                var l, c = function () {
                    var e = this.config;
                    if (i) {
                        return
                    }
                    var a = [n].concat(t.args);
                    s = e.callback.apply(t.context, a);
                    o++;
                    if (e[u] >= 1 && e[u] <= o || n.cancel === true || f && e.cancelOn(s, n) === true || s === e.cancelOn || t.stopAt && t.stopAt < Date.now()) {
                        this.cancel(s)
                    } else {
                        r = _to(l, num(n.duration) >= 0 ? +n.duration : e.dur)
                    }
                    if (typeof n.callback === "function" && n.callback !== e.callback) {
                        e.callback = n.callback
                    }
                    if (n.pause === true) {
                        this.pause()
                    }
                };
                l = c.bind(a);
                if (t.useAnimFrame || n.useAnimFrame) {
                    l = function () {
                        window.requestAnimationFrame(c.bind(a))
                    }
                }
                $.defineValue(a, "config", {value: t, writable: false, configurable: false});
                a.pause();
                a.start = function (e) {
                    if (t.maxduration) {
                        t.stopAt = Date.now() + (t.maxduration <= 10 ? t.maxduration * 1e3 : t.maxduration) + 100
                    }
                    this.resume(t.dur)
                }.bind(a);
                if (!t.noauto) {
                    a.start()
                }
                return a
            }.call(this, e)
        }
    };
    api.queue = api.every = api.run;
    return api
}();

$.stack=(function(){
    var NILL={nill:true,valueOf:function(){return null}}
    Array.prototype.contains||(Array.prototype.contains=function(a){return this.indexOf(a)>=0});
    function asNum(a,df){
        return (typeof(a)=="number"||(typeof(a)=="string"&&!isNaN(a))) && (isFinite(a))?Number(a):(df||0);
    }
    function makeMatcher(s){
        if(!s){return function(a){return a==this[0]}.bind(null,[s])}
        if(typeof(s)=="function"){return s}

        switch(Object(s).constructor.name){
            case "RegExp":return RegExp.prototype.test.bind(s);break;
            case "Array":return Array.prototype.contains.bind(s);break;
            case "Date":return function(a){return !!(!a?false:+(typeof(a)=="string"?new Date(a):a) == this[0])}.bind(null,[+s]);break;
            case "Boolean":;case "Number":return function(a){return +a==this[0]}.bind(null,[+s]);break;
            default:return function(a){return a==this[0]||(a &&a.valueOf&&a.valueOf()==this[0].valueOf)||
                (typeof(this[0])=="object" && a in this[0])
            }.bind(null,[s])
        }
    }
    return function _stack(arr0){
        if(typeof(arr0)=="string"){arr0=arr0.split("")}

        if(!(arr0&&arr0.length&&arr0.length>0)){return NILL}
        var arr=arr0.slice()
        var tx=arr.slice(),_curr=-1,ln=arr.length
        function at(i){return tx[i]}
        function take(i,cnt){
            if(cnt>1){}
            return tx[i]
        }
        var _saved={},_data=tx.map(function(){return {}});
        return {
            toArray:function(fn){return typeof(fn)=="function"?tx.map(fn):tx},
            index:function(){ return _curr},
            back:function(){this.prior();return this},
            forward:function(){this.next();return this},
            next:function(){
                return this.value=this.hasNext()?at(++_curr):NILL
            },
            takeMany:function(n0){var accum=[],n=asNum(n0,1);if(n<=0){return []}
                if(n==1){return [this.next()]}
                var i=-1;while(i++<n-1){accum.push(this.next())}
                return accum
            },
            take:function(){
                return this.next()
            },
            hasNext:function(){
                return _curr<ln-1?this:null
            },
            until:function(test,memo){var accum=[],t=this;
                var fn=makeMatcher(test)
                if(fn){
                    while(t.hasNext()){
                        if(fn(t.peek(),memo)){break;}
                        accum.push(t.next())
                    }
                }
                return accum
            },
            beforeFirst:function(){_curr=-1;return this;},
            last:function(i){_curr=ln-1;return this;},
            first:function(i){_curr=0;return this;},
            absolute:function(i){_curr=asNum(i,_curr);return this;},
            data:function(){if(_curr==-1){return this}
                if(arguments.length==0){return _data[_curr]}else{_data[_curr]=arguments[0];return this;}
            },
            save:function(nm){nm||(nm||"_def");_saved[nm]=_curr;return this},
            restore:function(nm){nm||(nm||"_def")
                _saved[nm]&&_saved[nm]>=0&&(_curr=_saved[nm]);
                return this
            },
            wasNull:function(){return this.value==null||this.value.nill},
            skip:function(n){
                if(typeof(n)!="number"){
                    this.until(n)
                }  else{
                    var i=asNum(n,1);
                    while(--n)this.next();
                }
                return this;
            },
            prior:function(n){
                var i=_curr-asNum(n,1)
                return this.value=i>=0?at(_curr=i):NILL
            },
            peek:function(n){var i=_curr+asNum(n,1)
                return i>=0&&i<ln?at(i):NILL
            },
            transform:function(v,i0){var i=asNum(i0,_curr);
                if(!(i>=0&&i<ln)){return this}
                tx[i]=typeof(v)=="function"?v(at(i)):v;
                return this;
            },
            transformAll:function(a){ if(!(typeof(a)=="function")){return this}
                tx=tx.map(function(i){return a(at(i),i)})
                return this;
            },
            getTx:function(){return tx}
        }
    }
})() ;
/*
 $.parseExpr(expr,{context:object, reserved:[],ignore:[] })
 */

Util.injectScript=function(url,optns){
    var o={};
    if(typeof(optns)=="function"){o.callback=optns}
    else if(optns&&typeof(optns)=="object"){o=optns}
    var scr=document.createElement("script")
    scr.type=o.type||"text/javascript";
    if(o.async){scr.async=true}
    if(o.promise&&typeof(o.promise)!="object"){o.promise=Promise.deferred()}
    if(!o.callback&& o.promise){o.callback=function(){o.promise.resolve(this)}}
    if(!o.error&& o.promise){o.error=function(){o.promise.reject(this)}}
    if(o.callback){scr.onload= o.callback};
    if(o.error){scr.onerror= function(ev){ o.error(ev)}}
    scr=(document.head||document.querySelector("head")||document.body).appendChild(scr)
    scr.src=url;
    return o.promise||scr;

}

;/**
 * Created by Atul on 8/25/2015.
 */
	;(function(){
var transport,xhrWorker,validResponsetypes = "document json blob arraybuffer text json".split(/\s+/),DOMIND ;
	function domInd(mode){
		if(!DOMIND && typeof(document)!="undefined" && document.body){
			DOMIND=document.createElement("div")
			DOMIND.style.cssText="z-index:1001;position:fixed;top:10px;background-color:yellow;left:0;height:8px;width:8px;border-radius:4px;overflow:hidden;";
			DOMIND.className="fxtx_25";
			DOMIND=document.body.appendChild(DOMIND)
		}
		DOMIND.style.backgroundColor=mode===2?"red":"yellow"
		DOMIND.style.opacity=1
		 setTimeout(function(){DOMIND.style.opacity=0},500)
	}
function parseHTML(txt, xhr) {
	var doc = null
	if (!xhr.responseXML && typeof(txt) == "string" && typeof(DOMParser) != "undefined") {
		var oParser = new DOMParser();
		var oDom = oParser.parseFromString(txt, "text/html");
		doc = oDom.documentElement
	} else if (xhr.responseXML && xhr.responseXML.documentElement && xhr.responseXML.documentElement.querySelector) {
		doc = xhr.responseXML.documentElement
	}
	var div = document.createElement("div")
	if (doc) {
		var h = doc.querySelector("head")
		if (h) {
			while (h.firstChild) {
				var c = h.removeChild(h.firstChild);
				if (c && (String(c.tagName) == "SCRIPT" || String(c.tagName) == "LINK")) {
					div.appendChild(c)
				} else {
					if (c && String(c.tagName) == "TITLE" && c.textContent) {
						var h1 = document.createElement("H1")
						h1.className = "doc-title"
						h1.textContent = c.textContent
						div.insertBefore(h1, div.firstChild)
					}
				}
			}
		}
		var b = doc.querySelector("body")
		if (b) {
			while (b.firstChild) {
				div.appendChild(b.removeChild(b.firstChild))
			}
		}
	} else {
		try {
			if (typeof(txt) == "string") {
				div.innerHTML = txt.replace("<!DOCTYPE html>", "").trim().replace(/<[\/]?html>/g, "").trim()

			}
		} catch (e) {
		}
	}
	if (div && div.firstChild) {
		var d = document.createDocumentFragment()
		while (div.firstChild) {
			d.appendChild(div.removeChild(div.firstChild))
		}
		return d;
	}
	div = null;
	return txt
}
function parseJSONFromString(str) {
	var res = str
	if (typeof(str) == "string" && str.indexOf("function") == -1 && (
		(str.indexOf("{") == 0 && str.lastIndexOf("}") == str.length - 1) ||
		(str.indexOf("[") == 0 && str.lastIndexOf("]") == str.length - 1)
		)) {
		try {
			res = JSON.parse(str)
		} catch (e) {
			var __;
			try {
				eval("__=" + str);
				res = __
			} catch (e) {
			}
		}
	}
	return res
}
function _transport() {
	if (!transport) {
		var lst = [
			function () {
				return typeof(XMLHttpRequest2) != "undefined" ? new XMLHttpRequest2() : null;
			},
			function () {
				return new XMLHttpRequest();
			},
			function () {
				return new ActiveXObject('Msxml2.XMLHTTP');
			},
			function () {
				return new ActiveXObject('Microsoft.XMLHTTP');
			}
		]
		for (var i = 0; i < 3; i++) {
			var it = lst[i]
			try {
				if (lst[i]()) {
					transport = lst[i];
					break;
				}
				;
			} catch (e) {
			}
		}
	}
	return transport();
}
	var proto={
		then:function(fn,err){
			return this._promise.then(fn,err)
		},
		prepareParms: function prepareParms() {//url,configmap,callback
			var config = {}, argarr = [].slice.call(arguments[0])
			var callbacks={}
			if (argarr && argarr.length) {

				if (typeof(argarr[argarr.length-1]) == "function") {
					callbacks["complete"] = argarr.pop();
				}
				if (typeof(argarr[argarr.length-1]) == "function") {
					if(callbacks["complete"]){
						callbacks["error"]=callbacks["complete"]
					}
					callbacks["complete"] = argarr.pop();
				}
				if (typeof(argarr[0]) == "string" || (argarr[0] && typeof(argarr[0]) == "object" && "protocol" in argarr[0])) {
					config.url = argarr.shift();
				}
				if (argarr[0] && typeof(argarr[0]) == "object") {
					var obj = argarr.shift()
					if(typeof(obj.callback)=="function"){
						callbacks["complete"] = obj.callback;
						delete obj.callback;
					}
					for (var k in obj) {
						config[k] = obj[k];
					}
				}
				var info = $.pluck(config, ["directive", "type", "cmd", "target", "token"])
				var xhrinfo = $.pluck(config, ["isresource","method", "Eval", "sync", "async", "responseType", "headers", "type"])

				xhrinfo.callbackname=config.callbackname||config.jsoncallbackname||config.jsoncallback
				if (xhrinfo.async === false) {
					xhrinfo.sync = true
				}
				$.each(config,function(v,k){
					if(typeof(v)=="function"){
						callbacks[k]=v
					}
				})
				xhrinfo.method = String(xhrinfo.method || "get").toLowerCase()
				var args = $.omit(config, ["directive", "url", "isresource","uri", "URI", "params", "args", "pars", "data", "type", "cmd", "target", "token", "method", "sync", "responseType", "headers"])
				args.data = config.data;
				delete config.data
				for (var i = 0, l = ["params", "args", "pars"]; i < 3; i++) {
					var p = config[l[i]]
					delete config[l[i]]
					if (p) {
						if (!$.isPlain(p)) {
							if (typeof p != "object" || Array.isArray(p)) {
								args[l[i]=="callback"?"complete":l[i]] = p
							}
						}
						else {
							$.extend(args, p)
						}
					}
				}

				$.each(args,function(v,k){
					if(typeof(v)=="function"){
						callbacks[String(k).replace(/^on/,"").toLowerCase()]=v;
						delete args[k];
					}
				})
				this.config = {url:config.url,args: args, info: info, xhrinfo: xhrinfo}
				if(Object.keys(callbacks).length){
					this.config.callbacks=callbacks;
				}
			}

		},


		parseResponse: function parseResponse(xhr, issocketorjsonp) {
			var xhrinfo = this.config.xhrinfo

			xhr = xhr || {}
			var txt = issocketorjsonp === true ? (xhr.response || xhr.data) : (xhr.response || xhr.responseText || xhr.result || xhr.results || xhr.data)
			var responseType = xhr.responseType || xhrinfo.responseType
			var r=txt, r0
			if (responseType == "blob") {
				r = new Blob([xhr.response], {type: xhrinfo.type});
			} else if (responseType == "document" || xhr.responseXML) {
				r = parseHTML(txt, xhr)
			} else {
				if (typeof(txt) == "string") {
					r = txt
					if (/^<!\w/.test(r)) {
						//html
					} else if (xhrinfo.Eval) {
						var r1
						try {
							r1 = (1, eval)(r);
							r = r1
						} catch (e) {
						}
					} else if (!responseType || responseType == "json") {
						r = parseJSONFromString(r)
					} else {

					}
				}
				var data = (r || {}).data
				if (data && typeof(data) == "string") {
					r.data == parseJSONFromString(r.data)
				}
			}
			this.response=r;
			return r
		},
		readResponse: function readResponse(req0, issocketorjsonp) {
			if(this._done){return this.response}
			this._done = true
			var result, ths = this, req = req0 || this.transport
			try {
				if ((typeof(Event) != "undefined" && req0 instanceof Event)) {
					req = req.target||req.srcElement|| this.transport
				}
			} catch(e){}
			if (!req) {
				this.fire("complete",{})
				return {}
			}
			ths.responseHeaders = req.headers || (req.getAllResponseHeaders ? req.getAllResponseHeaders().split(/[\n\r]/).reduce(function (m, k) {
					var ar = k.split(":");
					if (!ar[0].trim()) {
						return m
					}
					return m[ar.shift().trim()] = ar.join(":").trim(), m
				}, {}) : {}) || {};
			var success
			if (issocketorjsonp) {
				success = !req.error;
			}
			else {
				success = (!req.status && location.protocol == "file:") || (String(req.status).toUpperCase() == "OK") ||
					(req.status >= 200 && req.status < 300) || req.status == 304 || req.status == 1223 || ($.browser.safari && req.status === undefined);
			}
			if (success) {
				result = ths.parseResponse(req, issocketorjsonp)
				if (ths.config.xhrinfo.sync) {
					//ths.fire("load", result);
				}
				ths._promise.resolve(result)
			} else {
				result = {error: ""}
				var err = req.error
				if (!err && req.data) {
					err = req.data.error || req.data
				}
				if (err && typeof(err) == "object") {
					if (err instanceof Error) {
						result.error = req.error.message || req.error.toString()
					} else {
						result.error = err.message || JSON.stringify(err)
					}
				} else {
					result.error = err
				}
				ths._promise.reject(result.error)
			}

			this.fire("complete",result)
			return result
		},
		readFileSystem: function readFileSystem( ) {
			var url=this.getUrl()
			if (/file:/i.test(url)) {
				var   errorHandler = function (e) {
					this._promise && this._promise.reject(e)
				}.bind(this)
				var filebase;
				window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;
				if (location.href.indexOf("index.html") > 0) {
					filebase = location.href.substr(0, location.href.indexOf("index.html"))
				}
				if (filebase && url.indexOf(filebase) >= 0) {
					//url = url.substr(window.filebase.length)

				}
				return
			}
		},
		sendSocket: function sendSocket( ) {
			var url=this.getUrl()
			var xhrinfo = this.config.xhrinfo, args = this.config.args, info = this.config.info
			var candoSocks = $.webSocket && $.webSocket.isAvailable() && !xhrinfo.sync
			if (candoSocks && (String(url).indexOf(String(app.servicePath)) != 0 || /\.(htm|html|js|json|css)$/i.test(this.URI.file))) {
				candoSocks = false
			}
			if (!candoSocks) {
				return
			}
			var type = info.type || info.cmd || "route"
			$.webSocket.dispatch(type, $.extend({}, info, (this.URI || {}).args), function (data, errmsg) {
				if (data === false) {
					if (!$.webSocket.isAvailable()) {
						this.send()
					}
					else {
						this._promise.reject(errmsg)
					}
				}
				else {
					this.readResponse(data)
				}
			}.bind(this));
			return this
		},
		sendWorker: function sendWorker( ) {
			if (this.config.xhrinfo.sync) {
				return
			}

			if (!xhrWorker && $.worker) {
				xhrWorker = $.worker.setup(null, true);
			}

			if (xhrWorker) {
				var url=this.getUrl()
				var ths = this
				xhrWorker.load(url).then(function (data) {
					ths.readResponse(data)
				}, function (data) {
					ths.readResponse(data)
				})
				return this
			}
		},
		getTransPort:function getTransPort() {
			if(!this.transport){
				this.transport = _transport()
				this.transport.onload = this.readResponse.bind(this)
				this.transport.onerror = function (e) {
					e=e||{}
					var target= e.target||{}
					var status=target.statusText||target.status|| e.message||"No response"
 					this._promise.reject({type: e.type, error:"Connectivity Error : "+(status||""),message: e.message, data: e.data})
				}.bind(this)
				this._attachCallbacks()
			}
			return this.transport;
		},
		sendGet: function sendGet() {

			var xhr, xhrinfo = this.config.xhrinfo, args = this.config.args, info = this.config.info
			var url=this.getUrl()
			xhr = this.getTransPort()

			xhr.open("GET", url, !xhrinfo.sync)
			if (xhrinfo.responseType && validResponsetypes.indexOf(xhrinfo.responseType) >= 0) {
				try {
					xhr.responseType = xhrinfo.responseType
				} catch (e) {
				}
			}
			if (!xhrinfo.headers) {
				xhrinfo.headers = {}
			}
			if ($.browser) {
				xhrinfo.headers["x-ua"] = $.browser.prefix + "/" + $.browser.version
			}
			xhrinfo.headers["x-requested-with"] = "xmlhttprequest"
			$.each(xhrinfo.headers,
				function (v, k) {
					xhr.setRequestHeader(k, v);
				}
			)
			//withCredentials



			xhr.send(null);
			if (xhrinfo.sync) {
				if (xhr.responseText) {
					this.readResponse()
				}
			}
			return this
		},
		sendCrossSite: function sendCrossSite() {
			var url=this.getUrl()
			if (this.URI && this.URI.isCrossSite && ResURL.getRoot() && ResURL.getRoot().host == this.URI.host) {
				this.URI.isCrossSite = false
			}
			if (this.URI.isCrossSite) {
				return $.xhr.jsonp(this)
			}
		},
		sendPost: function sendPost(URI) {
			this.URI||(this.URI=ResURL.make(this.config.url));
			var data, url = this.URI.build(), args = this.config.args
			if (args.data && Object.keys(args).length == 1) {
				data = args.data
			}
			else {
				data = args
			}

			if (data) {
				if (typeof(data) == "string") {
					data = decodeURIComponent(decodeURI(data))
				} else {
					data = JSON.stringify(data);
				}
			}
			var xhr = this.getTransPort()
 			xhr.open("POST", url)
			xhr.send(data || null);
			return this
		},
		getURI:function getURI() {
			if (!this.URI) {
				this.URI = this.URI || ResURL.make(this.config.url)
			}
			return this.URI
		},
		getUrl:function getUrl( nocache) {
			if(!this.url|| nocache){
				var url=this.getURI().updateArgs(this.config.args, true)
				url.updateArgs(this.config.info, true)
				this.url=url.fixUrl()
			}
			return this.url
		},
		send: function send(method) {
			domInd();
			this._attachCallbacks()
			if (typeof(method) == "string") {
				this.config.xhrinfo.method = method;
			}
			if (this.config.xhrinfo.method == "post") {
				return this.sendPost()
			}
			//pick the best available option
			var doget
			if(this.config.xhrinfo.isresource) {
				doget=true
			} else{
				var URI = this.getURI(),url=this.getUrl()
				//the serivce site should have cross site OK
				if(typeof(app)!="undefined" && url && ((app.resourcelib && url.indexOf(app.resourcelib)>=0) || (app.servicePath && url.indexOf(app.servicePath)>=0))){
					doget=true
 				} else if (URI && URI.file && /\.(js|css|html)$/.test(URI.file)) {
					doget=true

				}
			}
			//id resource file
			if(doget){
				this.sendGet();
			}
			else if (!this.sendSocket()) {
				if (!this.sendCrossSite()) {
					if (!this.sendWorker()) {
						this.sendGet()
					}
				}
			}

			return this
 			//get
		},
		_attachCallbacks:function(){
			if(this.config.callbacks){var callbacks=this.config.callbacks;
				$.each(callbacks,function(fn,ev){
					if(this.transport || ev=="complete"){
						this.on(ev,fn);
						delete this.config.callbacks[ev]
					}

				},this);
				if(!Object.keys(this.config.callbacks).length){
					this.config.callbacks=null;
				}

			}
		},
		fire:function(ev,data){
			this._emitter && this._emitter.dispatch(ev,data)
		},
		on:function(ev,fn,opts){
			this._evhandles||(this._evhandles={});
			this._emitter||(this._emitter=new $.emitter.simpleObserver(this));
			if(!this._evhandles[ev] && ev!="complete"){
				if(this.transport && this.transport.addEventListener){
					this.transport.addEventListener(ev,this._evhandles[ev]=this._emitter.dispatch.bind(this._emitter,ev) );
				}
			}
			this._emitter.add(ev,fn,opts)
		},
		abort: function abort() {
			if(this.transport){
				this.transport.abort()
			}
		}
	}
	proto.onload=function(fn,opts){this.on("load",fn,opts);return this}
	proto.onprogress=function(fn,opts){this.on("progress",fn,opts);return this}
	proto.onabort=function(fn,opts){this.on("abort",fn,opts);return this}
	proto.onerror=function(fn,opts){this.on("error",fn,opts);return this}

var xhr = $.createClass(
	function () {
		this._promise=Promise.deferred();
		this._promise.then(function(){},function(){domInd(2);})
		this.prepareParms(arguments)
	},
	proto
);

	$.xhr=xhr;
	$.xhr.get=function(url,config,optns){
 		return new $.xhr(url,config,optns).send("get")
	}
	$.xhr.post=function(url,config,optns){
		return new $.xhr(url,config,optns).send("post")
	}
	$.xhr.sync=function(url,config,optns){
		var nu=new $.xhr(url,config,optns)
		nu.config.xhrinfo.sync=true;
		return nu.send()
	}
	$.xhr.directive = function(cmd, pars,callback) {
		var url=app.servicePath
		var optns={cmd:cmd,pars:pars}
		return $.xhr.get(url,optns,callback)
	}
	$.xhr.jsonp=(function(){
		var __tempfns={},_counter=100,_head=(document.getElementsByTagName("head")||[])[0]||null,
			_body=(document.getElementsByTagName("body")||[])[0]||null ,_doc=document,__jsonp={}
		window.__jsonp=__jsonp;
		function jsonpcall(url,callbackname,callback){
			var fnnm="cb"+(++_counter)
			url=url+(url.indexOf("?")>0?"&":"?")+callbackname+"=__jsonp."+fnnm ;
			var cnt=0;
			//url=url.replace(/%[3D2B0]+/)
			while(/%\w\w/.test(url)&&++cnt<10){
				url=decodeURIComponent(url)
			}
			var scrpt=_doc.createElement("script")
			scrpt.onerror=function(e){
				console.log("Call to service failed",url)
				callback({"error":"Call to service failed"},true)
			}
			_head.appendChild(scrpt);
			__jsonp[fnnm]=(function(nm,scrpt,callback){
				return function(data){
					try{
						scrpt.parentNode&&scrpt.parentNode.removeChild(scrpt);
						delete __jsonp[nm]
					} catch(e){}
					if(data==null){
						callback({"error":"_"},true )
					}
					else{
						callback({response:data})
					}
					//callback(data==null?"error":"load",data)

				}
			})(fnnm,scrpt,callback);
			scrpt.setAttribute("src",url)
			scrpt.src=url
			if(scrpt.getAttribute("src")!=url){
				scrpt.setAttribute("src",url)
			}
		}
		var defCallbackname="callback"
		return function(url,config,optns){
			var nu,procargs= 0,callbackname,oncomplete=null
			if(typeof(optns)=='function'){oncomplete=optns;optns=null}
			callbackname=(config||url||{}).callbackname
			if(typeof(url)=="string" && /^(http|file)/i.test(url) && typeof(config)=="function"&& (!optns || typeof(optns)=="string"||optns===true)){
				if(optns===true) {
					var uid = "", cid = window.CLIENTID
					if (typeof(app) != "undefined" && app.user) {
						uid = app.user.id
					}
					if (uid || cid) {
						if (url.indexOf("&") > 0||url.indexOf("?") > 0) {
							url = url + "&_clientid=" + cid + "&_userid=" + uid
						}
						else {
							url = url + "?_clientid=" + cid + "&_userid=" + uid
						}
					}
				}
				return jsonpcall(url ,optns||defCallbackname, config)
			}
			else if(url && url instanceof  $.xhr){
				callbackname= url.config.xhrinfo.callbackname
				nu=url
				url=nu.getUrl();

			}
			else{
				if(optns===true){optns=null}
				var nu=new $.xhr(url,config,optns)
				callbackname= nu.config.xhrinfo.callbackname
				url=nu.getUrl()
				procargs=1
				//if(config){
				// if(typeof(config)=="object"){$.extend(nu.config,config)}
				// else if(typeof(config)=="function"){nu.onload(config)}
				//}
			}
			var g=self,nm
				if(_head===null){  _doc=document
				_head=_doc.getElementsByTagName("head")[0]||null
				_body=_doc.getElementsByTagName("body")[0]||null
			}
			if(oncomplete){
				nu._promise.then(oncomplete)
			}
			jsonpcall(url , callbackname||"jsonpcallback",
				function(data,iserr){
					if(iserr){nu._promise.reject(data)}
					else{nu.readResponse(data,true)}
				}
			)



			return  nu
		}   })()

})();;$.domUI = function(a) {
    var toignore = [];
    if(typeof(a)=="string"){
        toignore = a.split(/[\s,]+/)
        a=null;
    } else if(Array.isArray(a)){
        toignore= a.slice();a=null;
    }
    var model = $.simpleModel({
        style: {  reader: "map",readerOptions:{
            stringParser:function(a){
                return a.split(";").reduce(function(m,k){
                    var arr=k.split(":");m[arr[0].trim()]=String(arr[1]||"").trim();return m;
                },{})
            }}
        },
        klass: { reader: "list",readerOptions:{delim:" "}  },
        attr: { reader: "map" },
        data: {  reader: "map" },
        props:{ reader: "map" },
        delegate:null,
        listeners:null
    } );
    if(a && $.isElement(a)){
        model.delegate=a;
    }
    model.rescan=function(){
        var noti=Object.getNotifier(this)
        if(noti && typeof(noti.scan)=="function"){noti.scan()}
    }
    model.readConfig=function(config){
        if($.isPlain(config)){
            var ths=this;
            $.each(config,function(v,k){
                if(ths.hasProperty(k) ){
                    ths.set(k,v)
                } else {
                    var isstyle = $d.css.isStyle(k)
                    if(isstyle && isstyle.js && ths.style){
                        ths.style[isstyle.js]=v;
                    } else if($d.isValidAttrName(ths.delegate,k)){
                        ths.attr[k]=v;
                    }
                }
            });
        }
    },
    model.updateUI=function(val){
        if($.isPlain(val)){
            var ths=this;
            $.each(val,function(v,k){
                ths.setUI(k,v);
            });
        }
    }
    model.getUIProp=function(nm){
        if(typeof(nm)=="string" && /\s/.test(nm.trim())){nm=nm.trim().split(/\s+/)}
        if(Array.isArray(nm)){
            var ths=this;
            return nm.reduce(nm,function(m,k){
                var val=ths.getUIProp(k)
                if(val!=null){m[k]=val}
                return m
            },{});
        }
        if(this.hasProperty(nm) ){
            return this.get(nm)
        }
        var isstyle = $d.css.isStyle(nm)
        if(isstyle && isstyle.js && this.style){
            return this.style[isstyle.js]
        }
        if(this.props && this.props[nm]){
            return this.props[nm]
        }
        if(this.attr && this.attr[nm]){
            return this.attr[nm]
        }
        if(this.data && this.data[nm]){
            return this.data[nm]
        }
        if(this.listeners && this.data[nm]){
            return this.data[nm]
        }
    }
    model.setUI=function(nm,val){
         if(!(nm && typeof(nm)=="string")){
             return
         }
        var isstyle = $d.css.isStyle(nm),ths=this ;
        if(isstyle && isstyle.js ){
            ths.style[isstyle.js] = val
        } else if(this.hasProperty(nm) ){
            ths.set(nm,val)
        } else if("css" == nm || "styles" == nm ){
            ths.style = val || {}
        } else if("class" == nm || "classname" == nm.toLowerCase()){
            this.klass = val
        }  else if("dataset" == nm || /^data[A-Z\-]\w*$/.test(nm)){
            if(nm!="dataset"){nm=nm.replace(/^data/,"");nm=nm.charAt(0).toLowerCase()+nm.substr(1).replace(/[A-Z]/g,function(a){return "-"+ a.toLowerCase()})
                this.data[nm]=val
            }
            else{this.data = val}
        } else {
            if($d.isValidAttrName(nm)){
                ths.attr || (ths.attr = {});
                if(val && nm.indexOf('on')==0 && (typeof(val)=="function"||typeof(val.callback)=="function")){
                    ths.listeners[nm]=val
                }
                else {
                    ths.attr[nm] = val
                }
            } else{
                ths.props || (ths.props = {});
                ths.props[nm] = val
            }
            return
        }
    }
    model.applyUI=function(el){
        this.rescan();
        var elem=$d(el)||$d(this.delegate)
        if(!elem){return}
        if(elem){
            this.style && Object.keys(this.style).length && elem.css(this.style)
            elem.addClass(this.klass).attr(this.attr).prop(this.prop)
        }
        if(this.listeners && Object.keys(this.listeners).length){
            $.each(this.listeners,function(v,k){
                var cb,optns={}
                if(v.callback){cb= v.callback;optns=v;}
                else{cb=v;}
                elem.on(k+".domui",cb,optns);
            })
        }
        return elem;
    }
    model.listeners={};
    model.style={};
    model.klass=[];
    model.attr={};
    model.data={};
    model.props={}
    $.observe(model, function(recs) {
        var arr=Array.isArray(recs)?recs:[recs]
        for(var i=0;i<arr.length;i++){
            var rec=arr[i],ths=model;
            var nm = rec.name,type=rec.type;
            if(type ==="remove" || type ==="delete" || (ths.hasProperty(nm) && nm!="id")){continue}
            if (!nm || "length" == nm || !isNaN(nm) || (toignore.indexOf(nm) >= 0) || !(ths && ths.style)) { continue}
            if(rec.oldValue !=null){
                ths.setUI(nm,rec.oldValue)
            }
            ths.setUI(nm,rec.newValue||rec.value||ths[rec.name])
            if("add" === type){
                //delete this[nm]
            }
        }

    },["update"]);
    return model
}
$.domUI.addTo = function(a, b, c) {
    var d = $.domUI(c);
    if (b = b, a) {
        var e = a;
        a.properties && (e = a.properties);
        var f = a[b];
        e.addProperty ? (e.removeProperty(b), e.addProperty(b, {
            reader: function(c, d) {
                var e = 0;
                if (d || (d = a[b]), d = d || {}, d.style || (d.style = {}), d.attr || (d.attr = {}), d.data || (d.data = {}), d.klass || (d.klass = []), null == c) return d;
                var f = c;
                return "string" == typeof f ? (f.indexOf(":") > 0 ? d.style == f.split(";").reduce(function(a, b) {
                    var c = b.split(":");
                    return 2 == c.length && (a[c[0]] = c[1]), a
                }, {}) : d.klass = f.split(/\s+/), e = 1) : $.isArrayLike(f) && (e = 1, d.klass = [].slice.call(f)), $.isPlain(f) && Object.keys(f).length && (e = 1, $.extend(d, f)), e && $.updateVersion(d), d
            }
        }), e.set(b, d)) : (delete a[b], $.defineProperty(a, b, function(a) {
            var b = $.baseModel._readers.map(a);
            return {
                set: function(c) {
                    return null == c ? (a.__curr.style = {}, a.__curr.attr = {}, void(a.__curr.klass = [])) : void(a.__curr = b(c, a.__curr, a.holder))
                },
                get: function() {
                    return a.__curr
                }
            }
        }({
            name: b,
            holder: a,
            __curr: d
        }))), f && (a[b] = f)
    }
    return d
}
;/**
 * Created by Atul on 5/20/2015.
 */
(function() {
    var proto = {
        setUpWidget:function(config){
            this.__instance__ = true;
            Object.defineProperties(this,{
                "observer": {
                    set:function(){},
                    get: function () {
                        if (!this.__instance__) { return }
                        var nu
                        delete this.observer;
                        Object.defineProperty(this,"observer", {value: nu = $.emitter.augment(this), writable: false, enumerable: true, configurable: true})
                        return nu;
                    }, configurable: true
                },
                "config": {
                    set: function (object) {
                        if (!this.__instance__) {  return  }
                        delete this.config;
                        var nu = new $.observable()
                         nu.set(object)
                         Object.defineProperty(this,"config", {value: nu, writable: false, enumerable: true, configurable: true})
                        return nu
                    }, get: function () {
                        if (!this.__instance__) { return }
                        var nu
                        delete this.config;
                        Object.defineProperty(this,"config", {value: nu = new $.observable(), writable: false, enumerable: true, configurable: true})
                        return nu;
                    }, configurable: true
                }
            })
            if(config && typeof(config)=="function"){config={render:config}}
            if(config && $.isPlain(config)){
                if(typeof(config.render)=="function"||typeof(config.renderImpl)=="function"){
                    this.renderImpl=config.render||config.renderImpl;
                    delete config.render;
                    delete config.renderImpl
                }
                if(config.tag){
                    this.el=$d(document.createElement(config.tag))
                }
                this.config=config
            };
            if(config.el){
                this.el=$d(config.el)
            }
            this.$ = $d.util.createScopedDollar("el");


        },
        on:function(ev,fn,optns){

        },
        onConfigChange: function (nm, fn) {
            if (typeof(nm) == "function") {
                fn = nm;
                nm = "*"
            }
            var C = this.config;
            if (C) {
                C.onchange(nm, fn);
            }
            return this
        },
        renderImpl:function(){ 
            return this},
        render:function(data){
            if("observer" in this){
                if(this.observer.fire("beforerender")===false){return  this}
            }
            this.renderImpl.apply(this,arguments)
            if("observer" in this){
                this.observer.fire("afterrender")
            }
            return this
        }
    };
    ["appear","disAppear","slideUp","isVisible","slideDown","css", "text", "attr", "html", "insert", "append","appendTo", "prepend", "moveTo", "resize", "clear", "toFront", "hide", "show", "addClass", "removeClass", "hasClass", "isVisible", "clear", "onAttach", "anum"].forEach(
        function (ky) {
            if(ky in proto){return}
            proto[ky] = (function (k1) {
                var k2 = k1;
                return function () {
                    var el=this.el;
                    if(!el){return}
                    var D = $d, m = D[k2],
                        r = m.apply(D, [el].concat([].slice.call(arguments)));
                    return (r ==  el || r ==  el.el) ? this : r
                }
            })(ky)
        }
    );
    ["click", "mousedown", "mouseup", "mouseove", "mouseover", "hover", "keydown", "keyup", "resize", "focus", "blur"].forEach(
        function (ky) {
            proto["on" + ky] = (function (k1) {
                var k2 = k1;
                return function (fn, optns) {
                    var el=this.ip||this.el;
                    if(!el){return}
                    $d.on(el,k2, fn, optns)
                    return this
                }
            })(ky)
        }
    );
    $.widget2 = $.createClass(function (config) {
            if(config){
                this.setUpWidget(config)
            }
        }, proto, { }
    );
    $.widget2.pic= $.createClass(
         function(config){
             this.setUpWidget(config)
             this._content='' +
                 "\
                 <div  class='pic-bar' style='text-align: center'>\
                     <button class='ui-button small smaller'  type='button' data-key='snap'>Snap</button>\
                     <span class='for-upload-file' style='position:relative;overflow:hidden;'>\
                     <button  class='ui-button small smaller'type='button' data-key='upload' style='z-index:1; '>Upload</button>\
                     </span>\
                 </div>"
                 if(this.el){
                     var img=this.el
                     this.el=img.after("<div/>")
                     this.el.addClass('pic-wrap');
                     this.el.html(this._content)
                     this.el.prepend(img)
                 }
        },

        {renderImpl:function(){
            this.el.q("button[data-key='snap']").on("click", this.snap.bind(this))
            //this.el.q("button[data-key='upload']").on("click", this.upload.bind(this))
            this.setupUpload(this.el)
        },
        snap:function _snap(ev){
                    var snapshot= $.require("UI.snapshot")
                    if(!$d(ev.target).up(".pic-wrap")||!($d.is(ev.target,"button")||$d.is(ev.target,"img"))){return}
                    var img=$d(ev.target).up(".pic-wrap").q("img")
                    if(!img){return}
                    var b=img.getBoundingClientRect()
                    snapshot(null,{width:Math.max(180, b.width),top: b.top  ,left: b.left-10 ,callback:function(resultimg,canvas,cntnr){
                        if(resultimg){
                            img.el.src=resultimg.src
                        }
                    }});

        },
            setupUpload:function _setupupload(el){
                var iptemplate=this.iptemplate,uploadbutton,updlbl
                    if(!iptemplate){
                        var d=document.createElement("div"),b
                        d.innerHTML="<input style='width:5px;height:5px;background-color:white;border:none;z-index:20;position: absolute;opacity:.1' name='upload-file' id='upload-file' type='file'/>",
                            this.iptemplate=iptemplate= d.removeChild(d.firstChild);d=null;
                        updlbl=this.updlbl=el.q(".for-upload-file")
                        this.uploadbutton=uploadbutton = updlbl.down("button")
                        var ths=this
                        //iploadip=updlbl.insertBefore(iptemplate.cloneNode(true),updlbl.firstChild)
                        updlbl.on("mousemove",function(ev){
                            if(!ths.iploadip){return}
                            var wd=updlbl.offsetWidth+5;
                            //updlbl.style.width=wd+"px";
                            var b=updlbl.el.getBoundingClientRect();

                            if(b.top==0){b=updlbl.el.getBoundingClientRect(); }
                            var pos={}
                            pos.x=(ev.x- (b.left+3));pos.y=(ev.y- (b.top+3));
                            if(pos.y<=0 || pos.x<=0 || pos.y> b.height || pos.x>wd){return}
                            ths.iploadip.style.top=pos.y+"px";
                            ths.iploadip.style.left=pos.x+"px"
                        });
                    }
                this.upload()
                },
            setupIP:function(FILE){
                var img=this.updlbl.up(".pic-wrap").q("img"),el,_upload=this.upload.bind(this),ths=this
                this.FILE=FILE;
                FILE.setupIp(ths.iploadip, {
                    type: 'image', reader: "dataURL",
                    complete: function (pr) {
                        img.src = this.result
                        if (ths.iploadip) {
                            ths.iploadip.parentNode.removeChild(ths.iploadip);
                            ths.iploadip = null;
                            _upload();
                        }
                    }
                })
            },
    upload:function _upload(ev){
                    var updlbl=this.updlbl,trig
                    if(!this.iploadip) {
                        this.iploadip = updlbl.insertBefore(this.iptemplate.cloneNode(true), this.uploadbutton)
                        trig=true
                    }
                    if(this.FILE){
                        this.setupIP(this.FILE)
                    }  else{
                        $.require("$File",this.setupIP.bind(this))
                    }



                }

        },$.widget2
    )
    $.widgetInputWrap= $.createClass(
        function(config){
            this.setupInput(config);
        },
        {
            setupInput:function(config){
                config=config||{}
                this.setupWidget(config)
                if(!this.el){
                    this.el=$d(document.createElement("label"))
                }
                var type=this.config.get("type")||"text"
                var ip=document.createElement('input')
                ip.type=type;
                this.ip=this.el.append(ip);
            },
            renderImpl:function(optns){
                this.el.addClass("form-input-wrap")
                if(this.config.get("label")){
                    this.el.prepend("span.form-input-label").html(this.config.get("label"))
                }
                if(optns){
                    if( optns.type){
                        this.ip.type=optns.type;
                    }
                    if( optns.container){
                        this.el.appendTo(optns.container);
                    }

                }
                return this
            },
            onchange:function(fn, optns){
                this.ip.on("change",fn, optns);
                return this
            },
            val:function(){
                return arguments.length?this.ip.val(arguments[0]):this.ip.val()
            }
        },
        $.widget2,{}
    )
})();

$.widget = Klass("$.widget", (function () {
        var proto = {el: null, template: null, elementtemplate: null, elements: [], _rendered: false, value: null,contentclass:null
            ,content:{get:function(){return (this.el&&this.contentclass)?$d.selfOrDown(this.el,this.contentclass):$d(this.el)}},
            name:null,
            tag:null
        };
        proto.mixins = ["config"];
        ["css", "text", "attr", "html", "insert", "append", "prepend", "moveTo", "resize", "clear", "toFront", "hide", "show", "addClass", "removeClass", "hasClass", "isVisible", "clear", "onAttach"].forEach(
            function (ky) {
                proto[ky] = (function (k1) {
                    var k2 = k1;
                    return function () {
                        var D = $d, m = D[k2],
                            r = m.apply(D, [this.el].concat($.makeArray(arguments)));
                        return (r == this.el || r == this.el.el) ? this : r
                    }
                })(ky)
            }
        );
        ["click", "mousedown", "mouseup", "mouseove", "mouseover", "hover", "keydown", "keyup", "resize", "focus", "blur"].forEach(
            function (ky) {
                proto["on" + ky] = (function (k1) {
                    var k2 = k1;
                    return function (fn, optns) {
                        this.el.on(k2, fn, optns)
                        return this
                    }
                })(ky)
            }
        );
        proto.activate = function () {
            if (!this._rendered) {
                this.render();
                this.show()
            }
            return this
        }
        proto.val = function () {
            var v
            if (arguments.length) {
                v = arguments[0];
                if (typeof(this.reader) == "function") {
                    v = this.reader.call(this, arguments[0], arguments[1])
                }
                this.properties.set("value", v);
                return this
            }
            v = this.properties.get("value");
            if (typeof(this.resolver) == "function") {
                v = this.resolver.call(this, v)
            }
            return v
        }
        proto.onchange = function (fn, optns) {
            return this.onpropertychange("value", fn, optns)
        }
        proto.find = function (fn) {
            return this.el.q(fn)
        }
        proto.eachElement = function (fn) {
            this.elements.each(fn, this)
        }
        proto.init = function () {
            if (!this.el) {
                this.el = $d("<"+(this.tag||"div")+">")
            }
            if (this.el) {
                this.el = $d(this.el)
            }
            this.elements = List.create()
        }
        proto.renderimpl = function () {
            return this.el
        }
        proto.addElement = function (data,container) {
            var r=container||this.el
            var el = r.append(data);
            el.addClass("widget__item")
            this.elements.add(el)
            return el
        },
            proto.render = function (data, dom) {
                this.fire("beforerender")
                this.el = $d(this.el)
                data=data||this.list
                var list = $.isArray(data) ? data : (data || {}).list, items, r
                if (list && $.isArray(list) && this.elementtemplate) {
                    if (typeof(this.elementtemplate) == "string") {
                        this.elementtemplate = $d.template(this.elementtemplate)
                    }
                    var t = this.elementtemplate
                    items = data.map(function (a) {
                        return t?t(a):a
                    })
                }

                if ( this.template) {
                    if (typeof(this.template) == "string") {
                        this.template = $d.template(this.template)
                    }
                    r = $d(this.template($.isArray(data)?{list:items}:data))
                } else {
                    if (items) {
                        items = items.map(function (it) {
                            return $d(it)
                        })
                    }
                }

                r = this.renderimpl(r||this.el,items)||r

                if (r) {
                    if(this.el && !this.el.contains(r)){
                        r = this.el.append(r)
                    }

                } else {
                    r = this.el
                }
                this.el=this.el||r;
                if (items) {
                    for (var i = 0, l = items, ln = l.length, k; k = l[i], i < ln; i++) {
                        if (!k) {
                            continue
                        }
                        this.addElement(k,r);
                    }
                }
                var ths = this

                this.el && this.el.on("click.render", function (ev, el) {
                    if ($d.hasClass(ev.target, "ignore-selection") || $d.matches(ev.target, "input")) {
                        return
                    }
                    ths.fire("selection", el || $d.selfOrUp(ev.target, ".widget__item"))
                }, ".widget__item")
                this._rendered = true;
                this.observer.fireAsync("afterrender", r)
                return this;
            }
        proto.appendTo = function (dom) {
            if(!this._rendered){
                this.render();
            }
            this.el = $d.append(dom, this.el)
            return this
        }
        return proto
    })()
);
$.widget.create = function (nm, impl,proto) {
    if (typeof(impl) == "function") {
        impl = {renderimpl: impl}
    }
    impl = impl || {}
    if (impl.render) {
        impl.renderimpl = impl.render;
        delete impl.render
    }
    var addtnl= $.extend({},impl)
    if(proto && $.isPlain(proto)){
        $.extend(addtnl,proto)
    }
    var nu = $.widget.extend(nm, addtnl)
    return nu;


}, $.widget.svg = $.widget.extend({
    properties: {
        src: null,
        content: null,
        contentPromise: null
    },
    init: function() {
        this.contentPromise = Promise.deferred(), this.src || "string" != typeof arguments[0] || (this.src = arguments[0]), "string" == typeof this.src && $.xhr.get(this.src, this.contentPromise.resolve.bind(this.contentPromise))
    },
    renderimpl: function(a) {
        var b = this;
        a = a || this.el, this.contentPromise.then(function(c) {
            var d = c;
            b.srcFormatter && (d = b.srcFormatter.call(b, d)), a && (a.innerHTML = d, b.observer.fire("afterrenderimpl", a))
        })
    }
});

$.widget.form = $.widget.extend({
        properties: {
            meta: null,
            labelPos: null,
            formPrefix:null
        },
        init: function() {
            this.tag="form"

        }
    }
);

$.widget.formElement = $.widget.extend({
    properties: {
        meta: null,
        name: null,
        label: null,
        labelPos: null,
        iptype:null,
        ip:null,
        formPrefix:null,
        renderer:null,
        valueformatter:null
    },
    init: function() {
        this.tag="label"
        this.onpropertychange("label",function(rec){
            var lbl=this.el.q(".form-element-label")
            if(lbl){lbl.html(rec.value==null?"":rec.value)}
        });
        this.onpropertychange("value",function(rec){
            this.updateIpValue(rec.value)
        })
        this.onpropertychange("valueformatter",function(rec){
            var raw=this._raw
            if(raw){this._raw=null}
            this.updateIpValue(raw)
        })

    },
    getIpValue:function(){
        var val,ip=this.ip
        if(ip.type=="checkbox"||ip.type=="radio"){
            if(ip.checked){
                val= String(ip.value||"").trim();
                if(!val){val=true}
            } else{return}
        } else{val=ip.value}
        return val
    },
    addOptions:function(lst,clr){
        if(this.ip){
            this.ip.addOptions(lst,clr)
        } else{
            this._litopts=[lst,clr]
            this.onpropertychange("ip",function(rec){
                if(this.ip && this._litopts){
                    this.ip.addOptions(this._litopts[0],this._litopts[1])
                    this._litopts=null;
                }
            })
        }
    },
    onInputChange:function(){
        var val=this.getIpValue()
        this.observer.fire("input",val)
    },
    onValueChange:function(){
        this._raw=this.value=this.getIpValue()
    },
    updateIpValue:function(val){
        var v=val,curr=this.getIpValue();
        if(this._raw===val){return}
        this._raw=val;
        if(this.valueformatter){
            v=this.valueformatter(val)
        }
        if(curr==v){return}
        if(this.ip){
            this.ip.val(v);
        }

    },
    renderimpl: function(a) {
        var iphtml,prefix=this.formPrefix||""
        if(!this.el.q("input")){
            var renderer=this.renderer
            if(typeof(this.renderer)=="function"){
                iphtml=this.renderer();
            } else{
                if(this.iptype=="select"){
                    iphtml="<select class='form-element-ip' name='"+(prefix+(this.name||""))+"' data-key='"+(this.name||"")+"' ><option value=''>-"+(this.name)+"-</option></select>"
                } else if(this.iptype=="textarea"){
                    iphtml="<textarea class='form-element-ip' name='"+(prefix+(this.name||""))+"' data-key='"+(this.name||"")+"' > </textarea>"
                } else {
                    iphtml="<input class='form-element-ip' name='"+(prefix+(this.name||""))+"' data-key='"+(this.name||"")+"' type='"+(this.iptype||"text")+"'/>"
                }
            }

            this.el.html("<span class='form-element-label'>"+(this.label||"")+"</span>"+iphtml)
        }


        this.ip=this.el.q(".form-element-ip")||this.el.q("input");
        this.ip.el.addEventListener("change",this.onValueChange.bind(this))
        this.ip.el.addEventListener("input",this.onInputChange.bind(this))
    }
});

$.widget.editable = $.widget.extend({
    properties: {
        meta: null,
        record: null
    },
    init: function() {
        ("string" == typeof this.meta || $.isPlain(this.meta)) && (this.meta = new Data.Column(this.meta))
    },
    clear: function() {
        return this.el = this.meta = null, this.columnIndex = -1, this
    },
    getValue: function() {
        var a = this.record;
        return a ? a.get(this.name) : void 0
    },
    setValue: function(a) {
        var b = this.record;
        return b ? b.set(this.name, a) : this
    },
    update: function(a, b) {
        return this.setValue(this.name, a), b && this.render(a), this
    },
    renderValue: function(a) {
        if (a = null == a ? this.getValue() : a, this.config.renderer) return this.config.renderer(a, this);
        var b = this.meta ? this.meta.getDisplayValue(a) : a;
        return this.meta && this.meta.cellRenderer ? this.meta.cellRenderer(b) : b
    },
    render: function(a) {
        return this.content.html(this.renderValue(a)), this
    }
});

$.widget.list = $.widget.extend({
    properties: {
        list: null,
        store: null
    },
    init: function(a) {
        this.el || (this.el = $d("<div>")), this.el && (this.el = $d(this.el)), "function" == typeof a && (a = a());
        var b;
        if (a && "object" == typeof a) {
            if ($.is(a, List)) b = List.plugin.selectionModel(c.records);
            else if ($.is(a, Data.store)) {
                var c = a;
                b = List.plugin.selectionModel(c.records); {
                    c.meta
                }
            } else b = List.from($.isArrayLike(a) ? a : []);
            List.plugin.selectionModel(b)
        }!b && this.list ? List.plugin.selectionModel(this.list) : this.list = b, this.elementtemplate || (this.elementtemplate = function(a) {
            return "<li style='position:relative;' data-key='" + this.keyprovider(a) + "'>" + this.labelprovider(a) + "</li>"
        }.bind(b)), this.template || (this.template = "div.listbox-container.layout-list-popup>ul.layout-fit-container.filter-listbox.defcontentBg{-list-}")
    },
    renderimpl: function(a) {
        this.config.nowrap && this.el.addClass("nowrap"), $d(a).st("li").addClass("list-row").css({
            overflow: "hidden",
            overflowY: "auto"
        })
    },
    parseList: function(a) {
        if (a) {
            "function" == typeof a && (a = a());
            var b;
            if (a && "object" == typeof a) {
                if ($.is(a, List)) b = List.plugin.selectionModel(store.records);
                else if ($.is(a, Data.store)) {
                    this.store = a, b = List.plugin.selectionModel(this.store.records); {
                        store.meta
                    }
                } else if ($.isArrayLike(a)) {
                    var c = a.map(function(a) {
                        return a && "object" == typeof a ? a : {
                            id: a,
                            label: String(a)
                        }
                    });
                    b = List.from(c)
                } else b = List.from([]);
                List.plugin.selectionModel(b)
            }!b && this.list ? List.plugin.selectionModel(this.list) : this.list = b
        }
    }
});

;/**
 * Created by Atul on 5/20/2015.
 */
$.numberFormat = (function () {

    var _formatCache = {
            "###,###.##": { name: "deflt", decimalSep: ".", groupSep: ",", decimals: 2, groupsize: 3, lastgroupsize: 3},
            "###,##0.00": { name: "numeric", decimalSep: ".", groupSep: ",", decimals: 2, groupsize: 3, lastgroupsize: 3},
            "###,##0": { name: "int", decimalSep: ".", groupSep: ",", negformat: "", decimals: 2, groupsize: 3, lastgroupsize: 3},
            "$###,##0": { name: "int", decimalSep: ".", groupSep: ",", negformat: "", decimals: 2, groupsize: 3, lastgroupsize: 3}

        }, defformat = "###,####.##", _formatCacheByName = null,
        defpattern = { decimalSep: ".", groupSep: ",", format: "", negformat: "", wrap: ["", ""], decimals: 2, groupsize: 2, lastgroupsize: 3}
    var makepattern = function (rcvr) {
        rcvr || (rcvr = {});
        Object.keys(defpattern).forEach(function (k) {
            rcvr[k] = $.clone(defpattern[k])
        })
        return defpattern;
    }


    return function numberFormat(v0, f, ashtml) {
        if(typeof(v0)=="string"&& !v0.trim()){return ""}
        if(!v0 && v0!==0){return ""}
        var n = ~~v0;
        var patternstr = "", pattern = {}, sign = "", res = [], v = String(v0).replace(/[^\.\d]/g, "").trim()
        if (n < 0) {
            sign = "-"
        }
        makepattern(pattern)
        pattern.wrap = pattern.wrap||["", ""]
        if (!_formatCacheByName) {
            _formatCacheByName = {}
            $.each(_formatCache, function (v, k) {
                if (v) {
                    v.format = k;
                    _formatCacheByName[v.name || k] = v

                }
            })
        }
        if (!f) {
            f = _formatCacheByName.deflt;
        }
        if (f && typeof(f) == "object") {
            Object.keys(f).forEach(function (k) {
                pattern[k] = f[k]
            })
        } else {
            var a = String(f), types = a.split(/;/).filter(function (a) {
                return String(a).trim().length > 1
            })
            patternstr = a;
            if (types.length > 1) {
                if (!n && types[2]) {
                    a = types[2];
                    v = "0";
                }
                if (n < 0 && types[1]) {
                    sign = "";
                    a = types[1]
                }
                else {
                    a = types[0]
                }
                patternstr = a;
            }
            patternstr = a;
            if (_formatCache[a] || _formatCacheByName[a]) {
                pattern = _formatCache[a] || _formatCacheByName[a]
                if (!pattern.format) {
                    pattern.format = a;
                }
            } else {
                var seps = []
                if (/\.0+$/.test(a)) {
                    if (a.indexOf(",") > 0) {
                        seps = [",", "."]
                    }
                    else {
                        seps = ["", "."]
                    }
                }
                else {
                    seps = a.substr(1).match(/[\,\.]/g) || []//^\[\]%\s\w\#\(\)\-\+\$
                    if (seps.length == 1 && seps[0] == ".") {
                        seps = ["", "."]
                    }
                    else {
                        while (seps.length > 2) {
                            seps.shift()
                        }
                    }
                }

                pattern.groupSep = seps.shift();
                if (seps.length) {
                    pattern.decimalSep = seps.pop();
                }
                a = a.replace(/^[^#\d\.]+/g, function (b) {
                    if (/^\[[^\]]+\]/.test(b)) {
                        b = b.replace(/^\[([^\]]+)\]/, function (a1, b1) {
                            pattern.color = b1;
                            return ""
                        })
                    }
                    pattern.wrap[0] = b;
                    return ""
                })
                a = a.replace(/[^#\d\.]+$/g, function (a) {
                    pattern.wrap[1] = a;
                    return ""
                })
                if (a.charAt(0) == "(" && a.charAt(a.length - 1) == ")") {
                    pattern.wrap = [a.charAt(0), a.charAt(a.length - 1)]
                    a = a.substring(1, a.length - 1)
                }
                pattern.format = a

            }
        }
        if (!(pattern.top && pattern.groupsize) && pattern.format) {
            var df1 = pattern.format.split(pattern.decimalSep)
            pattern.top = df1.shift();
            pattern.decimalformat = df1.pop() || ""
            if (pattern.groupSep && pattern.top.indexOf(pattern.groupSep) > 0) {
                var parts = pattern.top.split(pattern.groupSep).map(function (it) {
                    return it.replace(/[^\d\#]/g, "").length
                })
                pattern.groupsize = parts[0] || 0
                pattern.lastgroupsize = parts[parts.length - 1] || 0;
            }
        }

        var fin = [], dec = [] ,
            vparts = v.split("."), v0 = vparts.shift(), decpart = String(vparts[0] || ""),
            sarr = v0.split(""), ln = sarr.length,
            w = pattern.lastgroupsize , cn = 0;
        if (w && w > 0 && w < sarr.length) {
            [].unshift.apply(res, sarr.splice(ln - w, w));
            ln = sarr.length
            ln && res.unshift(pattern.groupSep);
        }

        if (pattern.groupsize && pattern.groupsize > 1) {
            cn = 0
            w = pattern.groupsize
            while (sarr.length > w) {
                if (++cn > 20) {
                    break;
                }
                [].unshift.apply(res, sarr.splice(sarr.length - w, w));
                sarr.length && res.unshift(pattern.groupSep);
            }
        }
        if (sarr.length) {
            [].unshift.apply(res, sarr)
        }
        String(pattern.top).split("").reverse().forEach(function (k) {
            if ((k == "#" || k == pattern.groupSep)) {
                res.length && fin.unshift(res.pop())
            } else if (k == "0") {
                fin.unshift(res.length ? res.pop() : k)
            } else {
                fin.unshift(k)
            }
        });
        if (res.length) {
            [].unshift.apply(fin, res);
        }


        if (pattern.decimalformat && pattern.decimalformat.length) {
            for (var i = 0, l = pattern.decimalformat.split(""), ln = l.length; i < ln; i++) {
                if ((l[i] == "#" || l[i] == "0") && decpart.length > i) {
                    dec.push(decpart.charAt(i))
                }
                else if (l[i] != "#") {
                    dec.push(l[i])
                }
            }
        }
        patternstr && (_formatCache[patternstr] || (_formatCache[patternstr] = pattern));
        if (dec.length) {
            fin.push(pattern.decimalSep + dec.join(""))
        } else {
            decpart = ""
        }
        if (sign) {
            fin.unshift(sign)
        }
        pattern.wrap = pattern.wrap||["", ""]
        fin.unshift(pattern.wrap[0] || "");
        fin.push(pattern.wrap[1] || "")

        if (ashtml && pattern.color) {
            fin.unshift("<span style='color:" + pattern.color + "'>");
            fin.push("</span>")
        }
        while (fin.length && !fin[0]) {
            fin.shift()
        }
        if (fin[0] == ",") {
            fin.shift()
        }
        return fin.join("")
    }
    return numberFormat
})();;(function(){
    var inc=0
    var proto={
        model: null,   template: null,  templatefn: null, styles: null, klass:null, layout: null, title: null,  state:null, el:null, id:null,visible:null,uuid:null,
        rendered:null,  selector:null,urlhash:null,label:null,
        tagName:null,autoshow:null,_parent:null,
        controller:null,index:0,visibleFirst:null,
        init: function () {
            this.initView()
        },
        initView:function () {
            this.__isSimpleView=true
            this.$=this.$||$d.util.createScopedDollar("el")
            this.el = this.el||$d(document.createElement(this.tagName||"div"))
            if(!this.$content){
                this.$content=this.$;
            }
            //if(this.auto==null){this.auto=true}

            $d.hide(this.el)
            this.children=List.create([])
            this._origid=this.id
            if(!this.id){
                this.id="SimpleView_"+(++inc)
            }
            this.uuid=this.id;
            if(!this.urlhash){this.urlhash=this.id}
            this.origel=this.el
            if(!$d.attr(this.el,"zscope")){
                $d.attr(this.el,"zscope",this.uuid)
            }
            $d.domdata(this.el,"uuid",this.uuid)
            this.onpropertychange("rendered",function(rec){
                if(rec.value) {
                    if (!this.auto && !this.visible) {
                        //this.hide();
                    }
                    if(this.visible) {
                        this.digest(true)
                    }
                    this.observer.fireAsync("rendered",this.el)
                }

            }.bind(this))

            this.onpropertychange("model",function(rec){
                if(this.visible && rec.value) {
                    //this.digest(true)
                }
            });
            this.onpropertychange("visible",function(){
                if(this.visible){

                    if(this.visibleFirst==null){
                        this.visibleFirst=true
                    } else{
                        this.visibleFirst=false
                    }
                    this.onAttach();
                    this.observer.fireAsync("attach",this.el)
                    if(this.layout=="fill"){
                        if(this.selector){
                            // $d.fillContainer(this.el.parent(),"min")
                        }
                        if(this.el.isAttached()){
                            $d.fillContainer(this.el,"min")
                        } else {
                            this.el.onAttach(
                                function(el){
                                    $d.fillContainer(el,"min")

                                }
                            )
                        }

                    }
                    if(this.controller){
                        this.controller.call(this,this.el,this.visibleFirst)
                    }
                    this.digest()

                    this.observer.fireAsync("visible",this.el)
                }

            }.bind(this))
            this.observer.register("attach",{sticky:true})
            this.initModel();
        },
        digest:function(force){
            if (this.model && this.isRendered() ) {
                if(!this.uuid){this.uuid=this.id}
                var scopeid=this.model.scopeid=this.uuid,selector="[z-scope='"+ scopeid+"']";
                var scopedel= $d.selfOrDown(this.el,selector)||this.el
                if(!scopedel.is(selector)){
                    scopedel.attr("z-scope",scopeid);
                }
                this.model._parentController=this.getController();
                if(!force && scopedel.data("zscoped") && scopedel.data("zscoped").scopeid==this.uuid){
                    this.model.digest(scopedel,this.uuid);
                } else{
                    this.model.digest(scopedel,this.uuid,force)
                }

            } else{

            }

        },
        defaultSetViewImpl:function(old,nu){
            old && old!==nu && old.hide()
            nu.show()

        },
        setViewImpl:function(old,nu){
            return this.defaultSetViewImpl(old,nu)

        },
        isVisible:function(){
            return this.visible
        },
        initModel:function(model){
            model=model||this.model;
            if(!model && this._origid){
                var modelname=this._origid+"Model"
                var nu = $.requireModule(modelname)||$.requireModule("models/"+modelname)||$.requireModule("models/"+ $.capitalize(modelname))
                if(nu && typeof(nu)=="function"){
                    model=nu
                }

            }
            else if(typeof( model)=="string"){
                model=$.requireModule( "models/"+model)
            }
            if(model && typeof(model)=="function"){
                this.model=new model();
            }
            return this.model
        },
        eachChildView:function(fn,ctx){
            (this.children||[]).forEach(
                fn,ctx||this
            );
            return this
        },
        findChildView:function(nm,deep){
            var ch=this.getChildView(nm)
            if(ch){
                return ch
            }
            if(deep){
                return this.children.find(function(it){return it.findChildView(nm,true)})
            }

        },
        getChildView:function(nm){
            if(!nm){return}
            if(SimpleView.isView(nm) && this.children.indexOf(nm)>=0){
                return nm
            }
            if(this[nm] && SimpleView.isView(this[nm])){
                return this[nm]
            }
            if(typeof(nm)=="string"){
                return this.children.find(function(it){return it.urlhash==nm||it.id==nm})
            }

        },
        setView:function(nm,data){
            if(!nm || !("activeview" in this)){
                this.properties.addProperty("activeview");
            }
            if(nm===true){
                nm=this.children[0]
            }

            var nu
            if(!this.isRendered()){
                this.observer.register("afterRender",{sticky:true})
                this.observer.on("afterRender",function(nm,data){
                    if(this.isRendered()) {
                        this.setView(nm,data)
                    }
                }.bind(this,nm,data))
                return
            }
            var parts
            if(typeof(nm)=="string" && nm.indexOf("/")>0 && !this.getChildView(nm)){
                parts=nm.split("/");
                nm=parts.shift()
            }
            if(SimpleView.isView(nm)){nu=nm}
            else if(this[nm] && SimpleView.isView(this[nm])){nu=this[nm]}
            if(!nu || (this.activeview===nu&&nu.visible)){
                return
            }
            var current=this.activeview;
            this.observer.fire("beforeviewchange",{current:this.activeview,new:nu})
            //this.children.each(function(it){it===nu || it.hide()})
            var pr=this.setViewImpl(current,nu )

            this.activeview=nu;
            if($.isPlain(data)){
                nu.model.update(data)
            }
            this.observer.fireAsync("viewchange",nu)
            nu.observer.fireAsync("resize")
            if(pr && pr.then){
                pr.then(function(){
                        this.activeview.observer.fireAsync("viewactive")
                        this.observer.fireAsync("afterviewchange",{current:current,new:nu})}.bind(this)
                )
            } else{
                this.activeview.observer.fireAsync("viewactive")
                this.observer.fireAsync("afterviewchange",{current:current,new:nu})
            }

            if(typeof(app)!="undefined" && typeof(app.fire)=="function"){
                app.fire("viewchanged",nu);
            }
            if(parts){
                nu.setView(parts.join("/"))
            }
            return this;
        },
        remove:function(nu){
            var idx=this.children.indexOf(nu)
            if(idx>=0){
                this.children.splice(idx,1);
            }
            this.children.forEach(function(chld,i){chld.index=i});
        },
        add:function(nu){
            if(!nu){return}
            if($.isArray(nu)){
                nu.forEach(this.add.bind(this))
                return this;
            }

            var chld
            if(typeof(nu)=="function"){
                chld=nu();
            } else if($.isPlain(nu)){
                chld=new SimpleView(nu)
            } else if(SimpleView.isView(nu)){
                chld=nu;
            } else if(typeof(nu)=="string" ) {
                chld = new SimpleView({id:nu})
            }
            if(chld){
                this.properties.addProperty(chld.id)
                this.properties.setItem(chld.id,chld)
                if(this.visible){
                    chld.appendTo(this.el);

                }
                chld._parent=this;
                chld.index=this.children.length
                this.children.add(chld)
                if(chld.selector && !chld.template){
                    chld.render(this.el)
                }
            }

            return chld;
        },
        onAttach: function () {  },
        isRendered: function () {   return this.rendered  },
        destroy: function () {
            $d.remove(this.el)
            if(this._parent){
                this._parent.remove(this)
            }
            this.el=null;
            return this
        },
        hide: function (anim,animconfig) {
            this.observer.fire("beforehide",this.el)
            //this.children && this.children.forEach(function(it){it && it.isRendered() && it.hide()})
            this.el.addClass("view-hidden")
            this.hideImpl(anim,animconfig)
            this.observer.fire("hide",this.el)
            this.observer.fire("afterhide",this.el)
            if(this.container){this.container.hide()}
            this.visible=false;
            return this
        },
        hideImpl: function (anim,animconfig) {
            $d.hide(this.el,anim,animconfig)
        },
        showImpl: function (anim,animconfig) {
            $d.show(this.el,anim,animconfig)
        },

        show: function (anim,animconfig) {
            if(this.visible){
                return
            }
            this.observer.fire("beforeshow",this.el);
            if(!this.isRendered()){
                this.visible=false;
                this.render().then(function(){
                    if(!$d.attr(this.el,"zscope")){
                        $d.attr(this.el,"zscope",this.uuid)
                    }

                    if(this.container){this.container.show()}
                    this.showImpl(anim,animconfig)
                    this.observer.fire("show",this.el);
                    this.visible=true;
                    this.children && this.children.forEach(function(it){it.isRendered() || it.appendTo(this.el)},this)

                    this.observer.fireAsync("aftershow",this.el);
                }.bind(this));
            }
            else{
                this.visible=false;
                if(!$d.attr(this.el,"zscope")){
                    $d.attr(this.el,"zscope",this.uuid)
                }
                if(this.container){this.container.show()}
                var pr=this.showImpl(anim,animconfig)

                this.observer.fire("show",this.el);
                this.visible=true;
                this.children && this.children.forEach(function(it){it.isRendered() || it.appendTo(this.el)},this)
                if(pr && pr.then){
                    pr.then(function(){
                        this.observer.fireAsync("aftershow",this.el);}.bind(this)
                    )
                } else{
                    this.observer.fireAsync("aftershow",this.el);
                }

            }
            this.el.removeClass("view-hidden")
            return this
        },
        setContent: function (content,noclear) {
            if(content==null){return}
            if(!noclear){
                this.$content().clear()
            }
            if(typeof(content)=="string"){
                this.$content().html(content)
            } else{
                this.$content().append(content)
            }

        },
        insertBefore: function (dom) {
            var target=$d(dom.el||dom)
            this.render($d.parent(target)).then(
                function(){
                    if(target){
                        this.el=$d(target.parent().el.insertBefore(this.el.el,target.el))
                    }
                }.bind(this)
            )
        },
        insertAfter: function (dom) {
            var target=$d(dom.el||dom)
            this.render($d.parent(target)).then(
                function(){
                    var target2
                    if(target){
                        target2=$d(target.el.nextElementSibling)
                    }
                    this.el=$d(target2.parent().el.insertBefore(this.el.el,target2?target2.el:null))

                }.bind(this)
            )
        },
        replace: function (dom) {
            var target=$d(dom.el||dom)
            this.render($d.parent(target)).then(
                function(){
                    if(target){
                        this.el=$d(target.parent().el.insertBefore(this.el.el,target.el))
                        target.remove()
                    }
                }.bind(this)
            )
        },
        appendTo: function (dom) {
            var container
            if(!(dom && $d(dom))){return}
            container=$d(dom)
            var toret=Promise.deferred()
            if(this.isRendered()){
                if(container.contains(this.el)){
                    toret.resolve(this.el);
                    return
                }
                this.el.addClass("__temp__")
                $d.append(container,this.el)
                this.el=container.q(".__temp__")
                this.el.removeClass("__temp__");
                if($d.isAttached(this.el)){
                    toret.resolve(this.el)
                } else {
                    setTimeout(function(){toret.resolve(this.el)}.bind(this),100)
                }
            } else{
                var curr=container.q("[data-uuid='"+this.uuid+"']")
                if(curr){
                    curr.remove();
                }
                this.render(container)
            }

            return toret

        },
        rerender: function (container) {
            this.renderedPromise=null;
            this.rendered=false;
            this.el.clear();
            this.render(container);
        },
        _ensurePanels: function () {},
        _onrender: function (container) {
            this.rendered=true;
            this._ensurePanels()
            var container=$d(container)||(this._parent?this._parent.$content():$d(document.body))
            var newel
            if(!container.contains(this.el)) {

                if (this.selector) {
                    if (container && container.has(this.selector)) {
                        newel = $d(container.q(this.selector).el.appendChild(this.el.el));
                    }
                } else    {
                    newel = $d(container.el.appendChild(this.el.el))
                }
            }
            if(newel && newel.el!==this.el.el){
                this.el=newel;
            }
            if (this.el &&  !this.el.parent() ) {
                this.el=$d(document.body.appendChild(this.el.el))
            }
            if(this.klass){
                this.el.addClass(this.klass)
            }
            if(this.styles){
                this.el.css(this.styles)
            }
            this.renderedPromise && this.renderedPromise.resolve(this.el)
            if(!$d.attr(this.el,"z-scope")){
                if(!this.uuid){this.uuid=this.id}
                $d.attr(this.el,"z-scope",this.uuid)
            }
            this.afterRender();
            if(this.visible) {
                this.digest(true)
            } else{
                if(this.autoshow){
                    this.show();
                }
            }


            this.observer.fireAsync("afterRender")


        },
        render: function (container) {
            if(this.renderedPromise){
                return this.renderedPromise;
            }

            var pr=this.renderedPromise=Promise.deferred()
            //pr.then(this._onrender.bind(this))

            this.beforeRender();
            if(this.rendered){
                return pr
            }

            this._oldel=this.el
            this.el = this.el||$d(document.createElement("div"))
            if(this.model && this.title){
                this.model.setItem("title",this.title);
            }
            var idselector="[data-uuid='"+this.uuid+"']",rendered=0;
            var curr=this.el.q(idselector),pending
            if(curr){
                curr.remove();
            }

            if(this.model && this.logic){
                var logic=this.logic;
                if(typeof(this.logic)=="function"){
                    logic=this.logic()
                }
                if(logic){this.model.update(logic);}
            }
            if(this._origid && !this.template && typeof(app)!="undefined"){
                if(app.hasResource(this._origid)){
                    this.template=this._origid;
                }
            }
            if(!this.templatefn && this.template){
                if(typeof(this.template)=="function"){
                    this.templatefn=this.template
                }
                else if( typeof(this.template)=="string"){
                    if(this.template.indexOf("<")==0){
                        this.templatefn = $.template(this.template)
                    }else{
                        var res=typeof(app)!="undefined" && app.getResource?app.getResource(this.template):null
                        if(res && typeof(res)=="string"){
                            this.setContent(res)
                            this._onrender( container) ;
                        } else{
                            this.fragmentview=$.fragmentview(this.template)
                            pending=1
                            this.fragmentview.load().then(function(frag){
                                this.setContent(frag)
                                this._onrender(container ) ;
                            }.bind(this));
                        }


                    }
                }
                if(this.templatefn){
                    var frag=this.templatefn(this.model)
                    this.setContent( frag)
                    this._onrender(container ) ;
                }
            } else{


            }
            if(!this.rendered && !pending){
                this._onrender( container) ;
            }
            if(!pending){
                //pr.reject();
                this.renderedPromise=null;
            }



            return pr
        },
        beforeRender: function () {
            this.observer.fire("beforeRender")
        },
        afterRender: function () {
        }
    }
    proto.isSimpleView=true;
    proto.addChildView=proto.add
    var SimpleView=Klass("SimpleView",proto);
    SimpleView.isView=function(nu){
        return typeof(nu)=="object" && (nu.__isSimpleView || (nu instanceof SimpleView) || (nu.__super  && nu.__super instanceof SimpleView))
    }
    SimpleView.panel=Klass("SimpleView.panel",SimpleView,{
        init:function( ) {
            this.$=this.$||$d.util.createScopedDollar("el")
            this.el = this.el||$d(document.createElement(this.tagName||"div"))
            this._ensurePanels()
            this.$content = $d.util.createScopedDollar(".view-content","el")
            this.$header = $d.util.createScopedDollar(".view-header","el")
            this.$footer = $d.util.createScopedDollar(".view-footer","el")
            this.initView()
        },
        _ensurePanels:function(){
            this.el.q(".view-content")||this.el.append("div.view-content")
            this.el.q(".view-header")||this.el.prepend("div.view-header")
            this.el.q(".view-footer")||this.el.append("div.view-footer")
        }
    })
    SimpleView.collection=Klass("SimpleView.collection",SimpleView,{
        models:null,modelType:null,viewTypet:null,
        list:null,
        init:function( ){
            var view=arguments[0]
            if(view && typeof(view)=="function" ){
                this.viewType=view;
            }
            this.list=List.from([])

            List.Observable(this.list)
            this.initView()
        },
        ensureList:function(){

            if(!this._savedmodels || ($.isArrayLike(this.models) && this.viewType && !this.children.length)){
                this._savedmodels=this._savedmodels||([])
                var models=this.children.map(function(c){return c.model})
                var savedmodels=this._savedmodels.map(function(c){return c.__origdata})
                var mdlctor=this.modelType|| $.model,viewType=this.viewType;;
                var nulist=[]
                for(var i= 0,l=this.models||[],ln= l.length;i<ln;i++){
                    var mdl
                    if(savedmodels.indexOf(l[i])>=0){
                        nulist.push(this._savedmodels[savedmodels.indexOf(l[i])])
                        continue
                    }
                    if(l[i] && l[i].__isModel){mdl=l[i]}
                    else if(mdlctor){
                        mdl=new mdlctor(l[i])

                    }
                    if(mdl){
                        mdl.__origdata=l[i]
                        nulist.push(mdl)
                    }
                }
                for(var i= 0,l=nulist,ln= l.length;i<ln;i++) {
                    if(models.indexOf(nulist[i])==-1){
                        nulist[i].index=i;
                        this.addChildView(new viewType({model: nulist[i], autoshow: true}))
                    }
                }
                for(var i= 0,l=(this.children||[]).slice(),ln= l.size();i<ln;i++) {
                    if(!(l[i] && l[i].model)){continue}
                    if(nulist.indexOf(l[i].model)==-1){
                        l[i].destroy && l[i].destroy();
                    }
                }
                this._savedmodels=nulist;
                this.children.sort(function(a,b){
                    return (a.model||{}).index - (b.model||{}).index
                })
            }
        },

        beforeRender:function(){
            this.ensureList();
        }

    });
    ZModule.register("SimpleView",SimpleView)
    $.View=SimpleView
})();

;( function() {
	function showArrow(config) {

		//&dtrif;
		if (!(config.options.showarrow || config.options.showArrow || config.options.anchorPos == "pointer")) {
			if (config.arrow && config.arrow.style) {
				config.arrow.style.display = "none"
			}
			return
		}
		var pos = ""
		var d = config.el, anchor = config.options.anchor, optns = config.options
		var anchorpos = {}, b = d.getBoundingClientRect()
		if (anchor && anchor.getBoundingClientRect) {
			anchorpos = anchor.getBoundingClientRect()
		} else {
			if (anchor.height && anchor.width) {
				anchorpos = anchor
			}
			else {
				return
			}
		}
		if (b.left < anchorpos.right && b.right > anchorpos.left) {
			if ((b.bottom - 10) <= anchorpos.top) {
				pos = "d"
			} else if ((b.top + 10) > anchorpos.bottom) {
				pos = "u"
			}
		} else if (b.bottom > anchorpos.top && b.top < anchorpos.bottom) {
			if ((b.right - 10) <= anchorpos.left) {
				pos = "r"
			} else if ((b.left + 10) > anchorpos.right) {
				pos = "l"
			}
		}
		if (pos) {
			//d.style.padding="18px"
			if (!config.arrow) {
				config.arrow = config.el.appendChild(document.createElement("div"))
			}
			config.arrow.style.display = "block"
			config.arrow.className = "anchor-arrow pos-" + pos
			config.arrow.innerHTML = "&" + pos + "trif;"
			config.arrow.style.removeProperty("left")
			config.arrow.style.removeProperty("right")
			config.arrow.style.removeProperty("top")
			config.arrow.style.removeProperty("bottom")
			var bg = document.defaultView.getComputedStyle(config.content)["backgroundColor"]
			if (!bg || bg == "rgba(0, 0, 0, 0)" || bg == "inherit") {
				if (config.content.firstElementChild) {
					bg = document.defaultView.getComputedStyle(config.content.firstElementChild)["backgroundColor"]
				}
			}
			bg = String(bg).trim()
			if (bg == "rgb(255, 255, 255)" || bg == "#FFFFFF" || bg == "#ffffff") {
				bg = "#111111"
			}

			if (pos == "l" || pos === "r") {
				var t = Math.min(b.height - 0, Math.max(10, anchorpos.top - b.top))
				config.arrow.style.top = (t + (anchorpos.height / 2)) + "px"
			}
			if (pos == "u" || pos === "d") {
				if (anchorpos.width > b.width) {
					config.arrow.style.left = ((b.width / 2) - 10) + "px"
				} else {
					var l = Math.min(b.width - 20, Math.max(10, anchorpos.left - b.left))
					config.arrow.style.left = Math.min(b.width - 20, (l + (anchorpos.width / 2))) + "px"
				}

			}
			/*if(pos=="l"){
			 config.arrow.style.padding="0 0 0 20px"
			 } else if(pos=="r"){
			 config.arrow.style.padding="0 20px 0 0 "
			 } else if(pos=="u"){
			 config.arrow.style.padding="20px 0 0 0 "
			 } else if(pos=="d"){
			 config.arrow.style.padding="0 0 20px 0 "
			 }*/
			config.arrow.style.color = bg
		} else {
			d.style.padding = "0"
			if (config.arrow) {
				config.arrow.style.display = "none"
			}
		}
	}

	function applyRect(force) {
		var contentcss = {}, css = {}, lastdims = this.__lastdims
		if (this.rect) {
			this.rect.applyConstrains()
			var dims = this.rect.uuid();
			if (!force && lastdims && lastdims == dims) {
				return
			}
			this.__lastdims = dims;
			if (this.rect.get("height")) {
				contentcss.height = this.rect.get("height")
			}
			if (this.rect.get("width")) {
				contentcss.width = this.rect.get("width")
			}
			if (this.rect.get("top")) {
				css.top = this.rect.get("top")
			}
			if (this.rect.get("left")) {
				css.left = this.rect.get("left")
			}
			this.el.css(css)
			this.contentWrap.css(contentcss)
		}
	}

	function adjustpos(config, applyclip) {
		if(config.options.positionClass){
			return
		}
		var d = config.el, anchor = config.options.anchor, optns = config.options, vp = config.options.container ? $d(config.options.container).bounds() : $.viewport
		var b = d.getBoundingClientRect(), x = vp.width - b.right, y = vp.height - b.bottom;

		if (!$d.isVisible(d, true) || config.options.centered || config.options.centerX || config.options.centerx || config.options.centery || config.options.centerY) {
			return
		}
		var offset = config.options.offset || 1
		var anchorB = anchor ? (anchor.getBoundingClientRect ? anchor.getBoundingClientRect() : anchor) : null
		if (!anchorB && anchor && anchor.height && anchor.width) {
			anchorB = anchor
		}
		if (!anchorB) {
			return
		}
		if (x < 0 || b.left < 1) {
			if (b.left < 1) {
				this.rect.left = offset
			}
			else {
				this.rect.left = Math.max(1, (b.left + x) - offset)
			}
			//d.style.left=Math.max(1,b.left+x)+"px"
		}
		if (config.options.container && vp.bottom < anchorB.bottom) {

		}
		if (y < 1 || b.top < 1) {
			if (b.top < 1) {
				this.rect.top = offset
			}
			else {
				this.rect.top = Math.max(offset, (b.top + y) - offset)
			}
			var diff = $d(d).bounds().bottom - ($.viewport.height - offset)
			if (diff > 1) {
				if (!optns.top) {
					this.rect.top = ($d(d).bounds().top - (diff))
				}
				else {
					this.rect.height = ($d(config.content).bounds().height - (diff))
				}
			}
		}
		applyRect.call(this)
		/*if(applyclip===true){
		 d.style.clip='rect('+[0,(b.width+10),(b.height+10),0].map(function(a){return a && !isNaN()?(a+"px"):a}).join(", ")+")"
		 //d.__clipper.update([0,(b.width+10),(b.height+10),0]).applyCss()
		 }*/
		return anchorB
	}

	var scrollHandle = null

	function resizepopup(config) {
		var d = config.content, el = config.el, vp = $.viewport, vw = this
		if (d.__dragging) {
			return
		}
		var curr = d.getBoundingClientRect(), curpos = null, innerH = vp.height, innerW = vp.width, cnt = 0
		$d.trackMouse(
			{
				move: function (ev) {
					var nu = {width: (curr.width + ev.delta.x), height: (curr.height + ev.delta.y)}
					if (cnt > 1 && (nu.height < 1 || nu.width < 1)) {
						if (nu.height < 1) {
							var t = curr.top + (nu.height - 1)
							nu.height = Math.abs(nu.height) + 1
							el.style.top = t + "px"
						}
						if (nu.width < 1) {
							var l = curr.left + (nu.width - 1)
							nu.width = Math.abs(nu.width) + 1
							el.style.left = l + "px"
						}
					}
					cnt++
					$d.css(d, {width: Math.abs(nu.width) + "px", height: Math.abs(nu.height) + "px"})
				},
				end: function (ev) {
					vw.rect.top = d.style.top
					vw.rect.left = d.style.left
					showArrow.call(vw, config)
					vw.fire("resize")
				}
			})

	}

	function dragpopup(config) {
		var d = config.el, rect = this.rect, vw = this
		if (d.__dragging) {
			return
		}
		$d.trackMouse(
			{
				applyElPos: true, translate: true, target: d, end: function (ev) {
				showArrow.call(vw, config)
			}
			}
		)

	}

	function centerpopup(config) {
		var d = config.el, b = d.getBoundingClientRect(), vp = $.viewport, innerH = vp.height, innerW = vp.width;

		if (b.height + 10 > innerH) {
			config.content.style.height = (innerH - 10) + "px"
			b = d.getBoundingClientRect()
		}
		if (b.width + 10 > innerW) {
			config.content.style.width = (innerW - 10) + "px"
			b = d.getBoundingClientRect()
		}
		$d.addClass(d, "center-center")

		//d.style.left=((innerW- b.width)/2)+"px"
		//d.style.top=((innerH- b.height)/2)+"px"

	}

	function parseAlignment(aligna) {
		var alignX = "", alignY = "", ret = {y: "", x: ""}
		if (Array.isArray(aligna)) {
			alignX = aligna[0]
			alignY = aligna[1]
		} else if (aligna == "below") {
			ret.below = true
			alignY = "bottom"
			alignX = "left"
		} else if (aligna == "above") {
			alignY = "top"
			alignX = "left"
		} else if (typeof(aligna) == "string") {
			if (aligna == "c" || aligna == "center") {
				ret.center = true
			}
			else if (aligna.length == 2) {
				aligna.indexOf("t") >= 0 && (alignY = "top");
				aligna.indexOf("b") >= 0 && (alignY = "bottom");
				aligna.indexOf("l") >= 0 && (alignX = "left");
				aligna.indexOf("r") >= 0 && (alignX = "right");
			} else {
				var alignalc = aligna.toLowerCase()
				alignalc.indexOf("top") >= 0 && (alignY = "top");
				alignalc.indexOf("bottom") >= 0 && (alignY = "bottom");
				alignalc.indexOf("left") >= 0 && (alignX = "left");
				alignalc.indexOf("right") >= 0 && (alignX = "right");
			}
		}
		ret.x = alignX;
		ret.y = alignY;
		return ret
	}

	function pospopup(config) {
		var anchorB = {left: 0, top: 0, height: 0, width: 0}, ths = this, x, y
		var d = config.el, optns = config.options, anchor = optns.anchor, w;
		if (!d) {
			return
		}
		if (optns.container && optns.container !== document.body) {
			$d.css(config.el, "position", "absolute")
		}
		;
		var C = {};
		"top left width height maxHeight maxWidth minHeight minWidth".split(" ").forEach(function (k) {
			var v = optns[k]
			if (typeof(v) == "function") {
				v = v.call(ths, anchorB)
			}
			if (typeof(v) == "number") {
				if (k.indexOf("max") == 0 || k.indexOf("min") == 0) {
					C[k.substr(3).toLowerCase()] || (C[k.substr(3).toLowerCase()] = {})
					C[k.substr(3).toLowerCase()][k.substr(0, 3)] = v
					config.content.style[k] = isNaN(v) ? v : (v + "px")
				} else {
					this.rect[k] = v;
				}
			}

		}, this);
		var  forcecss, x, y,arowht = 0,w = optns.width
		this.rect.setConstrain(C);
		if(!config.options.positionClass){
			if (optns.top || optns.left) {
				y = optns.top
				x = optns.left
			} else {
				if (optns.anchorPos == "pointer") {
					optns.anchor = anchor = anchor || [].slice.call(document.querySelectorAll(":hover")).pop()
					optns.showarrow = true
				}
				if (!anchor || config.options.centered) {
					return centerpopup(config)
				}

				if (anchor && anchor.getBoundingClientRect) {
					anchorB = anchor.getBoundingClientRect()
				} else if (anchor && ("x" in anchor || "y" in anchor)) {
					if (anchor.x != null) {
						anchorB.left = anchor.x;
					}
					if (anchor.y != null) {
						anchorB.top = anchor.y
					}
				} else if (anchor && anchor.height && anchor.width) {
					anchorB = anchor
				} else {
					return

				}
				;
				if (!optns.maxHeight && config.content && config.content.style["maxHeight"]) {
					config.content.style.removeProperty("maxHeight");
				}

				x = anchorB.left;y = anchorB.top
				var aligna = config.options.alignAnchor || ""
				var align = parseAlignment(aligna), viewport = $.viewport
				var showarrow;
				if (config.options.showarrow || config.options.showArrow || config.options.anchorPos == "pointer") {
					showarrow = true
				}

				if (optns.alignCenter) {
					align.center = true
				}
				if (w == "auto") {
					w = null
				}
				if (optns.centerx || optns.centerX) {
					var w1 = Number(optns.width) || d.scrollWidth || $d.width(d) || 0
					anchorB.left = ($.viewport.width) / 2 // - w1
					d.style.transform = "translate(-50%,0)";
				}
				if (optns.centerY || optns.centery) {
					var h = Number(optns.height) || d.scrollHeight || $d.height(d) || 0
					anchorB.top = ($.viewport.height) / 2
					d.style.transform = "translate(0,-50%)";
				}
				var x = anchorB.left, y = anchorB.top, w = optns.width


				if (!w && optns.width != "auto" && anchorB.width && (align.below || align.above)) {
					w = Math.max(optns.minWidth || 0, anchorB.width)
					if (optns.maxWidth) {
						w = Math.min(w, optns.maxWidth)
					}


				}
				var ht = (d.offsetHeight || Number(optns.height) || 0),
					wd = (d.offsetWidth || anchorB.width || 0)
				if (optns.maxHeight && optns.maxHeight > 1) {
					ht = Math.min(ht, optns.maxHeight)
				}
				if (optns.minHeight && optns.minHeight > 1) {
					ht = Math.max(ht, optns.minHeight)
				}

				var offset = config.options.offset || 1
				if (showarrow) {
					var isabove
					if (config.arrow && config.arrow.style) {
						config.arrow.style.display = "none"
					}
					//above

					if (anchorB.top > (ht + 15)) {
						y = anchorB.top - (ht + 15)
						isabove = true;

						x = Math.max(1, (anchorB.left + (anchorB.width ? (anchorB.width / 2) : 0)) - (wd ? (wd / 2) : 0))
					} else if ((anchorB.bottom || anchorB.top) < (viewport.height - ht)) {
						y = (anchorB.bottom || anchorB.top) + 10
						isabove = false
						x = Math.max(1, (anchorB.left + (anchorB.width ? (anchorB.width / 2) : 0)) - (wd ? (wd / 2) : 0))
					} else if ((anchorB.right || anchorB.left) < (viewport.width - wd)) {
						y = Math.max(1, anchorB.top - (ht / 2))
						x = (anchorB.right || anchorB.left) + 10
					} else if (anchorB.left > wd) {
						y = Math.max(1, anchorB.top - (ht / 2))
						x = Math.max(1, (anchorB.left - (wd + 10) ))
					}
					if (!optns.height) {
						if (!optns.maxHeight) {
							if (isabove === true) {
								this.rect.setConstrain("height", {max: anchorB.top - 15})
								this.rect.maxbottom = anchorB.top - 15;
								if (ht > 100) {
									config.content.style["maxHeight"] = (anchorB.top - (offset + 15 + config.content.offsetTop)) + "px"
								}
							} else if (isabove === false) {
								this.rect.setConstrain("height", {max: $.viewport.height - (anchorB.bottom + 15)})
								if (ht > 100) {
									config.content.style["maxHeight"] = (($.viewport.height - anchorB.bottom) - (offset + 15 + config.content.offsetTop)) + "px"
								}
							}
						}
					}
				} else {
					if (align.y == "bottom") {
						y = anchorB.bottom
					} else if (align.y == "top") {
						y = anchorB.top - ht
					}
					if (align.x == "right") {
						x = anchorB.right;
					} else if (!align.below && align.x == "left") {
						x = anchorB.left - wd;
					}
					if (align.center && anchorB.height) {
						y = (anchorB.top + (anchorB.height / 2)) - (ht / 2)

					}
					if (align.center && anchorB.width) {
						x = (anchorB.left + (anchorB.width / 2)) - (wd / 2)
					}
				}
			}
			if (optns.container && optns.container !== document.body) {
				var contB = $d.bounds(optns.container)
				x = x - contB.left;
				y = y - contB.top;
			}
		}


		if (w) {
			this.rect.width = w;
		}
		else if (optns.width) {
			this.rect.width = optns.width;
		}
		if (optns.height || arowht) {
			this.rect.height = optns.height || arowht;
		}
		else if (config.content.style.height) {
			config.content.style.removeProperty("height");
		}

		if (x) {
			this.rect.left = x
		}
		if (y) {
			this.rect.top = y
		}
		//$d.isVisible(config.header,true) && $d.css(config.header,{width:$d(config.content).width()})
		//$d.isVisible(config.footer,true) &&  $d.css(config.footer,{width:$d(config.content).width()})
		applyRect.call(this, forcecss)
		adjustpos.call(this, config, true)
		showArrow.call(this, config)

		return anchorB
	}

	function onhidepopup(vw) {
		var idx = PopupView._activeViews.indexOf(vw)
		idx >= 0 && PopupView._activeViews.splice(idx, 1)
		vw.__lastdims = null
	}

	function setupDrag(config) {
		var optns = config.options, vw = this
		if (optns.resizable === true && !config.resizer) {
			config.resizer = config.el.appendChild(document.createElement("div"))
			config.resizer.className = "resizer"
			config.resizer.innerHTML = "&#x022F0;"
			optns.resizeHandle = ".resizer"
		}
		if (optns.draggable === true) {
			optns.dragHandle = ".popup-header"
			if (!optns.title) {
				optns.title = "&nbsp;"
			}
		}
		if (!config._eventhandle && (optns.resizeHandle || optns.dragHandle)) {
			var h = optns.resizeHandle ? config.el.querySelector(optns.resizeHandle) : null
			if (h) {
				h.style.cursor = "nwse-resize";
				$d.toFront(h)
			}
			var h = optns.dragHandle ? config.el.querySelector(optns.dragHandle) : null
			if (h) {
				h.style.cursor = "move"
			}
			config.el.addEventListener("mousedown", config._eventhandle = function (ev) {
				var el = this;
				if (optns.resizeHandle) {
					var h = el.querySelector(optns.resizeHandle)
					if (h && h.contains(ev.target)) {
						setTimeout(function () {
							resizepopup.call(vw, config)
						}, 1)
						return
					}

				}
				if (optns.dragHandle) {
					var h = el.querySelector(optns.dragHandle)
					if (h && h.contains(ev.target)) {
						setTimeout(function () {
							dragpopup.call(vw, config)
						}, 1)
					}
				}

			})
		}
	}

	function setupScrollHandle() {
		if (!scrollHandle) {
			$.viewport.on("scroll", scrollHandle = function () {
				PopupView._activeViews && PopupView._activeViews.forEach(
					function (vw) {
						vw && vw.verify() && vw._winEv()
					}
				)
			}.bind(this))
		}
	}

	function setContent() {
		var config = this.config
		var optns = config.options, repos
		if (optns.content) {
			if (this.contentUI) {
				this.contentUI.applyUI(config.content)
			}
			optns._contentsaved = optns.content;
			if (typeof(optns.content) == "function") {
				var res = optns.content(config.el, optns)
				if (typeof(res) == "string") {
					config.content.innerHTML = res;
					repos = 1
				}
			}
			else if (optns.content.tagName) {
				config.content.innerHTML = "";
				config.content.appendChild(optns.content);
				repos = 1
			}
			else {
				var url = optns.content.url
				if (!url && typeof(optns.content) == "string" && optns.content.indexOf("http") == 0 && !/\s/.test(optns.content)) {
					url = optns.content;
				}
				if (url) {
					if (url && !$d(config.content).q("iframe")) {
						var ifr = document.createElement("iframe");
						ifr.border = ifr.margin = ifr.padding = 0;
						ifr.height = ifr.width = ifr.style.height = ifr.style.width = "99.9%";

						ifr.src = url;
						$d(config.content).clear().el.appendChild(ifr)
					}
				}
				else {
					config.content.innerHTML = Array.isArray(optns.content) ? optns.content.join("") : String(optns.content)
				}
				repos = 1
			}

			optns.content = null

		}
		if (repos && this.isVisible() && !config.__showing) {
			pospopup.call(this, config)
		}

	}

	function addCancelLink() {
		if (this.config.options.showcancellink) {
			if (!this.$(".top-right-cancel")) {
				this.el.append("<div class='top-right-cancel'></div>").toFront(true).pointerselect(function (e) {
					e.stopPropagation && e.stopPropagation();
					e.stopImmediatePropagation && e.stopImmediatePropagation();
					this.hide()
				}.bind(this))
			}
		}
	}

	function removeFromview() {
		var d = this.el
		if (!d) {
			return
		}

		var config = this.config;
		config.visible = config.__showing = false

		d.removeClass("_hiding")
		if (config._eventhandle) {
			d.removeEventListener("mousedown", config._eventhandle)
			config._eventhandle = null;
		}
		config.observer && config.observer.fire("afterhide")

		if (config.options.destroyonhide) {
			config.observrfn && $.observe(config.options, config.observrfn, false)
			config.observrfn = null
			config.observer && config.observer.destroy && config.observer.destroy()
			d.remove()
			config.el = null;
		} else {
			d.addClass("hidden")
			if (config._cloak) {
				config._cloak = null;
			}
		}
	}

	function showpopup() {
		var config = this.config
		var optns = config.options, d = config.el;
		if (!this.$()) {
			return
		}
		var anchor = optns.anchor
		if (optns.title) {
			optionhandlers.title.call(this, optns.title)
		}
		if (config.firstvisible == null) {
			config.firstvisible = true
		} else {
			config.firstvisible = false
		}

		config.visible = false;
		if (this.fire("beforeshow") === false) {
			return
		}
		config.visible = true
		setContent.call(this)
		if(config.firstvisible && optns.closeButton){
			this.addButton("Close",this.hide.bind(this))
		}
		optns.width && $d.css(config.content, "width", optns.width)
		optns.height && $d.css(config.content, "height", optns.height)
		optns.minWidth && $d.css(config.content, "minWidth", optns.minWidth)
		optns.maxWidth && $d.css(config.content, "maxWidth", optns.maxWidth)
		optns.minHeight && $d.css(config.content, "minHeight", optns.minHeight)
		optns.maxHeight && $d.css(config.content, "maxHeight", optns.maxHeight)


		PopupView._activeViews.indexOf(this) == -1 && PopupView._activeViews.push(this)

		if (anchor && anchor.target && anchor.target !== document.body && anchor.target !== document) {
			anchor = anchor.target
		}
		if (anchor && optns.anchor != anchor) {
			optns.anchor = anchor
		}
		var ths = this;
		var container = optns.container || document.body
		if (!this.$().isAttached() || !this.$().parent().is((container))) {
			$d(container).append(config.el);
		}
		addCancelLink.call(this)

		if (optns.css) {
			$d.css(config.content, optns.css)
		}
		var klass = optns.klass || optns.className || optns["class"]
		if (klass) {
			$d.addClass(config.el, klass)
		}
		setupDrag.call(this, config)
		setupScrollHandle()
		if (config._onblur) {
			config._onblur.cancel(true);
		}

		config._onblur = $d.outside(config.el, {
			ignoreblur: (config.options.hideonblur === false),
			esc: true,
			test: function (target) {
				if (target && this.config.observer && this.config.observer.fire("beforehide", target) === false) {
					return
				}
				if ($d(this.config.options.anchor) && $d(this.config.options.anchor).contains(target)) {
					return
				}
				return true;
			}.bind(this),
			callback: this._hideEl.bind(this)
		})
		if (!config.__showing) {
			this._showEl()
		}
		//setTimeout(setupEvents.bind(this),0)
	}

	function _resolve(val) {
		if (typeof(val) == "function") {
			return val.call(this)
		}
		return val
	}

	var optionhandlers = {
		"title": function (val, oldValue) {
			if (this.config.header) {
				var T = $d.q(this.config.header, ".popup-title") || $d(this.config.header).append("div.popup-title")
				T.html(_resolve.call(this, val));

			}
		},

		"$footer": function (val, oldValue) {

		},
		"content": function (val, oldValue) {
			setContent.call(this);
		},
		"resizeHandle": function (val, oldValue) {
			setupDrag.call(this, this.config);
		},
		"dragHandle": function (val, oldValue) {
			setupDrag.call(this, this.config);
		},
		"draggable": function (val, oldValue) {
			setupDrag.call(this, this.config);
		},
		"resizable": function (val, oldValue) {
			setupDrag.call(this, this.config);
		}
	}
	var proto = {
		_winEv: function (ev) {
			if (this.verify()) {
				pospopup.call(this, this.config)
			}
		},
		_hideEl: function _hideEl() {
			var config = this.config
			config.visible = false
			$.viewport.on("change", config.winev, false)
			config.__showing = false
			if (config._cloak) {
				config._cloak.remove()
			}
			if (config._onblur) {
				config._onblur.cancel(true);
				config._onblur = null;
			}

			config.observer && config.observer.fire("hide")

			if (config.el && config.el.parentNode && $d(config.el)) {
				if (config.el.classList.contains("_hiding")) {
					return
				}
				var ths = this
				var animateHide = config.options.animateHide
				if (config.options.animateShow == false && !animateHide) {
					animateHide = false;
				}
				if (animateHide !== false) {
					var animconfig=animateHide||{}

					config.el.classList.add("_hiding")
					if( animconfig.animationClass) {
						var outklass=animconfig.animationClass
						animconfig.duration=animconfig.duration||500
  						setTimeout(function () {
							config.el.classList.remove(outklass)
							removeFromview.call(this)
						}.bind(ths), animconfig.duration+100)
						config.el.classList.add(outklass)

					} else if( animconfig.method && typeof($d[animconfig.method])=="function"){
						var opts=$.clone(animconfig);delete opts.method
						opts.end=removeFromview.bind(ths)
						$d[animconfig.method](config.el,opts);
					} else{
						$d(config.el).hide()
						removeFromview.call(ths)
					}
					setTimeout(function () {
						if (config.el && config.el.parentNode) {
							config.el.classList.remove("_hiding")
						}
						onhidepopup(ths)
					}, Math.max(Number(animconfig.duration)||0,1000))

				} else {
					removeFromview.call(ths)
					onhidepopup(ths)
				}

			}
		},
		_showEl: function () {
			var config = this.config
			if (!config) {
				return
			}
			var EL = $d(config.el)
			var isvis = $d.isVisible(EL, true)
			EL.removeClass("hidden")
			EL.toFront()
			config.__showing = true;
			EL.show();
			if (isvis || config.options.animateShow === false) {

				config.__showing = false
				pospopup.call(this, config, true)
				config.observer && config.observer.fire("aftershow")

			} else {
				function aftershow() {

					var config = this.config
					config.__showing = false
					if (config.visible === false) {
						return
					}
					config.observer && config.observer.fire("aftershow")
					$d(config.el).toFront(true)
					if (config.options.modal) {
						if (!(config._cloak && $d.isAttached(config._cloak))) {
							config._cloak = $d._util.cloak({
								behind: config.el,
								nodestroy: (config.options.hideonblur !== false)
							});
						} else {
							config._cloak.setZ()
						}
					}
					pospopup.call(this, config, true)
				}
				var animconfig = $.isPlainObject(config.options.animateShow) ? config.options.animateShow : {}
				if( animconfig.animationClass) {
					var klass=animconfig.animationClass
					animconfig.duration=animconfig.duration||500
 					setTimeout(function () {
						config.el.classList.remove(klass)
						aftershow.call(this)
					}.bind(this), animconfig.duration)
					config.el.classList.add(klass)
 				}
 				else if(animconfig.method && typeof($d[animconfig.method])=="function"){
					var opts=$.clone(animconfig)
					opts.end=aftershow.bind(this);delete opts.method
					$d[animconfig.method](EL,opts);
				} else{
					animconfig.duration || (animconfig.duration = 200);
					animconfig.duration = 200

					EL.appear( animconfig ).then(
						aftershow.bind(this)
					);
				}
				}

			if (!config.winev) {
				config.winev = this._winEv.bind(this)
				$.viewport.on("change", config.winev)
			}

			if (this.contentUI) {
				this.contentUI.applyUI(config.content)
			}
			if (this.UI) {
				this.UI.applyUI(config.el)
			}
			if (config.options.centered || config.options.showarrow) {
				var ths = this
				setTimeout(function () {
					pospopup.call(ths, config)
				}, 500)
			}
			pospopup.call(this, config)
		},
		verify: function (ev) {
			if (!this.config) {
				return false
			}
			if (!this.config.el || !this.config.el.parentNode || !this.isVisible(true)) {
				this.hide();
				this.config.el = null;
				return false
			}
			return true
		},
		fire: function (nm, data) {
			this.config && this.config.observer && this.config.observer.fire(nm, data);
			return this
		},
		on: function (nm, cb, optns) {
			var observer = this.observer;
			observer && observer.on(nm, cb, optns);
			return this
		},
		show: function () {
			this.config && showpopup.call(this)
			return this
		},
		setContent: function (c) {
			if (!this.config) {
				return this
			}

			this.config.options.content = c;
			//setContent.call(this,this.config);
			return this
		},
		insertContent: function (c) {
			return this.setContent(c)
		},
		hide: function () {
			if (!this.config) {
				return
			}
			if (this.config.__showing) {
				return
			}
			this._hideEl()
			return this
		},
		isVisible: function (checkel) {
			if (!this.config) {
				return
			}
			if (!(this.el && $d.isAttached(this.el))) {
				return
			}
			if (checkel && !(this.el.isVisible(true))) {
				return
			}

			return this.config.visible
		},
		data: function () {
			if (!this.__expando) {
				this.__expando = $.expando.augment(this)
			}
			return this.__expando(arguments)
		},
		$content: function () {
			return this.el.q(".popup-content")
		},
		$header: function () {
			return this.el.q(".popup-header")
		},
		$footer: function () {
			return this.el.q(".popup-footer")
		},
		addButton: function (optns) {
			if (!this.config) {
				return
			}
			if(typeof(optns)=="string"){
				optns={label:optns}
				optns.callback=	arguments[1];

			}
			var callback=optns.callback
			if(!callback){
				if(String(optns.label).toLowerCase()=="close"){
					callback=this.hide;
				}
			} else if(typeof(callback)=="string"){
				if(typeof(this[callback])=="function"){
					callback=this[callback]
				} else{callback=null}

			}
			if(typeof(callback)!="function"){
				callback=function(){}
			}
			var container=this.config.footer
			if(optns.appendtobody){
				container=this.config.content
			}
			if (container) {
				$d.append(container, "<button class='ui-button blue'>" + (optns.label || optns.name) + "</button>")
					.on("click", callback.bind(this))
			}
			return this
		},
		layout: function () {
			if (!this.config) {
				return
			}
			pospopup.call(this, this.config)
			return this
		}
	}

	function _addLazyProp(proto, prop, fn) {
		$.defineProperty(proto, prop,
			(function (nm, valfn) {
				return {
					get: function () {
						var C = this.config;
						if (!C) {
							return
						}
						if (!C[nm]) {
							C[nm] = valfn(this);
						}
						delete this[nm]
						Object.defineProperty(this, nm, {
							value: C[nm],
							configurable: true,
							enumerable: true,
							writable: false
						})
						return C[nm]
					}, set: function (v) {
					}, configurable: true, enumerable: true
				}
			})(prop, fn));
	}

	_addLazyProp(proto, "contentUI", $.domUI)
	_addLazyProp(proto, "UI", $.domUI)
	_addLazyProp(proto, "observer", $.emitter.augment)
	$.defineProperties(proto, {
		contentWrap: {
			get: function () {
				return this.config && $d(this.config.content)
			}
		},
		el: {
			get: function () {
				return this.config && $d(this.config.el)
			}
		}
	})
	var PopupView = $.createClass(
		function PopupView(options) {
			options = options || {};
			this.rect = new $.G()
			this.rect.setConstrain({top: options.offset || 5, left: options.offset || 5});
			this.config = {options: options};
			Object.keys(optionhandlers).forEach(
				function (k) {
					this.config.options[k] || (this.config.options[k] = null)
				}, this
			);
			this.config.optionhandlers = $.extend({}, optionhandlers)
			if (options.ui) {
				this.UI.updateUI(options.ui);
			}
			if (options.contentui || options.contentUI) {
				this.contentUI.updateUI(options.contentui || options.contentUI);
			}

			this.$ = $d.util.createScopedDollar("el")
			this.config.observer = $.emitter.augment(this);
			$.observe(this.config.options, {onlyupdates: true},
				this.config.observrfn = function (rec) {
					var r = Array.isArray(rec) ? rec : [rec], h = this.config.optionhandlers || {};
					for (var i = 0; i < r.length; i++) {
						var val = r[i].value || r[i].newValue || r[i].object[r[i].name]
						if (val == null) {
							continue
						}
						var fn = h[r[i].name] || h[r[i].name.toLowerCase()]
						if (fn && typeof(fn) == "function") {
							fn.call(this, val, r[i].oldValue);
						}
					}
				}.bind(this)
			)
			var config = this.config, d = document.createElement("div")
			d.className = "popup-view hidden"
			d.innerHTML = "<div class='popup-header'></div><div class='popup-content'></div><div class='popup-footer'></div>"
			config.el = d;
			config.content = d.querySelector(".popup-content")
			config.header = d.querySelector(".popup-header")
			config.footer = d.querySelector(".popup-footer")
			if (config.options.auto) {
				this.show()
			}
		}, proto
	);
	PopupView._activeViews = []

	PopupView.hideAll = function () {
		PopupView._activeViews.slice().forEach(function (v) {
			v.hide();
		})
	}
	PopupView.getActive = function () {
		return PopupView._activeViews.find(function (v) {
			return v.isVisible(true);
		})
	}
	var splashDefaultOptions={
		//default
			"closeButton": false,
			"newestOnTop": false,
			"progressBar": false,

			"positionClass": "right-top",
			"preventDuplicates": true,

			"timeOut": 0,
			"extendedTimeOut": 0,

			"showDuration": 1300,
			"hideDuration": 1000,
			"showEasing": "ease",
			"hideEasing": "linear",
			"showMethod": "fadeIn",
			"hideMethod": "fadeOut",
			"tapToDismiss": false
	}
	/*
	Inspired by toastr
	takes same set of config options as toastr.

	 */
	var ACTIVESPLASHES=[]
	PopupView.splash = function (message ,optns) {
		if(typeof(optns)=="string"){optns={mode:optns}}
		if(!optns || !$.isPlain(optns)){
			optns={}
		}

		var content="<div class='splash-icon'></div><div class='splash-message'>"+message+"</div>"
		if(optns.title){
			content="<div class='splash-title'>"+optns.title+"</div>"+content
			delete optns.title;
		}

		var splashOptions=$.extend({},splashDefaultOptions)
		if($.isPlain(optns.splashOptions)){
			$.extend(splashOptions,optns.splashOptions)
		} else {
			$.each(optns,function(v,k){
				if(k in splashDefaultOptions){
					splashOptions[k]=v;
				}
			})
		}
		if(splashOptions.preventDuplicates){
			if(ACTIVESPLASHES.length){
				if(ACTIVESPLASHES.some(function(a){
						return a.config.options._contentsaved==content
					})){
					return
				}
			}
		}
		splashOptions.timeOut=optns.timeout||splashOptions.timeOut
		optns.animateShow={duration:splashOptions.showDuration,easing:splashOptions.showEasing,method:splashOptions.showMethod}
		optns.animateHide={duration:splashOptions.hideDuration,easing:splashOptions.showEasing,method:splashOptions.hideMethod}
		if(optns.positionClass && typeof(optns.positionClass)=="string"){
			if(optns.positionClass.indexOf("-")==-1){optns.positionClass=optns.positionClass.replace(/[A-Z]/,"-$&").toLowerCase()}
			var parts=optns.positionClass.split("-")
			var posclass=[],idx
			if((idx=parts.indexOf("left"))>=0 || (idx=parts.indexOf("right"))>=0){posclass.push(parts.splice(idx,1)[0]);}
			else if((idx=parts.indexOf("center"))>=0){posclass.push("center");parts.splice(idx,1)}
			else{posclass.push("center");}
			if((idx=parts.indexOf("top"))>=0 || (idx=parts.indexOf("bottom"))>=0){posclass.push(parts.splice(idx,1)[0]);}
			if(!posclass.length){posclass=["right","top"]}
 			if(posclass.length==1){posclass.push("center")}
			optns.positionClass=posclass.join("-")
		}
		if(!optns.positionClass && !optns.anchor){optns.positionClass="right-top"}
		optns.klass=["splash-popup","splash-popup-"+(optns.mode||'message'),optns.positionClass]
		optns.minHeight=optns.minHeight||40;optns.hideonblur=false
		optns.minWidth=optns.minWidth||250;
		if(!optns.maxWidth || (Number(optns.maxWidth)||0)<2) {
			optns.maxWidth = Math.min($.viewport.width - 20,  350);
		}
		optns.destroyonhide=true;
		optns.offset=10;
		var splashvw = new PopupView(optns);
		splashvw.on("beforehide",function(){
			if(this._timer){
				clearTimeout(this._timer)
				this._timer=0;
			}
		})


		splashvw.observer.on("hide",function(){
			var idx=ACTIVESPLASHES.indexOf(splashvw)
			idx>=0 && ACTIVESPLASHES.splice(idx,1)
		});

  		splashvw.setContent(content).show()
 		if(splashOptions.newestOnTop){
			ACTIVESPLASHES.forEach(function(a){
				a.hide();
			})
		}
		if(!splashOptions.newestOnTop && ACTIVESPLASHES.length){
			var bots=ACTIVESPLASHES.map(function(a){return a.el.bounds().bottom});
			var max=Math.max.apply(Math,bots)
			if(max){
				splashvw.el.css("top",max);
			}
		}
		ACTIVESPLASHES.push(splashvw)
		if(splashOptions.tapToDismiss){
			splashvw.el.on("click",splashvw.hide.bind(splashvw))
		}
		if(splashOptions.extendedTimeOut===true){
			splashOptions.extendedTimeOut=3000;
		}
 		splashvw._timer=setTimeout(function() {
			this._timer=0;
			 this.hide()
		}.bind(splashvw), (Number(splashOptions.timeOut) || 3000)+(Number(splashOptions.extendedTimeOut) || 0))
		return splashvw;
	}
	PopupView.lookupList = function (list, optns) {
		optns = optns || {}
		if (typeof(optns) == "function") {
			optns = {callback: optns}
		}
		var PopupViewOptions = $.extend({}, optns.popupoptions || optns || {})

		PopupViewOptions.alignAnchor = "below"
		PopupViewOptions.maxHeight = optns.maxHeight || 250
		if (PopupViewOptions.destroyonhide == null) {
			PopupViewOptions.destroyonhide = true;
		}
		PopupViewOptions.anchor = PopupViewOptions.anchor || $d.util.getActiveElement()
		var w = $d.width(PopupViewOptions.anchor)
		if (w) {
			if (!PopupViewOptions.minWidth) {
				PopupViewOptions.minWidth = Math.max(PopupViewOptions.minWidth || 0, w + 10)
				if (PopupViewOptions.maxWidth) {
					PopupViewOptions.minWidth = Math.min(PopupViewOptions.minWidth, PopupViewOptions.maxWidth);
				}
			}
		}
		if (PopupViewOptions.ignoreanchorstyle !== true) {
			PopupViewOptions.contentUI = {font: $d.css(PopupViewOptions.anchor, "font")}
		}

		//PopupViewOptions.modal=true;
		PopupViewOptions.minWidth = PopupViewOptions.minWidth || 150

		var vw = new PopupView(PopupViewOptions)
		vw.el.addClass("lookup-list")


		vw.adjustHeight = function () {
			if (!this.isVisible()) {
				return
			}
			var ul = this.$content("ul")
			if (!ul) {
				return
			}
			var tp = ul.offsetTop, maxht = this.config.options.maxHeight || this.config.options.height || 200
			if (!ul) {
				return
			}
			if (ul.scrollHeight + tp > maxht + 10) {
				ul && ul.css("h", maxht - tp)
			} else {
				ul.css("h", "auto")
			}
		}
		vw._buildList = function (optns, list) {
			var temtemplate=this.config.options.listitemtemplate
			if(temtemplate){
				if(typeof(temtemplate)=="string"){
					this.config.options.listitemtemplate=temtemplate= $.template(temtemplate)
				}
			}
			if(temtemplate){
				this._list= List.parseList($.collect(list,function(it,i){
					return {
						id:i,
						label:temtemplate(it),
						 datarecord:it
					}
				}), optns, {})
			}
			else {
				this._list = List.parseList(list, optns, {})
			}
			return this._list;
		}
		vw.buildList = function (optns, list) {
			if (list == null) {
				list = this.config.options.list
			}
			if(list && list.isPromise){
				return list.then(function(list1){
					this._buildList(optns, list1)
				}.bind(this))
			}
			return this._buildList(optns, list)

			return this._list
		}
		vw.renderListView = function (fin, optns, noforce) {

			var finlist = [], vw = this, template = "<li class='list-item' data-key='$id'>$label</li>"
			if (!(fin && fin.size())) {
				this.hide();
				return this;
			}

			var options = $.extend({}, this.config.options, $.isPlain(optns) ? optns : {});

			if (options.combo) {
				var html = ""

				var srchbox
				if (options.comboip && $d(options.comboip)) {
					srchbox = $d(options.comboip);
				}
				else {
					if (options.combotitle) {
						html = "<h4>" + _resolve.call(this, options.combotitle) + "</h4>"
					}
					html += "<div class='search-box-wrap'><input type='search' class='search-box'/><span class='search-item-count'></span></div>"
					this.$header().html(html);
					srchbox = this.$header().q(".search-box")
				}

				var vw = this

				srchbox.on("click.searchbox", function (ev) {
					if (this.val()) {
						var diff = this.bounds().right - ev.x
						if (diff >= 0 && diff < 20) {
							var cnt = 0;
							this.val("");
							if (vw.config.options.filterhandle) {
								cnt = vw.config.options.filterhandle("", vw);
							}
							else {
								cnt = vw.$().qq(".list-item").css("display", "block").length;
							}
							typeof(cnt) == "number" && cnt >= 0 && vw.$(".search-item-count") && vw.$(".search-item-count").html(cnt)
						}
					}
				})
				srchbox.on("input.searchbox", function (ev) {
					var cnt = 0, val = this.val()
					if (vw.config.options.searchhandle) {
						var res = vw.config.options.searchhandle(val, vw);
						if(res && res.isPromise){
							res.then(function(data){
								vw.reset(data, null, true);
							}.bind(vw))
						} else if(res && typeof(res)=="object"){
							vw.reset(res, null, true);
						}
						return
					}
					if (vw.config.options.filterhandle) {
						cnt = vw.config.options.filterhandle(val, vw);
					}
					else {
						if (val) {
							vw._list.searchText(val, function (rec, match) {
								if (!rec.dom) {
									return
								}
								if (match) {
									cnt++
									rec.dom.show()
								} else {
									rec.dom.hide()
								}
							})

						} else {
							vw._list.getList().forEach(function (rec) {
								rec && rec.dom && rec.dom.show()
							})
							//items.css("display","block")
							cnt = vw._list.getList().length
						}
					}

					typeof(cnt) == "number" && cnt >= 0 && vw.$(".search-item-count") && vw.$(".search-item-count").html(cnt)
				})
			}
			finlist = fin.applyTemplate(template)
			finlist.unshift("<ul class='filter-listbox' style='overflow:auto;margin-bottom:5px'>")
			finlist.push("</ul>")
			if (options && options.anchor) {
				vw.config.options.anchor = options.anchor;
			}
			vw.setContent(finlist.join(""));

			vw.$content().data("_list", fin)
			if (options.callback) {
				vw.$content().on("click.list", function (ev, el) {
					var k = $d.domdata(el, "key"), lst = this.data("_list") || []
					var rec = lst.findById(k)
					if (rec) {
						var record=rec.record
						if(record.datarecord){
							record=record.datarecord
						}
						if(lst.config && vw.config.options.recordProvider){
							record=vw.config.options.recordProvider.call(lst,rec)
						}
						if (options.callback.call(vw, record) !== false) {
							vw.hide()
						}
					}

				}, ".list-item")
			}
			if (vw.isVisible(true)) {
				vw.adjustHeight()
				vw.layout()
			}
			else {
				if (noforce !== true) {
					vw.show()
				}
			}
			vw.$content().css("overflow", "auto").qq(".list-item").each(function (it) {
				var el = fin.findById(it.domdata("key"))
				if (el) {
					el.dom = it;
				} else {
					console.log("not found", el)
				}
			})
			vw.fire("afterrender")
			return this
		}
		vw.reRenderList = function (optns) {
			this.renderList(null, optns)
		}
		vw.renderList = function (list, optns, noforce) {
			vw.fire("beforerender")
			var fin = this.buildList(optns, list)
			if (fin && fin.isPromise) {
				fin.then(function (nulist) {
					vw.renderListView(nulist, noforce)
				}.bind(this))
				return this
			}
			return this.renderListView(fin, noforce);

		}
		if (list) {
			vw.renderList(list, optns)
		}
		vw.clear = function (list, optns, andshow) {
			if (this.config.options.defaultText) {
				this.$("ul").html("div.default-list-text").html(this.config.options.defaultText)
			} else {
				this.$("ul").clear();
			}
			return this;
		}
		vw.reset = function (list, optns, andshow) {
			if (!optns) {
				optns = {}
			}

			if (optns.anchor === true) {
				optns = {anchor: $d.util.getActiveElement()}
			} else if (optns.nodeType) {
				optns = {anchor: optns}
			}
			if (!$.isPlain(optns)) {
				optns = {}
			}
			this.renderList(list, optns, andshow === false);

		}
		vw.on("aftershow", function () {
			this.adjustHeight()
		})

		return vw
	};
	ZModule.register("PopupView",PopupView)
	$.PopupView=PopupView
 })();

